# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class AlertsSummary(Resource):
    """Summary of the alerts.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Azure resource Id
    :vartype id: str
    :ivar type: Azure resource type
    :vartype type: str
    :ivar name: Azure resource name
    :vartype name: str
    :param total: Total number of alerts.
    :type total: int
    :param smart_groups_count: Total number of smart groups.
    :type smart_groups_count: int
    :param summary_by_state: Summary of alerts by state
    :type summary_by_state:
     ~azure.mgmt.alertsmanagement.models.AlertsSummaryPropertiesSummaryByState
    :param summary_by_severity: Summary of alerts by severity
    :type summary_by_severity:
     ~azure.mgmt.alertsmanagement.models.AlertsSummaryPropertiesSummaryBySeverity
    :param summary_by_severity_and_monitor_condition: Summary of alerts by
     severity and monitor condition
    :type summary_by_severity_and_monitor_condition:
     ~azure.mgmt.alertsmanagement.models.AlertsSummaryPropertiesSummaryBySeverityAndMonitorCondition
    :param summary_by_monitor_service: Summary of alerts by severity
    :type summary_by_monitor_service:
     ~azure.mgmt.alertsmanagement.models.AlertsSummaryPropertiesSummaryByMonitorService
    :param next_link: URL to fetch the next set of results.
    :type next_link: str
    """

    _validation = {
        'id': {'readonly': True},
        'type': {'readonly': True},
        'name': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'total': {'key': 'properties.total', 'type': 'int'},
        'smart_groups_count': {'key': 'properties.smartGroupsCount', 'type': 'int'},
        'summary_by_state': {'key': 'properties.summaryByState', 'type': 'AlertsSummaryPropertiesSummaryByState'},
        'summary_by_severity': {'key': 'properties.summaryBySeverity', 'type': 'AlertsSummaryPropertiesSummaryBySeverity'},
        'summary_by_severity_and_monitor_condition': {'key': 'properties.summaryBySeverityAndMonitorCondition', 'type': 'AlertsSummaryPropertiesSummaryBySeverityAndMonitorCondition'},
        'summary_by_monitor_service': {'key': 'properties.summaryByMonitorService', 'type': 'AlertsSummaryPropertiesSummaryByMonitorService'},
        'next_link': {'key': 'properties.nextLink', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(AlertsSummary, self).__init__(**kwargs)
        self.total = kwargs.get('total', None)
        self.smart_groups_count = kwargs.get('smart_groups_count', None)
        self.summary_by_state = kwargs.get('summary_by_state', None)
        self.summary_by_severity = kwargs.get('summary_by_severity', None)
        self.summary_by_severity_and_monitor_condition = kwargs.get('summary_by_severity_and_monitor_condition', None)
        self.summary_by_monitor_service = kwargs.get('summary_by_monitor_service', None)
        self.next_link = kwargs.get('next_link', None)
