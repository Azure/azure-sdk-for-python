# Variables: 
#  'build_targeting_string' comma separated glob strings selecting the packages that should be built. EG: "azure-keyvault,azure-mgmt-batch" or "azure-*"
#  'codecov-python-repository-token' Is the codecov.io repository token.
#  'long_running_tests' Is a boolean indicating that the long-running tests should be executed. 
#  'EnableDetectorPip': true . Required for Component Governance Support

trigger:
- master

jobs:
- job: 'Build_Target_Packages'

  pool:
    vmImage: 'ubuntu-16.04'  

  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.6'
    inputs:
      versionSpec: 3.6

  - script: |
     pip install wheel setuptools pathlib twine readme-renderer[md]
    displayName: 'Prep Environment' 
 
  - task: PythonScript@0
    displayName: 'Generate Packages'
    inputs:
      scriptPath: 'scripts/devops_tasks/build_packages.py'
      arguments: '-d "$(Build.ArtifactStagingDirectory)" "$(build_targeting_string)"'

  - script: |
      twine check $(Build.ArtifactStagingDirectory)/*
    displayName: 'Verify Readme'

  - task: CopyFiles@2
    displayName: 'Move Dependencies Report to Build Artifacts'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: dependencies.html
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: always()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    condition: succeededOrFailed()

- job: 'Analyze'
  dependsOn:
    - 'Build_Target_Packages'
  
  pool:
    vmImage: 'vs2017-win2016' 
    
  steps:
  
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.6'
    inputs:
      versionSpec: 3.6

  - script: |
     pip install wheel Jinja2
    displayName: 'Prep Environment'
    
  - task: PythonScript@0
    displayName: 'Analyze dependencies'
    enabled: true
    inputs:
      scriptPath: 'scripts/analyze_deps.py'
      arguments: '--verbose --out "$(Build.SourcesDirectory)/dependencies.html"'

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    condition: and(always(), ne(variables['Build.Reason'], 'PullRequest'))
    displayName: 'Component Detection'
