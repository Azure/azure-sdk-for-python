# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SyncProgressStatus(Model):
    """Sync Session status object.

    :param progress_timestamp: Progress timestamp
    :type progress_timestamp: datetime
    :param sync_direction: Sync direction. Possible values include: 'none',
     'initialize', 'download', 'upload', 'recall'
    :type sync_direction: str or ~azure.mgmt.storagesync.models.enum
    :param per_item_error_count: Per item error count
    :type per_item_error_count: int
    :param applied_item_count: Applied item count.
    :type applied_item_count: int
    :param total_item_count: Total item count
    :type total_item_count: int
    :param applied_bytes: Applied bytes
    :type applied_bytes: int
    :param total_bytes: Total bytes
    :type total_bytes: int
    """

    _validation = {
        'per_item_error_count': {'maximum': 2147483647, 'minimum': 0},
        'applied_item_count': {'maximum': 2147483647, 'minimum': 0},
        'total_item_count': {'maximum': 2147483647, 'minimum': 0},
        'applied_bytes': {'maximum': 2147483647, 'minimum': 0},
        'total_bytes': {'maximum': 2147483647, 'minimum': 0},
    }

    _attribute_map = {
        'progress_timestamp': {'key': 'progressTimestamp', 'type': 'iso-8601'},
        'sync_direction': {'key': 'syncDirection', 'type': 'str'},
        'per_item_error_count': {'key': 'perItemErrorCount', 'type': 'int'},
        'applied_item_count': {'key': 'appliedItemCount', 'type': 'int'},
        'total_item_count': {'key': 'totalItemCount', 'type': 'int'},
        'applied_bytes': {'key': 'appliedBytes', 'type': 'int'},
        'total_bytes': {'key': 'totalBytes', 'type': 'int'},
    }

    def __init__(self, *, progress_timestamp=None, sync_direction=None, per_item_error_count: int=None, applied_item_count: int=None, total_item_count: int=None, applied_bytes: int=None, total_bytes: int=None, **kwargs) -> None:
        super(SyncProgressStatus, self).__init__(**kwargs)
        self.progress_timestamp = progress_timestamp
        self.sync_direction = sync_direction
        self.per_item_error_count = per_item_error_count
        self.applied_item_count = applied_item_count
        self.total_item_count = total_item_count
        self.applied_bytes = applied_bytes
        self.total_bytes = total_bytes
