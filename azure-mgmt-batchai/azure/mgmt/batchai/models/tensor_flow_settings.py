# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class TensorFlowSettings(Model):
    """TensorFlow job settings.

    All required parameters must be populated in order to send to Azure.

    :param python_script_file_path: Required. Python script file path. The
     python script to execute.
    :type python_script_file_path: str
    :param python_interpreter_path: Python interpreter path. The path to the
     Python interpreter.
    :type python_interpreter_path: str
    :param master_command_line_args: Master command line arguments. Command
     line arguments that need to be passed to the python script for the master
     task.
    :type master_command_line_args: str
    :param worker_command_line_args: Worker command line arguments. Command
     line arguments that need to be passed to the python script for the worker
     task. Optional for single process jobs.
    :type worker_command_line_args: str
    :param parameter_server_command_line_args: Parameter server command line
     arguments. Command line arguments that need to be passed to the python
     script for the parameter server. Optional for single process jobs.
    :type parameter_server_command_line_args: str
    :param worker_count: Worker count. The number of worker tasks. If
     specified, the value must be less than or equal to (nodeCount *
     numberOfGPUs per VM). If not specified, the default value is equal to
     nodeCount. This property can be specified only for distributed TensorFlow
     training.
    :type worker_count: int
    :param parameter_server_count: Parameter server count. The number of
     parameter server tasks. If specified, the value must be less than or equal
     to nodeCount. If not specified, the default value is equal to 1 for
     distributed TensorFlow training. This property can be specified only for
     distributed TensorFlow training.
    :type parameter_server_count: int
    """

    _validation = {
        'python_script_file_path': {'required': True},
    }

    _attribute_map = {
        'python_script_file_path': {'key': 'pythonScriptFilePath', 'type': 'str'},
        'python_interpreter_path': {'key': 'pythonInterpreterPath', 'type': 'str'},
        'master_command_line_args': {'key': 'masterCommandLineArgs', 'type': 'str'},
        'worker_command_line_args': {'key': 'workerCommandLineArgs', 'type': 'str'},
        'parameter_server_command_line_args': {'key': 'parameterServerCommandLineArgs', 'type': 'str'},
        'worker_count': {'key': 'workerCount', 'type': 'int'},
        'parameter_server_count': {'key': 'parameterServerCount', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(TensorFlowSettings, self).__init__(**kwargs)
        self.python_script_file_path = kwargs.get('python_script_file_path', None)
        self.python_interpreter_path = kwargs.get('python_interpreter_path', None)
        self.master_command_line_args = kwargs.get('master_command_line_args', None)
        self.worker_command_line_args = kwargs.get('worker_command_line_args', None)
        self.parameter_server_command_line_args = kwargs.get('parameter_server_command_line_args', None)
        self.worker_count = kwargs.get('worker_count', None)
        self.parameter_server_count = kwargs.get('parameter_server_count', None)
