# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class FileServerCreateParameters(Model):
    """File Server creation parameters.

    All required parameters must be populated in order to send to Azure.

    :param vm_size: Required. VM size. The size of the virtual machine for the
     File Server. For information about available VM sizes from the Virtual
     Machines Marketplace, see Sizes for Virtual Machines (Linux).
    :type vm_size: str
    :param ssh_configuration: Required. SSH configuration. SSH configuration
     for the File Server node.
    :type ssh_configuration: ~azure.mgmt.batchai.models.SshConfiguration
    :param data_disks: Required. Data disks. Settings for the data disks which
     will be created for the File Server.
    :type data_disks: ~azure.mgmt.batchai.models.DataDisks
    :param subnet: Subnet identifier. Identifier of an existing virtual
     network subnet to put the File Server in. If not provided, a new virtual
     network and subnet will be created.
    :type subnet: ~azure.mgmt.batchai.models.ResourceId
    """

    _validation = {
        'vm_size': {'required': True},
        'ssh_configuration': {'required': True},
        'data_disks': {'required': True},
    }

    _attribute_map = {
        'vm_size': {'key': 'properties.vmSize', 'type': 'str'},
        'ssh_configuration': {'key': 'properties.sshConfiguration', 'type': 'SshConfiguration'},
        'data_disks': {'key': 'properties.dataDisks', 'type': 'DataDisks'},
        'subnet': {'key': 'properties.subnet', 'type': 'ResourceId'},
    }

    def __init__(self, *, vm_size: str, ssh_configuration, data_disks, subnet=None, **kwargs) -> None:
        super(FileServerCreateParameters, self).__init__(**kwargs)
        self.vm_size = vm_size
        self.ssh_configuration = ssh_configuration
        self.data_disks = data_disks
        self.subnet = subnet
