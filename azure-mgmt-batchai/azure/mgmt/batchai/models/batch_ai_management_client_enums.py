# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from enum import Enum


class UsageUnit(str, Enum):

    count = "Count"


class CachingType(str, Enum):

    none = "none"
    readonly = "readonly"
    readwrite = "readwrite"


class StorageAccountType(str, Enum):

    standard_lrs = "Standard_LRS"
    premium_lrs = "Premium_LRS"


class FileServerProvisioningState(str, Enum):

    creating = "creating"
    updating = "updating"
    deleting = "deleting"
    succeeded = "succeeded"
    failed = "failed"


class VmPriority(str, Enum):

    dedicated = "dedicated"
    lowpriority = "lowpriority"


class DeallocationOption(str, Enum):

    requeue = "requeue"
    terminate = "terminate"
    waitforjobcompletion = "waitforjobcompletion"


class ProvisioningState(str, Enum):

    creating = "creating"
    succeeded = "succeeded"
    failed = "failed"
    deleting = "deleting"


class AllocationState(str, Enum):

    steady = "steady"
    resizing = "resizing"


class JobPriority(str, Enum):

    low = "low"
    normal = "normal"
    high = "high"


class ToolType(str, Enum):

    cntk = "cntk"
    tensorflow = "tensorflow"
    caffe = "caffe"
    caffe2 = "caffe2"
    chainer = "chainer"
    horovod = "horovod"
    mpi = "mpi"
    custom = "custom"


class ExecutionState(str, Enum):

    queued = "queued"
    running = "running"
    terminating = "terminating"
    succeeded = "succeeded"
    failed = "failed"


class FileType(str, Enum):

    file = "file"
    directory = "directory"
