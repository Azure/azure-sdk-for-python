# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ApplicationUpgradePolicy(Model):
    """Describes the policy for a monitored application upgrade.

    :param upgrade_replica_set_check_timeout:
    :type upgrade_replica_set_check_timeout: long
    :param force_restart:
    :type force_restart: bool
    :param rolling_upgrade_monitoring_policy:
    :type rolling_upgrade_monitoring_policy:
     ~azure.mgmt.servicefabric.models.RollingUpgradeMonitoringPolicy
    :param application_health_policy:
    :type application_health_policy:
     ~azure.mgmt.servicefabric.models.ApplicationHealthPolicy
    """

    _attribute_map = {
        'upgrade_replica_set_check_timeout': {'key': 'upgradeReplicaSetCheckTimeout', 'type': 'long'},
        'force_restart': {'key': 'forceRestart', 'type': 'bool'},
        'rolling_upgrade_monitoring_policy': {'key': 'rollingUpgradeMonitoringPolicy', 'type': 'RollingUpgradeMonitoringPolicy'},
        'application_health_policy': {'key': 'applicationHealthPolicy', 'type': 'ApplicationHealthPolicy'},
    }

    def __init__(self, *, upgrade_replica_set_check_timeout: int=None, force_restart: bool=None, rolling_upgrade_monitoring_policy=None, application_health_policy=None, **kwargs) -> None:
        super(ApplicationUpgradePolicy, self).__init__(**kwargs)
        self.upgrade_replica_set_check_timeout = upgrade_replica_set_check_timeout
        self.force_restart = force_restart
        self.rolling_upgrade_monitoring_policy = rolling_upgrade_monitoring_policy
        self.application_health_policy = application_health_policy
