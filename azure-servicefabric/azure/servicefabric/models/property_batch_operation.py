# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PropertyBatchOperation(Model):
    """Represents the base type for property operations that can be put into a
    batch and submitted.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: CheckExistsPropertyBatchOperation,
    CheckSequencePropertyBatchOperation, CheckValuePropertyBatchOperation,
    DeletePropertyBatchOperation, GetPropertyBatchOperation,
    PutPropertyBatchOperation

    :param property_name:
    :type property_name: str
    :param kind: Constant filled by server.
    :type kind: str
    """

    _validation = {
        'property_name': {'required': True},
        'kind': {'required': True},
    }

    _attribute_map = {
        'property_name': {'key': 'PropertyName', 'type': 'str'},
        'kind': {'key': 'Kind', 'type': 'str'},
    }

    _subtype_map = {
        'kind': {'CheckExists': 'CheckExistsPropertyBatchOperation', 'CheckSequence': 'CheckSequencePropertyBatchOperation', 'CheckValue': 'CheckValuePropertyBatchOperation', 'Delete': 'DeletePropertyBatchOperation', 'Get': 'GetPropertyBatchOperation', 'Put': 'PutPropertyBatchOperation'}
    }

    def __init__(self, property_name):
        super(PropertyBatchOperation, self).__init__()
        self.property_name = property_name
        self.kind = None
