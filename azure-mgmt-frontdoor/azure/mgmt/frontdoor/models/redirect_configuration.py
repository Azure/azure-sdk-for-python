# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .route_configuration import RouteConfiguration


class RedirectConfiguration(RouteConfiguration):
    """Describes Redirect Route.

    All required parameters must be populated in order to send to Azure.

    :param odatatype: Required. Constant filled by server.
    :type odatatype: str
    :param redirect_type: The redirect type the rule will use when redirecting
     traffic. Possible values include: 'Moved', 'Found', 'TemporaryRedirect',
     'PermanentRedirect'
    :type redirect_type: str or
     ~azure.mgmt.frontdoor.models.FrontDoorRedirectType
    :param redirect_protocol: The protocol of the destination to where the
     traffic is redirected. Possible values include: 'HttpOnly', 'HttpsOnly',
     'MatchRequest'
    :type redirect_protocol: str or
     ~azure.mgmt.frontdoor.models.FrontDoorRedirectProtocol
    :param custom_host: Host to redirect. Leave empty to use the incoming host
     as the destination host.
    :type custom_host: str
    :param custom_path: The full path to redirect. Path cannot be empty and
     must start with /. Leave empty to use the incoming path as destination
     path.
    :type custom_path: str
    :param custom_fragment: Fragment to add to the redirect URL. Fragment is
     the part of the URL that comes after #. Do not include the #.
    :type custom_fragment: str
    :param custom_query_string: The set of query strings to be placed in the
     redirect URL. Setting this value would replace any existing query string;
     leave empty to preserve the incoming query string. Query string must be in
     <key>=<value> format. The first ? and & will be added automatically so do
     not include them in the front, but do separate multiple query strings with
     &.
    :type custom_query_string: str
    """

    _validation = {
        'odatatype': {'required': True},
    }

    _attribute_map = {
        'odatatype': {'key': '@odata\\.type', 'type': 'str'},
        'redirect_type': {'key': 'redirectType', 'type': 'str'},
        'redirect_protocol': {'key': 'redirectProtocol', 'type': 'str'},
        'custom_host': {'key': 'customHost', 'type': 'str'},
        'custom_path': {'key': 'customPath', 'type': 'str'},
        'custom_fragment': {'key': 'customFragment', 'type': 'str'},
        'custom_query_string': {'key': 'customQueryString', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(RedirectConfiguration, self).__init__(**kwargs)
        self.redirect_type = kwargs.get('redirect_type', None)
        self.redirect_protocol = kwargs.get('redirect_protocol', None)
        self.custom_host = kwargs.get('custom_host', None)
        self.custom_path = kwargs.get('custom_path', None)
        self.custom_fragment = kwargs.get('custom_fragment', None)
        self.custom_query_string = kwargs.get('custom_query_string', None)
        self.odatatype = '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'
