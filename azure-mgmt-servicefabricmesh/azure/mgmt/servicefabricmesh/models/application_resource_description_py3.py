# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .tracked_resource_py3 import TrackedResource


class ApplicationResourceDescription(TrackedResource):
    """This type describes an application resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Fully qualified identifier for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    :vartype id: str
    :ivar name: The name of the resource
    :vartype name: str
    :ivar type: The type of the resource. Ex-
     Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
    :vartype type: str
    :param location: The geo-location where the resource lives
    :type location: str
    :param tags: Resource tags.
    :type tags: dict[str, str]
    :ivar provisioning_state: State of the resource.
    :vartype provisioning_state: str
    :param description: User readable description of the application.
    :type description: str
    :param debug_params: Internal use.
    :type debug_params: str
    :param services: describes the services in the application.
    :type services:
     list[~azure.mgmt.servicefabricmesh.models.ServiceResourceDescription]
    :ivar health_state: Describes the health state of an application resource.
     Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
    :vartype health_state: str or
     ~azure.mgmt.servicefabricmesh.models.HealthState
    :ivar unhealthy_evaluation: When the application's health state is not
     'Ok', this additional details from service fabric Health Manager for the
     user to know why the application is marked unhealthy.
    :vartype unhealthy_evaluation: str
    :ivar status: Status of the application resource. Possible values include:
     'Invalid', 'Ready', 'Upgrading', 'Creating', 'Deleting', 'Failed'
    :vartype status: str or
     ~azure.mgmt.servicefabricmesh.models.ApplicationResourceStatus
    :ivar status_details: Gives additional information about the current
     status of the application deployment.
    :vartype status_details: str
    :ivar service_names: Names of the services in the application.
    :vartype service_names: list[str]
    :param diagnostics: Describes the diagnostics definition and usage for an
     application resource.
    :type diagnostics:
     ~azure.mgmt.servicefabricmesh.models.DiagnosticsDescription
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'health_state': {'readonly': True},
        'unhealthy_evaluation': {'readonly': True},
        'status': {'readonly': True},
        'status_details': {'readonly': True},
        'service_names': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'debug_params': {'key': 'properties.debugParams', 'type': 'str'},
        'services': {'key': 'properties.services', 'type': '[ServiceResourceDescription]'},
        'health_state': {'key': 'properties.healthState', 'type': 'str'},
        'unhealthy_evaluation': {'key': 'properties.unhealthyEvaluation', 'type': 'str'},
        'status': {'key': 'properties.status', 'type': 'str'},
        'status_details': {'key': 'properties.statusDetails', 'type': 'str'},
        'service_names': {'key': 'properties.serviceNames', 'type': '[str]'},
        'diagnostics': {'key': 'properties.diagnostics', 'type': 'DiagnosticsDescription'},
    }

    def __init__(self, *, location: str=None, tags=None, description: str=None, debug_params: str=None, services=None, diagnostics=None, **kwargs) -> None:
        super(ApplicationResourceDescription, self).__init__(location=location, tags=tags, **kwargs)
        self.provisioning_state = None
        self.description = description
        self.debug_params = debug_params
        self.services = services
        self.health_state = None
        self.unhealthy_evaluation = None
        self.status = None
        self.status_details = None
        self.service_names = None
        self.diagnostics = diagnostics
