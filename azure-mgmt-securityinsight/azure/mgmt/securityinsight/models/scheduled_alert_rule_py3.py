# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_py3 import Resource


class ScheduledAlertRule(Resource):
    """Alert rule.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Azure resource Id
    :vartype id: str
    :ivar type: Azure resource type
    :vartype type: str
    :ivar name: Azure resource name
    :vartype name: str
    :param etag: Etag of the alert rule.
    :type etag: str
    :param rule_name: Required. The name for alerts created by this alert
     rule.
    :type rule_name: str
    :param description: Required. The description of the alert rule.
    :type description: str
    :param severity: Required. The severity for alerts created by this alert
     rule. Possible values include: 'Low', 'Medium', 'High', 'Informational'
    :type severity: str or ~azure.mgmt.securityinsight.models.Severity
    :param enabled: Required. Determines whether this alert rule is enabled or
     disabled.
    :type enabled: bool
    :param query: Required. The query that creates alerts for this rule.
    :type query: str
    :param query_frequency: Required. TimeSpan format represents the frequncy
     for this alert rule to run.
    :type query_frequency: str
    :param query_period: Required. TimeSpan format represents the period that
     this alert rule looks at.
    :type query_period: str
    :param alert_trigger_operator: Required. The operation against the
     threahold that triggers alert rule. Possible values include: 'gt', 'lt',
     'ne', 'eq'
    :type alert_trigger_operator: str or
     ~azure.mgmt.securityinsight.models.AlertTriggerOperator
    :param alert_trigger_threshold: Required. The threahold triggers this
     alert rule.
    :type alert_trigger_threshold: int
    :param suppression_enabled: Required. Determines whether the suppression
     for this alert rule is enabled or disabled.
    :type suppression_enabled: bool
    :param suppression_duration: Required. TimeSpan format represents the
     suppression to wait since last time this alert rule been triggered.
    :type suppression_duration: str
    :ivar last_modified_utc: The last time that this alert has been modified.
    :vartype last_modified_utc: str
    """

    _validation = {
        'id': {'readonly': True},
        'type': {'readonly': True},
        'name': {'readonly': True},
        'rule_name': {'required': True},
        'description': {'required': True},
        'severity': {'required': True},
        'enabled': {'required': True},
        'query': {'required': True},
        'query_frequency': {'required': True, 'pattern': r'^(\d+\.)?\d{2}\:\d{2}\:\d{2}$'},
        'query_period': {'required': True, 'pattern': r'^(\d+\.)?\d{2}\:\d{2}\:\d{2}$'},
        'alert_trigger_operator': {'required': True},
        'alert_trigger_threshold': {'required': True},
        'suppression_enabled': {'required': True},
        'suppression_duration': {'required': True, 'pattern': r'^(\d+\.)?\d{2}\:\d{2}\:\d{2}$'},
        'last_modified_utc': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'etag': {'key': 'etag', 'type': 'str'},
        'rule_name': {'key': 'properties.ruleName', 'type': 'str'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'severity': {'key': 'properties.severity', 'type': 'Severity'},
        'enabled': {'key': 'properties.enabled', 'type': 'bool'},
        'query': {'key': 'properties.query', 'type': 'str'},
        'query_frequency': {'key': 'properties.queryFrequency', 'type': 'str'},
        'query_period': {'key': 'properties.queryPeriod', 'type': 'str'},
        'alert_trigger_operator': {'key': 'properties.alertTriggerOperator', 'type': 'AlertTriggerOperator'},
        'alert_trigger_threshold': {'key': 'properties.alertTriggerThreshold', 'type': 'int'},
        'suppression_enabled': {'key': 'properties.suppressionEnabled', 'type': 'bool'},
        'suppression_duration': {'key': 'properties.suppressionDuration', 'type': 'str'},
        'last_modified_utc': {'key': 'properties.lastModifiedUtc', 'type': 'str'},
    }

    def __init__(self, *, rule_name: str, description: str, severity, enabled: bool, query: str, query_frequency: str, query_period: str, alert_trigger_operator, alert_trigger_threshold: int, suppression_enabled: bool, suppression_duration: str, etag: str=None, **kwargs) -> None:
        super(ScheduledAlertRule, self).__init__(**kwargs)
        self.etag = etag
        self.rule_name = rule_name
        self.description = description
        self.severity = severity
        self.enabled = enabled
        self.query = query
        self.query_frequency = query_frequency
        self.query_period = query_period
        self.alert_trigger_operator = alert_trigger_operator
        self.alert_trigger_threshold = alert_trigger_threshold
        self.suppression_enabled = suppression_enabled
        self.suppression_duration = suppression_duration
        self.last_modified_utc = None
