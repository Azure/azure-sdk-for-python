# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .dms_base_object import DmsBaseObject


class Job(DmsBaseObject):
    """Data service job.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Name of the object.
    :vartype name: str
    :ivar id: Id of the object.
    :vartype id: str
    :ivar type: Type of the object.
    :vartype type: str
    :param status: Required. Status of the job. Possible values include:
     'None', 'InProgress', 'Succeeded', 'WaitingForAction', 'Failed',
     'Cancelled', 'Cancelling'
    :type status: str or ~azure.mgmt.hybriddatamanager.models.JobStatus
    :param start_time: Required. Time at which the job was started in UTC ISO
     8601 format.
    :type start_time: datetime
    :param end_time: Time at which the job ended in UTC ISO 8601 format.
    :type end_time: datetime
    :param is_cancellable: Required. Describes whether the job is cancellable.
     Possible values include: 'NotCancellable', 'Cancellable'
    :type is_cancellable: str or
     ~azure.mgmt.hybriddatamanager.models.IsJobCancellable
    :param bytes_processed: Number of bytes processed by the job as of now.
    :type bytes_processed: long
    :param items_processed: Number of items processed by the job as of now
    :type items_processed: long
    :param total_bytes_to_process: Number of bytes to be processed by the job
     in total.
    :type total_bytes_to_process: long
    :param total_items_to_process: Number of items to be processed by the job
     in total
    :type total_items_to_process: long
    :param details: Details of a job run. This field will only be sent for
     expand details filter.
    :type details: ~azure.mgmt.hybriddatamanager.models.JobDetails
    :param data_source_name: Name of the data source on which the job was
     triggered.
    :type data_source_name: str
    :param data_sink_name: Name of the data sink on which the job was
     triggered.
    :type data_sink_name: str
    :param error: Top level error for the job.
    :type error: ~azure.mgmt.hybriddatamanager.models.Error
    """

    _validation = {
        'name': {'readonly': True},
        'id': {'readonly': True},
        'type': {'readonly': True},
        'status': {'required': True},
        'start_time': {'required': True},
        'is_cancellable': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'status': {'key': 'status', 'type': 'JobStatus'},
        'start_time': {'key': 'startTime', 'type': 'iso-8601'},
        'end_time': {'key': 'endTime', 'type': 'iso-8601'},
        'is_cancellable': {'key': 'properties.isCancellable', 'type': 'IsJobCancellable'},
        'bytes_processed': {'key': 'properties.bytesProcessed', 'type': 'long'},
        'items_processed': {'key': 'properties.itemsProcessed', 'type': 'long'},
        'total_bytes_to_process': {'key': 'properties.totalBytesToProcess', 'type': 'long'},
        'total_items_to_process': {'key': 'properties.totalItemsToProcess', 'type': 'long'},
        'details': {'key': 'properties.details', 'type': 'JobDetails'},
        'data_source_name': {'key': 'properties.dataSourceName', 'type': 'str'},
        'data_sink_name': {'key': 'properties.dataSinkName', 'type': 'str'},
        'error': {'key': 'error', 'type': 'Error'},
    }

    def __init__(self, **kwargs):
        super(Job, self).__init__(**kwargs)
        self.status = kwargs.get('status', None)
        self.start_time = kwargs.get('start_time', None)
        self.end_time = kwargs.get('end_time', None)
        self.is_cancellable = kwargs.get('is_cancellable', None)
        self.bytes_processed = kwargs.get('bytes_processed', None)
        self.items_processed = kwargs.get('items_processed', None)
        self.total_bytes_to_process = kwargs.get('total_bytes_to_process', None)
        self.total_items_to_process = kwargs.get('total_items_to_process', None)
        self.details = kwargs.get('details', None)
        self.data_source_name = kwargs.get('data_source_name', None)
        self.data_sink_name = kwargs.get('data_sink_name', None)
        self.error = kwargs.get('error', None)
