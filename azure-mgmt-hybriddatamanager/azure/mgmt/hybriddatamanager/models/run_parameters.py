# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RunParameters(Model):
    """Run parameters for a job.

    :param user_confirmation: Enum to detect if user confirmation is required.
     If not passed will default to NotRequired. Possible values include:
     'NotRequired', 'Required'. Default value: "NotRequired" .
    :type user_confirmation: str or
     ~azure.mgmt.hybriddatamanager.models.UserConfirmation
    :param data_service_input: A generic json used differently by each data
     service type.
    :type data_service_input: object
    :param customer_secrets: List of customer secrets containing a key
     identifier and key value. The key identifier is a way for the specific
     data source to understand the key. Value contains customer secret
     encrypted by the encryptionKeys.
    :type customer_secrets:
     list[~azure.mgmt.hybriddatamanager.models.CustomerSecret]
    """

    _attribute_map = {
        'user_confirmation': {'key': 'userConfirmation', 'type': 'UserConfirmation'},
        'data_service_input': {'key': 'dataServiceInput', 'type': 'object'},
        'customer_secrets': {'key': 'customerSecrets', 'type': '[CustomerSecret]'},
    }

    def __init__(self, **kwargs):
        super(RunParameters, self).__init__(**kwargs)
        self.user_confirmation = kwargs.get('user_confirmation', "NotRequired")
        self.data_service_input = kwargs.get('data_service_input', None)
        self.customer_secrets = kwargs.get('customer_secrets', None)
