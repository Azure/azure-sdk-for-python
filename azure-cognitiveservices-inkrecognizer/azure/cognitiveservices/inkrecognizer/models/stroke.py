# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Stroke(Model):
    """Stroke.

    All required parameters must be populated in order to send to Azure.

    :param id: Required. This is treated as a unique identifier for each
     stroke within a request. If the id is repeated within the same request,
     the service will return an error.
    :type id: int
    :param language: The IETF BCP 47 language code (for ex. en-US, en-GB,
     hi-IN etc.) of the expected language for the handwritten content in this
     stroke. The response will include results from this language.
    :type language: str
    :param points: Required. A string of comma separated floating point values
     that represent the x and y coordinates of points that are part of the
     stroke. (X1,Y1, X2,Y2â€¦).  It is recommended to have a precision of 8
     digits after the decimal to obtain most accurate recognition results. The
     origin (0,0) of the canvas is assumed to be at the top left corner of the
     canvas
    :type points: str
    :param drawing_attributes:
    :type drawing_attributes:
     ~azure.cognitiveservices.inkrecognizer.models.DrawingAttributesPattern
    :param kind: This is an optional property which influences the decision
     about what the stroke kind is between inkWriting and inkDrawing. This
     property should be set ONLY if the type of user content is known ahead of
     time. Not setting this value implies the kind is not known ahead of time.
     Kind represents the type of content the stroke is a part of. Possible
     values include: 'inkDrawing', 'inkWriting'
    :type kind: str or ~azure.cognitiveservices.inkrecognizer.models.Kind
    """

    _validation = {
        'id': {'required': True},
        'points': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'int'},
        'language': {'key': 'language', 'type': 'str'},
        'points': {'key': 'points', 'type': 'str'},
        'drawing_attributes': {'key': 'drawingAttributes', 'type': 'DrawingAttributesPattern'},
        'kind': {'key': 'kind', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(Stroke, self).__init__(**kwargs)
        self.id = kwargs.get('id', None)
        self.language = kwargs.get('language', None)
        self.points = kwargs.get('points', None)
        self.drawing_attributes = kwargs.get('drawing_attributes', None)
        self.kind = kwargs.get('kind', None)
