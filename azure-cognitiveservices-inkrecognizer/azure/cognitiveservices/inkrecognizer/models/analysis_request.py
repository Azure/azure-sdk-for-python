# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AnalysisRequest(Model):
    """This shows the expected contents of a request.

    All required parameters must be populated in order to send to Azure.

    :param application_type: This describes the domain of the client
     application. Possible values include: 'drawing', 'writing', 'mixed'
    :type application_type: str or
     ~azure.cognitiveservices.inkrecognizer.models.Application
    :param unit: This represents the physical units of the ink strokes. It is
     up to the application developer to decide how to convert the device
     specific units to physical units before calling the service. The
     conversion factor can be different based on the type of the device used.
     Possible values include: 'mm', 'cm', 'in'
    :type unit: str or ~azure.cognitiveservices.inkrecognizer.models.enum
    :param unit_multiple:  This is a scaling factor to be applied to the point
     coordinates when interpreting them in the physical units specified.
    :type unit_multiple: float
    :param language: Required. The IETF BCP 47 language code (for ex. en-US,
     en-GB, hi-IN etc.) of the expected language for the handwritten content in
     the ink strokes. The response will include results from this language.
    :type language: str
    :param strokes: Required. This is the array of strokes sent for
     recognition. Best results are produced when the order of strokes added in
     the array matches the order in which the user created them. Changing the
     stroke order may produce unexpected results.
    :type strokes: list[~azure.cognitiveservices.inkrecognizer.models.Stroke]
    """

    _validation = {
        'language': {'required': True},
        'strokes': {'required': True},
    }

    _attribute_map = {
        'application_type': {'key': 'applicationType', 'type': 'str'},
        'unit': {'key': 'unit', 'type': 'str'},
        'unit_multiple': {'key': 'unitMultiple', 'type': 'float'},
        'language': {'key': 'language', 'type': 'str'},
        'strokes': {'key': 'strokes', 'type': '[Stroke]'},
    }

    def __init__(self, **kwargs):
        super(AnalysisRequest, self).__init__(**kwargs)
        self.application_type = kwargs.get('application_type', None)
        self.unit = kwargs.get('unit', None)
        self.unit_multiple = kwargs.get('unit_multiple', None)
        self.language = kwargs.get('language', None)
        self.strokes = kwargs.get('strokes', None)
