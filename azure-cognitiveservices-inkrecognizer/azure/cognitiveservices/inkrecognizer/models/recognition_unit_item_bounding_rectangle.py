# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RecognitionUnitItemBoundingRectangle(Model):
    """The bounding rectangle of the recognized unit represented by the
    coordinates of the top left corner (x,y) along with width (w) and height
    (h) of the rectangle. Note that this rectangle is not rotated. So for
    rotated objects such as slanted handwriting, it will cover the entire
    object. The unit will be matched to the one specified in the original
    request (mm by default.) .

    :param top_x: This represents the top left x coordinate
    :type top_x: float
    :param top_y: This represents the top left y coordinate
    :type top_y: float
    :param width: This represents width of the bounding rectangle
    :type width: float
    :param height: The represents the height of the bounding rectangle
    :type height: float
    """

    _attribute_map = {
        'top_x': {'key': 'topX', 'type': 'float'},
        'top_y': {'key': 'topY', 'type': 'float'},
        'width': {'key': 'width', 'type': 'float'},
        'height': {'key': 'height', 'type': 'float'},
    }

    def __init__(self, **kwargs):
        super(RecognitionUnitItemBoundingRectangle, self).__init__(**kwargs)
        self.top_x = kwargs.get('top_x', None)
        self.top_y = kwargs.get('top_y', None)
        self.width = kwargs.get('width', None)
        self.height = kwargs.get('height', None)
