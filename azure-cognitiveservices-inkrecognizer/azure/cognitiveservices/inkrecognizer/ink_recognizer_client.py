# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Configuration, Serializer, Deserializer
from .version import VERSION
from .operations.ink_recognizer_operations import InkRecognizerOperations
from . import models


class InkRecognizerClientConfiguration(Configuration):
    """Configuration for InkRecognizerClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param endpoint: Supported Cognitive Services endpoints (protocol and
     hostname, for example: https://westus2.api.cognitive.microsoft.com).
    :type endpoint: str
    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    """

    def __init__(
            self, endpoint, credentials):

        if endpoint is None:
            raise ValueError("Parameter 'endpoint' must not be None.")
        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        base_url = 'https://{Endpoint}/inkrecognizer/v1.0-preview'

        super(InkRecognizerClientConfiguration, self).__init__(base_url)

        self.add_user_agent('azure-cognitiveservices-inkrecognizer/{}'.format(VERSION))

        self.endpoint = endpoint
        self.credentials = credentials


class InkRecognizerClient(SDKClient):
    """The service is used to perform ink layout and recognition of written words and shapes. Ink strokes passed to the service are recognized and organized into recognition results in the response

    :ivar config: Configuration for client.
    :vartype config: InkRecognizerClientConfiguration

    :ivar ink_recognizer: InkRecognizer operations
    :vartype ink_recognizer: azure.cognitiveservices.inkrecognizer.operations.InkRecognizerOperations

    :param endpoint: Supported Cognitive Services endpoints (protocol and
     hostname, for example: https://westus2.api.cognitive.microsoft.com).
    :type endpoint: str
    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    """

    def __init__(
            self, endpoint, credentials):

        self.config = InkRecognizerClientConfiguration(endpoint, credentials)
        super(InkRecognizerClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '1.0'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.ink_recognizer = InkRecognizerOperations(
            self._client, self.config, self._serialize, self._deserialize)
