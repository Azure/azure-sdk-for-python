# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Metric(Model):
    """A metric emitted by service.

    All required parameters must be populated in order to send to Azure.

    :param name: The metric name.
    :type name: str
    :param display_name: The metric display name.
    :type display_name: str
    :param display_description: The metric display description.
    :type display_description: str
    :param unit: Required. The metric unit. Possible values include: 'Bytes',
     'Count', 'Milliseconds'
    :type unit: str or ~azure.mgmt.media.models.MetricUnit
    :param aggregation_type: Required. The metric aggregation type. Possible
     values include: 'Average', 'Count', 'Total'
    :type aggregation_type: str or
     ~azure.mgmt.media.models.MetricAggregationType
    :param dimensions: The metric dimensions.
    :type dimensions: list[~azure.mgmt.media.models.MetricDimension]
    """

    _validation = {
        'unit': {'required': True},
        'aggregation_type': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'display_description': {'key': 'displayDescription', 'type': 'str'},
        'unit': {'key': 'unit', 'type': 'MetricUnit'},
        'aggregation_type': {'key': 'aggregationType', 'type': 'MetricAggregationType'},
        'dimensions': {'key': 'dimensions', 'type': '[MetricDimension]'},
    }

    def __init__(self, *, unit, aggregation_type, name: str=None, display_name: str=None, display_description: str=None, dimensions=None, **kwargs) -> None:
        super(Metric, self).__init__(**kwargs)
        self.name = name
        self.display_name = display_name
        self.display_description = display_description
        self.unit = unit
        self.aggregation_type = aggregation_type
        self.dimensions = dimensions
