# Release status statistics

name: ReleaseIssueStatus

trigger:
  branches:
    exclude:
    - '*'

# avoid being triggered as part of CI check
pr:
  branches:
    exclude:
    - '*'


schedules:
  - cron: "0 16 * * *"
    displayName: Daily Statistics
    branches:
      include:
      - main
    always: true

variables:
  - group: Release Secrets for GitHub
  - group: SDK Release Helper
  - group: Azure SDK Auto Release Pipeline Secrets

jobs:
- job: ReleaseSdkStatus
  displayName: ReleaseSdkStatus Python 3.8
  timeoutInMinutes: 300
  strategy:
    maxParallel: 1
  pool:
    vmImage: 'ubuntu-20.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        addToPath: true
        architecture: 'x64'
    - bash: |
        script_path=$(pwd)/scripts/release_sdk_status
        cd ..
        git config --global user.email "ReleaseSdkStatus"
        git config --global user.name "ReleaseSdkStatus"

        # clone(REPO: https://github.com/Azure/azure-sdk-for-python.git, USR_NAME: Azure, USR_TOKEN: xxxxxxxxxxxxx)
        mkdir file-storage
        git clone ${FILE_REPO:0:8}$(USR_NAME):$(Yuchao-GitToken)@${FILE_REPO:8} $(pwd)/file-storage
        mkdir azure-rest-api-specs
        git clone https://github.com/Azure/azure-rest-api-specs.git $(pwd)/azure-rest-api-specs
        mkdir sdk-repo
        git clone https://github.com/Azure/azure-sdk-for-python.git $(pwd)/sdk-repo

        # import env variable
        export TOKEN=$(Yuchao-GitToken)
        export SWAGGER_REPO=$(pwd)/azure-rest-api-specs
        export SDK_REPO=$(pwd)/sdk-repo
        export SKIP_COVERAGE=$(SKIP_COVERAGE)
        export AZURE_TEST_RUN_LIVE=false

        # create virtual env
        python -m venv venv-sdk
        source venv-sdk/bin/activate
        python -m pip install -r $script_path/requirement.txt

        # checkout the target branch
        cd file-storage
        git checkout release-sdk-status

        # run
        python $script_path/main.py
