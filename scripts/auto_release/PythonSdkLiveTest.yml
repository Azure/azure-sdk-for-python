# Live Test For Python SDK

name: PYTHON SDK AUTO RELEASE RUN  $(BASE_BRANCH) $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    exclude:
    - '*'


jobs:
- job: LiveTestPython38
  displayName: Live Test Python 3.8
  timeoutInMinutes: 1500
  strategy:
    maxParallel: 5
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        addToPath: true
        architecture: 'x64'
    - bash: |
        script_path=$(pwd)
        cd ..
        git config --global user.email "PythonSdkPipelines"
        git config --global user.name "PythonSdkPipelines"

        # clone(REPO: https://github.com/Azure/azure-sdk-for-python.git, USR_NAME: Azure, USR_TOKEN: xxxxxxxxxxxxx)
        mkdir azure-sdk-for-python
        git clone ${REPO:0:8}$(USR_NAME):$(USR_TOKEN)@${REPO:8} $(pwd)/azure-sdk-for-python

        # create virtual env
        python -m venv venv-sdk
        source venv-sdk/bin/activate
        output_path=$(pwd)/venv-sdk
        pip install packaging

        # import env variable
        export AZURE_TEST_RUN_LIVE=true
        export TENANT_ID=$(ENV_TENANT_ID)
        export CLIENT_ID=$(ENV_CLIENT_ID)
        export CLIENT_SECRET=$(ENV_CLIENT_SECRET)
        export SUBSCRIPTION_ID=$(ENV_SUBSCRIPTION_ID)
        export AZURE_TENANT_ID=$(ENV_TENANT_ID)
        export AZURE_CLIENT_ID=$(ENV_CLIENT_ID)
        export AZURE_CLIENT_SECRET=$(ENV_CLIENT_SECRET)
        export AZURE_SUBSCRIPTION_ID=$(ENV_SUBSCRIPTION_ID)

        # run
        cd azure-sdk-for-python
        python /home/vsts/work/1/s/scripts/auto_release/main.py $(BASE_BRANCH) "$script_path" "$output_path"

        # judge
        if [ ! -f "$output_path/output.txt" ]; then
          echo "output.txt does not exist, pipeline fail!!!"
          exit 1
        fi

        # create PR
        new_branch = `sed -n '1p' $output_path/output.txt`
        target_branch = `sed -n '2p' $output_path/output.txt`
        curl \
          --user "anything:$(USR_TOKEN)" \
          -d "{\
                  \"title\":\"[AutoRelease_Python] $new_branch\",\
                  \"body\":\"Please Add the link issue\",\
                  \"head\":\"$(USR_NAME):$new_branch\",\
                  \"base\":\"$target_branch\"\
              }" \
              $(REPO)/pulls

        echo "\'[AutoRelease_Python] $new_branch \' has been created!!!"

        # if test failed, still push and crete PR. But pipeline failed to remind user
        if [ -f "$output_path/live_test_fail.txt" ]; then
          echo "please fix failed test!!! \'[AutoRelease_Python] $new_branch \' has been created!!! "
          exit 1
        fi
