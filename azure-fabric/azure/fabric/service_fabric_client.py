# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import ServiceClient
from msrest import Configuration, Serializer, Deserializer
from .version import VERSION
from .operations.cluster_manifests_operations import ClusterManifestsOperations
from .operations.cluster_healths_operations import ClusterHealthsOperations
from .operations.nodes_operations import NodesOperations
from .operations.node_states_operations import NodeStatesOperations
from .operations.node_healths_operations import NodeHealthsOperations
from .operations.deployed_applications_operations import DeployedApplicationsOperations
from .operations.deployed_application_healths_operations import DeployedApplicationHealthsOperations
from .operations.node_load_informations_operations import NodeLoadInformationsOperations
from .operations.deployed_code_packages_operations import DeployedCodePackagesOperations
from .operations.deployed_replicas_operations import DeployedReplicasOperations
from .operations.deployed_replica_details_operations import DeployedReplicaDetailsOperations
from .operations.deployed_service_packages_operations import DeployedServicePackagesOperations
from .operations.deployed_service_package_healths_operations import DeployedServicePackageHealthsOperations
from .operations.deployed_service_types_operations import DeployedServiceTypesOperations
from .operations.application_types_operations import ApplicationTypesOperations
from .operations.service_manifests_operations import ServiceManifestsOperations
from .operations.service_types_operations import ServiceTypesOperations
from .operations.application_manifests_operations import ApplicationManifestsOperations
from .operations.applications_operations import ApplicationsOperations
from .operations.services_operations import ServicesOperations
from .operations.service_group_descriptions_operations import ServiceGroupDescriptionsOperations
from .operations.service_group_members_operations import ServiceGroupMembersOperations
from .operations.application_healths_operations import ApplicationHealthsOperations
from .operations.application_upgrades_operations import ApplicationUpgradesOperations
from .operations.service_from_templates_operations import ServiceFromTemplatesOperations
from .operations.service_groups_operations import ServiceGroupsOperations
from .operations.service_group_from_templates_operations import ServiceGroupFromTemplatesOperations
from .operations.application_upgrade_rollbacks_operations import ApplicationUpgradeRollbacksOperations
from .operations.service_descriptions_operations import ServiceDescriptionsOperations
from .operations.service_healths_operations import ServiceHealthsOperations
from .operations.partitions_operations import PartitionsOperations
from .operations.partition_lists_operations import PartitionListsOperations
from .operations.partition_loads_operations import PartitionLoadsOperations
from .operations.replicas_operations import ReplicasOperations
from .operations.partition_healths_operations import PartitionHealthsOperations
from .operations.replica_healths_operations import ReplicaHealthsOperations
from .operations.partition_load_informations_operations import PartitionLoadInformationsOperations
from .operations.replica_load_informations_operations import ReplicaLoadInformationsOperations
from .operations.cluster_load_informations_operations import ClusterLoadInformationsOperations
from .operations.upgrade_progresses_operations import UpgradeProgressesOperations
from . import models


class ServiceFabricClientConfiguration(Configuration):
    """Configuration for ServiceFabricClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param api_version: The version of the api
    :type api_version: str
    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    :param str base_url: Service URL
    :param str filepath: Existing config
    """

    def __init__(
            self, api_version, credentials, base_url=None, filepath=None):

        if api_version is None:
            raise ValueError("Parameter 'api_version' must not be None.")
        if not isinstance(api_version, str):
            raise TypeError("Parameter 'api_version' must be str.")
        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if not base_url:
            base_url = 'http://localhost:19080'

        super(ServiceFabricClientConfiguration, self).__init__(base_url, filepath)

        self.add_user_agent('servicefabricclient/{}'.format(VERSION))

        self.api_version = api_version
        self.credentials = credentials


class ServiceFabricClient(object):
    """ServiceFabricClient

    :ivar config: Configuration for client.
    :vartype config: ServiceFabricClientConfiguration

    :ivar cluster_manifests: ClusterManifests operations
    :vartype cluster_manifests: .operations.ClusterManifestsOperations
    :ivar cluster_healths: ClusterHealths operations
    :vartype cluster_healths: .operations.ClusterHealthsOperations
    :ivar nodes: Nodes operations
    :vartype nodes: .operations.NodesOperations
    :ivar node_states: NodeStates operations
    :vartype node_states: .operations.NodeStatesOperations
    :ivar node_healths: NodeHealths operations
    :vartype node_healths: .operations.NodeHealthsOperations
    :ivar deployed_applications: DeployedApplications operations
    :vartype deployed_applications: .operations.DeployedApplicationsOperations
    :ivar deployed_application_healths: DeployedApplicationHealths operations
    :vartype deployed_application_healths: .operations.DeployedApplicationHealthsOperations
    :ivar node_load_informations: NodeLoadInformations operations
    :vartype node_load_informations: .operations.NodeLoadInformationsOperations
    :ivar deployed_code_packages: DeployedCodePackages operations
    :vartype deployed_code_packages: .operations.DeployedCodePackagesOperations
    :ivar deployed_replicas: DeployedReplicas operations
    :vartype deployed_replicas: .operations.DeployedReplicasOperations
    :ivar deployed_replica_details: DeployedReplicaDetails operations
    :vartype deployed_replica_details: .operations.DeployedReplicaDetailsOperations
    :ivar deployed_service_packages: DeployedServicePackages operations
    :vartype deployed_service_packages: .operations.DeployedServicePackagesOperations
    :ivar deployed_service_package_healths: DeployedServicePackageHealths operations
    :vartype deployed_service_package_healths: .operations.DeployedServicePackageHealthsOperations
    :ivar deployed_service_types: DeployedServiceTypes operations
    :vartype deployed_service_types: .operations.DeployedServiceTypesOperations
    :ivar application_types: ApplicationTypes operations
    :vartype application_types: .operations.ApplicationTypesOperations
    :ivar service_manifests: ServiceManifests operations
    :vartype service_manifests: .operations.ServiceManifestsOperations
    :ivar service_types: ServiceTypes operations
    :vartype service_types: .operations.ServiceTypesOperations
    :ivar application_manifests: ApplicationManifests operations
    :vartype application_manifests: .operations.ApplicationManifestsOperations
    :ivar applications: Applications operations
    :vartype applications: .operations.ApplicationsOperations
    :ivar services: Services operations
    :vartype services: .operations.ServicesOperations
    :ivar service_group_descriptions: ServiceGroupDescriptions operations
    :vartype service_group_descriptions: .operations.ServiceGroupDescriptionsOperations
    :ivar service_group_members: ServiceGroupMembers operations
    :vartype service_group_members: .operations.ServiceGroupMembersOperations
    :ivar application_healths: ApplicationHealths operations
    :vartype application_healths: .operations.ApplicationHealthsOperations
    :ivar application_upgrades: ApplicationUpgrades operations
    :vartype application_upgrades: .operations.ApplicationUpgradesOperations
    :ivar service_from_templates: ServiceFromTemplates operations
    :vartype service_from_templates: .operations.ServiceFromTemplatesOperations
    :ivar service_groups: ServiceGroups operations
    :vartype service_groups: .operations.ServiceGroupsOperations
    :ivar service_group_from_templates: ServiceGroupFromTemplates operations
    :vartype service_group_from_templates: .operations.ServiceGroupFromTemplatesOperations
    :ivar application_upgrade_rollbacks: ApplicationUpgradeRollbacks operations
    :vartype application_upgrade_rollbacks: .operations.ApplicationUpgradeRollbacksOperations
    :ivar service_descriptions: ServiceDescriptions operations
    :vartype service_descriptions: .operations.ServiceDescriptionsOperations
    :ivar service_healths: ServiceHealths operations
    :vartype service_healths: .operations.ServiceHealthsOperations
    :ivar partitions: Partitions operations
    :vartype partitions: .operations.PartitionsOperations
    :ivar partition_lists: PartitionLists operations
    :vartype partition_lists: .operations.PartitionListsOperations
    :ivar partition_loads: PartitionLoads operations
    :vartype partition_loads: .operations.PartitionLoadsOperations
    :ivar replicas: Replicas operations
    :vartype replicas: .operations.ReplicasOperations
    :ivar partition_healths: PartitionHealths operations
    :vartype partition_healths: .operations.PartitionHealthsOperations
    :ivar replica_healths: ReplicaHealths operations
    :vartype replica_healths: .operations.ReplicaHealthsOperations
    :ivar partition_load_informations: PartitionLoadInformations operations
    :vartype partition_load_informations: .operations.PartitionLoadInformationsOperations
    :ivar replica_load_informations: ReplicaLoadInformations operations
    :vartype replica_load_informations: .operations.ReplicaLoadInformationsOperations
    :ivar cluster_load_informations: ClusterLoadInformations operations
    :vartype cluster_load_informations: .operations.ClusterLoadInformationsOperations
    :ivar upgrade_progresses: UpgradeProgresses operations
    :vartype upgrade_progresses: .operations.UpgradeProgressesOperations

    :param api_version: The version of the api
    :type api_version: str
    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    :param str base_url: Service URL
    :param str filepath: Existing config
    """

    def __init__(
            self, api_version, credentials, base_url=None, filepath=None):

        self.config = ServiceFabricClientConfiguration(api_version, credentials, base_url, filepath)
        self._client = ServiceClient(None, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.cluster_manifests = ClusterManifestsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.cluster_healths = ClusterHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.nodes = NodesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.node_states = NodeStatesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.node_healths = NodeHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_applications = DeployedApplicationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_application_healths = DeployedApplicationHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.node_load_informations = NodeLoadInformationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_code_packages = DeployedCodePackagesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_replicas = DeployedReplicasOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_replica_details = DeployedReplicaDetailsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_service_packages = DeployedServicePackagesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_service_package_healths = DeployedServicePackageHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.deployed_service_types = DeployedServiceTypesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.application_types = ApplicationTypesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_manifests = ServiceManifestsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_types = ServiceTypesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.application_manifests = ApplicationManifestsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.applications = ApplicationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.services = ServicesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_group_descriptions = ServiceGroupDescriptionsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_group_members = ServiceGroupMembersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.application_healths = ApplicationHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.application_upgrades = ApplicationUpgradesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_from_templates = ServiceFromTemplatesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_groups = ServiceGroupsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_group_from_templates = ServiceGroupFromTemplatesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.application_upgrade_rollbacks = ApplicationUpgradeRollbacksOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_descriptions = ServiceDescriptionsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.service_healths = ServiceHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.partitions = PartitionsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.partition_lists = PartitionListsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.partition_loads = PartitionLoadsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.replicas = ReplicasOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.partition_healths = PartitionHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.replica_healths = ReplicaHealthsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.partition_load_informations = PartitionLoadInformationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.replica_load_informations = ReplicaLoadInformationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.cluster_load_informations = ClusterLoadInformationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.upgrade_progresses = UpgradeProgressesOperations(
            self._client, self.config, self._serialize, self._deserialize)
