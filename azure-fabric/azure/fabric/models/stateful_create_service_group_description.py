# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .create_service_group_description import CreateServiceGroupDescription


class StatefulCreateServiceGroupDescription(CreateServiceGroupDescription):
    """The description of the stateful create service group.

    :param application_name:
    :type application_name: str
    :param service_name:
    :type service_name: str
    :param service_type_name:
    :type service_type_name: str
    :param partition_description:
    :type partition_description: :class:`PartitionDescription
     <azure.fabric.models.PartitionDescription>`
    :param placement_constraints:
    :type placement_constraints: str
    :param correlation_scheme:
    :type correlation_scheme: :class:`ServiceCorrelationDescription
     <azure.fabric.models.ServiceCorrelationDescription>`
    :param service_load_metrics:
    :type service_load_metrics: :class:`ServiceCorrelationDescription
     <azure.fabric.models.ServiceCorrelationDescription>`
    :param service_placement_policies:
    :type service_placement_policies: :class:`ServiceCorrelationDescription
     <azure.fabric.models.ServiceCorrelationDescription>`
    :param flags:
    :type flags: int
    :param service_group_member_description:
    :type service_group_member_description: list of
     :class:`ServiceGroupMemberDescription
     <azure.fabric.models.ServiceGroupMemberDescription>`
    :param service_kind: Polymorphic Discriminator
    :type service_kind: str
    :param target_replica_set_size:
    :type target_replica_set_size: int
    :param min_replica_set_size:
    :type min_replica_set_size: int
    :param has_persisted_state:
    :type has_persisted_state: bool
    :param replica_restart_wait_duration_seconds:
    :type replica_restart_wait_duration_seconds: int
    :param quorum_loss_wait_duration_seconds:
    :type quorum_loss_wait_duration_seconds: int
    :param stand_by_replica_keep_duration_seconds:
    :type stand_by_replica_keep_duration_seconds: int
    :param default_move_cost: Possible values include: 'Zero', 'Low',
     'Medium', 'High'
    :type default_move_cost: str or :class:`enum <azure.fabric.models.enum>`
    :param is_default_move_cost_specified:
    :type is_default_move_cost_specified: bool
    """

    _validation = {
        'service_kind': {'required': True},
    }

    _attribute_map = {
        'application_name': {'key': 'ApplicationName', 'type': 'str'},
        'service_name': {'key': 'ServiceName', 'type': 'str'},
        'service_type_name': {'key': 'ServiceTypeName', 'type': 'str'},
        'partition_description': {'key': 'PartitionDescription', 'type': 'PartitionDescription'},
        'placement_constraints': {'key': 'PlacementConstraints', 'type': 'str'},
        'correlation_scheme': {'key': 'CorrelationScheme', 'type': 'ServiceCorrelationDescription'},
        'service_load_metrics': {'key': 'ServiceLoadMetrics', 'type': 'ServiceCorrelationDescription'},
        'service_placement_policies': {'key': 'ServicePlacementPolicies', 'type': 'ServiceCorrelationDescription'},
        'flags': {'key': 'Flags', 'type': 'int'},
        'service_group_member_description': {'key': 'ServiceGroupMemberDescription', 'type': '[ServiceGroupMemberDescription]'},
        'service_kind': {'key': 'ServiceKind', 'type': 'str'},
        'target_replica_set_size': {'key': 'TargetReplicaSetSize', 'type': 'int'},
        'min_replica_set_size': {'key': 'MinReplicaSetSize', 'type': 'int'},
        'has_persisted_state': {'key': 'HasPersistedState', 'type': 'bool'},
        'replica_restart_wait_duration_seconds': {'key': 'ReplicaRestartWaitDurationSeconds', 'type': 'int'},
        'quorum_loss_wait_duration_seconds': {'key': 'QuorumLossWaitDurationSeconds', 'type': 'int'},
        'stand_by_replica_keep_duration_seconds': {'key': 'StandByReplicaKeepDurationSeconds', 'type': 'int'},
        'default_move_cost': {'key': 'DefaultMoveCost', 'type': 'str'},
        'is_default_move_cost_specified': {'key': 'IsDefaultMoveCostSpecified', 'type': 'bool'},
    }

    def __init__(self, application_name=None, service_name=None, service_type_name=None, partition_description=None, placement_constraints=None, correlation_scheme=None, service_load_metrics=None, service_placement_policies=None, flags=None, service_group_member_description=None, target_replica_set_size=None, min_replica_set_size=None, has_persisted_state=None, replica_restart_wait_duration_seconds=None, quorum_loss_wait_duration_seconds=None, stand_by_replica_keep_duration_seconds=None, default_move_cost=None, is_default_move_cost_specified=None):
        super(StatefulCreateServiceGroupDescription, self).__init__(application_name=application_name, service_name=service_name, service_type_name=service_type_name, partition_description=partition_description, placement_constraints=placement_constraints, correlation_scheme=correlation_scheme, service_load_metrics=service_load_metrics, service_placement_policies=service_placement_policies, flags=flags, service_group_member_description=service_group_member_description)
        self.target_replica_set_size = target_replica_set_size
        self.min_replica_set_size = min_replica_set_size
        self.has_persisted_state = has_persisted_state
        self.replica_restart_wait_duration_seconds = replica_restart_wait_duration_seconds
        self.quorum_loss_wait_duration_seconds = quorum_loss_wait_duration_seconds
        self.stand_by_replica_keep_duration_seconds = stand_by_replica_keep_duration_seconds
        self.default_move_cost = default_move_cost
        self.is_default_move_cost_specified = is_default_move_cost_specified
        self.service_kind = 'Stateful'
