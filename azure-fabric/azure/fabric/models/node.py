# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Node(Model):
    """The node.

    :param name:
    :type name: str
    :param ip_address_or_fqdn:
    :type ip_address_or_fqdn: str
    :param type:
    :type type: str
    :param code_version:
    :type code_version: str
    :param config_version:
    :type config_version: str
    :param node_status: Possible values include: 'Invalid', 'Up', 'Down',
     'Enabling', 'Disabling', 'Disabled', 'Unknown', 'Removed'
    :type node_status: str or :class:`enum <azure.fabric.models.enum>`
    :param node_up_time_in_seconds:
    :type node_up_time_in_seconds: str
    :param health_state: Possible values include: 'Invalid', 'Ok', 'Warning',
     'Error', 'Unknown'
    :type health_state: str or :class:`enum <azure.fabric.models.enum>`
    :param is_seed_node:
    :type is_seed_node: bool
    :param upgrade_domain:
    :type upgrade_domain: str
    :param fault_domain:
    :type fault_domain: str
    :param id: The id
    :type id: :class:`NodeId <azure.fabric.models.NodeId>`
    :param instance_id:
    :type instance_id: str
    :param node_deactivation_info: The info of the deactivation info
    :type node_deactivation_info: :class:`NodeNodeDeactivationInfo
     <azure.fabric.models.NodeNodeDeactivationInfo>`
    """

    _attribute_map = {
        'name': {'key': 'Name', 'type': 'str'},
        'ip_address_or_fqdn': {'key': 'IpAddressOrFQDN', 'type': 'str'},
        'type': {'key': 'Type', 'type': 'str'},
        'code_version': {'key': 'CodeVersion', 'type': 'str'},
        'config_version': {'key': 'ConfigVersion', 'type': 'str'},
        'node_status': {'key': 'NodeStatus', 'type': 'str'},
        'node_up_time_in_seconds': {'key': 'NodeUpTimeInSeconds', 'type': 'str'},
        'health_state': {'key': 'HealthState', 'type': 'str'},
        'is_seed_node': {'key': 'IsSeedNode', 'type': 'bool'},
        'upgrade_domain': {'key': 'UpgradeDomain', 'type': 'str'},
        'fault_domain': {'key': 'FaultDomain', 'type': 'str'},
        'id': {'key': 'Id', 'type': 'NodeId'},
        'instance_id': {'key': 'InstanceId', 'type': 'str'},
        'node_deactivation_info': {'key': 'NodeDeactivationInfo', 'type': 'NodeNodeDeactivationInfo'},
    }

    def __init__(self, name=None, ip_address_or_fqdn=None, type=None, code_version=None, config_version=None, node_status=None, node_up_time_in_seconds=None, health_state=None, is_seed_node=None, upgrade_domain=None, fault_domain=None, id=None, instance_id=None, node_deactivation_info=None):
        self.name = name
        self.ip_address_or_fqdn = ip_address_or_fqdn
        self.type = type
        self.code_version = code_version
        self.config_version = config_version
        self.node_status = node_status
        self.node_up_time_in_seconds = node_up_time_in_seconds
        self.health_state = health_state
        self.is_seed_node = is_seed_node
        self.upgrade_domain = upgrade_domain
        self.fault_domain = fault_domain
        self.id = id
        self.instance_id = instance_id
        self.node_deactivation_info = node_deactivation_info
