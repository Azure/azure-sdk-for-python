# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Partition(Model):
    """The partition.

    :param service_kind: Possible values include: 'Invalid', 'Stateless',
     'Stateful'
    :type service_kind: str or :class:`enum <azure.fabric.models.enum>`
    :param partition_information:
    :type partition_information: :class:`PartitionInformation
     <azure.fabric.models.PartitionInformation>`
    :param instance_count:
    :type instance_count: int
    :param target_replica_set_size:
    :type target_replica_set_size: int
    :param min_replica_set_size:
    :type min_replica_set_size: int
    :param health_state: Possible values include: 'Invalid', 'Ok', 'Warning',
     'Error', 'Unknown'
    :type health_state: str or :class:`enum <azure.fabric.models.enum>`
    :param partition_status: Possible values include: 'Invalid', 'Ready',
     'NotReady', 'InQuorumLoss', 'Reconfiguring', 'Deleting'
    :type partition_status: str or :class:`enum <azure.fabric.models.enum>`
    :param current_configuration_epoch: The epoch of the current configuration
    :type current_configuration_epoch:
     :class:`PartitionCurrentConfigurationEpoch
     <azure.fabric.models.PartitionCurrentConfigurationEpoch>`
    """

    _attribute_map = {
        'service_kind': {'key': 'ServiceKind', 'type': 'str'},
        'partition_information': {'key': 'PartitionInformation', 'type': 'PartitionInformation'},
        'instance_count': {'key': 'InstanceCount', 'type': 'int'},
        'target_replica_set_size': {'key': 'TargetReplicaSetSize', 'type': 'int'},
        'min_replica_set_size': {'key': 'MinReplicaSetSize', 'type': 'int'},
        'health_state': {'key': 'HealthState', 'type': 'str'},
        'partition_status': {'key': 'PartitionStatus', 'type': 'str'},
        'current_configuration_epoch': {'key': 'CurrentConfigurationEpoch', 'type': 'PartitionCurrentConfigurationEpoch'},
    }

    def __init__(self, service_kind=None, partition_information=None, instance_count=None, target_replica_set_size=None, min_replica_set_size=None, health_state=None, partition_status=None, current_configuration_epoch=None):
        self.service_kind = service_kind
        self.partition_information = partition_information
        self.instance_count = instance_count
        self.target_replica_set_size = target_replica_set_size
        self.min_replica_set_size = min_replica_set_size
        self.health_state = health_state
        self.partition_status = partition_status
        self.current_configuration_epoch = current_configuration_epoch
