# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class MigrationConfigProperties(Resource):
    """Single item in List or Get Migration Config operation.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id
    :vartype id: str
    :ivar name: Resource name
    :vartype name: str
    :ivar type: Resource type
    :vartype type: str
    :ivar provisioning_state: Provisioning state of Migration Config -
     possible values 'Accepted' or 'Succeeded' or 'Failed'. Possible values
     include: 'Accepted', 'Succeeded', 'Failed'
    :vartype provisioning_state: str or
     ~azure.mgmt.servicebus.models.ProvisioningStateMC
    :param primary_namespace_name: Existing premium Namespace name which has
     no entities, will be used for migration
    :type primary_namespace_name: str
    :param post_migration_name: Name to access connection strings of the
     Primary Namespace after migration
    :type post_migration_name: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'ProvisioningStateMC'},
        'primary_namespace_name': {'key': 'properties.primaryNamespaceName', 'type': 'str'},
        'post_migration_name': {'key': 'properties.postMigrationName', 'type': 'str'},
    }

    def __init__(self, *, primary_namespace_name: str=None, post_migration_name: str=None, **kwargs) -> None:
        super(MigrationConfigProperties, self).__init__(, **kwargs)
        self.provisioning_state = None
        self.primary_namespace_name = primary_namespace_name
        self.post_migration_name = post_migration_name
