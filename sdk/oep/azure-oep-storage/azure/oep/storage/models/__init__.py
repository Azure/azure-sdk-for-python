# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

try:
    from ._models_py3 import Acl
    from ._models_py3 import CreateUpdateRecordsResponse
    from ._models_py3 import DatastoreQueryResult
    from ._models_py3 import Legal
    from ._models_py3 import Record
    from ._models_py3 import RecordAncestry
    from ._models_py3 import RecordVersions
except (SyntaxError, ImportError):
    from ._models import Acl  # type: ignore
    from ._models import CreateUpdateRecordsResponse  # type: ignore
    from ._models import DatastoreQueryResult  # type: ignore
    from ._models import Legal  # type: ignore
    from ._models import Record  # type: ignore
    from ._models import RecordAncestry  # type: ignore
    from ._models import RecordVersions  # type: ignore

from ._oep_storage_client_enums import (
    Status,
)
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk
__all__ = [
    'Acl',
    'CreateUpdateRecordsResponse',
    'DatastoreQueryResult',
    'Legal',
    'Record',
    'RecordAncestry',
    'RecordVersions',
    'Status',
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()