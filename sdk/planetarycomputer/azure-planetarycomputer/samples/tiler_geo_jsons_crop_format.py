# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.planetarycomputer import PlanetaryComputerClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-planetarycomputer
# USAGE
    python tiler_geo_jsons_crop_format.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = PlanetaryComputerClient(
        credential=DefaultAzureCredential(),
    )

    response = client.tiler.crop_geo_json(
        collection_id="collectionId-0df36a74d7ed",
        item_id="item-0df36a74d7ed",
        format="png",
        body={
            "_msft:etag": "e99a9415-f26f-48ad-9553-3a5dd7260cde",
            "_msft:ts": "2024-09-26T17:46:10.688245Z",
            "assets": {
                "predict": {
                    "description": "Argmax-parsed inference values.",
                    "href": "https://sample.blob.core.windows.net/example-collection-16f38ddf/c8a/S2A_MSIL2A_20231017T013651_R117_T53SPA_20231017T053413/predict.tif",
                    "type": "image/tiff; application=geotiff; profile=cloud-optimized",
                },
                "softmax": {
                    "description": "Maximum raw inference values converted to uint8.",
                    "href": "https://sample.blob.core.windows.net/example-collection-16f38ddf/c8a/S2A_MSIL2A_20231017T013651_R117_T53SPA_20231017T053413/softmax.tif",
                    "type": "image/tiff; application=geotiff; profile=cloud-optimized",
                },
            },
            "bbox": [136.11023969131566, 36.03410504840171, 137.35846754627107, 37.041254047568394],
            "collection": "example-collection",
            "geometry": {
                "coordinates": [
                    [
                        [136.11023969131566, 36.05158282566385],
                        [137.32861422946507, 36.03410504840171],
                        [137.35846754627107, 37.02313780213882],
                        [136.12448554733595, 37.041254047568394],
                        [136.11023969131566, 36.05158282566385],
                    ]
                ],
                "type": "Polygon",
            },
            "id": "S2A_MSIL2A_20231017T013651_R117_T53SPA_20231017T053413",
            "links": [
                {
                    "href": "https://sample.cmbtazhseqhgeudd.uksouth.geocatalog.spatio.azure.com/stac/collections/example-collection",
                    "rel": "collection",
                    "type": "application/json",
                },
                {
                    "href": "https://sample.cmbtazhseqhgeudd.uksouth.geocatalog.spatio.azure.com/stac/collections/example-collection",
                    "rel": "parent",
                    "type": "application/json",
                },
                {
                    "href": "https://sample.cmbtazhseqhgeudd.uksouth.geocatalog.spatio.azure.com/stac/",
                    "rel": "root",
                    "type": "application/json",
                },
                {
                    "href": "https://sample.cmbtazhseqhgeudd.uksouth.geocatalog.spatio.azure.com/stac/collections/example-collection/items/S2A_MSIL2A_20231017T013651_R117_T53SPA_20231017T053413",
                    "rel": "self",
                    "type": "application/geo+json",
                },
            ],
            "properties": {
                "datetime": "2023-10-17T01:36:51.024000Z",
                "eo:cloud_cover": 19.538534,
                "proj:bbox": [600000, 3990240, 709800, 4100040],
                "proj:epsg": 32653,
                "proj:geometry": {
                    "coordinates": [
                        [[600000, 3990240], [709800, 3990240], [709800, 4100040], [600000, 4100040], [600000, 3990240]]
                    ],
                    "type": "Polygon",
                },
                "proj:shape": [10980, 10980],
                "proj:transform": [10, 0, 600000, 0, -10, 4100040, 0, 0, 1],
                "s2:mgrs_tile": "53SPA",
                "s2:nodata_pixel_percentage": 0.000129,
            },
            "stac_extensions": ["https://stac-extensions.github.io/projection/v1.1.0/schema.json"],
            "stac_version": "1.0.0",
            "type": "Feature",
        },
    )
    print(response)


# x-ms-original-file: 2025-04-30-preview/TilerGeoJsons_CropFormat.json
if __name__ == "__main__":
    main()
