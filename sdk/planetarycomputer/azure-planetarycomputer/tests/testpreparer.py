# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from azure.planetarycomputer import (
    GeocatalogClient,
    IngestionManagementClient,
    SharedAccessSignatureClient,
    StacClient,
    TilerClient,
)
from devtools_testutils import AzureRecordedTestCase, PowerShellPreparer
import functools


class GeocatalogClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(GeocatalogClient)
        return self.create_client_from_credential(
            GeocatalogClient,
            credential=credential,
            endpoint=endpoint,
        )


GeocatalogPreparer = functools.partial(
    PowerShellPreparer, "geocatalog", geocatalog_endpoint="https://fake_geocatalog_endpoint.com"
)


class IngestionManagementClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(IngestionManagementClient)
        return self.create_client_from_credential(
            IngestionManagementClient,
            credential=credential,
            endpoint=endpoint,
        )


IngestionManagementPreparer = functools.partial(
    PowerShellPreparer,
    "ingestionmanagement",
    ingestionmanagement_endpoint="https://fake_ingestionmanagement_endpoint.com",
)


class StacClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(StacClient)
        return self.create_client_from_credential(
            StacClient,
            credential=credential,
            endpoint=endpoint,
        )


StacPreparer = functools.partial(PowerShellPreparer, "stac", stac_endpoint="https://fake_stac_endpoint.com")


class TilerClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(TilerClient)
        return self.create_client_from_credential(
            TilerClient,
            credential=credential,
            endpoint=endpoint,
        )


TilerPreparer = functools.partial(PowerShellPreparer, "tiler", tiler_endpoint="https://fake_tiler_endpoint.com")


class SharedAccessSignatureClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(SharedAccessSignatureClient)
        return self.create_client_from_credential(
            SharedAccessSignatureClient,
            credential=credential,
            endpoint=endpoint,
        )


SharedAccessSignaturePreparer = functools.partial(
    PowerShellPreparer,
    "sharedaccesssignature",
    sharedaccesssignature_endpoint="https://fake_sharedaccesssignature_endpoint.com",
)
