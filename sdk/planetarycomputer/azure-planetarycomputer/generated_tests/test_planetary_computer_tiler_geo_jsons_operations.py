# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import PlanetaryComputerClientTestBase, PlanetaryComputerPreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestPlanetaryComputerTilerGeoJsonsOperations(PlanetaryComputerClientTestBase):
    @PlanetaryComputerPreparer()
    @recorded_by_proxy
    def test_tiler_geo_jsons_crop_widthx_height_format(self, planetarycomputer_endpoint):
        client = self.create_client(endpoint=planetarycomputer_endpoint)
        response = client.tiler_geo_jsons.crop_widthx_height_format(
            collection_id="str",
            item_id="str",
            width=0.0,
            height=0.0,
            format="str",
            body={
                "assets": {
                    "str": {
                        "href": "str",
                        "constellation": "str",
                        "created": "2020-02-20 00:00:00",
                        "description": "str",
                        "gsd": 0.0,
                        "instruments": ["str"],
                        "mission": "str",
                        "platform": "str",
                        "providers": [{"name": "str", "description": "str", "roles": ["str"], "url": "str"}],
                        "roles": ["str"],
                        "title": "str",
                        "type": "str",
                        "updated": "2020-02-20 00:00:00",
                    }
                },
                "bbox": [0.0],
                "geometry": "geometry",
                "id": "str",
                "properties": {
                    "datetime": "str",
                    "constellation": "str",
                    "created": "2020-02-20 00:00:00",
                    "description": "str",
                    "end_datetime": "2020-02-20 00:00:00",
                    "gsd": 0.0,
                    "instruments": ["str"],
                    "mission": "str",
                    "platform": "str",
                    "providers": [{"name": "str", "description": "str", "roles": ["str"], "url": "str"}],
                    "start_datetime": "2020-02-20 00:00:00",
                    "title": "str",
                    "updated": "2020-02-20 00:00:00",
                },
                "type": "Feature",
                "_msft:etag": "str",
                "_msft:ts": "str",
                "collection": "str",
                "links": [
                    {
                        "href": "str",
                        "body": {"str": {}},
                        "headers": {"str": "str"},
                        "hreflang": "str",
                        "length": 0,
                        "merge": bool,
                        "method": "GET",
                        "rel": "str",
                        "title": "str",
                        "type": "str",
                    }
                ],
                "msft:_created": "str",
                "msft:_updated": "str",
                "msft:short_description": "str",
                "stac_extensions": ["str"],
                "stac_version": "str",
            },
        )

        # please add some check logic here by yourself
        # ...

    @PlanetaryComputerPreparer()
    @recorded_by_proxy
    def test_tiler_geo_jsons_crop_format(self, planetarycomputer_endpoint):
        client = self.create_client(endpoint=planetarycomputer_endpoint)
        response = client.tiler_geo_jsons.crop_format(
            collection_id="str",
            item_id="str",
            format="str",
            body={"coordinates": [0.0], "type": "LineString", "bbox": [0.0]},
        )

        # please add some check logic here by yourself
        # ...
