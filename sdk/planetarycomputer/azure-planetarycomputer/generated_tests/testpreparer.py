# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from azure.planetarycomputer import (
    GeocatalogClient,
    ImageExportsClient,
    IngestionClient,
    MapLegendsClient,
    MosaicTilerClient,
    SharedAccessSignatureClient,
    StacClient,
    StacCollectionConfigurationClient,
    StacItemTilerClient,
    TileMatrixSetsClient,
)
from devtools_testutils import AzureRecordedTestCase, PowerShellPreparer
import functools


class StacCollectionConfigurationClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(StacCollectionConfigurationClient)
        return self.create_client_from_credential(
            StacCollectionConfigurationClient,
            credential=credential,
            endpoint=endpoint,
        )


StacCollectionConfigurationPreparer = functools.partial(
    PowerShellPreparer,
    "staccollectionconfiguration",
    staccollectionconfiguration_endpoint="https://fake_staccollectionconfiguration_endpoint.com",
)


class GeocatalogClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(GeocatalogClient)
        return self.create_client_from_credential(
            GeocatalogClient,
            credential=credential,
            endpoint=endpoint,
        )


GeocatalogPreparer = functools.partial(
    PowerShellPreparer, "geocatalog", geocatalog_endpoint="https://fake_geocatalog_endpoint.com"
)


class ImageExportsClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(ImageExportsClient)
        return self.create_client_from_credential(
            ImageExportsClient,
            credential=credential,
            endpoint=endpoint,
        )


ImageExportsPreparer = functools.partial(
    PowerShellPreparer, "imageexports", imageexports_endpoint="https://fake_imageexports_endpoint.com"
)


class StacItemTilerClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(StacItemTilerClient)
        return self.create_client_from_credential(
            StacItemTilerClient,
            credential=credential,
            endpoint=endpoint,
        )


StacItemTilerPreparer = functools.partial(
    PowerShellPreparer, "stacitemtiler", stacitemtiler_endpoint="https://fake_stacitemtiler_endpoint.com"
)


class MapLegendsClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(MapLegendsClient)
        return self.create_client_from_credential(
            MapLegendsClient,
            credential=credential,
            endpoint=endpoint,
        )


MapLegendsPreparer = functools.partial(
    PowerShellPreparer, "maplegends", maplegends_endpoint="https://fake_maplegends_endpoint.com"
)


class MosaicTilerClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(MosaicTilerClient)
        return self.create_client_from_credential(
            MosaicTilerClient,
            credential=credential,
            endpoint=endpoint,
        )


MosaicTilerPreparer = functools.partial(
    PowerShellPreparer, "mosaictiler", mosaictiler_endpoint="https://fake_mosaictiler_endpoint.com"
)


class TileMatrixSetsClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(TileMatrixSetsClient)
        return self.create_client_from_credential(
            TileMatrixSetsClient,
            credential=credential,
            endpoint=endpoint,
        )


TileMatrixSetsPreparer = functools.partial(
    PowerShellPreparer, "tilematrixsets", tilematrixsets_endpoint="https://fake_tilematrixsets_endpoint.com"
)


class SharedAccessSignatureClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(SharedAccessSignatureClient)
        return self.create_client_from_credential(
            SharedAccessSignatureClient,
            credential=credential,
            endpoint=endpoint,
        )


SharedAccessSignaturePreparer = functools.partial(
    PowerShellPreparer,
    "sharedaccesssignature",
    sharedaccesssignature_endpoint="https://fake_sharedaccesssignature_endpoint.com",
)


class IngestionClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(IngestionClient)
        return self.create_client_from_credential(
            IngestionClient,
            credential=credential,
            endpoint=endpoint,
        )


IngestionPreparer = functools.partial(
    PowerShellPreparer, "ingestion", ingestion_endpoint="https://fake_ingestion_endpoint.com"
)


class StacClientTestBase(AzureRecordedTestCase):

    def create_client(self, endpoint):
        credential = self.get_credential(StacClient)
        return self.create_client_from_credential(
            StacClient,
            credential=credential,
            endpoint=endpoint,
        )


StacPreparer = functools.partial(PowerShellPreparer, "stac", stac_endpoint="https://fake_stac_endpoint.com")
