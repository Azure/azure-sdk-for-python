# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import PlanetaryComputerClientTestBase, PlanetaryComputerPreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestPlanetaryComputerStacCollectionMosaicsOperations(PlanetaryComputerClientTestBase):
    @PlanetaryComputerPreparer()
    @recorded_by_proxy
    def test_stac_collection_mosaics_get_all(self, planetarycomputer_endpoint):
        client = self.create_client(endpoint=planetarycomputer_endpoint)
        response = client.stac_collection_mosaics.get_all(
            collection_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @PlanetaryComputerPreparer()
    @recorded_by_proxy
    def test_stac_collection_mosaics_add(self, planetarycomputer_endpoint):
        client = self.create_client(endpoint=planetarycomputer_endpoint)
        response = client.stac_collection_mosaics.add(
            collection_id="str",
            body={"cql": [{}], "id": "str", "name": "str", "description": "str"},
        )

        # please add some check logic here by yourself
        # ...

    @PlanetaryComputerPreparer()
    @recorded_by_proxy
    def test_stac_collection_mosaics_get(self, planetarycomputer_endpoint):
        client = self.create_client(endpoint=planetarycomputer_endpoint)
        response = client.stac_collection_mosaics.get(
            collection_id="str",
            mosaic_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @PlanetaryComputerPreparer()
    @recorded_by_proxy
    def test_stac_collection_mosaics_create_or_replace(self, planetarycomputer_endpoint):
        client = self.create_client(endpoint=planetarycomputer_endpoint)
        response = client.stac_collection_mosaics.create_or_replace(
            collection_id="str",
            mosaic_id="str",
            body={"cql": [{}], "id": "str", "name": "str", "description": "str"},
        )

        # please add some check logic here by yourself
        # ...

    @PlanetaryComputerPreparer()
    @recorded_by_proxy
    def test_stac_collection_mosaics_delete(self, planetarycomputer_endpoint):
        client = self.create_client(endpoint=planetarycomputer_endpoint)
        response = client.stac_collection_mosaics.delete(
            collection_id="str",
            mosaic_id="str",
        )

        # please add some check logic here by yourself
        # ...
