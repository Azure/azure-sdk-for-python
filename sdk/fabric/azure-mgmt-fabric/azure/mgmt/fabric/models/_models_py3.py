# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CapacityAdministration(_serialization.Model):
    """The administration properties of the Fabric capacity resource.

    All required parameters must be populated in order to send to server.

    :ivar members: An array of administrator user identities. Required.
    :vartype members: list[str]
    """

    _validation = {
        "members": {"required": True},
    }

    _attribute_map = {
        "members": {"key": "members", "type": "[str]"},
    }

    def __init__(self, *, members: List[str], **kwargs: Any) -> None:
        """
        :keyword members: An array of administrator user identities. Required.
        :paramtype members: list[str]
        """
        super().__init__(**kwargs)
        self.members = members


class CheckNameAvailabilityRequest(_serialization.Model):
    """The check availability request body.

    :ivar name: The name of the resource for which availability needs to be checked.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, type: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: The name of the resource for which availability needs to be checked.
        :paramtype name: str
        :keyword type: The resource type.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.type = type


class CheckNameAvailabilityResponse(_serialization.Model):
    """The check availability result.

    :ivar name_available: Indicates if the resource name is available.
    :vartype name_available: bool
    :ivar reason: The reason why the given name is not available. Known values are: "Invalid" and
     "AlreadyExists".
    :vartype reason: str or ~azure.mgmt.fabric.models.CheckNameAvailabilityReason
    :ivar message: Detailed reason why the given name is available.
    :vartype message: str
    """

    _attribute_map = {
        "name_available": {"key": "nameAvailable", "type": "bool"},
        "reason": {"key": "reason", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(
        self,
        *,
        name_available: Optional[bool] = None,
        reason: Optional[Union[str, "_models.CheckNameAvailabilityReason"]] = None,
        message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name_available: Indicates if the resource name is available.
        :paramtype name_available: bool
        :keyword reason: The reason why the given name is not available. Known values are: "Invalid"
         and "AlreadyExists".
        :paramtype reason: str or ~azure.mgmt.fabric.models.CheckNameAvailabilityReason
        :keyword message: Detailed reason why the given name is available.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.name_available = name_available
        self.reason = reason
        self.message = message


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.fabric.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.fabric.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.fabric.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.fabric.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.fabric.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.fabric.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class FabricCapacity(TrackedResource):
    """Fabric Capacity resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.fabric.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource. Required.
    :vartype properties: ~azure.mgmt.fabric.models.FabricCapacityProperties
    :ivar sku: The SKU details. Required.
    :vartype sku: ~azure.mgmt.fabric.models.RpSku
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "properties": {"required": True},
        "sku": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "FabricCapacityProperties"},
        "sku": {"key": "sku", "type": "RpSku"},
    }

    def __init__(
        self,
        *,
        location: str,
        properties: "_models.FabricCapacityProperties",
        sku: "_models.RpSku",
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource. Required.
        :paramtype properties: ~azure.mgmt.fabric.models.FabricCapacityProperties
        :keyword sku: The SKU details. Required.
        :paramtype sku: ~azure.mgmt.fabric.models.RpSku
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.sku = sku


class FabricCapacityListResult(_serialization.Model):
    """The response of a FabricCapacity list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The FabricCapacity items on this page. Required.
    :vartype value: list[~azure.mgmt.fabric.models.FabricCapacity]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[FabricCapacity]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.FabricCapacity"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The FabricCapacity items on this page. Required.
        :paramtype value: list[~azure.mgmt.fabric.models.FabricCapacity]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class FabricCapacityProperties(_serialization.Model):
    """The Microsoft Fabric capacity properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar provisioning_state: The current deployment state of Microsoft Fabric resource. The
     provisioningState is to indicate states for resource provisioning. Known values are:
     "Succeeded", "Failed", "Canceled", "Deleting", "Provisioning", and "Updating".
    :vartype provisioning_state: str or ~azure.mgmt.fabric.models.ProvisioningState
    :ivar state: The current state of Microsoft Fabric resource. The state is to indicate more
     states outside of resource provisioning. Known values are: "Active", "Provisioning", "Failed",
     "Updating", "Deleting", "Suspending", "Suspended", "Pausing", "Paused", "Resuming", "Scaling",
     and "Preparing".
    :vartype state: str or ~azure.mgmt.fabric.models.ResourceState
    :ivar administration: The capacity administration. Required.
    :vartype administration: ~azure.mgmt.fabric.models.CapacityAdministration
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "state": {"readonly": True},
        "administration": {"required": True},
    }

    _attribute_map = {
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "state": {"key": "state", "type": "str"},
        "administration": {"key": "administration", "type": "CapacityAdministration"},
    }

    def __init__(self, *, administration: "_models.CapacityAdministration", **kwargs: Any) -> None:
        """
        :keyword administration: The capacity administration. Required.
        :paramtype administration: ~azure.mgmt.fabric.models.CapacityAdministration
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.state = None
        self.administration = administration


class FabricCapacityUpdate(_serialization.Model):
    """The type used for update operations of the FabricCapacity.

    :ivar sku: The SKU details.
    :vartype sku: ~azure.mgmt.fabric.models.RpSku
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.fabric.models.FabricCapacityUpdateProperties
    """

    _attribute_map = {
        "sku": {"key": "sku", "type": "RpSku"},
        "tags": {"key": "tags", "type": "{str}"},
        "properties": {"key": "properties", "type": "FabricCapacityUpdateProperties"},
    }

    def __init__(
        self,
        *,
        sku: Optional["_models.RpSku"] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.FabricCapacityUpdateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword sku: The SKU details.
        :paramtype sku: ~azure.mgmt.fabric.models.RpSku
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.fabric.models.FabricCapacityUpdateProperties
        """
        super().__init__(**kwargs)
        self.sku = sku
        self.tags = tags
        self.properties = properties


class FabricCapacityUpdateProperties(_serialization.Model):
    """The updatable properties of the FabricCapacity.

    :ivar administration: The capacity administration.
    :vartype administration: ~azure.mgmt.fabric.models.CapacityAdministration
    """

    _attribute_map = {
        "administration": {"key": "administration", "type": "CapacityAdministration"},
    }

    def __init__(self, *, administration: Optional["_models.CapacityAdministration"] = None, **kwargs: Any) -> None:
        """
        :keyword administration: The capacity administration.
        :paramtype administration: ~azure.mgmt.fabric.models.CapacityAdministration
        """
        super().__init__(**kwargs)
        self.administration = administration


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.fabric.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.fabric.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.fabric.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.fabric.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.fabric.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class RpSku(_serialization.Model):
    """Represents the SKU name and Azure pricing tier for Microsoft Fabric capacity resource.

    All required parameters must be populated in order to send to server.

    :ivar name: The name of the SKU level. Required.
    :vartype name: str
    :ivar tier: The name of the Azure pricing tier to which the SKU applies. Required. "Fabric"
    :vartype tier: str or ~azure.mgmt.fabric.models.RpSkuTier
    """

    _validation = {
        "name": {"required": True},
        "tier": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "tier": {"key": "tier", "type": "str"},
    }

    def __init__(self, *, name: str, tier: Union[str, "_models.RpSkuTier"], **kwargs: Any) -> None:
        """
        :keyword name: The name of the SKU level. Required.
        :paramtype name: str
        :keyword tier: The name of the Azure pricing tier to which the SKU applies. Required. "Fabric"
        :paramtype tier: str or ~azure.mgmt.fabric.models.RpSkuTier
        """
        super().__init__(**kwargs)
        self.name = name
        self.tier = tier


class RpSkuDetailsForExistingResource(_serialization.Model):
    """An object that represents SKU details for existing resources.

    All required parameters must be populated in order to send to server.

    :ivar resource_type: The resource type. Required.
    :vartype resource_type: str
    :ivar sku: The SKU details. Required.
    :vartype sku: ~azure.mgmt.fabric.models.RpSku
    """

    _validation = {
        "resource_type": {"required": True},
        "sku": {"required": True},
    }

    _attribute_map = {
        "resource_type": {"key": "resourceType", "type": "str"},
        "sku": {"key": "sku", "type": "RpSku"},
    }

    def __init__(self, *, resource_type: str, sku: "_models.RpSku", **kwargs: Any) -> None:
        """
        :keyword resource_type: The resource type. Required.
        :paramtype resource_type: str
        :keyword sku: The SKU details. Required.
        :paramtype sku: ~azure.mgmt.fabric.models.RpSku
        """
        super().__init__(**kwargs)
        self.resource_type = resource_type
        self.sku = sku


class RpSkuDetailsForNewResource(_serialization.Model):
    """The SKU details.

    All required parameters must be populated in order to send to server.

    :ivar resource_type: The resource type. Required.
    :vartype resource_type: str
    :ivar name: The SKU's name. Required.
    :vartype name: str
    :ivar locations: The list of available locations for the SKU. Required.
    :vartype locations: list[str]
    """

    _validation = {
        "resource_type": {"required": True},
        "name": {"required": True},
        "locations": {"required": True},
    }

    _attribute_map = {
        "resource_type": {"key": "resourceType", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "locations": {"key": "locations", "type": "[str]"},
    }

    def __init__(self, *, resource_type: str, name: str, locations: List[str], **kwargs: Any) -> None:
        """
        :keyword resource_type: The resource type. Required.
        :paramtype resource_type: str
        :keyword name: The SKU's name. Required.
        :paramtype name: str
        :keyword locations: The list of available locations for the SKU. Required.
        :paramtype locations: list[str]
        """
        super().__init__(**kwargs)
        self.resource_type = resource_type
        self.name = name
        self.locations = locations


class RpSkuEnumerationForExistingResourceResult(_serialization.Model):  # pylint: disable=name-too-long
    """An object that represents enumerating SKUs for existing resources.

    All required parameters must be populated in order to send to server.

    :ivar value: The SKU details. Required.
    :vartype value: list[~azure.mgmt.fabric.models.RpSkuDetailsForExistingResource]
    :ivar next_link: Url for the next page.  Null if no more pages available.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[RpSkuDetailsForExistingResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.RpSkuDetailsForExistingResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The SKU details. Required.
        :paramtype value: list[~azure.mgmt.fabric.models.RpSkuDetailsForExistingResource]
        :keyword next_link: Url for the next page.  Null if no more pages available.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class RpSkuEnumerationForNewResourceResult(_serialization.Model):
    """An object that represents enumerating SKUs for new resources.

    All required parameters must be populated in order to send to server.

    :ivar value: The collection of available SKUs for new resources. Required.
    :vartype value: list[~azure.mgmt.fabric.models.RpSkuDetailsForNewResource]
    :ivar next_link: Url for the next page.  Null if no more pages available.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[RpSkuDetailsForNewResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.RpSkuDetailsForNewResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The collection of available SKUs for new resources. Required.
        :paramtype value: list[~azure.mgmt.fabric.models.RpSkuDetailsForNewResource]
        :keyword next_link: Url for the next page.  Null if no more pages available.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class RpSkuProperties(_serialization.Model):
    """The SKU properties.

    All required parameters must be populated in order to send to server.

    :ivar name: The SKU's name. Required.
    :vartype name: str
    :ivar locations: The list of available locations for the SKU. Required.
    :vartype locations: list[str]
    """

    _validation = {
        "name": {"required": True},
        "locations": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "locations": {"key": "locations", "type": "[str]"},
    }

    def __init__(self, *, name: str, locations: List[str], **kwargs: Any) -> None:
        """
        :keyword name: The SKU's name. Required.
        :paramtype name: str
        :keyword locations: The list of available locations for the SKU. Required.
        :paramtype locations: list[str]
        """
        super().__init__(**kwargs)
        self.name = name
        self.locations = locations


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.fabric.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.fabric.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.fabric.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.fabric.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
