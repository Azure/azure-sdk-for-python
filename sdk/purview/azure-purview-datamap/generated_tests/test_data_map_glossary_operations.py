# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import DataMapClientTestBase, DataMapPreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestDataMapGlossaryOperations(DataMapClientTestBase):
    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_batch_get(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.batch_get()

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_create(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.create(
            body={
                "categories": [
                    {
                        "categoryGuid": "str",
                        "description": "str",
                        "displayText": "str",
                        "parentCategoryGuid": "str",
                        "relationGuid": "str",
                    }
                ],
                "classifications": [
                    {
                        "attributes": {"str": {}},
                        "entityGuid": "str",
                        "entityStatus": "str",
                        "lastModifiedTS": "str",
                        "removePropagationsOnEntityDelete": bool,
                        "typeName": "str",
                        "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                    }
                ],
                "createTime": 0,
                "createdBy": "str",
                "guid": "str",
                "language": "str",
                "lastModifiedTS": "str",
                "longDescription": "str",
                "name": "str",
                "qualifiedName": "str",
                "shortDescription": "str",
                "terms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "updateTime": 0,
                "updatedBy": "str",
                "usage": "str",
            },
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_create_categories(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.create_categories(
            body=[
                {
                    "anchor": {"displayText": "str", "glossaryGuid": "str", "relationGuid": "str"},
                    "childrenCategories": [
                        {
                            "categoryGuid": "str",
                            "description": "str",
                            "displayText": "str",
                            "parentCategoryGuid": "str",
                            "relationGuid": "str",
                        }
                    ],
                    "classifications": [
                        {
                            "attributes": {"str": {}},
                            "entityGuid": "str",
                            "entityStatus": "str",
                            "lastModifiedTS": "str",
                            "removePropagationsOnEntityDelete": bool,
                            "typeName": "str",
                            "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                        }
                    ],
                    "createTime": 0,
                    "createdBy": "str",
                    "guid": "str",
                    "lastModifiedTS": "str",
                    "longDescription": "str",
                    "name": "str",
                    "parentCategory": {
                        "categoryGuid": "str",
                        "description": "str",
                        "displayText": "str",
                        "parentCategoryGuid": "str",
                        "relationGuid": "str",
                    },
                    "qualifiedName": "str",
                    "shortDescription": "str",
                    "terms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "updateTime": 0,
                    "updatedBy": "str",
                }
            ],
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_create_category(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.create_category(
            body={
                "anchor": {"displayText": "str", "glossaryGuid": "str", "relationGuid": "str"},
                "childrenCategories": [
                    {
                        "categoryGuid": "str",
                        "description": "str",
                        "displayText": "str",
                        "parentCategoryGuid": "str",
                        "relationGuid": "str",
                    }
                ],
                "classifications": [
                    {
                        "attributes": {"str": {}},
                        "entityGuid": "str",
                        "entityStatus": "str",
                        "lastModifiedTS": "str",
                        "removePropagationsOnEntityDelete": bool,
                        "typeName": "str",
                        "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                    }
                ],
                "createTime": 0,
                "createdBy": "str",
                "guid": "str",
                "lastModifiedTS": "str",
                "longDescription": "str",
                "name": "str",
                "parentCategory": {
                    "categoryGuid": "str",
                    "description": "str",
                    "displayText": "str",
                    "parentCategoryGuid": "str",
                    "relationGuid": "str",
                },
                "qualifiedName": "str",
                "shortDescription": "str",
                "terms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "updateTime": 0,
                "updatedBy": "str",
            },
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_category(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_category(
            category_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_update_category(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.update_category(
            category_id="str",
            body={
                "anchor": {"displayText": "str", "glossaryGuid": "str", "relationGuid": "str"},
                "childrenCategories": [
                    {
                        "categoryGuid": "str",
                        "description": "str",
                        "displayText": "str",
                        "parentCategoryGuid": "str",
                        "relationGuid": "str",
                    }
                ],
                "classifications": [
                    {
                        "attributes": {"str": {}},
                        "entityGuid": "str",
                        "entityStatus": "str",
                        "lastModifiedTS": "str",
                        "removePropagationsOnEntityDelete": bool,
                        "typeName": "str",
                        "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                    }
                ],
                "createTime": 0,
                "createdBy": "str",
                "guid": "str",
                "lastModifiedTS": "str",
                "longDescription": "str",
                "name": "str",
                "parentCategory": {
                    "categoryGuid": "str",
                    "description": "str",
                    "displayText": "str",
                    "parentCategoryGuid": "str",
                    "relationGuid": "str",
                },
                "qualifiedName": "str",
                "shortDescription": "str",
                "terms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "updateTime": 0,
                "updatedBy": "str",
            },
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_delete_category(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.delete_category(
            category_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_partial_update_category(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.partial_update_category(
            category_id="str",
            body={"str": "str"},
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_related_categories(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_related_categories(
            category_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_category_terms(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_category_terms(
            category_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_create_term(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.create_term(
            body={
                "abbreviation": "str",
                "anchor": {"displayText": "str", "glossaryGuid": "str", "relationGuid": "str"},
                "antonyms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "assignedEntities": [
                    {
                        "displayText": "str",
                        "entityStatus": "str",
                        "guid": "str",
                        "relationshipAttributes": {
                            "attributes": {"str": {}},
                            "lastModifiedTS": "str",
                            "typeName": "str",
                        },
                        "relationshipGuid": "str",
                        "relationshipStatus": "str",
                        "relationshipType": "str",
                        "typeName": "str",
                        "uniqueAttributes": {"str": {}},
                    }
                ],
                "attributes": {"str": {"str": {}}},
                "categories": [
                    {
                        "categoryGuid": "str",
                        "description": "str",
                        "displayText": "str",
                        "relationGuid": "str",
                        "status": "str",
                    }
                ],
                "classifications": [
                    {
                        "attributes": {"str": {}},
                        "entityGuid": "str",
                        "entityStatus": "str",
                        "lastModifiedTS": "str",
                        "removePropagationsOnEntityDelete": bool,
                        "typeName": "str",
                        "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                    }
                ],
                "classifies": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "contacts": {"str": [{"id": "str", "info": "str"}]},
                "createTime": 0,
                "createdBy": "str",
                "examples": ["str"],
                "guid": "str",
                "hierarchyInfo": [
                    {
                        "displayText": "str",
                        "guid": "str",
                        "itemPath": "str",
                        "name": "str",
                        "properties": {"str": {}},
                        "resourceId": "str",
                        "typeName": "str",
                        "uniqueAttributes": {"str": {}},
                    }
                ],
                "isA": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "lastModifiedTS": "str",
                "longDescription": "str",
                "name": "str",
                "nickName": "str",
                "preferredTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "preferredToTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "qualifiedName": "str",
                "replacedBy": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "replacementTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "resources": [{"displayName": "str", "url": "str"}],
                "seeAlso": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "shortDescription": "str",
                "status": "str",
                "synonyms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "templateName": [{}],
                "translatedTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "translationTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "updateTime": 0,
                "updatedBy": "str",
                "usage": "str",
                "validValues": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "validValuesFor": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
            },
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_term(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_term(
            term_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_update_term(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.update_term(
            term_id="str",
            body={
                "abbreviation": "str",
                "anchor": {"displayText": "str", "glossaryGuid": "str", "relationGuid": "str"},
                "antonyms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "assignedEntities": [
                    {
                        "displayText": "str",
                        "entityStatus": "str",
                        "guid": "str",
                        "relationshipAttributes": {
                            "attributes": {"str": {}},
                            "lastModifiedTS": "str",
                            "typeName": "str",
                        },
                        "relationshipGuid": "str",
                        "relationshipStatus": "str",
                        "relationshipType": "str",
                        "typeName": "str",
                        "uniqueAttributes": {"str": {}},
                    }
                ],
                "attributes": {"str": {"str": {}}},
                "categories": [
                    {
                        "categoryGuid": "str",
                        "description": "str",
                        "displayText": "str",
                        "relationGuid": "str",
                        "status": "str",
                    }
                ],
                "classifications": [
                    {
                        "attributes": {"str": {}},
                        "entityGuid": "str",
                        "entityStatus": "str",
                        "lastModifiedTS": "str",
                        "removePropagationsOnEntityDelete": bool,
                        "typeName": "str",
                        "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                    }
                ],
                "classifies": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "contacts": {"str": [{"id": "str", "info": "str"}]},
                "createTime": 0,
                "createdBy": "str",
                "examples": ["str"],
                "guid": "str",
                "hierarchyInfo": [
                    {
                        "displayText": "str",
                        "guid": "str",
                        "itemPath": "str",
                        "name": "str",
                        "properties": {"str": {}},
                        "resourceId": "str",
                        "typeName": "str",
                        "uniqueAttributes": {"str": {}},
                    }
                ],
                "isA": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "lastModifiedTS": "str",
                "longDescription": "str",
                "name": "str",
                "nickName": "str",
                "preferredTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "preferredToTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "qualifiedName": "str",
                "replacedBy": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "replacementTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "resources": [{"displayName": "str", "url": "str"}],
                "seeAlso": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "shortDescription": "str",
                "status": "str",
                "synonyms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "templateName": [{}],
                "translatedTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "translationTerms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "updateTime": 0,
                "updatedBy": "str",
                "usage": "str",
                "validValues": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "validValuesFor": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
            },
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_delete_term(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.delete_term(
            term_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_partial_update_term(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.partial_update_term(
            term_id="str",
            body={"str": "str"},
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_create_terms(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.create_terms(
            body=[
                {
                    "abbreviation": "str",
                    "anchor": {"displayText": "str", "glossaryGuid": "str", "relationGuid": "str"},
                    "antonyms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "assignedEntities": [
                        {
                            "displayText": "str",
                            "entityStatus": "str",
                            "guid": "str",
                            "relationshipAttributes": {
                                "attributes": {"str": {}},
                                "lastModifiedTS": "str",
                                "typeName": "str",
                            },
                            "relationshipGuid": "str",
                            "relationshipStatus": "str",
                            "relationshipType": "str",
                            "typeName": "str",
                            "uniqueAttributes": {"str": {}},
                        }
                    ],
                    "attributes": {"str": {"str": {}}},
                    "categories": [
                        {
                            "categoryGuid": "str",
                            "description": "str",
                            "displayText": "str",
                            "relationGuid": "str",
                            "status": "str",
                        }
                    ],
                    "classifications": [
                        {
                            "attributes": {"str": {}},
                            "entityGuid": "str",
                            "entityStatus": "str",
                            "lastModifiedTS": "str",
                            "removePropagationsOnEntityDelete": bool,
                            "typeName": "str",
                            "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                        }
                    ],
                    "classifies": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "contacts": {"str": [{"id": "str", "info": "str"}]},
                    "createTime": 0,
                    "createdBy": "str",
                    "examples": ["str"],
                    "guid": "str",
                    "hierarchyInfo": [
                        {
                            "displayText": "str",
                            "guid": "str",
                            "itemPath": "str",
                            "name": "str",
                            "properties": {"str": {}},
                            "resourceId": "str",
                            "typeName": "str",
                            "uniqueAttributes": {"str": {}},
                        }
                    ],
                    "isA": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "lastModifiedTS": "str",
                    "longDescription": "str",
                    "name": "str",
                    "nickName": "str",
                    "preferredTerms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "preferredToTerms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "qualifiedName": "str",
                    "replacedBy": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "replacementTerms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "resources": [{"displayName": "str", "url": "str"}],
                    "seeAlso": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "shortDescription": "str",
                    "status": "str",
                    "synonyms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "templateName": [{}],
                    "translatedTerms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "translationTerms": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "updateTime": 0,
                    "updatedBy": "str",
                    "usage": "str",
                    "validValues": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                    "validValuesFor": [
                        {
                            "description": "str",
                            "displayText": "str",
                            "expression": "str",
                            "relationGuid": "str",
                            "status": "str",
                            "steward": "str",
                            "termGuid": "str",
                        }
                    ],
                }
            ],
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_entities_assigned_with_term(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_entities_assigned_with_term(
            term_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_assign_term_to_entities(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.assign_term_to_entities(
            term_id="str",
            body=[
                {
                    "displayText": "str",
                    "entityStatus": "str",
                    "guid": "str",
                    "relationshipAttributes": {"attributes": {"str": {}}, "lastModifiedTS": "str", "typeName": "str"},
                    "relationshipGuid": "str",
                    "relationshipStatus": "str",
                    "relationshipType": "str",
                    "typeName": "str",
                    "uniqueAttributes": {"str": {}},
                }
            ],
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_delete_term_assignment_from_entities(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.delete_term_assignment_from_entities(
            term_id="str",
            body=[
                {
                    "displayText": "str",
                    "entityStatus": "str",
                    "guid": "str",
                    "relationshipAttributes": {"attributes": {"str": {}}, "lastModifiedTS": "str", "typeName": "str"},
                    "relationshipGuid": "str",
                    "relationshipStatus": "str",
                    "relationshipType": "str",
                    "typeName": "str",
                    "uniqueAttributes": {"str": {}},
                }
            ],
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_related_terms(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_related_terms(
            term_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get(
            glossary_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_update(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.update(
            glossary_id="str",
            body={
                "categories": [
                    {
                        "categoryGuid": "str",
                        "description": "str",
                        "displayText": "str",
                        "parentCategoryGuid": "str",
                        "relationGuid": "str",
                    }
                ],
                "classifications": [
                    {
                        "attributes": {"str": {}},
                        "entityGuid": "str",
                        "entityStatus": "str",
                        "lastModifiedTS": "str",
                        "removePropagationsOnEntityDelete": bool,
                        "typeName": "str",
                        "validityPeriods": [{"endTime": "str", "startTime": "str", "timeZone": "str"}],
                    }
                ],
                "createTime": 0,
                "createdBy": "str",
                "guid": "str",
                "language": "str",
                "lastModifiedTS": "str",
                "longDescription": "str",
                "name": "str",
                "qualifiedName": "str",
                "shortDescription": "str",
                "terms": [
                    {
                        "description": "str",
                        "displayText": "str",
                        "expression": "str",
                        "relationGuid": "str",
                        "status": "str",
                        "steward": "str",
                        "termGuid": "str",
                    }
                ],
                "updateTime": 0,
                "updatedBy": "str",
                "usage": "str",
            },
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_delete(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.delete(
            glossary_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_categories(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_categories(
            glossary_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_categories_headers(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_categories_headers(
            glossary_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_detailed(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_detailed(
            glossary_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_partial_update(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.partial_update(
            glossary_id="str",
            body={"str": "str"},
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_terms(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_terms(
            glossary_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @DataMapPreparer()
    @recorded_by_proxy
    def test_glossary_get_term_headers(self, datamap_endpoint):
        client = self.create_client(endpoint=datamap_endpoint)
        response = client.glossary.get_term_headers(
            glossary_id="str",
        )

        # please add some check logic here by yourself
        # ...
