# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from typing import Any, Optional

from azure.core.pipeline.transport._base import _format_url_section
from azure.core.rest import HttpRequest
from msrest import Serializer

_SERIALIZER = Serializer()


def build_get_account_properties_request(
    **kwargs: Any
) -> HttpRequest:
    """Get an account.

    See https://aka.ms/azsdk/python/protocol/quickstart for how to incorporate this request builder
    into your code flow.

    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/python/protocol/quickstart for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest

    Example:
        .. code-block:: python

            # response body for status code(s): 200
            response.json() == {
                "id": "str (optional)",
                "identity": {
                    "principalId": "str (optional)",
                    "tenantId": "str (optional)",
                    "type": "str (optional)"
                },
                "location": "str (optional)",
                "name": "str (optional)",
                "properties": {
                    "cloudConnectors": {
                        "awsExternalId": "str (optional)"
                    },
                    "createdAt": "datetime (optional)",
                    "createdBy": "str (optional)",
                    "createdByObjectId": "str (optional)",
                    "endpoints": {
                        "catalog": "str (optional)",
                        "guardian": "str (optional)",
                        "scan": "str (optional)"
                    },
                    "friendlyName": "str (optional)",
                    "managedResourceGroupName": "str (optional)",
                    "managedResources": {
                        "eventHubNamespace": "str (optional)",
                        "resourceGroup": "str (optional)",
                        "storageAccount": "str (optional)"
                    },
                    "privateEndpointConnections": [
                        {
                            "id": "str (optional)",
                            "name": "str (optional)",
                            "properties": {
                                "privateEndpoint": {
                                    "id": "str (optional)"
                                },
                                "privateLinkServiceConnectionState": {
                                    "actionsRequired": "str (optional)",
                                    "description": "str (optional)",
                                    "status": "str (optional)"
                                },
                                "provisioningState": "str (optional)"
                            },
                            "type": "str (optional)"
                        }
                    ],
                    "provisioningState": "str (optional)",
                    "publicNetworkAccess": "str (optional). Default value is \"Enabled\""
                },
                "sku": {
                    "capacity": "int (optional)",
                    "name": "str (optional)"
                },
                "systemData": {
                    "createdAt": "datetime (optional)",
                    "createdBy": "str (optional)",
                    "createdByType": "str (optional)",
                    "lastModifiedAt": "datetime (optional)",
                    "lastModifiedBy": "str (optional)",
                    "lastModifiedByType": "str (optional)"
                },
                "tags": {
                    "str": "str (optional)"
                },
                "type": "str (optional)"
            }
    """

    api_version = "2019-11-01-preview"
    accept = "application/json"
    # Construct URL
    url = kwargs.pop("template_url", '/')

    # Construct parameters
    query_parameters = kwargs.pop("params", {})  # type: Dict[str, Any]
    query_parameters['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    header_parameters = kwargs.pop("headers", {})  # type: Dict[str, Any]
    header_parameters['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="GET",
        url=url,
        params=query_parameters,
        headers=header_parameters,
        **kwargs
    )


def build_update_account_properties_request(
    *,
    json: Any = None,
    content: Any = None,
    **kwargs: Any
) -> HttpRequest:
    """Updates an account.

    See https://aka.ms/azsdk/python/protocol/quickstart for how to incorporate this request builder
    into your code flow.

    :keyword json: Pass in a JSON-serializable object (usually a dictionary). See the template in
     our example to find the input shape.
    :paramtype json: any
    :keyword content: Pass in binary content you want in the body of the request (typically bytes,
     a byte iterator, or stream input).
    :paramtype content: any
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/python/protocol/quickstart for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest

    Example:
        .. code-block:: python

            # JSON input template you can fill out and use as your body input.
            json = {
                "friendlyName": "str (optional)"
            }

            # response body for status code(s): 200
            response.json() == {
                "id": "str (optional)",
                "identity": {
                    "principalId": "str (optional)",
                    "tenantId": "str (optional)",
                    "type": "str (optional)"
                },
                "location": "str (optional)",
                "name": "str (optional)",
                "properties": {
                    "cloudConnectors": {
                        "awsExternalId": "str (optional)"
                    },
                    "createdAt": "datetime (optional)",
                    "createdBy": "str (optional)",
                    "createdByObjectId": "str (optional)",
                    "endpoints": {
                        "catalog": "str (optional)",
                        "guardian": "str (optional)",
                        "scan": "str (optional)"
                    },
                    "friendlyName": "str (optional)",
                    "managedResourceGroupName": "str (optional)",
                    "managedResources": {
                        "eventHubNamespace": "str (optional)",
                        "resourceGroup": "str (optional)",
                        "storageAccount": "str (optional)"
                    },
                    "privateEndpointConnections": [
                        {
                            "id": "str (optional)",
                            "name": "str (optional)",
                            "properties": {
                                "privateEndpoint": {
                                    "id": "str (optional)"
                                },
                                "privateLinkServiceConnectionState": {
                                    "actionsRequired": "str (optional)",
                                    "description": "str (optional)",
                                    "status": "str (optional)"
                                },
                                "provisioningState": "str (optional)"
                            },
                            "type": "str (optional)"
                        }
                    ],
                    "provisioningState": "str (optional)",
                    "publicNetworkAccess": "str (optional). Default value is \"Enabled\""
                },
                "sku": {
                    "capacity": "int (optional)",
                    "name": "str (optional)"
                },
                "systemData": {
                    "createdAt": "datetime (optional)",
                    "createdBy": "str (optional)",
                    "createdByType": "str (optional)",
                    "lastModifiedAt": "datetime (optional)",
                    "lastModifiedBy": "str (optional)",
                    "lastModifiedByType": "str (optional)"
                },
                "tags": {
                    "str": "str (optional)"
                },
                "type": "str (optional)"
            }
    """

    content_type = kwargs.pop('content_type', None)  # type: Optional[str]

    api_version = "2019-11-01-preview"
    accept = "application/json"
    # Construct URL
    url = kwargs.pop("template_url", '/')

    # Construct parameters
    query_parameters = kwargs.pop("params", {})  # type: Dict[str, Any]
    query_parameters['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    header_parameters = kwargs.pop("headers", {})  # type: Dict[str, Any]
    if content_type is not None:
        header_parameters['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    header_parameters['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="PATCH",
        url=url,
        params=query_parameters,
        headers=header_parameters,
        json=json,
        content=content,
        **kwargs
    )


def build_get_access_keys_request(
    **kwargs: Any
) -> HttpRequest:
    """List the authorization keys associated with this account.

    See https://aka.ms/azsdk/python/protocol/quickstart for how to incorporate this request builder
    into your code flow.

    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/python/protocol/quickstart for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest

    Example:
        .. code-block:: python

            # response body for status code(s): 200
            response.json() == {
                "atlasKafkaPrimaryEndpoint": "str (optional)",
                "atlasKafkaSecondaryEndpoint": "str (optional)"
            }
    """

    api_version = "2019-11-01-preview"
    accept = "application/json"
    # Construct URL
    url = kwargs.pop("template_url", '/listkeys')

    # Construct parameters
    query_parameters = kwargs.pop("params", {})  # type: Dict[str, Any]
    query_parameters['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    header_parameters = kwargs.pop("headers", {})  # type: Dict[str, Any]
    header_parameters['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=url,
        params=query_parameters,
        headers=header_parameters,
        **kwargs
    )


def build_regenerate_access_key_request(
    *,
    json: Any = None,
    content: Any = None,
    **kwargs: Any
) -> HttpRequest:
    """Regenerate the authorization keys associated with this data catalog.

    See https://aka.ms/azsdk/python/protocol/quickstart for how to incorporate this request builder
    into your code flow.

    :keyword json: Pass in a JSON-serializable object (usually a dictionary). See the template in
     our example to find the input shape.
    :paramtype json: any
    :keyword content: Pass in binary content you want in the body of the request (typically bytes,
     a byte iterator, or stream input).
    :paramtype content: any
    :return: Returns an :class:`~azure.core.rest.HttpRequest` that you will pass to the client's
     `send_request` method. See https://aka.ms/azsdk/python/protocol/quickstart for how to
     incorporate this response into your code flow.
    :rtype: ~azure.core.rest.HttpRequest

    Example:
        .. code-block:: python

            # JSON input template you can fill out and use as your body input.
            json = {
                "keyType": "str (optional)"
            }

            # response body for status code(s): 200
            response.json() == {
                "atlasKafkaPrimaryEndpoint": "str (optional)",
                "atlasKafkaSecondaryEndpoint": "str (optional)"
            }
    """

    content_type = kwargs.pop('content_type', None)  # type: Optional[str]

    api_version = "2019-11-01-preview"
    accept = "application/json"
    # Construct URL
    url = kwargs.pop("template_url", '/regeneratekeys')

    # Construct parameters
    query_parameters = kwargs.pop("params", {})  # type: Dict[str, Any]
    query_parameters['api-version'] = _SERIALIZER.query("api_version", api_version, 'str')

    # Construct headers
    header_parameters = kwargs.pop("headers", {})  # type: Dict[str, Any]
    if content_type is not None:
        header_parameters['Content-Type'] = _SERIALIZER.header("content_type", content_type, 'str')
    header_parameters['Accept'] = _SERIALIZER.header("accept", accept, 'str')

    return HttpRequest(
        method="POST",
        url=url,
        params=query_parameters,
        headers=header_parameters,
        json=json,
        content=content,
        **kwargs
    )

