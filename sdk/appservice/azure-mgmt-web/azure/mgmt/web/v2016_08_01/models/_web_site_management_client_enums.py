# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class SslState(str, Enum):
    """SSL type.
    """

    disabled = "Disabled"
    sni_enabled = "SniEnabled"
    ip_based_enabled = "IpBasedEnabled"

class HostType(str, Enum):
    """Indicates whether the hostname is a standard or repository hostname.
    """

    standard = "Standard"
    repository = "Repository"

class ConnectionStringType(str, Enum):
    """Type of database.
    """

    my_sql = "MySql"
    sql_server = "SQLServer"
    sql_azure = "SQLAzure"
    custom = "Custom"
    notification_hub = "NotificationHub"
    service_bus = "ServiceBus"
    event_hub = "EventHub"
    api_hub = "ApiHub"
    doc_db = "DocDb"
    redis_cache = "RedisCache"
    postgre_sql = "PostgreSQL"

class UsageState(str, Enum):
    """State indicating whether the app has exceeded its quota usage. Read-only.
    """

    normal = "Normal"
    exceeded = "Exceeded"

class SiteAvailabilityState(str, Enum):
    """Management information availability state for the app.
    """

    normal = "Normal"
    limited = "Limited"
    disaster_recovery_mode = "DisasterRecoveryMode"

class ScmType(str, Enum):
    """SCM type.
    """

    none = "None"
    dropbox = "Dropbox"
    tfs = "Tfs"
    local_git = "LocalGit"
    git_hub = "GitHub"
    code_plex_git = "CodePlexGit"
    code_plex_hg = "CodePlexHg"
    bitbucket_git = "BitbucketGit"
    bitbucket_hg = "BitbucketHg"
    external_git = "ExternalGit"
    external_hg = "ExternalHg"
    one_drive = "OneDrive"
    vso = "VSO"

class ManagedPipelineMode(str, Enum):
    """Managed pipeline mode.
    """

    integrated = "Integrated"
    classic = "Classic"

class SiteLoadBalancing(str, Enum):
    """Site load balancing.
    """

    weighted_round_robin = "WeightedRoundRobin"
    least_requests = "LeastRequests"
    least_response_time = "LeastResponseTime"
    weighted_total_traffic = "WeightedTotalTraffic"
    request_hash = "RequestHash"

class AutoHealActionType(str, Enum):
    """Predefined action to be taken.
    """

    recycle = "Recycle"
    log_event = "LogEvent"
    custom_action = "CustomAction"

class SupportedTlsVersions(str, Enum):
    """MinTlsVersion: configures the minimum version of TLS required for SSL requests
    """

    one0 = "1.0"
    one1 = "1.1"
    one2 = "1.2"

class DatabaseType(str, Enum):
    """Database type (e.g. SqlAzure / MySql).
    """

    sql_azure = "SqlAzure"
    my_sql = "MySql"
    local_my_sql = "LocalMySql"
    postgre_sql = "PostgreSql"

class BackupItemStatus(str, Enum):
    """Backup status.
    """

    in_progress = "InProgress"
    failed = "Failed"
    succeeded = "Succeeded"
    timed_out = "TimedOut"
    created = "Created"
    skipped = "Skipped"
    partially_succeeded = "PartiallySucceeded"
    delete_in_progress = "DeleteInProgress"
    delete_failed = "DeleteFailed"
    deleted = "Deleted"

class ContinuousWebJobStatus(str, Enum):
    """Job status.
    """

    initializing = "Initializing"
    starting = "Starting"
    running = "Running"
    pending_restart = "PendingRestart"
    stopped = "Stopped"

class WebJobType(str, Enum):
    """Job type.
    """

    continuous = "Continuous"
    triggered = "Triggered"

class MSDeployLogEntryType(str, Enum):
    """Log entry type
    """

    message = "Message"
    warning = "Warning"
    error = "Error"

class AzureResourceType(str, Enum):
    """Azure resource type.
    """

    website = "Website"
    traffic_manager = "TrafficManager"

class CustomHostNameDnsRecordType(str, Enum):
    """Custom DNS record type.
    """

    c_name = "CName"
    a = "A"

class HostNameType(str, Enum):
    """Hostname type.
    """

    verified = "Verified"
    managed = "Managed"

class RouteType(str, Enum):
    """The type of route this is:
    DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
    INHERITED - Routes inherited from the real Virtual Network routes
    STATIC - Static route set on the app only
    
    These values will be used for syncing an app's routes with those from a Virtual Network.
    """

    default = "DEFAULT"
    inherited = "INHERITED"
    static = "STATIC"

class PublicCertificateLocation(str, Enum):
    """Public Certificate Location
    """

    current_user_my = "CurrentUserMy"
    local_machine_my = "LocalMachineMy"
    unknown = "Unknown"

class SiteExtensionType(str, Enum):
    """Site extension type.
    """

    gallery = "Gallery"
    web_root = "WebRoot"

class TriggeredWebJobStatus(str, Enum):
    """Job status.
    """

    success = "Success"
    failed = "Failed"
    error = "Error"

class PublishingProfileFormat(str, Enum):
    """Name of the format. Valid values are:
    FileZilla3
    WebDeploy -- default
    Ftp
    """

    file_zilla3 = "FileZilla3"
    web_deploy = "WebDeploy"
    ftp = "Ftp"

class DnsVerificationTestResult(str, Enum):
    """DNS verification test result.
    """

    passed = "Passed"
    failed = "Failed"
    skipped = "Skipped"

class FrequencyUnit(str, Enum):
    """The unit of time for how often the backup should be executed (e.g. for weekly backup, this
    should be set to Day and FrequencyInterval should be set to 7)
    """

    day = "Day"
    hour = "Hour"

class BackupRestoreOperationType(str, Enum):
    """Type of the backup.
    """

    default = "Default"
    clone = "Clone"
    relocation = "Relocation"
    snapshot = "Snapshot"

class UnauthenticatedClientAction(str, Enum):
    """The action to take when an unauthenticated client attempts to access the app.
    """

    redirect_to_login_page = "RedirectToLoginPage"
    allow_anonymous = "AllowAnonymous"

class BuiltInAuthenticationProvider(str, Enum):
    """The default authentication provider to use when multiple providers are configured.
    This setting is only needed if multiple providers are configured and the unauthenticated client
    action is set to "RedirectToLoginPage".
    """

    azure_active_directory = "AzureActiveDirectory"
    facebook = "Facebook"
    google = "Google"
    microsoft_account = "MicrosoftAccount"
    twitter = "Twitter"

class LogLevel(str, Enum):
    """Log level.
    """

    off = "Off"
    verbose = "Verbose"
    information = "Information"
    warning = "Warning"
    error = "Error"

class MSDeployProvisioningState(str, Enum):
    """Provisioning state
    """

    accepted = "accepted"
    running = "running"
    succeeded = "succeeded"
    failed = "failed"
    canceled = "canceled"

class CloneAbilityResult(str, Enum):
    """Name of app.
    """

    cloneable = "Cloneable"
    partially_cloneable = "PartiallyCloneable"
    not_cloneable = "NotCloneable"

class MySqlMigrationType(str, Enum):
    """The type of migration operation to be done
    """

    local_to_remote = "LocalToRemote"
    remote_to_local = "RemoteToLocal"

class OperationStatus(str, Enum):
    """The current status of the operation.
    """

    in_progress = "InProgress"
    failed = "Failed"
    succeeded = "Succeeded"
    timed_out = "TimedOut"
    created = "Created"

class StatusOptions(str, Enum):
    """App Service plan status.
    """

    ready = "Ready"
    pending = "Pending"
    creating = "Creating"

class ProvisioningState(str, Enum):
    """Provisioning state of the App Service Environment.
    """

    succeeded = "Succeeded"
    failed = "Failed"
    canceled = "Canceled"
    in_progress = "InProgress"
    deleting = "Deleting"
