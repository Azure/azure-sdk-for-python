# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils.aio import recorded_by_proxy_async
from testpreparer import MicrosoftPlanetaryComputerProPreparer
from testpreparer_async import MicrosoftPlanetaryComputerProClientTestBaseAsync


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestMicrosoftPlanetaryComputerProStacSearchOperationsOperationsAsync(
    MicrosoftPlanetaryComputerProClientTestBaseAsync
):
    @MicrosoftPlanetaryComputerProPreparer()
    @recorded_by_proxy_async
    async def test_stac_search_operations_get(self, microsoftplanetarycomputerpro_endpoint):
        client = self.create_async_client(endpoint=microsoftplanetarycomputerpro_endpoint)
        response = await client.stac_search_operations.get()

        # please add some check logic here by yourself
        # ...

    @MicrosoftPlanetaryComputerProPreparer()
    @recorded_by_proxy_async
    async def test_stac_search_operations_create(self, microsoftplanetarycomputerpro_endpoint):
        client = self.create_async_client(endpoint=microsoftplanetarycomputerpro_endpoint)
        response = await client.stac_search_operations.create(
            body={
                "bbox": [0.0],
                "collections": ["str"],
                "conf": {"str": "str"},
                "datetime": "str",
                "duration": 0,
                "fields": [{"exclude": ["str"], "include": ["str"]}],
                "filter": {"str": "str"},
                "filter-crs": "str",
                "filter-lang": "str",
                "ids": ["str"],
                "intersects": {"coordinates": "str", "type": "str", "bbox": 0.0},
                "limit": 0,
                "query": {"str": {}},
                "sign": "str",
                "sortby": [{"direction": "str", "field": "str"}],
                "token": "str",
            },
        )

        # please add some check logic here by yourself
        # ...
