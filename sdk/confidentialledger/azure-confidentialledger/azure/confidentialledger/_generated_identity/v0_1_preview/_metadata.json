{
    "chosen_version": "0.1-preview",
    "total_api_version_list": ["0.1-preview"],
    "client": {
        "name": "ConfidentialLedgerClient",
        "filename": "_confidential_ledger_client",
        "description": "The ConfidentialLedgerClient writes and retrieves ledger entries against the Confidential Ledger service.",
        "base_url": null,
        "custom_base_url": "\u0027{identityServiceBaseUrl}\u0027",
        "azure_arm": false,
        "has_lro_operations": false,
        "client_side_validation": false,
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.core\": [\"PipelineClient\"]}, \"local\": {\"._configuration\": [\"ConfidentialLedgerClientConfiguration\"], \"._operations_mixin\": [\"ConfidentialLedgerClientOperationsMixin\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}, \"azurecore\": {\"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.core\": [\"AsyncPipelineClient\"]}, \"local\": {\"._configuration\": [\"ConfidentialLedgerClientConfiguration\"], \"._operations_mixin\": [\"ConfidentialLedgerClientOperationsMixin\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}, \"azurecore\": {\"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"]}}}"
    },
    "global_parameters": {
        "sync": {
        },
        "async": {
        },
        "constant": {
        },
        "call": "",
        "service_client_specific": {
            "sync": {
                "api_version": {
                    "signature": "api_version=None, # type: Optional[str]",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile=KnownProfiles.default, # type: KnownProfiles",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            },
            "async": {
                "api_version": {
                    "signature": "api_version: Optional[str] = None,",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile: KnownProfiles = KnownProfiles.default,",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            }
        }
    },
    "config": {
        "credential": false,
        "credential_scopes": null,
        "credential_default_policy_type": "BearerTokenCredentialPolicy",
        "credential_default_policy_type_has_async_version": true,
        "credential_key_header_name": null,
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"]}, \"local\": {\"._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"]}, \"local\": {\".._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}}"
    },
    "operation_groups": {
    },
    "operation_mixins": {
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\"]}}}",
        "operations": {
            "get_ledger_identity" : {
                "sync": {
                    "signature": "def get_ledger_identity(\n    self,\n    identity_service_base_url,  # type: str\n    ledger_id,  # type: str\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Gets identity information for a Confidential Ledger instance.\n\nGets identity information for a Confidential Ledger instance.\n\n:param identity_service_base_url: The Identity Service URL, for example\n https://identity.accledger.azure.com.\n:type identity_service_base_url: str\n:param ledger_id: Id of the Confidential Ledger instance to get information for.\n:type ledger_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: LedgerIdentityInformation, or the result of cls(response)\n:rtype: ~azure.confidentialledger._generated_identity.v0_1_preview.models.LedgerIdentityInformation\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def get_ledger_identity(\n    self,\n    identity_service_base_url: str,\n    ledger_id: str,\n    **kwargs\n) -\u003e \"_models.LedgerIdentityInformation\":\n",
                    "doc": "\"\"\"Gets identity information for a Confidential Ledger instance.\n\nGets identity information for a Confidential Ledger instance.\n\n:param identity_service_base_url: The Identity Service URL, for example\n https://identity.accledger.azure.com.\n:type identity_service_base_url: str\n:param ledger_id: Id of the Confidential Ledger instance to get information for.\n:type ledger_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: LedgerIdentityInformation, or the result of cls(response)\n:rtype: ~azure.confidentialledger._generated_identity.v0_1_preview.models.LedgerIdentityInformation\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "identity_service_base_url, ledger_id"
            }
        }
    }
}