# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential
    from azure.core.pipeline.transport import HttpRequest, HttpResponse

from ._configuration import RESTAPIForTestBaseConfiguration
from .operations import SKUsOperations
from .operations import TestBaseAccountsOperations
from .operations import TestBaseAccountOperations
from .operations import TestBaseAccountUsageOperations
from .operations import RESTAPIForTestBaseOperationsMixin
from .operations import TestBaseAccountAvailableOSsOperations
from .operations import TestBaseAccountAvailableOSOperations
from .operations import TestBaseAccountFlightingRingsOperations
from .operations import TestBaseAccountFlightingRingOperations
from .operations import TestBaseAccountTestTypesOperations
from .operations import TestBaseAccountTestTypeOperations
from .operations import PackagesOperations
from .operations import PackageOperations
from .operations import TestSummariesOperations
from .operations import TestSummaryOperations
from .operations import TestResultsOperations
from .operations import TestResultOperations
from .operations import OSUpdatesOperations
from .operations import OSUpdateOperations
from .operations import FavoriteProcessesOperations
from .operations import FavoriteProcessOperations
from .operations import AnalysisResultsOperations
from .operations import AnalysisResultOperations
from .operations import Operations
from . import models


class RESTAPIForTestBase(RESTAPIForTestBaseOperationsMixin):
    """REST API for Test Base.

    :ivar skus: SKUsOperations operations
    :vartype skus: restap_ifor_test_base.operations.SKUsOperations
    :ivar test_base_accounts: TestBaseAccountsOperations operations
    :vartype test_base_accounts: restap_ifor_test_base.operations.TestBaseAccountsOperations
    :ivar test_base_account: TestBaseAccountOperations operations
    :vartype test_base_account: restap_ifor_test_base.operations.TestBaseAccountOperations
    :ivar test_base_account_usage: TestBaseAccountUsageOperations operations
    :vartype test_base_account_usage: restap_ifor_test_base.operations.TestBaseAccountUsageOperations
    :ivar test_base_account_available_oss: TestBaseAccountAvailableOSsOperations operations
    :vartype test_base_account_available_oss: restap_ifor_test_base.operations.TestBaseAccountAvailableOSsOperations
    :ivar test_base_account_available_os: TestBaseAccountAvailableOSOperations operations
    :vartype test_base_account_available_os: restap_ifor_test_base.operations.TestBaseAccountAvailableOSOperations
    :ivar test_base_account_flighting_rings: TestBaseAccountFlightingRingsOperations operations
    :vartype test_base_account_flighting_rings: restap_ifor_test_base.operations.TestBaseAccountFlightingRingsOperations
    :ivar test_base_account_flighting_ring: TestBaseAccountFlightingRingOperations operations
    :vartype test_base_account_flighting_ring: restap_ifor_test_base.operations.TestBaseAccountFlightingRingOperations
    :ivar test_base_account_test_types: TestBaseAccountTestTypesOperations operations
    :vartype test_base_account_test_types: restap_ifor_test_base.operations.TestBaseAccountTestTypesOperations
    :ivar test_base_account_test_type: TestBaseAccountTestTypeOperations operations
    :vartype test_base_account_test_type: restap_ifor_test_base.operations.TestBaseAccountTestTypeOperations
    :ivar packages: PackagesOperations operations
    :vartype packages: restap_ifor_test_base.operations.PackagesOperations
    :ivar package: PackageOperations operations
    :vartype package: restap_ifor_test_base.operations.PackageOperations
    :ivar test_summaries: TestSummariesOperations operations
    :vartype test_summaries: restap_ifor_test_base.operations.TestSummariesOperations
    :ivar test_summary: TestSummaryOperations operations
    :vartype test_summary: restap_ifor_test_base.operations.TestSummaryOperations
    :ivar test_results: TestResultsOperations operations
    :vartype test_results: restap_ifor_test_base.operations.TestResultsOperations
    :ivar test_result: TestResultOperations operations
    :vartype test_result: restap_ifor_test_base.operations.TestResultOperations
    :ivar os_updates: OSUpdatesOperations operations
    :vartype os_updates: restap_ifor_test_base.operations.OSUpdatesOperations
    :ivar os_update: OSUpdateOperations operations
    :vartype os_update: restap_ifor_test_base.operations.OSUpdateOperations
    :ivar favorite_processes: FavoriteProcessesOperations operations
    :vartype favorite_processes: restap_ifor_test_base.operations.FavoriteProcessesOperations
    :ivar favorite_process: FavoriteProcessOperations operations
    :vartype favorite_process: restap_ifor_test_base.operations.FavoriteProcessOperations
    :ivar analysis_results: AnalysisResultsOperations operations
    :vartype analysis_results: restap_ifor_test_base.operations.AnalysisResultsOperations
    :ivar analysis_result: AnalysisResultOperations operations
    :vartype analysis_result: restap_ifor_test_base.operations.AnalysisResultOperations
    :ivar operations: Operations operations
    :vartype operations: restap_ifor_test_base.operations.Operations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: The Azure subscription ID. This is a GUID-formatted string.
    :type subscription_id: str
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        subscription_id,  # type: str
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = RESTAPIForTestBaseConfiguration(credential, subscription_id, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.skus = SKUsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_accounts = TestBaseAccountsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account = TestBaseAccountOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account_usage = TestBaseAccountUsageOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account_available_oss = TestBaseAccountAvailableOSsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account_available_os = TestBaseAccountAvailableOSOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account_flighting_rings = TestBaseAccountFlightingRingsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account_flighting_ring = TestBaseAccountFlightingRingOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account_test_types = TestBaseAccountTestTypesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_base_account_test_type = TestBaseAccountTestTypeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.packages = PackagesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.package = PackageOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_summaries = TestSummariesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_summary = TestSummaryOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_results = TestResultsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.test_result = TestResultOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.os_updates = OSUpdatesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.os_update = OSUpdateOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.favorite_processes = FavoriteProcessesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.favorite_process = FavoriteProcessOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.analysis_results = AnalysisResultsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.analysis_result = AnalysisResultOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.operations = Operations(
            self._client, self._config, self._serialize, self._deserialize)

    def _send_request(self, http_request, **kwargs):
        # type: (HttpRequest, Any) -> HttpResponse
        """Runs the network request through the client's chained policies.

        :param http_request: The network request you want to make. Required.
        :type http_request: ~azure.core.pipeline.transport.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to True.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.pipeline.transport.HttpResponse
        """
        path_format_arguments = {
            'subscriptionId': self._serialize.url("self._config.subscription_id", self._config.subscription_id, 'str'),
        }
        http_request.url = self._client.format_url(http_request.url, **path_format_arguments)
        stream = kwargs.pop("stream", True)
        pipeline_response = self._client._pipeline.run(http_request, stream=stream, **kwargs)
        return pipeline_response.http_response

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> RESTAPIForTestBase
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
