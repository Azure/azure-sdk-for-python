# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._skus_operations import SkusOperations
from ._test_base_accounts_operations import TestBaseAccountsOperations
from ._usage_operations import UsageOperations
from ._available_os_operations import AvailableOSOperations
from ._flighting_rings_operations import FlightingRingsOperations
from ._test_types_operations import TestTypesOperations
from ._packages_operations import PackagesOperations
from ._test_summaries_operations import TestSummariesOperations
from ._test_results_operations import TestResultsOperations
from ._os_updates_operations import OSUpdatesOperations
from ._favorite_processes_operations import FavoriteProcessesOperations
from ._analysis_results_operations import AnalysisResultsOperations
from ._email_events_operations import EmailEventsOperations
from ._customer_events_operations import CustomerEventsOperations
from ._operations import Operations
from ._billing_hub_service_operations import BillingHubServiceOperations

from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "SkusOperations",
    "TestBaseAccountsOperations",
    "UsageOperations",
    "AvailableOSOperations",
    "FlightingRingsOperations",
    "TestTypesOperations",
    "PackagesOperations",
    "TestSummariesOperations",
    "TestResultsOperations",
    "OSUpdatesOperations",
    "FavoriteProcessesOperations",
    "AnalysisResultsOperations",
    "EmailEventsOperations",
    "CustomerEventsOperations",
    "Operations",
    "BillingHubServiceOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
