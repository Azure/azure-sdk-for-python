# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from six import with_metaclass
from azure.core import CaseInsensitiveEnumMeta


class Category(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    HIGH_AVAILABILITY = "HighAvailability"
    SECURITY = "Security"
    PERFORMANCE = "Performance"
    COST = "Cost"
    OPERATIONAL_EXCELLENCE = "OperationalExcellence"

class ConfigurationName(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    DEFAULT = "default"

class CpuThreshold(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for
    subscriptions. Valid values: 5 (default), 10, 15 or 20.
    """

    FIVE = "5"
    TEN = "10"
    FIFTEEN = "15"
    TWENTY = "20"

class DigestConfigState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """State of digest configuration.
    """

    ACTIVE = "Active"
    DISABLED = "Disabled"

class Impact(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The business impact of the recommendation.
    """

    HIGH = "High"
    MEDIUM = "Medium"
    LOW = "Low"

class Risk(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The potential risk of not implementing the recommendation.
    """

    ERROR = "Error"
    WARNING = "Warning"
    NONE = "None"

class Scenario(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    ALERTS = "Alerts"
