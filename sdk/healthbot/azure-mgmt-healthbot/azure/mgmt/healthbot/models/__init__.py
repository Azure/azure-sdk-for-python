# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import AvailableOperations
from ._models_py3 import BotResponseList
from ._models_py3 import Error
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import ErrorError
from ._models_py3 import HealthBot
from ._models_py3 import HealthBotKey
from ._models_py3 import HealthBotKeysResponse
from ._models_py3 import HealthBotProperties
from ._models_py3 import HealthBotUpdateParameters
from ._models_py3 import Identity
from ._models_py3 import KeyVaultProperties
from ._models_py3 import OperationDetail
from ._models_py3 import OperationDisplay
from ._models_py3 import Resource
from ._models_py3 import Sku
from ._models_py3 import SystemData
from ._models_py3 import TrackedResource
from ._models_py3 import UserAssignedIdentity
from ._models_py3 import ValidationResult

from ._health_bot_mgmt_client_enums import IdentityType
from ._health_bot_mgmt_client_enums import ResourceIdentityType
from ._health_bot_mgmt_client_enums import SkuName
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AvailableOperations",
    "BotResponseList",
    "Error",
    "ErrorAdditionalInfo",
    "ErrorError",
    "HealthBot",
    "HealthBotKey",
    "HealthBotKeysResponse",
    "HealthBotProperties",
    "HealthBotUpdateParameters",
    "Identity",
    "KeyVaultProperties",
    "OperationDetail",
    "OperationDisplay",
    "Resource",
    "Sku",
    "SystemData",
    "TrackedResource",
    "UserAssignedIdentity",
    "ValidationResult",
    "IdentityType",
    "ResourceIdentityType",
    "SkuName",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
