# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.databoxedge.aio import DataBoxEdgeManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestDataBoxEdgeManagementOrdersOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(DataBoxEdgeManagementClient, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_orders_list_by_data_box_edge_device(self, resource_group):
        response = self.client.orders.list_by_data_box_edge_device(
            device_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-02-01-preview",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_orders_get(self, resource_group):
        response = await self.client.orders.get(
            device_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-02-01-preview",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_orders_begin_create_or_update(self, resource_group):
        response = await (
            await self.client.orders.begin_create_or_update(
                device_name="str",
                resource_group_name=resource_group.name,
                order={
                    "contactInformation": {
                        "companyName": "str",
                        "contactPerson": "str",
                        "emailList": ["str"],
                        "phone": "str",
                    },
                    "currentStatus": {
                        "status": "str",
                        "additionalOrderDetails": {"str": "str"},
                        "comments": "str",
                        "trackingInformation": {
                            "carrierName": "str",
                            "serialNumber": "str",
                            "trackingId": "str",
                            "trackingUrl": "str",
                        },
                        "updateDateTime": "2020-02-20 00:00:00",
                    },
                    "deliveryTrackingInfo": [
                        {"carrierName": "str", "serialNumber": "str", "trackingId": "str", "trackingUrl": "str"}
                    ],
                    "id": "str",
                    "name": "str",
                    "orderHistory": [
                        {
                            "status": "str",
                            "additionalOrderDetails": {"str": "str"},
                            "comments": "str",
                            "trackingInformation": {
                                "carrierName": "str",
                                "serialNumber": "str",
                                "trackingId": "str",
                                "trackingUrl": "str",
                            },
                            "updateDateTime": "2020-02-20 00:00:00",
                        }
                    ],
                    "returnTrackingInfo": [
                        {"carrierName": "str", "serialNumber": "str", "trackingId": "str", "trackingUrl": "str"}
                    ],
                    "serialNumber": "str",
                    "shipmentType": "str",
                    "shippingAddress": {
                        "country": "str",
                        "addressLine1": "str",
                        "addressLine2": "str",
                        "addressLine3": "str",
                        "city": "str",
                        "postalCode": "str",
                        "state": "str",
                    },
                    "systemData": {
                        "createdAt": "2020-02-20 00:00:00",
                        "createdBy": "str",
                        "createdByType": "str",
                        "lastModifiedAt": "2020-02-20 00:00:00",
                        "lastModifiedBy": "str",
                        "lastModifiedByType": "str",
                    },
                    "type": "str",
                },
                api_version="2021-02-01-preview",
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_orders_begin_delete(self, resource_group):
        response = await (
            await self.client.orders.begin_delete(
                device_name="str",
                resource_group_name=resource_group.name,
                api_version="2021-02-01-preview",
            )
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_orders_list_dc_access_code(self, resource_group):
        response = await self.client.orders.list_dc_access_code(
            device_name="str",
            resource_group_name=resource_group.name,
            api_version="2021-02-01-preview",
        )

        # please add some check logic here by yourself
        # ...
