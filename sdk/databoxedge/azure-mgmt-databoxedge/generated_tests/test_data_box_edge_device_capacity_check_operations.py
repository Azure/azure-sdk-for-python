# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.databoxedge import DataBoxEdgeClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestDataBoxEdgeDeviceCapacityCheckOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(DataBoxEdgeClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_device_capacity_check_begin_check_resource_creation_feasibility(self, resource_group):
        response = self.client.device_capacity_check.begin_check_resource_creation_feasibility(
            resource_group_name=resource_group.name,
            device_name="str",
            device_capacity_request_info={
                "properties": {
                    "vmPlacementQuery": [["str"]],
                    "vmPlacementResults": [
                        {"isFeasible": bool, "message": "str", "messageCode": "str", "vmSize": ["str"]}
                    ],
                }
            },
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
