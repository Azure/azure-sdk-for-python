{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Services",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources.",
    "version": "2022-12-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.MachineLearningServices/operations": {
      "get": {
        "tags": [
          "Operation"
        ],
        "description": "Lists all of the available Azure Machine Learning Services REST API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/Workspace/operationsList.json"
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/AmlOperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the properties of the specified machine learning workspace.",
        "operationId": "Workspaces_Get",
        "x-ms-examples": {
          "Get Workspace": {
            "$ref": "./examples/Workspace/get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "description": "Creates or updates a workspace with the specified parameters.",
        "operationId": "Workspaces_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Workspace": {
            "$ref": "./examples/Workspace/create.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for creating or updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes a machine learning workspace.",
        "operationId": "Workspaces_Delete",
        "x-ms-examples": {
          "Delete Workspace": {
            "$ref": "./examples/Workspace/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was accepted; the request was well-formed and received properly."
          },
          "204": {
            "description": "The machine learning workspace does not exist in the subscription."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "description": "Updates a machine learning workspace with the specified parameters.",
        "operationId": "Workspaces_Update",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Workspace": {
            "$ref": "./examples/Workspace/update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "x-ms-examples": {
          "Get Workspaces by Resource Group": {
            "$ref": "./examples/Workspace/listByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/diagnose": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Diagnose workspace setup issue.",
        "operationId": "Workspaces_Diagnose",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "The parameter of diagnosing workspace health",
            "schema": {
              "$ref": "#/definitions/DiagnoseWorkspaceParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DiagnoseResponseResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnose Workspace": {
            "$ref": "./examples/Workspace/diagnose.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ListKeys",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "Resync all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ResyncKeys",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Resync Workspace Keys": {
            "$ref": "./examples/Workspace/resyncKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was accepted; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usage"
        ],
        "operationId": "Usages_List",
        "description": "Gets the current usage information as well as limits for AML resources for given subscription and location.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Usages": {
            "$ref": "./examples/Usage/list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes": {
      "get": {
        "tags": [
          "VirtualMachineSizes"
        ],
        "operationId": "VirtualMachineSizes_List",
        "description": "Returns supported VM Sizes in a location",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location upon which virtual-machine-sizes is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineSizeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List VM Sizes": {
            "$ref": "./examples/VirtualMachineSize/list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas": {
      "post": {
        "tags": [
          "Quota"
        ],
        "operationId": "Quotas_Update",
        "description": "Update quota for each VM family in workspace.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for update quota is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaUpdateParameters"
            },
            "description": "Quota update parameters."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful.",
            "schema": {
              "$ref": "#/definitions/UpdateWorkspaceQuotasResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "update quotas": {
            "$ref": "./examples/Quota/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas": {
      "get": {
        "tags": [
          "Quota"
        ],
        "operationId": "Quotas_List",
        "description": "Gets the currently assigned Workspace Quotas based on VMFamily.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceQuotas"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List workspace quotas by VMFamily": {
            "$ref": "./examples/Quota/list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "x-ms-examples": {
          "Get Workspaces by subscription": {
            "$ref": "./examples/Workspace/listBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes": {
      "get": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "Compute_List",
        "description": "Gets computes in specified workspace.",
        "x-ms-examples": {
          "Get Computes": {
            "$ref": "./examples/Compute/list.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/.",
            "schema": {
              "$ref": "#/definitions/PaginatedComputeResourcesList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}": {
      "get": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Get",
        "description": "Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.",
        "x-ms-examples": {
          "Get a AKS Compute": {
            "$ref": "./examples/Compute/get/AKSCompute.json"
          },
          "Get a AML Compute": {
            "$ref": "./examples/Compute/get/AmlCompute.json"
          },
          "Get an ComputeInstance": {
            "$ref": "./examples/Compute/get/ComputeInstance.json"
          },
          "Get a Kubernetes Compute": {
            "$ref": "./examples/Compute/get/KubernetesCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_CreateOrUpdate",
        "description": "Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create a AML Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicAmlCompute.json"
          },
          "Create an ComputeInstance Compute with minimal inputs": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstanceMinimal.json"
          },
          "Create an ComputeInstance Compute": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstance.json"
          },
          "Create an ComputeInstance Compute with Schedules": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstanceWithSchedules.json"
          },
          "Create an AKS Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicAKSCompute.json"
          },
          "Create a DataFactory Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicDataFactoryCompute.json"
          },
          "Update a AML Compute": {
            "$ref": "./examples/Compute/createOrUpdate/AmlCompute.json"
          },
          "Update an AKS Compute": {
            "$ref": "./examples/Compute/createOrUpdate/AKSCompute.json"
          },
          "Attach a Kubernetes Compute": {
            "$ref": "./examples/Compute/createOrUpdate/KubernetesCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ComputeDefinitionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Compute creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "201": {
            "description": "Compute creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Update",
        "description": "Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a AmlCompute Compute": {
            "$ref": "./examples/Compute/patch.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdateParameters"
            },
            "description": "Additional parameters for cluster update."
          }
        ],
        "responses": {
          "200": {
            "description": "Compute update initiated.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Delete",
        "description": "Deletes specified Machine Learning compute.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Compute": {
            "$ref": "./examples/Compute/delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/UnderlyingResourceActionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "Compute deletion initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content; The target compute does not exist."
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/customServices": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_UpdateCustomServices",
        "description": "Updates the custom services list. The list of custom services provided shall be overwritten",
        "x-ms-examples": {
          "Update Custom Services": {
            "$ref": "./examples/Compute/updateCustomServices.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "customServices",
            "required": true,
            "description": "New list of Custom Services.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomService"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes": {
      "post": {
        "tags": [
          "MachineLearningComputes"
        ],
        "operationId": "Compute_ListNodes",
        "description": "Get the details (e.g IP address, port etc) of all the compute nodes in the compute.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful. The response contains the list of IP addresses.",
            "schema": {
              "$ref": "#/definitions/AmlComputeNodesInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "nodes"
        },
        "x-ms-examples": {
          "Get compute nodes information for a compute": {
            "$ref": "./examples/Compute/listNodes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookAccessToken": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "return notebook access token and refresh token",
        "operationId": "Workspaces_ListNotebookAccessToken",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listNotebookAccessToken.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookAccessTokenResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_ListKeys",
        "description": "Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).",
        "x-ms-examples": {
          "List AKS Compute Keys": {
            "$ref": "./examples/Compute/listKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ComputeSecrets"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/start": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Start",
        "description": "Posts a start action to a compute instance",
        "x-ms-examples": {
          "Start ComputeInstance Compute": {
            "$ref": "./examples/Compute/start.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/stop": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Stop",
        "description": "Posts a stop action to a compute instance",
        "x-ms-examples": {
          "Stop ComputeInstance Compute": {
            "$ref": "./examples/Compute/stop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/restart": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Restart",
        "description": "Posts a restart action to a compute instance",
        "x-ms-examples": {
          "Restart ComputeInstance Compute": {
            "$ref": "./examples/Compute/restart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/updateIdleShutdownSetting": {
      "post": {
        "tags": [
          "MachineLearningComputes"
        ],
        "operationId": "Compute_UpdateIdleShutdownSetting",
        "description": "Updates the idle shutdown setting of a compute instance.",
        "x-ms-examples": {
          "Update idle shutdown setting of ComputeInstance": {
            "$ref": "./examples/Compute/updateIdleShutdownSetting.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "The object for updating idle shutdown setting of specified ComputeInstance.",
            "schema": {
              "$ref": "#/definitions/IdleShutdownSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "List all the private endpoint connections associated with the workspace.",
        "x-ms-examples": {
          "StorageAccountListPrivateEndpointConnections": {
            "$ref": "./examples/PrivateEndpointConnection/list.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully retrieved private endpoint connections.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspaceGetPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/createOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspaceDeletePrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_List",
        "description": "Gets the private link resources that need to be created for a workspace.",
        "x-ms-examples": {
          "WorkspaceListPrivateLinkResources": {
            "$ref": "./examples/PrivateLinkResource/list.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/prepareNotebook": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Workspaces_PrepareNotebook",
        "description": "Prepare a notebook.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Prepare Notebook": {
            "$ref": "./examples/Notebook/prepare.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotebookResourceInfo"
            }
          },
          "202": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listStorageAccountKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Workspaces_ListStorageAccountKeys",
        "description": "List storage account keys of a workspace.",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listStorageAccountKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListStorageAccountKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Workspaces_ListNotebookKeys",
        "description": "List keys of a notebook.",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Notebook/listKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListNotebookKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}": {
      "put": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_Create",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The object for creating or updating a new workspace connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/create.json"
          }
        }
      },
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "DeleteWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/TargetParameter"
          },
          {
            "$ref": "#/parameters/CategoryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListWorkspaceConnections": {
            "$ref": "./examples/WorkspaceConnection/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "OutboundNetworkDependenciesEndpoints"
        ],
        "summary": "Called by Client (Portal, CLI, etc) to get a list of all external outbound dependencies (FQDNs) programmatically.",
        "operationId": "Workspaces_ListOutboundNetworkDependenciesEndpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalFQDNResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListOutboundNetworkDependenciesEndpoints": {
            "$ref": "./examples/ExternalFQDN/get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules": {
      "get": {
        "tags": [
          "ManagedNetwork"
        ],
        "description": "Lists the managed network outbound rules for a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/listRule.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules/{ruleName}": {
      "delete": {
        "tags": [
          "ManagedNetwork"
        ],
        "description": "Deletes an outbound rule from the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The machine learning workspace does not exist in the subscription."
          },
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/deleteRule.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ManagedNetwork"
        ],
        "description": "Gets an outbound rule from the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/getRule.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedNetwork"
        ],
        "description": "Creates or updates an outbound rule in the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "description": "Outbound Rule to be created or updated in the managed network of a machine learning workspace.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/createOrUpdateRule.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/provisionManagedNetwork": {
      "post": {
        "tags": [
          "ManagedNetwork"
        ],
        "description": "Provisions the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkProvisions_ProvisionManagedNetwork",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Provision ManagedNetwork": {
            "$ref": "./examples/ManagedNetwork/provision.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "description": "Managed Network Provisioning Options for a machine learning workspace.",
            "in": "body",
            "name": "parameters",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionStatus"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "description": "Name of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ComputeNameParameter": {
      "name": "computeName",
      "description": "Name of the Azure Machine Learning compute.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "AsyncOperationIdParameter": {
      "name": "asyncOperationId",
      "description": "Identifier of an asynchronous Azure Machine Learning compute operation.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "description": "The name of the Azure location/region.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skip",
      "type": "string",
      "description": "Continuation token for pagination.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "ComputeDefinitionParameter": {
      "in": "body",
      "name": "parameters",
      "description": "Payload with Machine Learning compute definition.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ComputeResource"
      },
      "x-ms-parameter-location": "method"
    },
    "ComputeTypeParameter": {
      "in": "query",
      "name": "compute-type",
      "type": "string",
      "description": "Type of compute to filter by.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "UnderlyingResourceActionParameter": {
      "in": "query",
      "name": "underlyingResourceAction",
      "type": "string",
      "description": "Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.",
      "required": true,
      "enum": [
        "Delete",
        "Detach"
      ],
      "x-ms-enum": {
        "name": "UnderlyingResourceAction",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private endpoint connection associated with the workspace",
      "x-ms-parameter-location": "method"
    },
    "ConnectionName": {
      "name": "connectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Friendly name of the workspace connection",
      "x-ms-parameter-location": "method"
    },
    "RuleName": {
      "name": "ruleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the workspace managed network outbound rule",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$",
      "x-ms-parameter-location": "method"
    },
    "TargetParameter": {
      "in": "query",
      "name": "target",
      "type": "string",
      "description": "Target of the workspace connection.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "CategoryParameter": {
      "in": "query",
      "name": "category",
      "type": "string",
      "description": "Category of the workspace connection.",
      "required": false,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AmlOperation": {
      "description": "Azure Machine Learning REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display name of operation",
          "type": "object",
          "properties": {
            "provider": {
              "description": "The resource provider name: Microsoft.MachineLearningExperimentation",
              "type": "string"
            },
            "resource": {
              "description": "The resource on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "The operation that users can perform.",
              "type": "string"
            },
            "description": {
              "description": "The description for the operation.",
              "type": "string"
            }
          }
        },
        "isDataAction": {
          "description": "Indicates whether the operation applies to data-plane",
          "type": "boolean"
        }
      }
    },
    "AmlOperationListResult": {
      "type": "object",
      "description": "An array of operations supported by the resource provider.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmlOperation"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of AML operations supported by the AML resource provider."
        }
      }
    },
    "Workspace": {
      "type": "object",
      "description": "An object that represents a machine learning workspace.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the machine learning workspace.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "The properties of a machine learning workspace.",
      "properties": {
        "workspaceId": {
          "description": "The immutable id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "keyVault": {
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string",
          "x-nullable": true
        },
        "storageAccount": {
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "discoveryUrl": {
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled",
            "SoftDeleted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning."
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty",
          "description": "The encryption settings of Azure ML workspace."
        },
        "hbiWorkspace": {
          "type": "boolean",
          "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
          "default": false
        },
        "serviceProvisionedResourceGroup": {
          "type": "string",
          "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace",
          "readOnly": true
        },
        "privateLinkCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of private connections in the workspace",
          "readOnly": true
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "allowPublicAccessWhenBehindVnet": {
          "type": "boolean",
          "description": "The flag to indicate whether to allow public access when behind VNet.",
          "default": false
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether requests from Public Network are allowed.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of private endpoint connections in the workspace."
        },
        "sharedPrivateLinkResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of shared private link resources in this workspace."
        },
        "notebookInfo": {
          "readOnly": true,
          "$ref": "#/definitions/NotebookResourceInfo",
          "description": "The notebook info of Azure ML workspace."
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings",
          "description": "The service managed resource settings."
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "storageHnsEnabled": {
          "description": "If the storage associated with the workspace has hierarchical namespace(HNS) enabled.",
          "type": "boolean",
          "readOnly": true
        },
        "mlFlowTrackingUri": {
          "description": "The URI associated with this workspace that machine learning flow must point at to set up tracking.",
          "type": "string",
          "readOnly": true
        },
        "v1LegacyMode": {
          "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
          "default": false,
          "type": "boolean"
        },
        "softDeletedAt": {
          "description": "The timestamp when the workspace was soft deleted",
          "type": "string",
          "readOnly": true
        },
        "scheduledPurgeDate": {
          "description": "The timestamp when the soft deleted workspace is going to be purged",
          "type": "string",
          "readOnly": true
        },
        "systemDatastoresAuthMode": {
          "description": "The auth mode used for accessing the system datastores of the workspace",
          "type": "string"
        },
        "featureStoreSettings": {
          "description": "Settings for feature store type workspace.",
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        }
      }
    },
    "WorkspaceUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a machine learning workspace.",
      "properties": {
        "tags": {
          "description": "The resource tags for the machine learning workspace.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/WorkspacePropertiesUpdateParameters",
          "description": "The properties that the machine learning workspace will be updated with.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspacePropertiesUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating the properties of a machine learning workspace.",
      "properties": {
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace.",
          "type": "string"
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings",
          "description": "The service managed resource settings."
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether requests from Public Network are allowed.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionUpdateProperties",
          "description": "The encryption settings of the workspace."
        },
        "featureStoreSettings": {
          "description": "Settings for feature store type workspace.",
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        }
      }
    },
    "UsageName": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "amlWorkspaceLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Region of the AML workspace in the id."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of usage measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          }
        },
        "currentValue": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The current usage of the resource."
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The maximum permitted usage of the resource."
        },
        "name": {
          "readOnly": true,
          "$ref": "#/definitions/UsageName",
          "description": "The name of the type of usage."
        }
      },
      "description": "Describes AML Resource Usage."
    },
    "ListUsagesResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "The list of AML resource usages."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information."
        }
      },
      "description": "The List Usages operation response."
    },
    "VirtualMachineSize": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Virtual Machine size name",
          "description": "The name of the virtual machine size.",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "title": "Virtual Machine family name",
          "description": "The family name of the virtual machine size.",
          "readOnly": true
        },
        "vCPUs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of vPUs",
          "description": "The number of vCPUs supported by the virtual machine size.",
          "readOnly": true
        },
        "gpus": {
          "type": "integer",
          "format": "int32",
          "title": "Number of gPUs",
          "description": "The number of gPUs supported by the virtual machine size.",
          "readOnly": true
        },
        "osVhdSizeMB": {
          "type": "integer",
          "format": "int32",
          "title": "OS VHD Disk size",
          "description": "The OS VHD disk size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "maxResourceVolumeMB": {
          "type": "integer",
          "format": "int32",
          "title": "Resource volume size",
          "description": "The resource volume size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "memoryGB": {
          "type": "number",
          "format": "double",
          "title": "Memory size",
          "description": "The amount of memory, in GB, supported by the virtual machine size.",
          "readOnly": true
        },
        "lowPriorityCapable": {
          "type": "boolean",
          "title": "Low priority capable",
          "description": "Specifies if the virtual machine size supports low priority VMs.",
          "readOnly": true
        },
        "premiumIO": {
          "type": "boolean",
          "title": "Premium IO supported",
          "description": "Specifies if the virtual machine size supports premium IO.",
          "readOnly": true
        },
        "estimatedVMPrices": {
          "title": "Estimated VM prices",
          "description": "The estimated price information for using a VM.",
          "$ref": "#/definitions/EstimatedVMPrices"
        },
        "supportedComputeTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Supported Compute Types",
          "description": "Specifies the compute types supported by the virtual machine size."
        }
      },
      "description": "Describes the properties of a VM size."
    },
    "EstimatedVMPrices": {
      "type": "object",
      "properties": {
        "billingCurrency": {
          "type": "string",
          "title": "Billing currency",
          "description": "Three lettered code specifying the currency of the VM price. Example: USD",
          "enum": [
            "USD"
          ],
          "x-ms-enum": {
            "name": "BillingCurrency",
            "modelAsString": true
          }
        },
        "unitOfMeasure": {
          "type": "string",
          "title": "Unit of time measure",
          "description": "The unit of time measurement for the specified VM price. Example: OneHour",
          "enum": [
            "OneHour"
          ],
          "x-ms-enum": {
            "name": "UnitOfMeasure",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstimatedVMPrice"
          },
          "x-ms-identifiers": [],
          "title": "List of estimated VM prices.",
          "description": "The list of estimated prices for using a VM of a particular OS type, tier, etc."
        }
      },
      "required": [
        "billingCurrency",
        "unitOfMeasure",
        "values"
      ],
      "description": "The estimated price info for using a VM."
    },
    "EstimatedVMPrice": {
      "type": "object",
      "properties": {
        "retailPrice": {
          "type": "number",
          "format": "double",
          "title": "Retail price",
          "description": "The price charged for using the VM."
        },
        "osType": {
          "type": "string",
          "title": "OS type",
          "description": "Operating system type used by the VM.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "VMPriceOSType",
            "modelAsString": true
          }
        },
        "vmTier": {
          "type": "string",
          "title": "VM tier",
          "description": "The type of the VM.",
          "enum": [
            "Standard",
            "LowPriority",
            "Spot"
          ],
          "x-ms-enum": {
            "name": "VMTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "retailPrice",
        "osType",
        "vmTier"
      ],
      "description": "The estimated price info for using a VM of a particular OS type, tier, etc."
    },
    "VirtualMachineSizeListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineSize"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of virtual machine sizes supported by AmlCompute."
        }
      },
      "description": "The List Virtual Machine size operation response."
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The result of a request to list machine learning workspaces.",
      "properties": {
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list of machine learning workspaces.",
          "type": "string"
        }
      }
    },
    "QuotaBaseProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "type": {
          "type": "string",
          "description": "Specifies the resource type."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        }
      },
      "description": "The properties for Quota update or retrieval."
    },
    "QuotaUpdateParameters": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The list for update quota.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotaBaseProperties"
          }
        },
        "location": {
          "description": "Region of workspace quota to be updated.",
          "type": "string"
        }
      },
      "description": "Quota update parameters."
    },
    "DiagnoseRequestProperties": {
      "type": "object",
      "properties": {
        "udr": {
          "description": "Setting for diagnosing user defined routing",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "nsg": {
          "description": "Setting for diagnosing network security group",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resourceLock": {
          "description": "Setting for diagnosing resource lock",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "dnsResolution": {
          "description": "Setting for diagnosing dns resolution",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "storageAccount": {
          "description": "Setting for diagnosing dependent storage account",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "keyVault": {
          "description": "Setting for diagnosing dependent key vault",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "containerRegistry": {
          "description": "Setting for diagnosing dependent container registry",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "applicationInsights": {
          "description": "Setting for diagnosing dependent application insights",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "others": {
          "description": "Setting for diagnosing unclassified category of problems",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DiagnoseWorkspaceParameters": {
      "type": "object",
      "description": "Parameters to diagnose a workspace",
      "properties": {
        "value": {
          "description": "Value of Parameters",
          "$ref": "#/definitions/DiagnoseRequestProperties"
        }
      }
    },
    "DiagnoseResult": {
      "type": "object",
      "description": "Result of Diagnose",
      "properties": {
        "code": {
          "description": "Code for workspace setup error",
          "type": "string",
          "readOnly": true
        },
        "level": {
          "description": "Level of workspace setup error",
          "enum": [
            "Warning",
            "Error",
            "Information"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DiagnoseResultLevel",
            "modelAsString": true
          }
        },
        "message": {
          "description": "Message of workspace setup error",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnoseResponseResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {
            "userDefinedRouteResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "networkSecurityRuleResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "resourceLockResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "dnsResolutionResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "storageAccountResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "keyVaultResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "containerRegistryResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "applicationInsightsResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "otherResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            }
          }
        }
      }
    },
    "UpdateWorkspaceQuotasResult": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of workspace quota update result.",
          "items": {
            "$ref": "#/definitions/UpdateWorkspaceQuotas"
          },
          "readOnly": true,
          "type": "array"
        },
        "nextLink": {
          "description": "The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The result of update workspace quota."
    },
    "UpdateWorkspaceQuotas": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "readOnly": false,
          "title": "Update Workspace Quota Status.",
          "description": "Status of update workspace quota.",
          "enum": [
            "Undefined",
            "Success",
            "Failure",
            "InvalidQuotaBelowClusterMinimum",
            "InvalidQuotaExceedsSubscriptionLimit",
            "InvalidVMFamilyName",
            "OperationNotSupportedForSku",
            "OperationNotEnabledForRegion"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        }
      },
      "description": "The properties for update Quota response."
    },
    "ResourceName": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Resource Name."
    },
    "ResourceQuota": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "amlWorkspaceLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Region of the AML workspace in the id."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "name": {
          "$ref": "#/definitions/ResourceName",
          "description": "Name of the resource.",
          "readOnly": true
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        }
      },
      "description": "The quota assigned to a resource."
    },
    "ListWorkspaceQuotas": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of Workspace Quotas by VM Family",
          "items": {
            "$ref": "#/definitions/ResourceQuota"
          },
          "readOnly": true,
          "type": "array"
        },
        "nextLink": {
          "description": "The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The List WorkspaceQuotasByVMFamily operation response."
    },
    "ResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the resource"
        }
      },
      "required": [
        "id"
      ],
      "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
      "x-ms-azure-resource": true
    },
    "ListWorkspaceKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "userStorageResourceId": {
          "readOnly": true,
          "type": "string"
        },
        "appInsightsInstrumentationKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "containerRegistryCredentials": {
          "readOnly": true,
          "$ref": "#/definitions/RegistryListCredentialsResult"
        },
        "notebookAccessKeys": {
          "readOnly": true,
          "$ref": "#/definitions/ListNotebookKeysResult"
        }
      }
    },
    "NotebookAccessTokenResult": {
      "type": "object",
      "properties": {
        "notebookResourceId": {
          "readOnly": true,
          "type": "string"
        },
        "hostName": {
          "readOnly": true,
          "type": "string"
        },
        "publicDns": {
          "readOnly": true,
          "type": "string"
        },
        "accessToken": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "tokenType": {
          "readOnly": true,
          "type": "string"
        },
        "expiresIn": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "scope": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string"
        },
        "username": {
          "readOnly": true,
          "type": "string"
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Password"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "Password": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PaginatedComputeResourcesList": {
      "type": "object",
      "description": "Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of Machine Learning compute objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/ComputeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "ComputeResource": {
      "type": "object",
      "description": "Machine Learning compute object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/ComputeResourceSchema"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace.",
          "x-nullable": true
        }
      }
    },
    "ComputeResourceSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "description": "Compute properties",
          "$ref": "#/definitions/Compute"
        }
      }
    },
    "Compute": {
      "type": "object",
      "description": "Machine Learning compute object.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        },
        "computeLocation": {
          "description": "Location for the underlying compute",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "type": "string",
          "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the Machine Learning compute.",
          "x-nullable": true
        },
        "createdOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time at which the compute was created."
        },
        "modifiedOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time at which the compute was last modified."
        },
        "resourceId": {
          "type": "string",
          "description": "ARM resource id of the underlying compute",
          "x-nullable": true
        },
        "provisioningErrors": {
          "type": "array",
          "description": "Errors during provisioning",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "/error/code"
          ],
          "readOnly": true,
          "x-nullable": true
        },
        "isAttachedCompute": {
          "type": "boolean",
          "description": "Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AKS": {
      "description": "A Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/AKSSchema"
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "AKSSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "description": "AKS properties",
          "properties": {
            "clusterFqdn": {
              "description": "Cluster full qualified domain name",
              "type": "string",
              "x-nullable": true
            },
            "systemServices": {
              "type": "array",
              "description": "System services",
              "items": {
                "$ref": "#/definitions/SystemService"
              },
              "x-ms-identifiers": [
                "publicIpAddress"
              ],
              "readOnly": true,
              "x-nullable": true
            },
            "agentCount": {
              "description": "Number of agents",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "x-nullable": true
            },
            "agentVmSize": {
              "description": "Agent virtual machine size",
              "type": "string",
              "x-nullable": true
            },
            "clusterPurpose": {
              "description": "Intended usage of the cluster",
              "type": "string",
              "default": "FastProd",
              "enum": [
                "FastProd",
                "DenseProd",
                "DevTest"
              ],
              "x-ms-enum": {
                "name": "ClusterPurpose",
                "modelAsString": true
              }
            },
            "sslConfiguration": {
              "description": "SSL configuration",
              "$ref": "#/definitions/SslConfiguration",
              "x-nullable": true
            },
            "aksNetworkingConfiguration": {
              "description": "AKS networking configuration for vnet",
              "$ref": "#/definitions/AksNetworkingConfiguration",
              "x-nullable": true
            },
            "loadBalancerType": {
              "description": "Load Balancer Type",
              "type": "string",
              "default": "PublicIp",
              "enum": [
                "PublicIp",
                "InternalLoadBalancer"
              ],
              "x-ms-enum": {
                "name": "LoadBalancerType",
                "modelAsString": true
              }
            },
            "loadBalancerSubnet": {
              "description": "Load Balancer Subnet",
              "type": "string",
              "x-nullable": true
            }
          }
        }
      }
    },
    "Kubernetes": {
      "description": "A Machine Learning compute based on Kubernetes Compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/KubernetesSchema"
        }
      ],
      "x-ms-discriminator-value": "Kubernetes"
    },
    "KubernetesSchema": {
      "type": "object",
      "description": "Kubernetes Compute Schema",
      "properties": {
        "properties": {
          "description": "Properties of Kubernetes",
          "$ref": "#/definitions/KubernetesProperties"
        }
      }
    },
    "KubernetesProperties": {
      "type": "object",
      "description": "Kubernetes properties",
      "properties": {
        "relayConnectionString": {
          "description": "Relay connection string.",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "serviceBusConnectionString": {
          "description": "ServiceBus connection string.",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "extensionPrincipalId": {
          "description": "Extension principal-id.",
          "type": "string",
          "x-nullable": true
        },
        "extensionInstanceReleaseTrain": {
          "description": "Extension instance release train.",
          "type": "string"
        },
        "vcName": {
          "description": "VC name.",
          "type": "string"
        },
        "namespace": {
          "description": "Compute namespace",
          "type": "string",
          "default": "default"
        },
        "defaultInstanceType": {
          "description": "Default instance type",
          "type": "string"
        },
        "instanceTypes": {
          "description": "Instance Type Schema",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InstanceTypeSchema"
          }
        }
      }
    },
    "AmlComputeProperties": {
      "type": "object",
      "description": "AML Compute properties",
      "properties": {
        "osType": {
          "description": "Compute OS Type",
          "type": "string",
          "default": "Linux",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          }
        },
        "vmSize": {
          "description": "Virtual Machine Size",
          "type": "string"
        },
        "vmPriority": {
          "description": "Virtual Machine priority",
          "type": "string",
          "enum": [
            "Dedicated",
            "LowPriority"
          ],
          "x-ms-enum": {
            "name": "VmPriority",
            "modelAsString": true
          }
        },
        "virtualMachineImage": {
          "description": "Virtual Machine image for AML Compute - windows only",
          "$ref": "#/definitions/VirtualMachineImage",
          "x-nullable": true
        },
        "isolatedNetwork": {
          "description": "Network is isolated or not",
          "type": "boolean"
        },
        "scaleSettings": {
          "description": "Scale settings for AML Compute",
          "$ref": "#/definitions/ScaleSettings"
        },
        "userAccountCredentials": {
          "title": "User account credentials.",
          "description": "Credentials for an administrator user account that will be created on each compute node.",
          "$ref": "#/definitions/UserAccountCredentials",
          "x-nullable": true
        },
        "subnet": {
          "title": "Subnet.",
          "description": "Virtual network subnet resource ID the compute nodes belong to.",
          "$ref": "#/definitions/ResourceId",
          "x-nullable": true
        },
        "remoteLoginPortPublicAccess": {
          "type": "string",
          "default": "NotSpecified",
          "title": "Close remote Login Access Port",
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.",
          "enum": [
            "Enabled",
            "Disabled",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "remoteLoginPortPublicAccess",
            "modelAsString": true
          }
        },
        "allocationState": {
          "type": "string",
          "readOnly": true,
          "title": "Allocation state.",
          "description": "Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.",
          "enum": [
            "Steady",
            "Resizing"
          ],
          "x-ms-enum": {
            "name": "AllocationState",
            "modelAsString": true
          }
        },
        "allocationStateTransitionTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "title": "Allocation state transition time.",
          "description": "The time at which the compute entered its current allocation state."
        },
        "errors": {
          "readOnly": true,
          "title": "Errors.",
          "description": "Collection of errors encountered by various compute nodes during node setup.",
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "/error/code"
          ]
        },
        "currentNodeCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "title": "Current node count.",
          "description": "The number of compute nodes currently assigned to the compute.",
          "x-nullable": true
        },
        "targetNodeCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "title": "Target node count.",
          "description": "The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.",
          "x-nullable": true
        },
        "nodeStateCounts": {
          "title": "Node state counts.",
          "description": "Counts of various node states on the compute.",
          "readOnly": true,
          "$ref": "#/definitions/NodeStateCounts",
          "x-nullable": true
        },
        "enableNodePublicIp": {
          "type": "boolean",
          "default": true,
          "title": "Enable node public IP.",
          "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.",
          "x-nullable": true
        },
        "propertyBag": {
          "type": "object",
          "description": "A property bag containing additional properties.",
          "x-nullable": true
        }
      }
    },
    "AmlCompute": {
      "description": "An Azure Machine Learning compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/AmlComputeSchema"
        }
      ],
      "x-ms-discriminator-value": "AmlCompute"
    },
    "AmlComputeSchema": {
      "type": "object",
      "description": "Properties(top level) of AmlCompute",
      "properties": {
        "properties": {
          "description": "Properties of AmlCompute",
          "$ref": "#/definitions/AmlComputeProperties"
        }
      }
    },
    "ComputeInstanceProperties": {
      "description": "Compute Instance properties",
      "type": "object",
      "properties": {
        "vmSize": {
          "description": "Virtual Machine Size",
          "type": "string"
        },
        "subnet": {
          "title": "Subnet.",
          "description": "Virtual network subnet resource ID the compute nodes belong to.",
          "$ref": "#/definitions/ResourceId",
          "x-nullable": true
        },
        "applicationSharingPolicy": {
          "type": "string",
          "default": "Shared",
          "title": "Sharing policy for applications on this compute instance",
          "description": "Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.",
          "enum": [
            "Personal",
            "Shared"
          ],
          "x-ms-enum": {
            "name": "applicationSharingPolicy",
            "modelAsString": true
          }
        },
        "autologgerSettings": {
          "description": "Specifies settings for autologger.",
          "$ref": "#/definitions/ComputeInstanceAutologgerSettings",
          "x-nullable": true
        },
        "sshSettings": {
          "description": "Specifies policy and settings for SSH access.",
          "$ref": "#/definitions/ComputeInstanceSshSettings",
          "x-nullable": true
        },
        "customServices": {
          "type": "array",
          "description": "List of Custom Services added to the compute.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CustomService"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "osImageMetadata": {
          "readOnly": true,
          "description": "Returns metadata about the operating system image for this compute instance.",
          "$ref": "#/definitions/ImageMetadata"
        },
        "connectivityEndpoints": {
          "readOnly": true,
          "description": "Describes all connectivity endpoints available for this ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceConnectivityEndpoints"
        },
        "applications": {
          "type": "array",
          "readOnly": true,
          "description": "Describes available applications and their endpoints on this ComputeInstance.",
          "items": {
            "$ref": "#/definitions/ComputeInstanceApplication"
          },
          "x-ms-identifiers": [
            "displayName"
          ]
        },
        "createdBy": {
          "readOnly": true,
          "description": "Describes information on user who created this ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceCreatedBy"
        },
        "errors": {
          "readOnly": true,
          "title": "Errors.",
          "description": "Collection of errors encountered on this ComputeInstance.",
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "/error/code"
          ]
        },
        "state": {
          "description": "The current state of this ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceState",
          "readOnly": true
        },
        "computeInstanceAuthorizationType": {
          "type": "string",
          "title": "Compute Instance Authorization type.",
          "description": "The Compute Instance Authorization type. Available values are personal (default).",
          "default": "personal",
          "x-nullable": true,
          "enum": [
            "personal"
          ],
          "x-ms-enum": {
            "name": "ComputeInstanceAuthorizationType",
            "modelAsString": true
          }
        },
        "personalComputeInstanceSettings": {
          "title": "Personal Compute Instance settings.",
          "description": "Settings for a personal compute instance.",
          "$ref": "#/definitions/PersonalComputeInstanceSettings",
          "x-nullable": true
        },
        "setupScripts": {
          "description": "Details of customized scripts to execute for setting up the cluster.",
          "$ref": "#/definitions/SetupScripts",
          "x-nullable": true
        },
        "lastOperation": {
          "description": "The last operation on ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceLastOperation",
          "readOnly": true,
          "x-nullable": true
        },
        "schedules": {
          "description": "The list of schedules to be applied on the computes.",
          "$ref": "#/definitions/ComputeSchedules",
          "x-nullable": true
        },
        "idleTimeBeforeShutdown": {
          "type": "string",
          "description": "Stops compute instance after user defined period of inactivity. Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days."
        },
        "enableNodePublicIp": {
          "type": "boolean",
          "title": "Enable node public IP.",
          "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
        },
        "containers": {
          "type": "array",
          "readOnly": true,
          "description": "Describes informations of containers on this ComputeInstance.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceContainer"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "dataDisks": {
          "type": "array",
          "readOnly": true,
          "description": "Describes informations of dataDisks on this ComputeInstance.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceDataDisk"
          },
          "x-ms-identifiers": []
        },
        "dataMounts": {
          "type": "array",
          "readOnly": true,
          "description": "Describes informations of dataMounts on this ComputeInstance.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceDataMount"
          },
          "x-ms-identifiers": []
        },
        "versions": {
          "description": "ComputeInstance version.",
          "$ref": "#/definitions/ComputeInstanceVersion",
          "readOnly": true
        }
      }
    },
    "ComputeInstance": {
      "description": "An Azure Machine Learning compute instance.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/ComputeInstanceSchema"
        }
      ],
      "x-ms-discriminator-value": "ComputeInstance"
    },
    "ComputeInstanceSchema": {
      "type": "object",
      "description": "Properties(top level) of ComputeInstance",
      "properties": {
        "properties": {
          "description": "Properties of ComputeInstance",
          "$ref": "#/definitions/ComputeInstanceProperties"
        }
      }
    },
    "VirtualMachine": {
      "description": "A Machine Learning compute based on Azure Virtual Machines.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/VirtualMachineSchema"
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "virtualMachineSize": {
              "description": "Virtual Machine size",
              "type": "string"
            },
            "sshPort": {
              "description": "Port open for ssh connections.",
              "type": "integer",
              "format": "int32"
            },
            "notebookServerPort": {
              "description": "Notebook server port open for ssh connections.",
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "description": "Public IP address of the virtual machine.",
              "type": "string"
            },
            "administratorAccount": {
              "description": "Admin credentials for virtual machine",
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            },
            "isNotebookInstanceCompute": {
              "description": "Indicates whether this compute will be used for running notebooks.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "HDInsightProperties": {
      "type": "object",
      "description": "HDInsight compute properties",
      "properties": {
        "sshPort": {
          "description": "Port open for ssh connections on the master node of the cluster.",
          "type": "integer",
          "format": "int32"
        },
        "address": {
          "description": "Public IP address of the master node of the cluster.",
          "type": "string"
        },
        "administratorAccount": {
          "description": "Admin credentials for master node of the cluster",
          "$ref": "#/definitions/VirtualMachineSshCredentials",
          "x-nullable": true
        }
      }
    },
    "HDInsight": {
      "description": "A HDInsight compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/HDInsightSchema"
        }
      ],
      "x-ms-discriminator-value": "HDInsight"
    },
    "HDInsightSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HDInsightProperties"
        }
      }
    },
    "DataFactory": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "DataFactory"
    },
    "DatabricksProperties": {
      "type": "object",
      "description": "Properties of Databricks",
      "properties": {
        "databricksAccessToken": {
          "description": "Databricks access token",
          "type": "string"
        },
        "workspaceUrl": {
          "description": "Workspace Url",
          "type": "string"
        }
      }
    },
    "Databricks": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/DatabricksSchema"
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "DatabricksSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabricksProperties"
        }
      }
    },
    "DataLakeAnalytics": {
      "description": "A DataLakeAnalytics compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/DataLakeAnalyticsSchema"
        }
      ],
      "x-ms-discriminator-value": "DataLakeAnalytics"
    },
    "DataLakeAnalyticsSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "dataLakeStoreAccountName": {
              "description": "DataLake Store Account Name",
              "type": "string"
            }
          }
        }
      }
    },
    "SynapseSpark": {
      "type": "object",
      "description": "A SynapseSpark compute.",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "autoScaleProperties": {
              "description": "Auto scale properties.",
              "$ref": "#/definitions/AutoScaleProperties"
            },
            "autoPauseProperties": {
              "description": "Auto pause properties.",
              "$ref": "#/definitions/AutoPauseProperties"
            },
            "sparkVersion": {
              "description": "Spark version.",
              "type": "string"
            },
            "nodeCount": {
              "description": "The number of compute nodes currently assigned to the compute.",
              "type": "integer",
              "format": "int32"
            },
            "nodeSize": {
              "description": "Node size.",
              "type": "string"
            },
            "nodeSizeFamily": {
              "description": "Node size family.",
              "type": "string"
            },
            "subscriptionId": {
              "description": "Azure subscription identifier.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Name of the resource group in which workspace is located.",
              "type": "string"
            },
            "workspaceName": {
              "description": "Name of Azure Machine Learning workspace.",
              "type": "string"
            },
            "poolName": {
              "description": "Pool name.",
              "type": "string"
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "SynapseSpark"
    },
    "SystemService": {
      "type": "object",
      "description": "A system service running on a compute.",
      "properties": {
        "systemServiceType": {
          "description": "The type of this system service.",
          "readOnly": true,
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address",
          "readOnly": true
        },
        "version": {
          "description": "The version for this type.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SslConfiguration": {
      "type": "object",
      "description": "The ssl configuration for scoring",
      "properties": {
        "status": {
          "description": "Enable or disable ssl for scoring",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Auto"
          ],
          "x-ms-enum": {
            "name": "SslConfigStatus",
            "modelAsString": true
          }
        },
        "cert": {
          "description": "Cert data",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "key": {
          "description": "Key data",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "cname": {
          "description": "CNAME of the cert",
          "type": "string",
          "x-nullable": true
        },
        "leafDomainLabel": {
          "description": "Leaf domain label of public endpoint",
          "type": "string",
          "x-nullable": true
        },
        "overwriteExistingDomain": {
          "description": "Indicates whether to overwrite existing domain label.",
          "type": "boolean"
        }
      }
    },
    "AksNetworkingConfiguration": {
      "type": "object",
      "description": "Advance configuration for AKS networking",
      "properties": {
        "subnetId": {
          "description": "Virtual network subnet resource ID the compute nodes belong to",
          "type": "string"
        },
        "serviceCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
          "type": "string"
        },
        "dnsServiceIP": {
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "type": "string"
        },
        "dockerBridgeCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
          "type": "string"
        }
      }
    },
    "UserAccountCredentials": {
      "type": "object",
      "properties": {
        "adminUserName": {
          "type": "string",
          "title": "User name.",
          "description": "Name of the administrator user account which can be used to SSH to nodes."
        },
        "adminUserSshPublicKey": {
          "type": "string",
          "x-ms-secret": true,
          "title": "SSH public key.",
          "description": "SSH public key of the administrator user account."
        },
        "adminUserPassword": {
          "type": "string",
          "x-ms-secret": true,
          "title": "Password.",
          "description": "Password of the administrator user account."
        }
      },
      "required": [
        "adminUserName"
      ],
      "description": "Settings for user account that gets created on each on the nodes of a compute."
    },
    "ScaleSettings": {
      "type": "object",
      "description": "scale settings for AML Compute",
      "properties": {
        "maxNodeCount": {
          "description": "Max number of nodes to use",
          "type": "integer",
          "format": "int32"
        },
        "minNodeCount": {
          "description": "Min number of nodes to use",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "nodeIdleTimeBeforeScaleDown": {
          "type": "string",
          "format": "duration",
          "description": "Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format."
        }
      },
      "required": [
        "maxNodeCount"
      ]
    },
    "VirtualMachineImage": {
      "type": "object",
      "description": "Virtual Machine image for Windows AML Compute",
      "properties": {
        "id": {
          "description": "Virtual Machine image path",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "NodeStateCounts": {
      "type": "object",
      "properties": {
        "idleNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Idle node count.",
          "description": "Number of compute nodes in idle state."
        },
        "runningNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Running node count.",
          "description": "Number of compute nodes which are running jobs."
        },
        "preparingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preparing node count.",
          "description": "Number of compute nodes which are being prepared."
        },
        "unusableNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Unusable node count.",
          "description": "Number of compute nodes which are in unusable state."
        },
        "leavingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Leaving node count.",
          "description": "Number of compute nodes which are leaving the amlCompute."
        },
        "preemptedNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preempted node count.",
          "description": "Number of compute nodes which are in preempted state."
        }
      },
      "description": "Counts of various compute node states on the amlCompute."
    },
    "ScaleSettingsInformation": {
      "type": "object",
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/ScaleSettings",
          "title": "Scale settings."
        }
      },
      "description": "Desired scale settings for the amlCompute."
    },
    "ClusterUpdateProperties": {
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of ClusterUpdate",
          "$ref": "#/definitions/ScaleSettingsInformation"
        }
      },
      "description": "The properties of a amlCompute that need to be updated."
    },
    "ClusterUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterUpdateProperties",
          "description": "The properties of the amlCompute."
        }
      },
      "description": "AmlCompute update parameters."
    },
    "AmlComputeNodesInformation": {
      "type": "object",
      "description": "Result of AmlCompute Nodes",
      "properties": {
        "nodes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmlComputeNodeInformation"
          },
          "x-ms-identifiers": [
            "nodeId"
          ],
          "description": "The collection of returned AmlCompute nodes details."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The continuation token."
        }
      }
    },
    "AmlComputeNodeInformation": {
      "type": "object",
      "description": "Compute node information related to a AmlCompute.",
      "properties": {
        "nodeId": {
          "readOnly": true,
          "type": "string",
          "title": "Node ID.",
          "description": "ID of the compute node."
        },
        "privateIpAddress": {
          "readOnly": true,
          "type": "string",
          "title": "Private IP address.",
          "description": "Private IP address of the compute node.",
          "x-nullable": true
        },
        "publicIpAddress": {
          "readOnly": true,
          "type": "string",
          "title": "Public IP address.",
          "description": "Public IP address of the compute node.",
          "x-nullable": true
        },
        "port": {
          "readOnly": true,
          "type": "number",
          "format": "int32",
          "title": "Port.",
          "description": "SSH port number of the node."
        },
        "nodeState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "idle",
            "running",
            "preparing",
            "unusable",
            "leaving",
            "preempted"
          ],
          "description": "State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.",
          "x-ms-enum": {
            "name": "nodeState",
            "modelAsString": true
          }
        },
        "runId": {
          "readOnly": true,
          "type": "string",
          "title": "Run ID.",
          "description": "ID of the Experiment running on the node, if any else null.",
          "x-nullable": true
        }
      }
    },
    "VirtualMachineSshCredentials": {
      "type": "object",
      "description": "Admin credentials for virtual machine",
      "properties": {
        "username": {
          "description": "Username of admin account",
          "type": "string"
        },
        "password": {
          "description": "Password of admin account",
          "type": "string"
        },
        "publicKeyData": {
          "description": "Public key data",
          "type": "string",
          "x-ms-secret": true
        },
        "privateKeyData": {
          "description": "Private key data",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ComputeSecrets": {
      "type": "object",
      "description": "Secrets related to a Machine Learning compute. Might differ for every type of compute.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AksComputeSecretsProperties": {
      "type": "object",
      "description": "Properties of AksComputeSecrets",
      "properties": {
        "userKubeConfig": {
          "type": "string",
          "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
        },
        "adminKubeConfig": {
          "type": "string",
          "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
        },
        "imagePullSecretName": {
          "type": "string",
          "description": "Image registry pull secret.",
          "x-nullable": true
        }
      }
    },
    "AksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/AksComputeSecretsProperties"
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "VirtualMachineSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/VirtualMachineSecretsSchema"
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineSecretsSchema": {
      "type": "object",
      "properties": {
        "administratorAccount": {
          "description": "Admin credentials for virtual machine.",
          "$ref": "#/definitions/VirtualMachineSshCredentials"
        }
      }
    },
    "DatabricksComputeSecretsProperties": {
      "type": "object",
      "description": "Properties of Databricks Compute Secrets",
      "properties": {
        "databricksAccessToken": {
          "description": "access token for databricks account.",
          "type": "string"
        }
      }
    },
    "DatabricksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on Databricks.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/DatabricksComputeSecretsProperties"
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "ComputeType": {
      "type": "string",
      "description": "The type of compute",
      "enum": [
        "AKS",
        "Kubernetes",
        "AmlCompute",
        "ComputeInstance",
        "DataFactory",
        "VirtualMachine",
        "HDInsight",
        "Databricks",
        "DataLakeAnalytics",
        "SynapseSpark"
      ],
      "x-ms-enum": {
        "name": "ComputeType",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      },
      "description": "List of private endpoint connection associated with the specified workspace"
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Private Endpoint"
        },
        "subnetArmId": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Subnet resource that private endpoint links to"
        }
      },
      "description": "The Private Endpoint resource."
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      },
      "description": "A list of private link resources"
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource Private link DNS zone name."
        }
      },
      "description": "Properties of a private link resource."
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name of the private link.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperty",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      }
    },
    "SharedPrivateLinkResourceProperty": {
      "type": "object",
      "properties": {
        "privateLinkResourceId": {
          "description": "The resource id that private link links to.",
          "type": "string"
        },
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string"
        },
        "requestMessage": {
          "description": "Request message.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "Properties of a shared private link resource."
    },
    "EncryptionProperty": {
      "properties": {
        "status": {
          "description": "Indicates whether or not the encryption is enabled for the workspace.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "identity": {
          "$ref": "#/definitions/IdentityForCmk",
          "description": "The identity that will be used to access the key vault for encryption at rest."
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultProperties",
          "description": "Customer Key vault properties."
        }
      },
      "required": [
        "status",
        "keyVaultProperties"
      ],
      "type": "object"
    },
    "EncryptionKeyVaultProperties": {
      "properties": {
        "keyVaultArmId": {
          "description": "The ArmId of the keyVault where the customer owned encryption key is present.",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        },
        "identityClientId": {
          "description": "For future use - The client id of the identity which will be used to access key vault.",
          "type": "string"
        }
      },
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ],
      "type": "object"
    },
    "IdentityForCmk": {
      "description": "Identity that will be used to access key vault for encryption at rest",
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "description": "The ArmId of the user assigned identity that will be used to access the customer managed key vault",
          "type": "string"
        }
      }
    },
    "EncryptionUpdateProperties": {
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultUpdateProperties",
          "description": "Customer Key vault properties."
        }
      },
      "required": [
        "keyVaultProperties"
      ],
      "type": "object"
    },
    "EncryptionKeyVaultUpdateProperties": {
      "properties": {
        "keyIdentifier": {
          "description": "Key Vault uri to access the encryption key.",
          "type": "string"
        }
      },
      "required": [
        "keyIdentifier"
      ],
      "type": "object"
    },
    "ImageMetadata": {
      "type": "object",
      "description": "Returns metadata about the operating system image for this compute instance.",
      "properties": {
        "currentImageVersion": {
          "type": "string",
          "description": "Specifies the current operating system image version this compute instance is running on."
        },
        "latestImageVersion": {
          "type": "string",
          "description": "Specifies the latest available operating system image version."
        },
        "isLatestOsImageVersion": {
          "type": "boolean",
          "description": "Specifies whether this compute instance is running on the latest operating system image."
        }
      }
    },
    "CustomService": {
      "type": "object",
      "description": "Specifies the custom service configuration",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Custom Service"
        },
        "image": {
          "$ref": "#/definitions/Image",
          "description": "Describes the Image Specifications"
        },
        "environmentVariables": {
          "type": "object",
          "description": "Environment Variable for the container",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "docker": {
          "description": "Describes the docker settings for the image",
          "$ref": "#/definitions/Docker",
          "x-nullable": true
        },
        "endpoints": {
          "type": "array",
          "description": "Configuring the endpoints for the container",
          "items": {
            "$ref": "#/definitions/Endpoint"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "volumes": {
          "type": "array",
          "description": "Configuring the volumes for the container",
          "items": {
            "$ref": "#/definitions/VolumeDefinition"
          },
          "x-ms-identifiers": [
            "source",
            "target"
          ]
        }
      },
      "additionalProperties": true
    },
    "Image": {
      "type": "object",
      "properties": {
        "type": {
          "default": "docker",
          "enum": [
            "docker",
            "azureml"
          ],
          "type": "string",
          "title": "Type of the image",
          "description": "Type of the image. Possible values are: docker - For docker images. azureml - For AzureML images",
          "x-ms-enum": {
            "name": "ImageType",
            "modelAsString": true
          }
        },
        "reference": {
          "type": "string",
          "description": "Image reference URL"
        }
      },
      "additionalProperties": true
    },
    "EnvironmentVariable": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "local"
          ],
          "default": "local",
          "title": "Type of Environment Variable",
          "description": "Type of the Environment Variable. Possible values are: local - For local variable",
          "type": "string",
          "x-ms-enum": {
            "name": "EnvironmentVariableType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "description": "Value of the Environment variable"
        }
      },
      "additionalProperties": true
    },
    "Docker": {
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "description": "Indicate whether container shall run in privileged or non-privileged mode.",
          "x-nullable": true
        }
      },
      "additionalProperties": true
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "protocol": {
          "enum": [
            "tcp",
            "udp",
            "http"
          ],
          "default": "tcp",
          "title": "Endpoint Communication Protocol",
          "description": "Protocol over which communication will happen over this endpoint",
          "x-ms-enum": {
            "name": "protocol",
            "modelAsString": true
          },
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the Endpoint"
        },
        "target": {
          "format": "int32",
          "type": "integer",
          "description": "Application port inside the container."
        },
        "published": {
          "format": "int32",
          "type": "integer",
          "description": "Port over which the application is exposed from container.",
          "x-nullable": true
        },
        "hostIp": {
          "description": "Host IP over which the application is exposed from the container",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "VolumeDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "bind",
            "volume",
            "tmpfs",
            "npipe"
          ],
          "default": "bind",
          "title": "Type of Volume Definition",
          "description": "Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe",
          "x-ms-enum": {
            "name": "VolumeDefinitionType",
            "modelAsString": true
          },
          "type": "string"
        },
        "readOnly": {
          "type": "boolean",
          "description": "Indicate whether to mount volume as readOnly. Default value for this is false.",
          "x-nullable": true
        },
        "source": {
          "type": "string",
          "description": "Source of the mount. For bind mounts this is the host path."
        },
        "target": {
          "type": "string",
          "description": "Target of the mount. For bind mounts this is the path in the container."
        },
        "consistency": {
          "type": "string",
          "description": "Consistency of the volume",
          "x-nullable": true
        },
        "bind": {
          "$ref": "#/definitions/BindOptions",
          "description": "Bind Options of the mount",
          "x-nullable": true
        },
        "volume": {
          "$ref": "#/definitions/VolumeOptions",
          "description": "Volume Options of the mount",
          "x-nullable": true
        },
        "tmpfs": {
          "$ref": "#/definitions/TmpfsOptions",
          "description": "tmpfs option of the mount",
          "x-nullable": true
        }
      }
    },
    "VolumeOptions": {
      "type": "object",
      "properties": {
        "nocopy": {
          "type": "boolean",
          "description": "Indicate whether volume is nocopy",
          "x-nullable": true
        }
      }
    },
    "BindOptions": {
      "type": "object",
      "properties": {
        "propagation": {
          "type": "string",
          "description": "Type of Bind Option",
          "x-nullable": true
        },
        "createHostPath": {
          "type": "boolean",
          "description": "Indicate whether to create host path.",
          "x-nullable": true
        },
        "selinux": {
          "type": "string",
          "description": "Mention the selinux options.",
          "x-nullable": true
        }
      }
    },
    "TmpfsOptions": {
      "type": "object",
      "properties": {
        "size": {
          "format": "int32",
          "type": "integer",
          "description": "Mention the Tmpfs size"
        }
      }
    },
    "ComputeInstanceAutologgerSettings": {
      "type": "object",
      "description": "Specifies settings for autologger.",
      "properties": {
        "mlflowAutologger": {
          "type": "string",
          "description": "Indicates whether mlflow autologger is enabled for notebooks.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "mlflowAutologger",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceSshSettings": {
      "type": "object",
      "description": "Specifies policy and settings for SSH access.",
      "properties": {
        "sshPublicAccess": {
          "type": "string",
          "default": "Disabled",
          "title": "Access policy for SSH",
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "sshPublicAccess",
            "modelAsString": true
          }
        },
        "adminUserName": {
          "type": "string",
          "readOnly": true,
          "description": "Describes the admin user name."
        },
        "sshPort": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Describes the port for connecting through SSH."
        },
        "adminPublicKey": {
          "type": "string",
          "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
        }
      }
    },
    "ComputeInstanceState": {
      "type": "string",
      "description": "Current state of an ComputeInstance.",
      "enum": [
        "Creating",
        "CreateFailed",
        "Deleting",
        "Running",
        "Restarting",
        "JobRunning",
        "SettingUp",
        "SetupFailed",
        "Starting",
        "Stopped",
        "Stopping",
        "UserSettingUp",
        "UserSetupFailed",
        "Unknown",
        "Unusable"
      ],
      "x-ms-enum": {
        "name": "ComputeInstanceState",
        "modelAsString": true
      }
    },
    "ComputeInstanceLastOperation": {
      "type": "object",
      "description": "The last operation on ComputeInstance.",
      "properties": {
        "operationName": {
          "type": "string",
          "description": "Name of the last operation.",
          "enum": [
            "Create",
            "Start",
            "Stop",
            "Restart",
            "Reimage",
            "Delete"
          ],
          "x-ms-enum": {
            "name": "OperationName",
            "modelAsString": true
          }
        },
        "operationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the last operation."
        },
        "operationStatus": {
          "type": "string",
          "description": "Operation status.",
          "enum": [
            "InProgress",
            "Succeeded",
            "CreateFailed",
            "StartFailed",
            "StopFailed",
            "RestartFailed",
            "ReimageFailed",
            "DeleteFailed"
          ],
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": true
          }
        },
        "operationTrigger": {
          "type": "string",
          "description": "Trigger of operation.",
          "enum": [
            "User",
            "Schedule",
            "IdleShutdown"
          ],
          "x-ms-enum": {
            "name": "operationTrigger",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceVersion": {
      "type": "object",
      "description": "Version of computeInstance.",
      "properties": {
        "runtime": {
          "type": "string",
          "description": "Runtime of compute instance.",
          "x-nullable": true
        }
      }
    },
    "ComputeSchedules": {
      "type": "object",
      "description": "The list of schedules to be applied on the computes",
      "properties": {
        "computeStartStop": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeStartStopSchedule"
          },
          "description": "The list of compute start stop schedules to be applied."
        }
      }
    },
    "ComputeStartStopSchedule": {
      "type": "object",
      "description": "Compute start stop schedule properties",
      "properties": {
        "id": {
          "description": "A system assigned id for the schedule.",
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        },
        "provisioningStatus": {
          "description": "The current deployment state of schedule.",
          "type": "string",
          "enum": [
            "Completed",
            "Provisioning",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "provisioningStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Completed"
              },
              {
                "value": "Provisioning"
              },
              {
                "value": "Failed"
              }
            ]
          },
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/ScheduleStatus"
        },
        "action": {
          "$ref": "#/definitions/ComputePowerAction"
        },
        "triggerType": {
          "description": "[Required] The schedule trigger type.",
          "$ref": "./mfe.json#/definitions/TriggerType"
        },
        "recurrence": {
          "description": "Required if triggerType is Recurrence.",
          "$ref": "./mfe.json#/definitions/RecurrenceTrigger"
        },
        "cron": {
          "description": "Required if triggerType is Cron.",
          "$ref": "./mfe.json#/definitions/CronTrigger"
        },
        "schedule": {
          "description": "[Deprecated] Not used any more.",
          "$ref": "#/definitions/ScheduleBase"
        }
      }
    },
    "ScheduleBase": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A system assigned id for the schedule.",
          "type": "string",
          "x-nullable": true
        },
        "provisioningStatus": {
          "$ref": "#/definitions/ScheduleProvisioningState"
        },
        "status": {
          "$ref": "#/definitions/ScheduleStatus"
        }
      },
      "additionalProperties": false
    },
    "ScheduleProvisioningState": {
      "enum": [
        "Completed",
        "Provisioning",
        "Failed"
      ],
      "description": "The current deployment state of schedule.",
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Completed"
          },
          {
            "value": "Provisioning"
          },
          {
            "value": "Failed"
          }
        ]
      },
      "additionalProperties": false
    },
    "ScheduleStatus": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "description": "Is the schedule enabled or disabled?",
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled"
          },
          {
            "value": "Disabled"
          }
        ]
      },
      "additionalProperties": false
    },
    "ComputePowerAction": {
      "type": "string",
      "description": "[Required] The compute power action.",
      "enum": [
        "Start",
        "Stop"
      ],
      "x-ms-enum": {
        "name": "ComputePowerAction",
        "modelAsString": true
      }
    },
    "ComputeInstanceDataMount": {
      "type": "object",
      "description": "Defines an Aml Instance DataMount.",
      "properties": {
        "source": {
          "type": "string",
          "description": "Source of the ComputeInstance data mount."
        },
        "sourceType": {
          "description": "Data source type.",
          "type": "string",
          "enum": [
            "Dataset",
            "Datastore",
            "URI"
          ],
          "x-ms-enum": {
            "name": "sourceType",
            "modelAsString": true
          }
        },
        "mountName": {
          "type": "string",
          "description": "name of the ComputeInstance data mount."
        },
        "mountAction": {
          "description": "Mount Action.",
          "type": "string",
          "enum": [
            "Mount",
            "Unmount"
          ],
          "x-ms-enum": {
            "name": "mountAction",
            "modelAsString": true
          }
        },
        "createdBy": {
          "type": "string",
          "description": "who this data mount created by."
        },
        "mountPath": {
          "type": "string",
          "description": "Path of this data mount."
        },
        "mountState": {
          "description": "Mount state.",
          "type": "string",
          "enum": [
            "MountRequested",
            "Mounted",
            "MountFailed",
            "UnmountRequested",
            "UnmountFailed",
            "Unmounted"
          ],
          "x-ms-enum": {
            "name": "mountState",
            "modelAsString": true
          }
        },
        "mountedOn": {
          "type": "string",
          "format": "date-time",
          "title": "Mounted time.",
          "description": "The time when the disk mounted."
        },
        "error": {
          "type": "string",
          "description": "Error of this data mount."
        }
      }
    },
    "ComputeInstanceDataDisk": {
      "type": "object",
      "description": "Defines an Aml Instance DataDisk.",
      "properties": {
        "caching": {
          "description": "Caching type of Data Disk.",
          "type": "string",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "caching",
            "modelAsString": true
          }
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "title": "The initial disk size in gigabytes.",
          "description": "The initial disk size in gigabytes."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "title": "The logical unit number.",
          "description": "The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun."
        },
        "storageAccountType": {
          "description": "type of this storage account.",
          "type": "string",
          "default": "Standard_LRS",
          "enum": [
            "Standard_LRS",
            "Premium_LRS"
          ],
          "x-ms-enum": {
            "name": "storageAccountType",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceContainer": {
      "type": "object",
      "description": "Defines an Aml Instance container.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ComputeInstance container."
        },
        "autosave": {
          "description": "Auto save settings.",
          "type": "string",
          "enum": [
            "None",
            "Local",
            "Remote"
          ],
          "x-ms-enum": {
            "name": "autosave",
            "modelAsString": true
          }
        },
        "gpu": {
          "type": "string",
          "description": "Information of GPU."
        },
        "network": {
          "description": "network of this container.",
          "type": "string",
          "enum": [
            "Bridge",
            "Host"
          ],
          "x-ms-enum": {
            "name": "network",
            "modelAsString": true
          }
        },
        "environment": {
          "description": "Environment information of this container.",
          "$ref": "#/definitions/ComputeInstanceEnvironmentInfo"
        },
        "services": {
          "type": "array",
          "readOnly": true,
          "description": "services of this containers.",
          "items": {
            "type": "object"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ComputeInstanceEnvironmentInfo": {
      "type": "object",
      "description": "Environment information",
      "properties": {
        "name": {
          "description": "name of environment.",
          "type": "string"
        },
        "version": {
          "description": "version of environment.",
          "type": "string"
        }
      }
    },
    "ComputeInstanceApplication": {
      "type": "object",
      "description": "Defines an Aml Instance application and its connectivity endpoint URI.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of the ComputeInstance application."
        },
        "endpointUri": {
          "type": "string",
          "description": "Application' endpoint URI."
        }
      }
    },
    "ComputeInstanceConnectivityEndpoints": {
      "type": "object",
      "readOnly": true,
      "description": "Defines all connectivity endpoints and properties for an ComputeInstance.",
      "properties": {
        "publicIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Public IP Address of this ComputeInstance.",
          "x-nullable": true
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).",
          "x-nullable": true
        }
      }
    },
    "ComputeInstanceCreatedBy": {
      "type": "object",
      "readOnly": true,
      "description": "Describes information on user who created this ComputeInstance.",
      "properties": {
        "userName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the user.",
          "x-nullable": true
        },
        "userOrgId": {
          "type": "string",
          "readOnly": true,
          "description": "Uniquely identifies user' Azure Active Directory organization."
        },
        "userId": {
          "type": "string",
          "readOnly": true,
          "description": "Uniquely identifies the user within his/her organization.",
          "x-nullable": true
        }
      }
    },
    "PersonalComputeInstanceSettings": {
      "type": "object",
      "properties": {
        "assignedUser": {
          "$ref": "#/definitions/AssignedUser",
          "title": "Assigned User.",
          "description": "A user explicitly assigned to a personal compute instance."
        }
      },
      "description": "Settings for a personal compute instance."
    },
    "AssignedUser": {
      "type": "object",
      "description": "A user that can be assigned to a compute instance.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "User’s AAD Object Id."
        },
        "tenantId": {
          "type": "string",
          "description": "User’s AAD Tenant Id."
        }
      },
      "required": [
        "objectId",
        "tenantId"
      ]
    },
    "ServiceManagedResourcesSettings": {
      "type": "object",
      "properties": {
        "cosmosDb": {
          "$ref": "#/definitions/CosmosDbSettings",
          "description": "The settings for the service managed cosmosdb account."
        }
      }
    },
    "CosmosDbSettings": {
      "type": "object",
      "properties": {
        "collectionsThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "The throughput of the collections in cosmosdb database"
        }
      }
    },
    "NotebookResourceInfo": {
      "type": "object",
      "properties": {
        "fqdn": {
          "type": "string"
        },
        "resourceId": {
          "type": "string",
          "description": "the data plane resourceId that used to initialize notebook component"
        },
        "notebookPreparationError": {
          "$ref": "#/definitions/NotebookPreparationError",
          "description": "The error that occurs when preparing notebook.",
          "x-nullable": true
        }
      }
    },
    "NotebookPreparationError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListNotebookKeysResult": {
      "type": "object",
      "properties": {
        "primaryAccessKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "secondaryAccessKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ListStorageAccountKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ConnectionAuthType": {
      "enum": [
        "PAT",
        "ManagedIdentity",
        "UsernamePassword",
        "None",
        "SAS",
        "ServicePrincipal",
        "AccessKey"
      ],
      "type": "string",
      "description": "Authentication type of the connection target",
      "x-ms-enum": {
        "name": "ConnectionAuthType",
        "modelAsString": true
      }
    },
    "ConnectionCategory": {
      "enum": [
        "PythonFeed",
        "ContainerRegistry",
        "Git",
        "FeatureStore",
        "S3",
        "Snowflake",
        "AzureSqlDb",
        "AzureSynapseAnalytics",
        "AzureMySqlDb",
        "AzurePostgresDb",
        "AzureDataLakeGen2",
        "Redis"
      ],
      "type": "string",
      "description": "Category of the connection",
      "x-ms-enum": {
        "name": "ConnectionCategory",
        "modelAsString": true
      }
    },
    "WorkspaceConnectionUsernamePassword": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "WorkspaceConnectionPersonalAccessToken": {
      "type": "object",
      "properties": {
        "pat": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PATAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionPersonalAccessToken"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "PAT"
    },
    "WorkspaceConnectionSharedAccessSignature": {
      "type": "object",
      "properties": {
        "sas": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SASAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionSharedAccessSignature"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "SAS"
    },
    "UsernamePasswordAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionUsernamePassword"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "UsernamePassword"
    },
    "WorkspaceConnectionAccessKey": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string",
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "AccessKeyAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionAccessKey"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "AccessKey"
    },
    "WorkspaceConnectionServicePrincipal": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "x-ms-secret": true
        },
        "tenantId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ServicePrincipalAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionServicePrincipal"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "WorkspaceConnectionPropertiesV2": {
      "required": [
        "authType"
      ],
      "type": "object",
      "properties": {
        "authType": {
          "$ref": "#/definitions/ConnectionAuthType"
        },
        "category": {
          "$ref": "#/definitions/ConnectionCategory"
        },
        "target": {
          "type": "string"
        },
        "value": {
          "description": "Value details of the workspace connection.",
          "type": "string"
        },
        "valueFormat": {
          "description": "format for the workspace connection value",
          "type": "string",
          "enum": [
            "JSON"
          ],
          "x-ms-enum": {
            "name": "ValueFormat",
            "modelAsString": true
          }
        }
      },
      "additionalProperties": false,
      "discriminator": "authType"
    },
    "NoneAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "additionalProperties": false,
      "x-ms-discriminator-value": "None"
    },
    "WorkspaceConnectionManagedIdentity": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ManagedIdentityAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionManagedIdentity"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "ManagedNetworkProvisionOptions": {
      "description": "Managed Network Provisioning options for managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "includeSpark": {
          "type": "boolean"
        }
      }
    },
    "ManagedNetworkProvisionStatus": {
      "description": "Status of the Provisioning for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/ManagedNetworkStatus"
        },
        "sparkReady": {
          "type": "boolean"
        }
      }
    },
    "ManagedNetworkSettings": {
      "description": "Managed Network settings for a machine learning workspace.",
      "type": "object",
      "properties": {
        "isolationMode": {
          "$ref": "#/definitions/IsolationMode"
        },
        "networkId": {
          "type": "string",
          "readOnly": true
        },
        "outboundRules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/OutboundRule"
          },
          "x-nullable": true
        },
        "status": {
          "$ref": "#/definitions/ManagedNetworkProvisionStatus"
        }
      }
    },
    "ManagedNetworkStatus": {
      "description": "Status for the managed network of a machine learning workspace.",
      "enum": [
        "Inactive",
        "Active"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ManagedNetworkStatus",
        "modelAsString": true
      }
    },
    "IsolationMode": {
      "description": "Isolation mode for the managed network of a machine learning workspace.",
      "enum": [
        "Disabled",
        "AllowInternetOutbound",
        "AllowOnlyApprovedOutbound"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IsolationMode",
        "modelAsString": true
      }
    },
    "OutboundRuleBasicResource": {
      "description": "Outbound Rule Basic Resource for the managed network of a machine learning workspace.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/OutboundRule"
        }
      },
      "additionalProperties": false
    },
    "OutboundRuleListResult": {
      "description": "List of outbound rules for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundRuleBasicResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
          "type": "string"
        }
      }
    },
    "OutboundRule": {
      "description": "Outbound Rule for the managed network of a machine learning workspace.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RuleType"
        },
        "status": {
          "$ref": "#/definitions/RuleStatus"
        },
        "category": {
          "$ref": "#/definitions/RuleCategory"
        }
      },
      "discriminator": "type"
    },
    "RuleCategory": {
      "description": "Category of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "Required",
        "Recommended",
        "UserDefined"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleCategory",
        "modelAsString": true
      }
    },
    "RuleStatus": {
      "description": "Status of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "Inactive",
        "Active"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleStatus",
        "modelAsString": true
      }
    },
    "RuleType": {
      "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "FQDN",
        "PrivateEndpoint",
        "ServiceTag"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleType",
        "modelAsString": true
      }
    },
    "FqdnOutboundRule": {
      "description": "FQDN Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "FQDN"
    },
    "PrivateEndpointOutboundRule": {
      "description": "Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "$ref": "#/definitions/PrivateEndpointDestination"
        }
      },
      "x-ms-discriminator-value": "PrivateEndpoint"
    },
    "PrivateEndpointDestination": {
      "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "serviceResourceId": {
          "type": "string"
        },
        "subresourceTarget": {
          "type": "string"
        },
        "sparkEnabled": {
          "type": "boolean"
        },
        "sparkStatus": {
          "$ref": "#/definitions/RuleStatus"
        }
      }
    },
    "ServiceTagOutboundRule": {
      "description": "Service Tag Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "$ref": "#/definitions/ServiceTagDestination"
        }
      },
      "x-ms-discriminator-value": "ServiceTag"
    },
    "ServiceTagDestination": {
      "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "serviceTag": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "portRanges": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionPropertiesV2BasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      },
      "additionalProperties": false
    },
    "WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SetupScripts": {
      "type": "object",
      "description": "Details of customized scripts to execute for setting up the cluster.",
      "properties": {
        "scripts": {
          "description": "Customized setup scripts",
          "$ref": "#/definitions/ScriptsToExecute"
        }
      }
    },
    "ScriptsToExecute": {
      "type": "object",
      "description": "Customized setup scripts",
      "properties": {
        "startupScript": {
          "description": "Script that's run every time the machine starts.",
          "$ref": "#/definitions/ScriptReference"
        },
        "creationScript": {
          "description": "Script that's run only once during provision of the compute.",
          "$ref": "#/definitions/ScriptReference"
        }
      }
    },
    "ScriptReference": {
      "type": "object",
      "description": "Script reference",
      "properties": {
        "scriptSource": {
          "description": "The storage source of the script: inline, workspace.",
          "type": "string"
        },
        "scriptData": {
          "description": "The location of scripts in the mounted volume.",
          "type": "string"
        },
        "scriptArguments": {
          "description": "Optional command line arguments passed to the script to run.",
          "type": "string"
        },
        "timeout": {
          "description": "Optional time period passed to timeout command.",
          "type": "string"
        }
      }
    },
    "AutoScaleProperties": {
      "type": "object",
      "description": "Auto scale properties",
      "properties": {
        "minNodeCount": {
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "maxNodeCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AutoPauseProperties": {
      "type": "object",
      "description": "Auto pause properties",
      "properties": {
        "delayInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "InstanceTypeSchema": {
      "type": "object",
      "description": "Instance type schema.",
      "properties": {
        "nodeSelector": {
          "type": "object",
          "description": "Node Selector",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "resources": {
          "type": "object",
          "description": "Resource requests/limits for this instance type",
          "properties": {
            "requests": {
              "description": "Resource requests for this instance type",
              "$ref": "#/definitions/InstanceResourceSchema"
            },
            "limits": {
              "description": "Resource limits for this instance type",
              "$ref": "#/definitions/InstanceResourceSchema"
            }
          }
        }
      }
    },
    "InstanceResourceSchema": {
      "type": "object",
      "description": "Resource requests/limits for this instance type",
      "additionalProperties": {
        "type": "string"
      }
    },
    "FQDNEndpointDetail": {
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FQDNEndpoint": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "endpointDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpointDetail"
          },
          "x-ms-identifiers": [
            "port"
          ]
        }
      }
    },
    "FQDNEndpointsProperties": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpoint"
          },
          "x-ms-identifiers": [
            "domainName"
          ]
        }
      }
    },
    "FQDNEndpoints": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FQDNEndpointsProperties"
        }
      }
    },
    "ExternalFQDNResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpoints"
          },
          "x-ms-identifiers": [
            "/properties/category"
          ]
        }
      }
    },
    "IdleShutdownSetting": {
      "type": "object",
      "description": "Stops compute instance after user defined period of inactivity.",
      "properties": {
        "idleTimeBeforeShutdown": {
          "type": "string",
          "description": "Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days."
        }
      }
    },
    "FeatureStoreSettings": {
      "type": "object",
      "properties": {
        "computeRuntime": {
          "$ref": "#/definitions/ComputeRuntimeDto"
        },
        "offlineStoreConnectionName": {
          "type": "string"
        },
        "onlineStoreConnectionName": {
          "type": "string"
        },
        "allowRoleAssignmentsOnResourceGroupLevel": {
          "type": "boolean"
        }
      }
    },
    "ComputeRuntimeDto": {
      "type": "object",
      "properties": {
        "sparkRuntimeVersion": {
          "type": "string"
        }
      }
    }
  }
}