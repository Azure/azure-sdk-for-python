# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from six import with_metaclass
from azure.core import CaseInsensitiveEnumMeta


class ComputeEnvironmentType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    ACS = "ACS"
    FPGA = "FPGA"
    ACI = "ACI"
    AKS = "AKS"
    AMLCOMPUTE = "AMLCOMPUTE"
    IOT = "IOT"
    MIR = "MIR"
    AKSENDPOINT = "AKSENDPOINT"
    MIRSINGLEMODEL = "MIRSINGLEMODEL"
    MIRAMLCOMPUTE = "MIRAMLCOMPUTE"
    MIRGA = "MIRGA"
    AMLARC = "AMLARC"
    BATCHAMLCOMPUTE = "BATCHAMLCOMPUTE"
    UNKNOWN = "UNKNOWN"

class DeploymentType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    GRPC_REALTIME_ENDPOINT = "GRPCRealtimeEndpoint"
    HTTP_REALTIME_ENDPOINT = "HttpRealtimeEndpoint"
    BATCH = "Batch"

class EntityKind(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    INVALID = "Invalid"
    LINEAGE_ROOT = "LineageRoot"
    VERSIONED = "Versioned"
    UNVERSIONED = "Unversioned"

class ListViewType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    ACTIVE_ONLY = "ActiveOnly"
    ARCHIVED_ONLY = "ArchivedOnly"
    ALL = "All"

class ModelFormatEnum(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    CUSTOM = "CUSTOM"
    MLFLOW = "MLFLOW"
    TRITON = "TRITON"
    PRESETS = "PRESETS"

class ModelSchemaDataType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    UNDEFINED = "undefined"
    BOOL = "bool"
    UINT8 = "uint8"
    UINT16 = "uint16"
    UINT32 = "uint32"
    UINT64 = "uint64"
    INT8 = "int8"
    INT16 = "int16"
    INT32 = "int32"
    INT64 = "int64"
    FLOAT16 = "float16"
    FLOAT32 = "float32"
    FLOAT64 = "float64"
    BFLOAT16 = "bfloat16"
    COMPLEX64 = "complex64"
    COMPLEX128 = "complex128"
    STRING = "string"

class OrderString(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    CREATED_AT_DESC = "CreatedAtDesc"
    CREATED_AT_ASC = "CreatedAtAsc"
    UPDATED_AT_DESC = "UpdatedAtDesc"
    UPDATED_AT_ASC = "UpdatedAtAsc"

class WebServiceState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):

    TRANSITIONING = "Transitioning"
    HEALTHY = "Healthy"
    UNHEALTHY = "Unhealthy"
    FAILED = "Failed"
    UNSCHEDULABLE = "Unschedulable"
