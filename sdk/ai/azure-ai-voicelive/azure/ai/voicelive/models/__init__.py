# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models import (  # type: ignore
    CreateSpeechRequest,
    CreateSpeechResponseStreamEvent,
    Error,
    ErrorResponse,
    SpeechAudioDeltaEvent,
    SpeechAudioDoneEvent,
    SpeechAudioDoneEventUsage,
    VoiceLiveAudioFarFieldNoiseReduction,
    VoiceLiveAudioInputTranscriptionSettings,
    VoiceLiveAudioNearFieldNoiseReduction,
    VoiceLiveAudioNoiseReduction,
    VoiceLiveClientEvent,
    VoiceLiveClientEventSessionUpdate,
    VoiceLiveFunctionTool,
    VoiceLiveRequestSession,
    VoiceLiveResponseSession,
    VoiceLiveSemanticVadTurnDetection,
    VoiceLiveServerEvent,
    VoiceLiveServerEventSessionUpdated,
    VoiceLiveServerVadTurnDetection,
    VoiceLiveTool,
    VoiceLiveToolChoiceFunctionObject,
    VoiceLiveToolChoiceFunctionObjectFunction,
    VoiceLiveToolChoiceObject,
    VoiceLiveTurnDetection,
)

# Import WebSocket event models
from .events import (
    BaseEvent,
    ErrorEvent,
    EventType,
    ConnectionEstablishedEvent,
    RecognitionResultEvent,
    create_event_from_json
)

from ._enums import (  # type: ignore
    CreateSpeechResponseStreamEventType,
    TranscriptTextUsageType,
    VoiceIdsShared,
    VoiceLiveAudioFormat,
    VoiceLiveAudioInputTranscriptionModel,
    VoiceLiveAudioNoiseReductionType,
    VoiceLiveClientEventType,
    VoiceLiveContentPartType,
    VoiceLiveItemStatus,
    VoiceLiveItemType,
    VoiceLiveMessageRole,
    VoiceLiveModality,
    VoiceLiveServerEventType,
    VoiceLiveToolChoiceLiteral,
    VoiceLiveToolType,
    VoiceLiveTurnDetectionType,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "CreateSpeechRequest",
    "CreateSpeechResponseStreamEvent",
    "Error",
    "ErrorResponse",
    "SpeechAudioDeltaEvent",
    "SpeechAudioDoneEvent",
    "SpeechAudioDoneEventUsage",
    "VoiceLiveAudioFarFieldNoiseReduction",
    "VoiceLiveAudioInputTranscriptionSettings",
    "VoiceLiveAudioNearFieldNoiseReduction",
    "VoiceLiveAudioNoiseReduction",
    "VoiceLiveClientEvent",
    "VoiceLiveClientEventSessionUpdate",
    "VoiceLiveFunctionTool",
    "VoiceLiveRequestSession",
    "VoiceLiveResponseSession",
    "VoiceLiveSemanticVadTurnDetection",
    "VoiceLiveServerEvent",
    "VoiceLiveServerEventSessionUpdated",
    "VoiceLiveServerVadTurnDetection",
    "VoiceLiveTool",
    "VoiceLiveToolChoiceFunctionObject",
    "VoiceLiveToolChoiceFunctionObjectFunction",
    "VoiceLiveToolChoiceObject",
    "VoiceLiveTurnDetection",
    "CreateSpeechResponseStreamEventType",
    "TranscriptTextUsageType",
    "VoiceIdsShared",
    "VoiceLiveAudioFormat",
    "VoiceLiveAudioInputTranscriptionModel",
    "VoiceLiveAudioNoiseReductionType",
    "VoiceLiveClientEventType",
    "VoiceLiveContentPartType",
    "VoiceLiveItemStatus",
    "VoiceLiveItemType",
    "VoiceLiveMessageRole",
    "VoiceLiveModality",
    "VoiceLiveServerEventType",
    "VoiceLiveToolChoiceLiteral",
    "VoiceLiveToolType",
    "VoiceLiveTurnDetectionType",
    # WebSocket event models
    "BaseEvent",
    "ErrorEvent",
    "EventType",
    "ConnectionEstablishedEvent",
    "RecognitionResultEvent",
    "create_event_from_json"
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
