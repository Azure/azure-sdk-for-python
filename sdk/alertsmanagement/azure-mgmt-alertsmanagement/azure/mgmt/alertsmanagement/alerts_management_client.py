# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from .operations.operations import Operations
from .operations.alerts_operations import AlertsOperations
from .operations.smart_groups_operations import SmartGroupsOperations
from .operations.smart_detector_alert_rules_operations import SmartDetectorAlertRulesOperations
from . import models


class AlertsManagementClientConfiguration(AzureConfiguration):
    """Configuration for AlertsManagementClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param scope: scope here is resourceId for which alert is created.
    :type scope: str
    :param subscription_id: Subscription credentials which uniquely identify
     Microsoft Azure subscription. The subscription ID forms part of the URI
     for every service call.
    :type subscription_id: str
    :param subscription_id1: The Azure subscription id.
    :type subscription_id1: str
    :param api_version1: Client Api Version.
    :type api_version1: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, scope, subscription_id, subscription_id1, api_version1, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if scope is None:
            raise ValueError("Parameter 'scope' must not be None.")
        if subscription_id is None:
            raise ValueError("Parameter 'subscription_id' must not be None.")
        if subscription_id1 is None:
            raise ValueError("Parameter 'subscription_id1' must not be None.")
        if api_version1 is None:
            raise ValueError("Parameter 'api_version1' must not be None.")
        if not base_url:
            base_url = 'https://management.azure.com'

        super(AlertsManagementClientConfiguration, self).__init__(base_url)

        self.add_user_agent('azure-mgmt-alertsmanagement/{}'.format(VERSION))
        self.add_user_agent('Azure-SDK-For-Python')

        self.credentials = credentials
        self.scope = scope
        self.subscription_id = subscription_id
        self.subscription_id1 = subscription_id1
        self.api_version1 = api_version1


class AlertsManagementClient(SDKClient):
    """AlertsManagement Client

    :ivar config: Configuration for client.
    :vartype config: AlertsManagementClientConfiguration

    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.alertsmanagement.operations.Operations
    :ivar alerts: Alerts operations
    :vartype alerts: azure.mgmt.alertsmanagement.operations.AlertsOperations
    :ivar smart_groups: SmartGroups operations
    :vartype smart_groups: azure.mgmt.alertsmanagement.operations.SmartGroupsOperations
    :ivar smart_detector_alert_rules: SmartDetectorAlertRules operations
    :vartype smart_detector_alert_rules: azure.mgmt.alertsmanagement.operations.SmartDetectorAlertRulesOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param scope: scope here is resourceId for which alert is created.
    :type scope: str
    :param subscription_id: Subscription credentials which uniquely identify
     Microsoft Azure subscription. The subscription ID forms part of the URI
     for every service call.
    :type subscription_id: str
    :param subscription_id1: The Azure subscription id.
    :type subscription_id1: str
    :param api_version1: Client Api Version.
    :type api_version1: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, scope, subscription_id, subscription_id1, api_version1, base_url=None):

        self.config = AlertsManagementClientConfiguration(credentials, scope, subscription_id, subscription_id1, api_version1, base_url)
        super(AlertsManagementClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2019-03-01'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.operations = Operations(
            self._client, self.config, self._serialize, self._deserialize)
        self.alerts = AlertsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.smart_groups = SmartGroupsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.smart_detector_alert_rules = SmartDetectorAlertRulesOperations(
            self._client, self.config, self._serialize, self._deserialize)
