# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .azure_resource import AzureResource


class AlertRule(AzureResource):
    """The alert rule information.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource ID.
    :vartype id: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar name: The resource name.
    :vartype name: str
    :param description: The alert rule description.
    :type description: str
    :param state: Required. The alert rule state. Possible values include:
     'Enabled', 'Disabled'
    :type state: str or ~azure.mgmt.alertsmanagement.models.AlertRuleState
    :param severity: Required. The alert rule severity. Possible values
     include: 'Sev0', 'Sev1', 'Sev2', 'Sev3', 'Sev4'
    :type severity: str or ~azure.mgmt.alertsmanagement.models.Severity
    :param frequency: Required. The alert rule frequency in ISO8601 format.
     The time granularity must be in minutes and minimum value is 5 minutes.
    :type frequency: timedelta
    :param detector: Required. The alert rule's detector.
    :type detector: ~azure.mgmt.alertsmanagement.models.Detector
    :param scope: Required. The alert rule resources scope.
    :type scope: list[str]
    :param action_groups: Required. The alert rule actions.
    :type action_groups:
     ~azure.mgmt.alertsmanagement.models.ActionGroupsInformation
    :param throttling: The alert rule throttling information.
    :type throttling:
     ~azure.mgmt.alertsmanagement.models.ThrottlingInformation
    """

    _validation = {
        'id': {'readonly': True},
        'type': {'readonly': True},
        'name': {'readonly': True},
        'state': {'required': True},
        'severity': {'required': True},
        'frequency': {'required': True},
        'detector': {'required': True},
        'scope': {'required': True},
        'action_groups': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'state': {'key': 'properties.state', 'type': 'str'},
        'severity': {'key': 'properties.severity', 'type': 'str'},
        'frequency': {'key': 'properties.frequency', 'type': 'duration'},
        'detector': {'key': 'properties.detector', 'type': 'Detector'},
        'scope': {'key': 'properties.scope', 'type': '[str]'},
        'action_groups': {'key': 'properties.actionGroups', 'type': 'ActionGroupsInformation'},
        'throttling': {'key': 'properties.throttling', 'type': 'ThrottlingInformation'},
    }

    def __init__(self, **kwargs):
        super(AlertRule, self).__init__(**kwargs)
        self.description = kwargs.get('description', None)
        self.state = kwargs.get('state', None)
        self.severity = kwargs.get('severity', None)
        self.frequency = kwargs.get('frequency', None)
        self.detector = kwargs.get('detector', None)
        self.scope = kwargs.get('scope', None)
        self.action_groups = kwargs.get('action_groups', None)
        self.throttling = kwargs.get('throttling', None)
