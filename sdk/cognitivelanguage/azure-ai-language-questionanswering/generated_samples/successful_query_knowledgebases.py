# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.ai.language.questionanswering import QuestionAnsweringClient

"""
# PREREQUISITES
    pip install azure-ai-language-questionanswering
# USAGE
    python successful_query_knowledgebases.py
"""


def main():
    client = QuestionAnsweringClient(
        endpoint="{Endpoint}",
        credential="CREDENTIAL",
    )

    response = client.get_answers(
        knowledge_base_query_options={
            "answerSpanRequest": {"confidenceScoreThreshold": 0.2, "enable": True, "topAnswersWithSpan": 1},
            "confidenceScoreThreshold": 0.2,
            "context": {"previousQnaId": 9, "previousUserQuery": "Where are QnA Maker quickstarts?"},
            "filters": {
                "logicalOperation": "AND",
                "metadataFilter": {
                    "logicalOperation": "AND",
                    "metadata": [{"key": "category", "value": "api"}, {"key": "editorial", "value": "chitchat"}],
                },
                "sourceFilter": ["filename1.pdf", "https://www.wikipedia.org/microsoft"],
            },
            "includeUnstructuredSources": True,
            "queryPreferences": {
                "matchingPolicy": {"disableFullMatch": False, "fields": ["Questions", "Answer"], "kind": "Prebuilt"},
                "scorer": "Transformer",
            },
            "question": "how long it takes to charge surface?",
            "top": 3,
            "userId": "sd53lsY=",
        },
        project_name="proj1",
        deployment_name="production",
    )
    print(response)


# x-ms-original-file: 2025-05-15-preview/questionanswering/SuccessfulQueryKnowledgebases.json
if __name__ == "__main__":
    main()
