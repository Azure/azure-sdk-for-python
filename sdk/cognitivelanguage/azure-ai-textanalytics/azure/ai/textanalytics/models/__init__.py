# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models import (  # type: ignore
    AbstractiveSummarizationActionContent,
    AbstractiveSummarizationOperationAction,
    AbstractiveSummarizationOperationResult,
    AbstractiveSummarizationResult,
    AbstractiveSummary,
    AbstractiveSummaryActionResult,
    AgeMetadata,
    AllowOverlapEntityPolicyType,
    AnalyzeTextEntitiesResult,
    AnalyzeTextEntityLinkingResult,
    AnalyzeTextError,
    AnalyzeTextInput,
    AnalyzeTextKeyPhraseResult,
    AnalyzeTextLROResult,
    AnalyzeTextLanguageDetectionResult,
    AnalyzeTextOperationAction,
    AnalyzeTextOperationState,
    AnalyzeTextPiiResult,
    AnalyzeTextResult,
    AnalyzeTextSentimentResult,
    AreaMetadata,
    BaseMetadata,
    BaseRedactionPolicy,
    CharacterMaskPolicyType,
    ClassificationActionResult,
    ClassificationResult,
    CurrencyMetadata,
    CustomEntitiesActionContent,
    CustomEntitiesLROTask,
    CustomEntitiesResult,
    CustomEntityActionResult,
    CustomEntityRecognitionOperationResult,
    CustomLabelClassificationResult,
    CustomMultiLabelClassificationActionContent,
    CustomMultiLabelClassificationOperationAction,
    CustomMultiLabelClassificationOperationResult,
    CustomSingleLabelClassificationActionContent,
    CustomSingleLabelClassificationOperationAction,
    CustomSingleLabelClassificationOperationResult,
    DateMetadata,
    DateTimeMetadata,
    DateValue,
    DetectedLanguage,
    DocumentError,
    DocumentStatistics,
    DocumentWarning,
    EntitiesActionContent,
    EntitiesLROTask,
    EntitiesResult,
    EntitiesWithMetadataAutoResult,
    EntityActionResult,
    EntityActionResultWithMetadata,
    EntityInferenceConfig,
    EntityLinkingActionContent,
    EntityLinkingActionResult,
    EntityLinkingLROTask,
    EntityLinkingMatch,
    EntityLinkingOperationResult,
    EntityLinkingResult,
    EntityMaskPolicyType,
    EntityOverlapPolicy,
    EntityRecognitionOperationResult,
    EntitySynonym,
    EntitySynonyms,
    EntityTag,
    ErrorResponse,
    ExtractedSummaryActionResult,
    ExtractedSummarySentence,
    ExtractiveSummarizationActionContent,
    ExtractiveSummarizationOperationAction,
    ExtractiveSummarizationOperationResult,
    ExtractiveSummarizationResult,
    FhirBundle,
    HealthcareActionResult,
    HealthcareAssertion,
    HealthcareEntity,
    HealthcareEntityLink,
    HealthcareLROResult,
    HealthcareLROTask,
    HealthcareRelation,
    HealthcareRelationEntity,
    HealthcareResult,
    HealthcareTaskParameters,
    InformationMetadata,
    InnerErrorModel,
    KeyPhraseActionContent,
    KeyPhraseExtractionOperationResult,
    KeyPhraseLROTask,
    KeyPhraseResult,
    KeyPhrasesActionResult,
    LanguageDetectionActionContent,
    LanguageDetectionDocumentResult,
    LanguageDetectionResult,
    LanguageDetectionTextInput,
    LanguageInput,
    LengthMetadata,
    LinkedEntity,
    MatchLongestEntityPolicyType,
    MultiLanguageInput,
    MultiLanguageTextInput,
    NamedEntity,
    NamedEntityWithMetadata,
    NoMaskPolicyType,
    NumberMetadata,
    NumericRangeMetadata,
    OrdinalMetadata,
    PiiActionContent,
    PiiEntity,
    PiiEntityRecognitionOperationResult,
    PiiLROTask,
    PiiResult,
    PiiResultWithDetectedLanguage,
    RequestStatistics,
    SentenceAssessment,
    SentenceSentiment,
    SentenceTarget,
    SentimentActionResult,
    SentimentAnalysisActionContent,
    SentimentAnalysisOperationAction,
    SentimentConfidenceScores,
    SentimentLROResult,
    SentimentResult,
    SpeedMetadata,
    SummaryContext,
    TargetConfidenceScoreLabel,
    TargetRelation,
    TemperatureMetadata,
    TemporalSetMetadata,
    TemporalSpanMetadata,
    TemporalSpanValues,
    TextActions,
    TextEntityLinkingInput,
    TextEntityRecognitionInput,
    TextKeyPhraseExtractionInput,
    TextLanguageDetectionInput,
    TextPiiEntitiesRecognitionInput,
    TextSentimentAnalysisInput,
    TimeMetadata,
    ValueExclusionPolicy,
    VolumeMetadata,
    WeightMetadata,
)

from ._enums import (  # type: ignore
    AgeUnit,
    AnalyzeTextErrorCode,
    AnalyzeTextInputKind,
    AnalyzeTextOperationActionKind,
    AnalyzeTextOperationResultsKind,
    AnalyzeTextResultsKind,
    AreaUnit,
    DocumentSentiment,
    EntityCategory,
    ExtractiveSummarizationSortingCriteria,
    FhirVersion,
    HealthcareAssertionAssociation,
    HealthcareAssertionCertainty,
    HealthcareAssertionConditionality,
    HealthcareAssertionTemporality,
    HealthcareDocumentType,
    HealthcareEntityCategory,
    InformationUnit,
    InnerErrorCode,
    LengthUnit,
    MetadataKind,
    NumberKind,
    PiiCategoriesExclude,
    PiiCategory,
    PiiDomain,
    PolicyKind,
    RangeInclusivity,
    RangeKind,
    RedactionCharacter,
    RedactionPolicyKind,
    RelationType,
    RelativeTo,
    ScriptCode,
    ScriptKind,
    SentenceSentimentValue,
    SpeedUnit,
    StringIndexType,
    SummaryLengthBucket,
    TargetRelationType,
    TemperatureUnit,
    TemporalModifier,
    TextActionState,
    TokenSentiment,
    VolumeUnit,
    WarningCode,
    WeightUnit,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AbstractiveSummarizationActionContent",
    "AbstractiveSummarizationOperationAction",
    "AbstractiveSummarizationOperationResult",
    "AbstractiveSummarizationResult",
    "AbstractiveSummary",
    "AbstractiveSummaryActionResult",
    "AgeMetadata",
    "AllowOverlapEntityPolicyType",
    "AnalyzeTextEntitiesResult",
    "AnalyzeTextEntityLinkingResult",
    "AnalyzeTextError",
    "AnalyzeTextInput",
    "AnalyzeTextKeyPhraseResult",
    "AnalyzeTextLROResult",
    "AnalyzeTextLanguageDetectionResult",
    "AnalyzeTextOperationAction",
    "AnalyzeTextOperationState",
    "AnalyzeTextPiiResult",
    "AnalyzeTextResult",
    "AnalyzeTextSentimentResult",
    "AreaMetadata",
    "BaseMetadata",
    "BaseRedactionPolicy",
    "CharacterMaskPolicyType",
    "ClassificationActionResult",
    "ClassificationResult",
    "CurrencyMetadata",
    "CustomEntitiesActionContent",
    "CustomEntitiesLROTask",
    "CustomEntitiesResult",
    "CustomEntityActionResult",
    "CustomEntityRecognitionOperationResult",
    "CustomLabelClassificationResult",
    "CustomMultiLabelClassificationActionContent",
    "CustomMultiLabelClassificationOperationAction",
    "CustomMultiLabelClassificationOperationResult",
    "CustomSingleLabelClassificationActionContent",
    "CustomSingleLabelClassificationOperationAction",
    "CustomSingleLabelClassificationOperationResult",
    "DateMetadata",
    "DateTimeMetadata",
    "DateValue",
    "DetectedLanguage",
    "DocumentError",
    "DocumentStatistics",
    "DocumentWarning",
    "EntitiesActionContent",
    "EntitiesLROTask",
    "EntitiesResult",
    "EntitiesWithMetadataAutoResult",
    "EntityActionResult",
    "EntityActionResultWithMetadata",
    "EntityInferenceConfig",
    "EntityLinkingActionContent",
    "EntityLinkingActionResult",
    "EntityLinkingLROTask",
    "EntityLinkingMatch",
    "EntityLinkingOperationResult",
    "EntityLinkingResult",
    "EntityMaskPolicyType",
    "EntityOverlapPolicy",
    "EntityRecognitionOperationResult",
    "EntitySynonym",
    "EntitySynonyms",
    "EntityTag",
    "ErrorResponse",
    "ExtractedSummaryActionResult",
    "ExtractedSummarySentence",
    "ExtractiveSummarizationActionContent",
    "ExtractiveSummarizationOperationAction",
    "ExtractiveSummarizationOperationResult",
    "ExtractiveSummarizationResult",
    "FhirBundle",
    "HealthcareActionResult",
    "HealthcareAssertion",
    "HealthcareEntity",
    "HealthcareEntityLink",
    "HealthcareLROResult",
    "HealthcareLROTask",
    "HealthcareRelation",
    "HealthcareRelationEntity",
    "HealthcareResult",
    "HealthcareTaskParameters",
    "InformationMetadata",
    "InnerErrorModel",
    "KeyPhraseActionContent",
    "KeyPhraseExtractionOperationResult",
    "KeyPhraseLROTask",
    "KeyPhraseResult",
    "KeyPhrasesActionResult",
    "LanguageDetectionActionContent",
    "LanguageDetectionDocumentResult",
    "LanguageDetectionResult",
    "LanguageDetectionTextInput",
    "LanguageInput",
    "LengthMetadata",
    "LinkedEntity",
    "MatchLongestEntityPolicyType",
    "MultiLanguageInput",
    "MultiLanguageTextInput",
    "NamedEntity",
    "NamedEntityWithMetadata",
    "NoMaskPolicyType",
    "NumberMetadata",
    "NumericRangeMetadata",
    "OrdinalMetadata",
    "PiiActionContent",
    "PiiEntity",
    "PiiEntityRecognitionOperationResult",
    "PiiLROTask",
    "PiiResult",
    "PiiResultWithDetectedLanguage",
    "RequestStatistics",
    "SentenceAssessment",
    "SentenceSentiment",
    "SentenceTarget",
    "SentimentActionResult",
    "SentimentAnalysisActionContent",
    "SentimentAnalysisOperationAction",
    "SentimentConfidenceScores",
    "SentimentLROResult",
    "SentimentResult",
    "SpeedMetadata",
    "SummaryContext",
    "TargetConfidenceScoreLabel",
    "TargetRelation",
    "TemperatureMetadata",
    "TemporalSetMetadata",
    "TemporalSpanMetadata",
    "TemporalSpanValues",
    "TextActions",
    "TextEntityLinkingInput",
    "TextEntityRecognitionInput",
    "TextKeyPhraseExtractionInput",
    "TextLanguageDetectionInput",
    "TextPiiEntitiesRecognitionInput",
    "TextSentimentAnalysisInput",
    "TimeMetadata",
    "ValueExclusionPolicy",
    "VolumeMetadata",
    "WeightMetadata",
    "AgeUnit",
    "AnalyzeTextErrorCode",
    "AnalyzeTextInputKind",
    "AnalyzeTextOperationActionKind",
    "AnalyzeTextOperationResultsKind",
    "AnalyzeTextResultsKind",
    "AreaUnit",
    "DocumentSentiment",
    "EntityCategory",
    "ExtractiveSummarizationSortingCriteria",
    "FhirVersion",
    "HealthcareAssertionAssociation",
    "HealthcareAssertionCertainty",
    "HealthcareAssertionConditionality",
    "HealthcareAssertionTemporality",
    "HealthcareDocumentType",
    "HealthcareEntityCategory",
    "InformationUnit",
    "InnerErrorCode",
    "LengthUnit",
    "MetadataKind",
    "NumberKind",
    "PiiCategoriesExclude",
    "PiiCategory",
    "PiiDomain",
    "PolicyKind",
    "RangeInclusivity",
    "RangeKind",
    "RedactionCharacter",
    "RedactionPolicyKind",
    "RelationType",
    "RelativeTo",
    "ScriptCode",
    "ScriptKind",
    "SentenceSentimentValue",
    "SpeedUnit",
    "StringIndexType",
    "SummaryLengthBucket",
    "TargetRelationType",
    "TemperatureUnit",
    "TemporalModifier",
    "TextActionState",
    "TokenSentiment",
    "VolumeUnit",
    "WarningCode",
    "WeightUnit",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
