# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models import (  # type: ignore
    AnalyzeConversationAuthoringConfusionMatrixCell,
    AnalyzeConversationAuthoringConfusionMatrixRow,
    AnalyzeConversationAuthoringDataGenerationConnectionInfo,
    AnalyzeConversationAuthoringDataGenerationSettings,
    AnalyzeConversationAuthoringEntityEvaluationSummary,
    AnalyzeConversationAuthoringUtteranceEntitiesEvaluationResult,
    AnalyzeConversationAuthoringUtteranceEntityEvaluationResult,
    AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult,
    AssignDeploymentResourcesDetails,
    AssignedDeploymentResource,
    AssignedProjectDeploymentMetadata,
    AssignedProjectDeploymentsMetadata,
    ConversationExportedAssociatedEntityLabel,
    ConversationExportedEntity,
    ConversationExportedIntent,
    ConversationExportedProjectAsset,
    ConversationExportedUtterance,
    CopyProjectDetails,
    CopyProjectState,
    CreateDeploymentDetails,
    CreateProjectDetails,
    DeleteDeploymentDetails,
    DeploymentDeleteFromResourcesState,
    DeploymentResource,
    DeploymentResourcesState,
    DeploymentState,
    EntitiesEvaluationSummary,
    EvalSummary,
    EvaluationDetails,
    EvaluationJobResult,
    EvaluationState,
    ExportProjectState,
    ExportedConversationOrchestration,
    ExportedConversationOrchestrationDetails,
    ExportedEntityList,
    ExportedEntityListSynonym,
    ExportedEntityRegex,
    ExportedEntityRegexExpression,
    ExportedEntitySublist,
    ExportedLuisOrchestration,
    ExportedLuisOrchestrationDetails,
    ExportedModelDetails,
    ExportedModelState,
    ExportedOrchestrationDetails,
    ExportedPrebuiltEntity,
    ExportedProject,
    ExportedProjectAsset,
    ExportedQuestionAnsweringOrchestration,
    ExportedQuestionAnsweringOrchestrationDetails,
    ExportedTrainedModel,
    ExportedUtteranceEntityLabel,
    ImportProjectState,
    IntentEvaluationSummary,
    IntentsEvaluationSummary,
    LoadSnapshotState,
    OrchestrationExportedIntent,
    OrchestrationExportedProjectAsset,
    OrchestrationExportedUtterance,
    PrebuiltEntity,
    ProjectDeletionState,
    ProjectDeployment,
    ProjectMetadata,
    ProjectSettings,
    ProjectTrainedModel,
    ResourceMetadata,
    SubTrainingState,
    SupportedLanguage,
    SwapDeploymentsDetails,
    SwapDeploymentsState,
    TrainingConfigVersion,
    TrainingJobDetails,
    TrainingJobResult,
    TrainingState,
    UnassignDeploymentResourcesDetails,
    UtteranceEvaluationResult,
)

from ._enums import (  # type: ignore
    AnalyzeConversationAuthoringDataGenerationConnectionKind,
    CompositionMode,
    DatasetType,
    EvaluationKind,
    ExportedProjectFormat,
    OperationStatus,
    OrchestrationTargetProjectKind,
    ProjectKind,
    StringIndexType,
    TrainingMode,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AnalyzeConversationAuthoringConfusionMatrixCell",
    "AnalyzeConversationAuthoringConfusionMatrixRow",
    "AnalyzeConversationAuthoringDataGenerationConnectionInfo",
    "AnalyzeConversationAuthoringDataGenerationSettings",
    "AnalyzeConversationAuthoringEntityEvaluationSummary",
    "AnalyzeConversationAuthoringUtteranceEntitiesEvaluationResult",
    "AnalyzeConversationAuthoringUtteranceEntityEvaluationResult",
    "AnalyzeConversationAuthoringUtteranceIntentsEvaluationResult",
    "AssignDeploymentResourcesDetails",
    "AssignedDeploymentResource",
    "AssignedProjectDeploymentMetadata",
    "AssignedProjectDeploymentsMetadata",
    "ConversationExportedAssociatedEntityLabel",
    "ConversationExportedEntity",
    "ConversationExportedIntent",
    "ConversationExportedProjectAsset",
    "ConversationExportedUtterance",
    "CopyProjectDetails",
    "CopyProjectState",
    "CreateDeploymentDetails",
    "CreateProjectDetails",
    "DeleteDeploymentDetails",
    "DeploymentDeleteFromResourcesState",
    "DeploymentResource",
    "DeploymentResourcesState",
    "DeploymentState",
    "EntitiesEvaluationSummary",
    "EvalSummary",
    "EvaluationDetails",
    "EvaluationJobResult",
    "EvaluationState",
    "ExportProjectState",
    "ExportedConversationOrchestration",
    "ExportedConversationOrchestrationDetails",
    "ExportedEntityList",
    "ExportedEntityListSynonym",
    "ExportedEntityRegex",
    "ExportedEntityRegexExpression",
    "ExportedEntitySublist",
    "ExportedLuisOrchestration",
    "ExportedLuisOrchestrationDetails",
    "ExportedModelDetails",
    "ExportedModelState",
    "ExportedOrchestrationDetails",
    "ExportedPrebuiltEntity",
    "ExportedProject",
    "ExportedProjectAsset",
    "ExportedQuestionAnsweringOrchestration",
    "ExportedQuestionAnsweringOrchestrationDetails",
    "ExportedTrainedModel",
    "ExportedUtteranceEntityLabel",
    "ImportProjectState",
    "IntentEvaluationSummary",
    "IntentsEvaluationSummary",
    "LoadSnapshotState",
    "OrchestrationExportedIntent",
    "OrchestrationExportedProjectAsset",
    "OrchestrationExportedUtterance",
    "PrebuiltEntity",
    "ProjectDeletionState",
    "ProjectDeployment",
    "ProjectMetadata",
    "ProjectSettings",
    "ProjectTrainedModel",
    "ResourceMetadata",
    "SubTrainingState",
    "SupportedLanguage",
    "SwapDeploymentsDetails",
    "SwapDeploymentsState",
    "TrainingConfigVersion",
    "TrainingJobDetails",
    "TrainingJobResult",
    "TrainingState",
    "UnassignDeploymentResourcesDetails",
    "UtteranceEvaluationResult",
    "AnalyzeConversationAuthoringDataGenerationConnectionKind",
    "CompositionMode",
    "DatasetType",
    "EvaluationKind",
    "ExportedProjectFormat",
    "OperationStatus",
    "OrchestrationTargetProjectKind",
    "ProjectKind",
    "StringIndexType",
    "TrainingMode",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
