# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import ConversationAnalysisClientTestBase, ConversationAnalysisPreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestConversationAnalysis(ConversationAnalysisClientTestBase):
    @ConversationAnalysisPreparer()
    @recorded_by_proxy
    def test_analyze_conversation(self, conversationanalysis_endpoint):
        client = self.create_client(endpoint=conversationanalysis_endpoint)
        response = client.analyze_conversation(
            body={
                "analysisInput": {
                    "conversationItem": {
                        "id": "str",
                        "participantId": "str",
                        "text": "str",
                        "language": "str",
                        "modality": "str",
                        "role": "str",
                    }
                },
                "kind": "Conversation",
                "parameters": {
                    "deploymentName": "str",
                    "projectName": "str",
                    "directTarget": "str",
                    "isLoggingEnabled": bool,
                    "stringIndexType": "str",
                    "targetProjectParameters": {"str": "analysis_config"},
                    "verbose": bool,
                },
            },
        )

        # please add some check logic here by yourself
        # ...

    @ConversationAnalysisPreparer()
    @recorded_by_proxy
    def test_begin_cancel_job(self, conversationanalysis_endpoint):
        client = self.create_client(endpoint=conversationanalysis_endpoint)
        response = client.begin_cancel_job(
            job_id="str",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...
