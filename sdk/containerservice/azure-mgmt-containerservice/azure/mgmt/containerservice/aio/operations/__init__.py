# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._managed_clusters_operations import ManagedClustersOperations  # type: ignore
from ._maintenance_configurations_operations import MaintenanceConfigurationsOperations  # type: ignore
from ._agent_pools_operations import AgentPoolsOperations  # type: ignore
from ._private_endpoint_connections_operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._private_link_resources_operations import PrivateLinkResourcesOperations  # type: ignore
from ._resolve_private_link_service_id_operations import ResolvePrivateLinkServiceIdOperations  # type: ignore
from ._snapshots_operations import SnapshotsOperations  # type: ignore
from ._trusted_access_role_bindings_operations import TrustedAccessRoleBindingsOperations  # type: ignore
from ._trusted_access_roles_operations import TrustedAccessRolesOperations  # type: ignore
from ._machines_operations import MachinesOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "ManagedClustersOperations",
    "MaintenanceConfigurationsOperations",
    "AgentPoolsOperations",
    "PrivateEndpointConnectionsOperations",
    "PrivateLinkResourcesOperations",
    "ResolvePrivateLinkServiceIdOperations",
    "SnapshotsOperations",
    "TrustedAccessRoleBindingsOperations",
    "TrustedAccessRolesOperations",
    "MachinesOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
