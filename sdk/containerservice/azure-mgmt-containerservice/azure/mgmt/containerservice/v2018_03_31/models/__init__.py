# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import ContainerServiceDiagnosticsProfile
from ._models_py3 import ContainerServiceLinuxProfile
from ._models_py3 import ContainerServiceMasterProfile
from ._models_py3 import ContainerServiceNetworkProfile
from ._models_py3 import ContainerServiceSshConfiguration
from ._models_py3 import ContainerServiceSshPublicKey
from ._models_py3 import ContainerServiceVMDiagnostics
from ._models_py3 import ContainerServiceWindowsProfile
from ._models_py3 import CredentialResult
from ._models_py3 import CredentialResults
from ._models_py3 import ManagedCluster
from ._models_py3 import ManagedClusterAADProfile
from ._models_py3 import ManagedClusterAccessProfile
from ._models_py3 import ManagedClusterAddonProfile
from ._models_py3 import ManagedClusterAgentPoolProfile
from ._models_py3 import ManagedClusterListResult
from ._models_py3 import ManagedClusterPoolUpgradeProfile
from ._models_py3 import ManagedClusterServicePrincipalProfile
from ._models_py3 import ManagedClusterUpgradeProfile
from ._models_py3 import OperationListResult
from ._models_py3 import OperationValue
from ._models_py3 import OrchestratorProfile
from ._models_py3 import Resource
from ._models_py3 import TagsObject

from ._container_service_client_enums import ContainerServiceStorageProfileTypes
from ._container_service_client_enums import ContainerServiceVMSizeTypes
from ._container_service_client_enums import Count
from ._container_service_client_enums import NetworkPlugin
from ._container_service_client_enums import NetworkPolicy
from ._container_service_client_enums import OSType
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ContainerServiceDiagnosticsProfile",
    "ContainerServiceLinuxProfile",
    "ContainerServiceMasterProfile",
    "ContainerServiceNetworkProfile",
    "ContainerServiceSshConfiguration",
    "ContainerServiceSshPublicKey",
    "ContainerServiceVMDiagnostics",
    "ContainerServiceWindowsProfile",
    "CredentialResult",
    "CredentialResults",
    "ManagedCluster",
    "ManagedClusterAADProfile",
    "ManagedClusterAccessProfile",
    "ManagedClusterAddonProfile",
    "ManagedClusterAgentPoolProfile",
    "ManagedClusterListResult",
    "ManagedClusterPoolUpgradeProfile",
    "ManagedClusterServicePrincipalProfile",
    "ManagedClusterUpgradeProfile",
    "OperationListResult",
    "OperationValue",
    "OrchestratorProfile",
    "Resource",
    "TagsObject",
    "ContainerServiceStorageProfileTypes",
    "ContainerServiceVMSizeTypes",
    "Count",
    "NetworkPlugin",
    "NetworkPolicy",
    "OSType",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
