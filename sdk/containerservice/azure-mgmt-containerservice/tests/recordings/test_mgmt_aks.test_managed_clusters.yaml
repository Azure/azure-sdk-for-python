interactions:
- request:
    body: '{"properties": {"dnsPrefix": "akspythonsdk", "agentPoolProfiles": [{"count":
      1, "vmSize": "Standard_DS2_v2", "maxPods": 110, "osType": "Linux", "maxCount":
      100, "minCount": 1, "enableAutoScaling": true, "type": "VirtualMachineScaleSets",
      "mode": "System", "name": "aksagent"}], "servicePrincipalProfile": {"clientId":
      "8a95323f-4a83-4a69-903f-7d2c69349c3c", "secret": "coMr6UcO..OvfiJX@B5]pXr6rsgw28X6"}},
      "location": "eastus"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '427'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: PUT
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7\"\
        ,\n  \"location\": \"eastus\",\n  \"name\": \"7\",\n  \"type\": \"Microsoft.ContainerService/ManagedClusters\"\
        ,\n  \"properties\": {\n   \"provisioningState\": \"Creating\",\n   \"powerState\"\
        : {\n    \"code\": \"Running\"\n   },\n   \"kubernetesVersion\": \"1.18.14\"\
        ,\n   \"dnsPrefix\": \"akspythonsdk\",\n   \"fqdn\": \"akspythonsdk-87436633.hcp.eastus.azmk8s.io\"\
        ,\n   \"azurePortalFQDN\": \"akspythonsdk-87436633.portal.hcp.eastus.azmk8s.io\"\
        ,\n   \"agentPoolProfiles\": [\n    {\n     \"name\": \"aksagent\",\n    \
        \ \"count\": 1,\n     \"vmSize\": \"Standard_DS2_v2\",\n     \"osDiskSizeGB\"\
        : 128,\n     \"osDiskType\": \"Managed\",\n     \"kubeletDiskType\": \"OS\"\
        ,\n     \"maxPods\": 110,\n     \"type\": \"VirtualMachineScaleSets\",\n \
        \    \"maxCount\": 100,\n     \"minCount\": 1,\n     \"enableAutoScaling\"\
        : true,\n     \"provisioningState\": \"Creating\",\n     \"powerState\": {\n\
        \      \"code\": \"Running\"\n     },\n     \"orchestratorVersion\": \"1.18.14\"\
        ,\n     \"nodeLabels\": {},\n     \"mode\": \"System\",\n     \"osType\":\
        \ \"Linux\",\n     \"nodeImageVersion\": \"AKSUbuntu-1804gen2-2021.02.17\"\
        \n    }\n   ],\n   \"servicePrincipalProfile\": {\n    \"clientId\": \"8a95323f-4a83-4a69-903f-7d2c69349c3c\"\
        \n   },\n   \"addonProfiles\": {\n    \"KubeDashboard\": {\n     \"enabled\"\
        : false,\n     \"config\": null\n    }\n   },\n   \"nodeResourceGroup\": \"\
        MC_test_mgmt_aks_test_managed_clusters1f60e61_7_eastus\",\n   \"enableRBAC\"\
        : true,\n   \"networkProfile\": {\n    \"networkPlugin\": \"kubenet\",\n \
        \   \"loadBalancerSku\": \"standard\",\n    \"loadBalancerProfile\": {\n \
        \    \"managedOutboundIPs\": {\n      \"count\": 1\n     }\n    },\n    \"\
        podCidr\": \"10.244.0.0/16\",\n    \"serviceCidr\": \"10.0.0.0/16\",\n   \
        \ \"dnsServiceIP\": \"10.0.0.10\",\n    \"dockerBridgeCidr\": \"172.17.0.1/16\"\
        ,\n    \"outboundType\": \"loadBalancer\"\n   },\n   \"maxAgentPools\": 10\n\
        \  },\n  \"sku\": {\n   \"name\": \"Basic\",\n   \"tier\": \"Free\"\n  }\n\
        \ }"
    headers:
      azure-asyncoperation:
      - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/c5f540ae-a95d-4e0d-a899-8a0c09ac7f1e?api-version=2017-08-31
      cache-control:
      - no-cache
      content-length:
      - '1912'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:24:15 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1198'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/c5f540ae-a95d-4e0d-a899-8a0c09ac7f1e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"ae40f5c5-5da9-0d4e-a899-8a0c09ac7f1e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:24:13.7233333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:24:45 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/c5f540ae-a95d-4e0d-a899-8a0c09ac7f1e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"ae40f5c5-5da9-0d4e-a899-8a0c09ac7f1e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:24:13.7233333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:25:17 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/c5f540ae-a95d-4e0d-a899-8a0c09ac7f1e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"ae40f5c5-5da9-0d4e-a899-8a0c09ac7f1e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:24:13.7233333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:25:46 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/c5f540ae-a95d-4e0d-a899-8a0c09ac7f1e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"ae40f5c5-5da9-0d4e-a899-8a0c09ac7f1e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:24:13.7233333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:17 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/c5f540ae-a95d-4e0d-a899-8a0c09ac7f1e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"ae40f5c5-5da9-0d4e-a899-8a0c09ac7f1e\",\n  \"status\"\
        : \"Succeeded\",\n  \"startTime\": \"2021-03-03T03:24:13.7233333Z\",\n  \"\
        endTime\": \"2021-03-03T03:26:25.2167488Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '170'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:48 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7\"\
        ,\n  \"location\": \"eastus\",\n  \"name\": \"7\",\n  \"type\": \"Microsoft.ContainerService/ManagedClusters\"\
        ,\n  \"properties\": {\n   \"provisioningState\": \"Succeeded\",\n   \"powerState\"\
        : {\n    \"code\": \"Running\"\n   },\n   \"kubernetesVersion\": \"1.18.14\"\
        ,\n   \"dnsPrefix\": \"akspythonsdk\",\n   \"fqdn\": \"akspythonsdk-87436633.hcp.eastus.azmk8s.io\"\
        ,\n   \"azurePortalFQDN\": \"akspythonsdk-87436633.portal.hcp.eastus.azmk8s.io\"\
        ,\n   \"agentPoolProfiles\": [\n    {\n     \"name\": \"aksagent\",\n    \
        \ \"count\": 1,\n     \"vmSize\": \"Standard_DS2_v2\",\n     \"osDiskSizeGB\"\
        : 128,\n     \"osDiskType\": \"Managed\",\n     \"kubeletDiskType\": \"OS\"\
        ,\n     \"maxPods\": 110,\n     \"type\": \"VirtualMachineScaleSets\",\n \
        \    \"maxCount\": 100,\n     \"minCount\": 1,\n     \"enableAutoScaling\"\
        : true,\n     \"provisioningState\": \"Succeeded\",\n     \"powerState\":\
        \ {\n      \"code\": \"Running\"\n     },\n     \"orchestratorVersion\": \"\
        1.18.14\",\n     \"nodeLabels\": {},\n     \"mode\": \"System\",\n     \"\
        osType\": \"Linux\",\n     \"nodeImageVersion\": \"AKSUbuntu-1804gen2-2021.02.10\"\
        \n    }\n   ],\n   \"servicePrincipalProfile\": {\n    \"clientId\": \"8a95323f-4a83-4a69-903f-7d2c69349c3c\"\
        \n   },\n   \"addonProfiles\": {\n    \"KubeDashboard\": {\n     \"enabled\"\
        : false,\n     \"config\": null\n    }\n   },\n   \"nodeResourceGroup\": \"\
        MC_test_mgmt_aks_test_managed_clusters1f60e61_7_eastus\",\n   \"enableRBAC\"\
        : true,\n   \"networkProfile\": {\n    \"networkPlugin\": \"kubenet\",\n \
        \   \"loadBalancerSku\": \"Standard\",\n    \"loadBalancerProfile\": {\n \
        \    \"managedOutboundIPs\": {\n      \"count\": 1\n     },\n     \"effectiveOutboundIPs\"\
        : [\n      {\n       \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MC_test_mgmt_aks_test_managed_clusters1f60e61_7_eastus/providers/Microsoft.Network/publicIPAddresses/1341bf8a-7ec9-46eb-8f82-755c84566198\"\
        \n      }\n     ]\n    },\n    \"podCidr\": \"10.244.0.0/16\",\n    \"serviceCidr\"\
        : \"10.0.0.0/16\",\n    \"dnsServiceIP\": \"10.0.0.10\",\n    \"dockerBridgeCidr\"\
        : \"172.17.0.1/16\",\n    \"outboundType\": \"loadBalancer\"\n   },\n   \"\
        maxAgentPools\": 10,\n   \"autoScalerProfile\": {\n    \"balance-similar-node-groups\"\
        : \"false\",\n    \"expander\": \"random\",\n    \"max-empty-bulk-delete\"\
        : \"10\",\n    \"max-graceful-termination-sec\": \"600\",\n    \"max-node-provision-time\"\
        : \"15m\",\n    \"max-total-unready-percentage\": \"45\",\n    \"new-pod-scale-up-delay\"\
        : \"0s\",\n    \"ok-total-unready-count\": \"3\",\n    \"scale-down-delay-after-add\"\
        : \"10m\",\n    \"scale-down-delay-after-delete\": \"10s\",\n    \"scale-down-delay-after-failure\"\
        : \"3m\",\n    \"scale-down-unneeded-time\": \"10m\",\n    \"scale-down-unready-time\"\
        : \"20m\",\n    \"scale-down-utilization-threshold\": \"0.5\",\n    \"scan-interval\"\
        : \"10s\",\n    \"skip-nodes-with-local-storage\": \"false\",\n    \"skip-nodes-with-system-pods\"\
        : \"true\"\n   }\n  },\n  \"sku\": {\n   \"name\": \"Basic\",\n   \"tier\"\
        : \"Free\"\n  }\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '2889'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:48 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: POST
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7/listClusterAdminCredential?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"kubeconfigs\": [\n   {\n    \"name\": \"clusterAdmin\",\n  \
        \  \"value\": \"\"\
        \n   }\n  ]\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '13029'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:49 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1199'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: POST
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7/listClusterUserCredential?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"kubeconfigs\": [\n   {\n    \"name\": \"clusterUser\",\n   \
        \ \"value\": \"\"\
        \n   }\n  ]\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '13024'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:49 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1198'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7/upgradeProfiles/default?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7/upgradeprofiles/default\"\
        ,\n  \"name\": \"default\",\n  \"type\": \"Microsoft.ContainerService/managedClusters/upgradeprofiles\"\
        ,\n  \"properties\": {\n   \"controlPlaneProfile\": {\n    \"kubernetesVersion\"\
        : \"1.18.14\",\n    \"osType\": \"Linux\",\n    \"upgrades\": [\n     {\n\
        \      \"kubernetesVersion\": \"1.19.6\"\n     },\n     {\n      \"kubernetesVersion\"\
        : \"1.19.7\"\n     }\n    ]\n   },\n   \"agentPoolProfiles\": null\n  }\n\
        \ }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '566'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:50 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7\"\
        ,\n  \"location\": \"eastus\",\n  \"name\": \"7\",\n  \"type\": \"Microsoft.ContainerService/ManagedClusters\"\
        ,\n  \"properties\": {\n   \"provisioningState\": \"Succeeded\",\n   \"powerState\"\
        : {\n    \"code\": \"Running\"\n   },\n   \"kubernetesVersion\": \"1.18.14\"\
        ,\n   \"dnsPrefix\": \"akspythonsdk\",\n   \"fqdn\": \"akspythonsdk-87436633.hcp.eastus.azmk8s.io\"\
        ,\n   \"azurePortalFQDN\": \"akspythonsdk-87436633.portal.hcp.eastus.azmk8s.io\"\
        ,\n   \"agentPoolProfiles\": [\n    {\n     \"name\": \"aksagent\",\n    \
        \ \"count\": 1,\n     \"vmSize\": \"Standard_DS2_v2\",\n     \"osDiskSizeGB\"\
        : 128,\n     \"osDiskType\": \"Managed\",\n     \"kubeletDiskType\": \"OS\"\
        ,\n     \"maxPods\": 110,\n     \"type\": \"VirtualMachineScaleSets\",\n \
        \    \"maxCount\": 100,\n     \"minCount\": 1,\n     \"enableAutoScaling\"\
        : true,\n     \"provisioningState\": \"Succeeded\",\n     \"powerState\":\
        \ {\n      \"code\": \"Running\"\n     },\n     \"orchestratorVersion\": \"\
        1.18.14\",\n     \"nodeLabels\": {},\n     \"mode\": \"System\",\n     \"\
        osType\": \"Linux\",\n     \"nodeImageVersion\": \"AKSUbuntu-1804gen2-2021.02.10\"\
        \n    }\n   ],\n   \"servicePrincipalProfile\": {\n    \"clientId\": \"8a95323f-4a83-4a69-903f-7d2c69349c3c\"\
        \n   },\n   \"addonProfiles\": {\n    \"KubeDashboard\": {\n     \"enabled\"\
        : false,\n     \"config\": null\n    }\n   },\n   \"nodeResourceGroup\": \"\
        MC_test_mgmt_aks_test_managed_clusters1f60e61_7_eastus\",\n   \"enableRBAC\"\
        : true,\n   \"networkProfile\": {\n    \"networkPlugin\": \"kubenet\",\n \
        \   \"loadBalancerSku\": \"Standard\",\n    \"loadBalancerProfile\": {\n \
        \    \"managedOutboundIPs\": {\n      \"count\": 1\n     },\n     \"effectiveOutboundIPs\"\
        : [\n      {\n       \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MC_test_mgmt_aks_test_managed_clusters1f60e61_7_eastus/providers/Microsoft.Network/publicIPAddresses/1341bf8a-7ec9-46eb-8f82-755c84566198\"\
        \n      }\n     ]\n    },\n    \"podCidr\": \"10.244.0.0/16\",\n    \"serviceCidr\"\
        : \"10.0.0.0/16\",\n    \"dnsServiceIP\": \"10.0.0.10\",\n    \"dockerBridgeCidr\"\
        : \"172.17.0.1/16\",\n    \"outboundType\": \"loadBalancer\"\n   },\n   \"\
        maxAgentPools\": 10,\n   \"autoScalerProfile\": {\n    \"balance-similar-node-groups\"\
        : \"false\",\n    \"expander\": \"random\",\n    \"max-empty-bulk-delete\"\
        : \"10\",\n    \"max-graceful-termination-sec\": \"600\",\n    \"max-node-provision-time\"\
        : \"15m\",\n    \"max-total-unready-percentage\": \"45\",\n    \"new-pod-scale-up-delay\"\
        : \"0s\",\n    \"ok-total-unready-count\": \"3\",\n    \"scale-down-delay-after-add\"\
        : \"10m\",\n    \"scale-down-delay-after-delete\": \"10s\",\n    \"scale-down-delay-after-failure\"\
        : \"3m\",\n    \"scale-down-unneeded-time\": \"10m\",\n    \"scale-down-unready-time\"\
        : \"20m\",\n    \"scale-down-utilization-threshold\": \"0.5\",\n    \"scan-interval\"\
        : \"10s\",\n    \"skip-nodes-with-local-storage\": \"false\",\n    \"skip-nodes-with-system-pods\"\
        : \"true\"\n   }\n  },\n  \"sku\": {\n   \"name\": \"Basic\",\n   \"tier\"\
        : \"Free\"\n  }\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '2889'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:51 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: '{"tags": {"tier": "testing", "archv3": ""}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '43'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: PATCH
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7\"\
        ,\n  \"location\": \"eastus\",\n  \"name\": \"7\",\n  \"tags\": {\n   \"archv3\"\
        : \"\",\n   \"tier\": \"testing\"\n  },\n  \"type\": \"Microsoft.ContainerService/ManagedClusters\"\
        ,\n  \"properties\": {\n   \"provisioningState\": \"Succeeded\",\n   \"powerState\"\
        : {\n    \"code\": \"Running\"\n   },\n   \"kubernetesVersion\": \"1.18.14\"\
        ,\n   \"dnsPrefix\": \"akspythonsdk\",\n   \"fqdn\": \"akspythonsdk-87436633.hcp.eastus.azmk8s.io\"\
        ,\n   \"azurePortalFQDN\": \"akspythonsdk-87436633.portal.hcp.eastus.azmk8s.io\"\
        ,\n   \"agentPoolProfiles\": [\n    {\n     \"name\": \"aksagent\",\n    \
        \ \"count\": 1,\n     \"vmSize\": \"Standard_DS2_v2\",\n     \"osDiskSizeGB\"\
        : 128,\n     \"osDiskType\": \"Managed\",\n     \"kubeletDiskType\": \"OS\"\
        ,\n     \"maxPods\": 110,\n     \"type\": \"VirtualMachineScaleSets\",\n \
        \    \"maxCount\": 100,\n     \"minCount\": 1,\n     \"enableAutoScaling\"\
        : true,\n     \"provisioningState\": \"Succeeded\",\n     \"powerState\":\
        \ {\n      \"code\": \"Running\"\n     },\n     \"orchestratorVersion\": \"\
        1.18.14\",\n     \"nodeLabels\": {},\n     \"mode\": \"System\",\n     \"\
        osType\": \"Linux\",\n     \"nodeImageVersion\": \"AKSUbuntu-1804gen2-2021.02.10\"\
        \n    }\n   ],\n   \"servicePrincipalProfile\": {\n    \"clientId\": \"8a95323f-4a83-4a69-903f-7d2c69349c3c\"\
        \n   },\n   \"addonProfiles\": {\n    \"KubeDashboard\": {\n     \"enabled\"\
        : false,\n     \"config\": null\n    }\n   },\n   \"nodeResourceGroup\": \"\
        MC_test_mgmt_aks_test_managed_clusters1f60e61_7_eastus\",\n   \"enableRBAC\"\
        : true,\n   \"networkProfile\": {\n    \"networkPlugin\": \"kubenet\",\n \
        \   \"loadBalancerSku\": \"Standard\",\n    \"loadBalancerProfile\": {\n \
        \    \"managedOutboundIPs\": {\n      \"count\": 1\n     },\n     \"effectiveOutboundIPs\"\
        : [\n      {\n       \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MC_test_mgmt_aks_test_managed_clusters1f60e61_7_eastus/providers/Microsoft.Network/publicIPAddresses/1341bf8a-7ec9-46eb-8f82-755c84566198\"\
        \n      }\n     ]\n    },\n    \"podCidr\": \"10.244.0.0/16\",\n    \"serviceCidr\"\
        : \"10.0.0.0/16\",\n    \"dnsServiceIP\": \"10.0.0.10\",\n    \"dockerBridgeCidr\"\
        : \"172.17.0.1/16\",\n    \"outboundType\": \"loadBalancer\"\n   },\n   \"\
        maxAgentPools\": 10\n  },\n  \"sku\": {\n   \"name\": \"Basic\",\n   \"tier\"\
        : \"Free\"\n  }\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '2244'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:57 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1197'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: POST
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7/listClusterMonitoringUserCredential?api-version=2021-02-01
  response:
    body:
      string: "{\n  \"kubeconfigs\": [\n   {\n    \"name\": \"clusterMonitoringUser\"\
        ,\n    \"value\": \"\"\
        \n   }\n  ]\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '13062'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:26:58 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-writes:
      - '1197'
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: DELETE
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test_mgmt_aks_test_managed_clusters1f60e61/providers/Microsoft.ContainerService/managedClusters/7?api-version=2021-02-01
  response:
    body:
      string: ''
    headers:
      azure-asyncoperation:
      - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
      cache-control:
      - no-cache
      content-length:
      - '0'
      date:
      - Wed, 03 Mar 2021 03:26:59 GMT
      expires:
      - '-1'
      location:
      - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operationresults/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-ratelimit-remaining-subscription-deletes:
      - '14997'
    status:
      code: 202
      message: Accepted
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:27:29 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:28:00 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:28:31 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:29:01 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:29:33 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:30:03 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:30:34 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"InProgress\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '126'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:31:06 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-azure-mgmt-containerservice/15.0.0 Python/3.6.9 (Linux-5.4.72-microsoft-standard-WSL2-x86_64-with-Ubuntu-18.04-bionic)
    method: GET
    uri: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.ContainerService/locations/eastus/operations/f6b2bb9b-c72e-49e9-9400-3d808c039c2e?api-version=2017-08-31
  response:
    body:
      string: "{\n  \"name\": \"9bbbb2f6-2ec7-e949-9400-3d808c039c2e\",\n  \"status\"\
        : \"Succeeded\",\n  \"startTime\": \"2021-03-03T03:26:59.6733333Z\",\n  \"\
        endTime\": \"2021-03-03T03:31:07.9038676Z\"\n }"
    headers:
      cache-control:
      - no-cache
      content-length:
      - '170'
      content-type:
      - application/json
      date:
      - Wed, 03 Mar 2021 03:31:37 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - nginx
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      transfer-encoding:
      - chunked
      vary:
      - Accept-Encoding
      x-content-type-options:
      - nosniff
    status:
      code: 200
      message: OK
version: 1
