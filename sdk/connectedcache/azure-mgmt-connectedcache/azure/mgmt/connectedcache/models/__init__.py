# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models import (  # type: ignore
    AdditionalCacheNodeProperties,
    AdditionalCustomerProperties,
    BgpCidrsConfiguration,
    BgpConfiguration,
    CacheNodeDriveConfiguration,
    CacheNodeEntity,
    CacheNodeInstallProperties,
    CacheNodeOldResponse,
    CacheNodePreviewResource,
    CacheNodeProperty,
    ConnectedCachePatchResource,
    CustomerEntity,
    CustomerProperty,
    EnterpriseMccCacheNodeResource,
    EnterpriseMccCustomerResource,
    EnterprisePreviewResource,
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    IspCacheNodeResource,
    IspCustomerResource,
    MccCacheNodeBgpCidrDetails,
    MccCacheNodeInstallDetails,
    Operation,
    OperationDisplay,
    ProxyUrlConfiguration,
    Resource,
    SystemData,
    TrackedResource,
)

from ._enums import (  # type: ignore
    ActionType,
    AutoUpdateRingType,
    BgpReviewStateEnum,
    ConfigurationState,
    CreatedByType,
    CustomerTransitState,
    CycleType,
    Origin,
    OsType,
    ProvisioningState,
    ProxyRequired,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AdditionalCacheNodeProperties",
    "AdditionalCustomerProperties",
    "BgpCidrsConfiguration",
    "BgpConfiguration",
    "CacheNodeDriveConfiguration",
    "CacheNodeEntity",
    "CacheNodeInstallProperties",
    "CacheNodeOldResponse",
    "CacheNodePreviewResource",
    "CacheNodeProperty",
    "ConnectedCachePatchResource",
    "CustomerEntity",
    "CustomerProperty",
    "EnterpriseMccCacheNodeResource",
    "EnterpriseMccCustomerResource",
    "EnterprisePreviewResource",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "IspCacheNodeResource",
    "IspCustomerResource",
    "MccCacheNodeBgpCidrDetails",
    "MccCacheNodeInstallDetails",
    "Operation",
    "OperationDisplay",
    "ProxyUrlConfiguration",
    "Resource",
    "SystemData",
    "TrackedResource",
    "ActionType",
    "AutoUpdateRingType",
    "BgpReviewStateEnum",
    "ConfigurationState",
    "CreatedByType",
    "CustomerTransitState",
    "CycleType",
    "Origin",
    "OsType",
    "ProvisioningState",
    "ProxyRequired",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
