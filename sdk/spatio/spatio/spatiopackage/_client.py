# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, TYPE_CHECKING
from typing_extensions import Self

from azure.core import PipelineClient
from azure.core.pipeline import policies
from azure.core.rest import HttpRequest, HttpResponse

from ._configuration import AzureOrbitalPlanetaryComputerClientConfiguration
from ._serialization import Deserializer, Serializer
from .operations import (
    CollectionOperationsOperations,
    ConformanceOperationsOperations,
    CreateOperationsCollectionsOperations,
    CreateOperationsOperations,
    GetOperationsCollectionsOperations,
    IngestionGeoTemplatesOperations,
    IngestionSourcesOperations,
    IngestionsOperations,
    ItemsOperations,
    LandingOperationsOperations,
    Operations,
    QueryablesOperationsOperations,
    SearchOperationsOperations,
    addOperationsOperations,
    assetOperationsOperations,
    assetsOperationsOperations,
    availableOperationsOperations,
    boundsOperationsOperations,
    containerOperationsOperations,
    deleteOperationsOperations,
    geojsonOperationsOperations,
    getOperationsOperations,
    infoOperationsOperations,
    matrixOperationsOperations,
    partOperationsOperations,
    pointOperationsOperations,
    previewOperationsOperations,
    registerOperationsOperations,
    revokeOperationsOperations,
    setOperationsOperations,
    signedOperationsOperations,
    statisticsOperationsOperations,
    tileOperationsOperations,
    tilejsonOperationsOperations,
    updateOperationsOperations,
    wmtsOperationsOperations,
)

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials import TokenCredential


class AzureOrbitalPlanetaryComputerClient:  # pylint: disable=client-accepts-api-version-keyword,too-many-instance-attributes
    """AzureOrbitalPlanetaryComputerClient.

    :ivar ingestions: IngestionsOperations operations
    :vartype ingestions: spatiopackage.operations.IngestionsOperations
    :ivar items: ItemsOperations operations
    :vartype items: spatiopackage.operations.ItemsOperations
    :ivar ingestion_sources: IngestionSourcesOperations operations
    :vartype ingestion_sources: spatiopackage.operations.IngestionSourcesOperations
    :ivar ingestion_geo_templates: IngestionGeoTemplatesOperations operations
    :vartype ingestion_geo_templates: spatiopackage.operations.IngestionGeoTemplatesOperations
    :ivar operations: Operations operations
    :vartype operations: spatiopackage.operations.Operations
    :ivar container_operations: containerOperationsOperations operations
    :vartype container_operations: spatiopackage.operations.containerOperationsOperations
    :ivar revoke_operations: revokeOperationsOperations operations
    :vartype revoke_operations: spatiopackage.operations.revokeOperationsOperations
    :ivar signed_operations: signedOperationsOperations operations
    :vartype signed_operations: spatiopackage.operations.signedOperationsOperations
    :ivar landing_operations: LandingOperationsOperations operations
    :vartype landing_operations: spatiopackage.operations.LandingOperationsOperations
    :ivar conformance_operations: ConformanceOperationsOperations operations
    :vartype conformance_operations: spatiopackage.operations.ConformanceOperationsOperations
    :ivar search_operations: SearchOperationsOperations operations
    :vartype search_operations: spatiopackage.operations.SearchOperationsOperations
    :ivar get_operations_collections: GetOperationsCollectionsOperations operations
    :vartype get_operations_collections:
     spatiopackage.operations.GetOperationsCollectionsOperations
    :ivar create_operations_collections: CreateOperationsCollectionsOperations operations
    :vartype create_operations_collections:
     spatiopackage.operations.CreateOperationsCollectionsOperations
    :ivar update_operations: updateOperationsOperations operations
    :vartype update_operations: spatiopackage.operations.updateOperationsOperations
    :ivar delete_operations: deleteOperationsOperations operations
    :vartype delete_operations: spatiopackage.operations.deleteOperationsOperations
    :ivar queryables_operations: QueryablesOperationsOperations operations
    :vartype queryables_operations: spatiopackage.operations.QueryablesOperationsOperations
    :ivar collection_operations: CollectionOperationsOperations operations
    :vartype collection_operations: spatiopackage.operations.CollectionOperationsOperations
    :ivar set_operations: setOperationsOperations operations
    :vartype set_operations: spatiopackage.operations.setOperationsOperations
    :ivar add_operations: addOperationsOperations operations
    :vartype add_operations: spatiopackage.operations.addOperationsOperations
    :ivar bounds_operations: boundsOperationsOperations operations
    :vartype bounds_operations: spatiopackage.operations.boundsOperationsOperations
    :ivar info_operations: infoOperationsOperations operations
    :vartype info_operations: spatiopackage.operations.infoOperationsOperations
    :ivar available_operations: availableOperationsOperations operations
    :vartype available_operations: spatiopackage.operations.availableOperationsOperations
    :ivar asset_operations: assetOperationsOperations operations
    :vartype asset_operations: spatiopackage.operations.assetOperationsOperations
    :ivar statistics_operations: statisticsOperationsOperations operations
    :vartype statistics_operations: spatiopackage.operations.statisticsOperationsOperations
    :ivar geojson_operations: geojsonOperationsOperations operations
    :vartype geojson_operations: spatiopackage.operations.geojsonOperationsOperations
    :ivar tile_operations: tileOperationsOperations operations
    :vartype tile_operations: spatiopackage.operations.tileOperationsOperations
    :ivar tilejson_operations: tilejsonOperationsOperations operations
    :vartype tilejson_operations: spatiopackage.operations.tilejsonOperationsOperations
    :ivar wmts_operations: wmtsOperationsOperations operations
    :vartype wmts_operations: spatiopackage.operations.wmtsOperationsOperations
    :ivar point_operations: pointOperationsOperations operations
    :vartype point_operations: spatiopackage.operations.pointOperationsOperations
    :ivar preview_operations: previewOperationsOperations operations
    :vartype preview_operations: spatiopackage.operations.previewOperationsOperations
    :ivar part_operations: partOperationsOperations operations
    :vartype part_operations: spatiopackage.operations.partOperationsOperations
    :ivar register_operations: registerOperationsOperations operations
    :vartype register_operations: spatiopackage.operations.registerOperationsOperations
    :ivar assets_operations: assetsOperationsOperations operations
    :vartype assets_operations: spatiopackage.operations.assetsOperationsOperations
    :ivar get_operations: getOperationsOperations operations
    :vartype get_operations: spatiopackage.operations.getOperationsOperations
    :ivar create_operations: CreateOperationsOperations operations
    :vartype create_operations: spatiopackage.operations.CreateOperationsOperations
    :ivar matrix_operations: matrixOperationsOperations operations
    :vartype matrix_operations: spatiopackage.operations.matrixOperationsOperations
    :param endpoint: Service host. Required.
    :type endpoint: str
    :param credential: Credential used to authenticate requests to the service. Required.
    :type credential: ~azure.core.credentials.TokenCredential
    :keyword api_version: The API version to use for this operation. Default value is
     "2024-01-31-preview". Note that overriding this default value may result in unsupported
     behavior.
    :paramtype api_version: str
    """

    def __init__(self, endpoint: str, credential: "TokenCredential", **kwargs: Any) -> None:
        _endpoint = "{endpoint}"
        self._config = AzureOrbitalPlanetaryComputerClientConfiguration(
            endpoint=endpoint, credential=credential, **kwargs
        )
        _policies = kwargs.pop("policies", None)
        if _policies is None:
            _policies = [
                policies.RequestIdPolicy(**kwargs),
                self._config.headers_policy,
                self._config.user_agent_policy,
                self._config.proxy_policy,
                policies.ContentDecodePolicy(**kwargs),
                self._config.redirect_policy,
                self._config.retry_policy,
                self._config.authentication_policy,
                self._config.custom_hook_policy,
                self._config.logging_policy,
                policies.DistributedTracingPolicy(**kwargs),
                policies.SensitiveHeaderCleanupPolicy(**kwargs) if self._config.redirect_policy else None,
                self._config.http_logging_policy,
            ]
        self._client: PipelineClient = PipelineClient(base_url=_endpoint, policies=_policies, **kwargs)

        self._serialize = Serializer()
        self._deserialize = Deserializer()
        self._serialize.client_side_validation = False
        self.ingestions = IngestionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.items = ItemsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.ingestion_sources = IngestionSourcesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.ingestion_geo_templates = IngestionGeoTemplatesOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.operations = Operations(self._client, self._config, self._serialize, self._deserialize)
        self.container_operations = containerOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.revoke_operations = revokeOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.signed_operations = signedOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.landing_operations = LandingOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.conformance_operations = ConformanceOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.search_operations = SearchOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.get_operations_collections = GetOperationsCollectionsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.create_operations_collections = CreateOperationsCollectionsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.update_operations = updateOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.delete_operations = deleteOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.queryables_operations = QueryablesOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.collection_operations = CollectionOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.set_operations = setOperationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.add_operations = addOperationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.bounds_operations = boundsOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.info_operations = infoOperationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.available_operations = availableOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.asset_operations = assetOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.statistics_operations = statisticsOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.geojson_operations = geojsonOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.tile_operations = tileOperationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.tilejson_operations = tilejsonOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.wmts_operations = wmtsOperationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.point_operations = pointOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.preview_operations = previewOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.part_operations = partOperationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.register_operations = registerOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.assets_operations = assetsOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.get_operations = getOperationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.create_operations = CreateOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )
        self.matrix_operations = matrixOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize
        )

    def send_request(self, request: HttpRequest, *, stream: bool = False, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client.send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        path_format_arguments = {
            "endpoint": self._serialize.url("self._config.endpoint", self._config.endpoint, "str", skip_quote=True),
        }

        request_copy.url = self._client.format_url(request_copy.url, **path_format_arguments)
        return self._client.send_request(request_copy, stream=stream, **kwargs)  # type: ignore

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> Self:
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)
