# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._cache_rules_operations import CacheRulesOperations  # type: ignore
from ._connected_registries_operations import ConnectedRegistriesOperations  # type: ignore
from ._credential_sets_operations import CredentialSetsOperations  # type: ignore
from ._export_pipelines_operations import ExportPipelinesOperations  # type: ignore
from ._registries_operations import RegistriesOperations  # type: ignore
from ._import_pipelines_operations import ImportPipelinesOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._pipeline_runs_operations import PipelineRunsOperations  # type: ignore
from ._private_endpoint_connections_operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._replications_operations import ReplicationsOperations  # type: ignore
from ._scope_maps_operations import ScopeMapsOperations  # type: ignore
from ._tokens_operations import TokensOperations  # type: ignore
from ._webhooks_operations import WebhooksOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "CacheRulesOperations",
    "ConnectedRegistriesOperations",
    "CredentialSetsOperations",
    "ExportPipelinesOperations",
    "RegistriesOperations",
    "ImportPipelinesOperations",
    "Operations",
    "PipelineRunsOperations",
    "PrivateEndpointConnectionsOperations",
    "ReplicationsOperations",
    "ScopeMapsOperations",
    "TokensOperations",
    "WebhooksOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
