# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils.aio import recorded_by_proxy_async
from testpreparer import ContainerRegistryPreparer
from testpreparer_async import ContainerRegistryClientTestBaseAsync


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestContainerRegistryAuthenticationOperationsAsync(ContainerRegistryClientTestBaseAsync):
    @ContainerRegistryPreparer()
    @recorded_by_proxy_async
    async def test_authentication_exchange_aad_access_token_for_acr_refresh_token(self, containerregistry_endpoint):
        client = self.create_async_client(endpoint=containerregistry_endpoint)
        response = await client.authentication.exchange_aad_access_token_for_acr_refresh_token(
            body={
                "grantType": "str",
                "service": "str",
                "accessToken": "str",
                "refreshToken": "str",
                "tenant": "str"
            }
,
        )
        
        # please add some check logic here by yourself
        # ...

    @ContainerRegistryPreparer()
    @recorded_by_proxy_async
    async def test_authentication_exchange_acr_refresh_token_for_acr_access_token(self, containerregistry_endpoint):
        client = self.create_async_client(endpoint=containerregistry_endpoint)
        response = await client.authentication.exchange_acr_refresh_token_for_acr_access_token(
            body={
                "grantType": "str",
                "service": "str",
                "accessToken": "str",
                "refreshToken": "str",
                "tenant": "str"
            }
,
        )
        
        # please add some check logic here by yourself
        # ...

    @ContainerRegistryPreparer()
    @recorded_by_proxy_async
    async def test_authentication_get_acr_access_token_from_login(self, containerregistry_endpoint):
        client = self.create_async_client(endpoint=containerregistry_endpoint)
        response = await client.authentication.get_acr_access_token_from_login(
            service="str"
,
            scope="str"
,
        )
        
        # please add some check logic here by yourself
        # ...

