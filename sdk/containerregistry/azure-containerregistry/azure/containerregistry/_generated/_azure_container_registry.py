# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.4.1, generator: @autorest/python@5.6.4)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any

    from azure.core.pipeline.transport import HttpRequest, HttpResponse

from ._configuration import AzureContainerRegistryConfiguration
from .operations import V2SupportOperations
from .operations import ManifestsOperations
from .operations import BlobOperations
from .operations import RepositoryOperations
from .operations import TagOperations
from .operations import RefreshTokensOperations
from .operations import AccessTokensOperations
from . import models


class AzureContainerRegistry(object):
    """Metadata API definition for the Azure Container Registry runtime.

    :ivar v2_support: V2SupportOperations operations
    :vartype v2_support: azure_container_registry.operations.V2SupportOperations
    :ivar manifests: ManifestsOperations operations
    :vartype manifests: azure_container_registry.operations.ManifestsOperations
    :ivar blob: BlobOperations operations
    :vartype blob: azure_container_registry.operations.BlobOperations
    :ivar repository: RepositoryOperations operations
    :vartype repository: azure_container_registry.operations.RepositoryOperations
    :ivar tag: TagOperations operations
    :vartype tag: azure_container_registry.operations.TagOperations
    :ivar refresh_tokens: RefreshTokensOperations operations
    :vartype refresh_tokens: azure_container_registry.operations.RefreshTokensOperations
    :ivar access_tokens: AccessTokensOperations operations
    :vartype access_tokens: azure_container_registry.operations.AccessTokensOperations
    :param url: Registry login URL.
    :type url: str
    """

    def __init__(
        self,
        url,  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        base_url = '{url}'
        self._config = AzureContainerRegistryConfiguration(url, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.v2_support = V2SupportOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.manifests = ManifestsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.blob = BlobOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.repository = RepositoryOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.tag = TagOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.refresh_tokens = RefreshTokensOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.access_tokens = AccessTokensOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def _send_request(self, http_request, **kwargs):
        # type: (HttpRequest, Any) -> HttpResponse
        """Runs the network request through the client's chained policies.

        :param http_request: The network request you want to make. Required.
        :type http_request: ~azure.core.pipeline.transport.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to True.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.pipeline.transport.HttpResponse
        """
        path_format_arguments = {
            'url': self._serialize.url("self._config.url", self._config.url, 'str', skip_quote=True),
        }
        http_request.url = self._client.format_url(http_request.url, **path_format_arguments)
        stream = kwargs.pop("stream", True)
        pipeline_response = self._client._pipeline.run(http_request, stream=stream, **kwargs)
        return pipeline_response.http_response

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> AzureContainerRegistry
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
