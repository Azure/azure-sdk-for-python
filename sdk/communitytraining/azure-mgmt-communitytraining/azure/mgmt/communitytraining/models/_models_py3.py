# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.communitytraining.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.communitytraining.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class CommunityTraining(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """A CommunityProviderHub resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.communitytraining.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar sku: The SKU (Stock Keeping Unit) assigned to this resource.
    :vartype sku: ~azure.mgmt.communitytraining.models.Sku
    :ivar portal_name: The portal name (website name) of the Community Training instance.
    :vartype portal_name: str
    :ivar portal_admin_email_address: The email address of the portal admin.
    :vartype portal_admin_email_address: str
    :ivar portal_owner_organization_name: The organization name of the portal owner.
    :vartype portal_owner_organization_name: str
    :ivar portal_owner_email_address: The email address of the portal owner. Will be used as the
     primary contact.
    :vartype portal_owner_email_address: str
    :ivar identity_configuration: The identity configuration of the Community Training resource.
    :vartype identity_configuration:
     ~azure.mgmt.communitytraining.models.IdentityConfigurationProperties
    :ivar zone_redundancy_enabled: To indicate whether the Community Training instance has Zone
     Redundancy enabled.
    :vartype zone_redundancy_enabled: bool
    :ivar disaster_recovery_enabled: To indicate whether the Community Training instance has
     Disaster Recovery enabled.
    :vartype disaster_recovery_enabled: bool
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.communitytraining.models.ProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "sku": {"key": "sku", "type": "Sku"},
        "portal_name": {"key": "properties.portalName", "type": "str"},
        "portal_admin_email_address": {"key": "properties.portalAdminEmailAddress", "type": "str"},
        "portal_owner_organization_name": {"key": "properties.portalOwnerOrganizationName", "type": "str"},
        "portal_owner_email_address": {"key": "properties.portalOwnerEmailAddress", "type": "str"},
        "identity_configuration": {
            "key": "properties.identityConfiguration",
            "type": "IdentityConfigurationProperties",
        },
        "zone_redundancy_enabled": {"key": "properties.zoneRedundancyEnabled", "type": "bool"},
        "disaster_recovery_enabled": {"key": "properties.disasterRecoveryEnabled", "type": "bool"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        sku: Optional["_models.Sku"] = None,
        portal_name: Optional[str] = None,
        portal_admin_email_address: Optional[str] = None,
        portal_owner_organization_name: Optional[str] = None,
        portal_owner_email_address: Optional[str] = None,
        identity_configuration: Optional["_models.IdentityConfigurationProperties"] = None,
        zone_redundancy_enabled: Optional[bool] = None,
        disaster_recovery_enabled: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword sku: The SKU (Stock Keeping Unit) assigned to this resource.
        :paramtype sku: ~azure.mgmt.communitytraining.models.Sku
        :keyword portal_name: The portal name (website name) of the Community Training instance.
        :paramtype portal_name: str
        :keyword portal_admin_email_address: The email address of the portal admin.
        :paramtype portal_admin_email_address: str
        :keyword portal_owner_organization_name: The organization name of the portal owner.
        :paramtype portal_owner_organization_name: str
        :keyword portal_owner_email_address: The email address of the portal owner. Will be used as the
         primary contact.
        :paramtype portal_owner_email_address: str
        :keyword identity_configuration: The identity configuration of the Community Training resource.
        :paramtype identity_configuration:
         ~azure.mgmt.communitytraining.models.IdentityConfigurationProperties
        :keyword zone_redundancy_enabled: To indicate whether the Community Training instance has Zone
         Redundancy enabled.
        :paramtype zone_redundancy_enabled: bool
        :keyword disaster_recovery_enabled: To indicate whether the Community Training instance has
         Disaster Recovery enabled.
        :paramtype disaster_recovery_enabled: bool
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.sku = sku
        self.portal_name = portal_name
        self.portal_admin_email_address = portal_admin_email_address
        self.portal_owner_organization_name = portal_owner_organization_name
        self.portal_owner_email_address = portal_owner_email_address
        self.identity_configuration = identity_configuration
        self.zone_redundancy_enabled = zone_redundancy_enabled
        self.disaster_recovery_enabled = disaster_recovery_enabled
        self.provisioning_state = None


class CommunityTrainingListResult(_serialization.Model):
    """The response of a CommunityTraining list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The CommunityTraining items on this page. Required.
    :vartype value: list[~azure.mgmt.communitytraining.models.CommunityTraining]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CommunityTraining]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.CommunityTraining"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The CommunityTraining items on this page. Required.
        :paramtype value: list[~azure.mgmt.communitytraining.models.CommunityTraining]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class CommunityTrainingUpdate(_serialization.Model):
    """The type used for update operations of the CommunityTraining.

    :ivar sku: The SKU (Stock Keeping Unit) assigned to this resource.
    :vartype sku: ~azure.mgmt.communitytraining.models.Sku
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar identity_configuration: The identity configuration of the Community Training resource.
    :vartype identity_configuration:
     ~azure.mgmt.communitytraining.models.IdentityConfigurationPropertiesUpdate
    """

    _attribute_map = {
        "sku": {"key": "sku", "type": "Sku"},
        "tags": {"key": "tags", "type": "{str}"},
        "identity_configuration": {
            "key": "properties.identityConfiguration",
            "type": "IdentityConfigurationPropertiesUpdate",
        },
    }

    def __init__(
        self,
        *,
        sku: Optional["_models.Sku"] = None,
        tags: Optional[Dict[str, str]] = None,
        identity_configuration: Optional["_models.IdentityConfigurationPropertiesUpdate"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword sku: The SKU (Stock Keeping Unit) assigned to this resource.
        :paramtype sku: ~azure.mgmt.communitytraining.models.Sku
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword identity_configuration: The identity configuration of the Community Training resource.
        :paramtype identity_configuration:
         ~azure.mgmt.communitytraining.models.IdentityConfigurationPropertiesUpdate
        """
        super().__init__(**kwargs)
        self.sku = sku
        self.tags = tags
        self.identity_configuration = identity_configuration


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.communitytraining.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.communitytraining.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.communitytraining.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.communitytraining.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class IdentityConfigurationProperties(_serialization.Model):
    """Details of the Community CommunityTraining Identity Configuration.

    All required parameters must be populated in order to send to Azure.

    :ivar identity_type: The identity type of the Community Training Resource. Required.
    :vartype identity_type: str
    :ivar teams_enabled: To indicate whether the Community Training Resource has Teams enabled.
    :vartype teams_enabled: bool
    :ivar tenant_id: The tenantId of the selected identity provider for the Community Training
     Resource. Required.
    :vartype tenant_id: str
    :ivar domain_name: The domain name of the selected identity provider for the Community Training
     Resource. Required.
    :vartype domain_name: str
    :ivar client_id: The clientId of the application registered in the selected identity provider
     for the Community Training Resource. Required.
    :vartype client_id: str
    :ivar client_secret: The client secret of the application registered in the selected identity
     provider for the Community Training Resource. Required.
    :vartype client_secret: str
    :ivar b2_c_authentication_policy: The name of the authentication policy registered in ADB2C for
     the Community Training Resource.
    :vartype b2_c_authentication_policy: str
    :ivar b2_c_password_reset_policy: The name of the password reset policy registered in ADB2C for
     the Community Training Resource.
    :vartype b2_c_password_reset_policy: str
    :ivar custom_login_parameters: The custom login parameters for the Community Training Resource.
    :vartype custom_login_parameters: str
    """

    _validation = {
        "identity_type": {"required": True},
        "tenant_id": {"required": True},
        "domain_name": {"required": True},
        "client_id": {"required": True},
        "client_secret": {"required": True},
    }

    _attribute_map = {
        "identity_type": {"key": "identityType", "type": "str"},
        "teams_enabled": {"key": "teamsEnabled", "type": "bool"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "domain_name": {"key": "domainName", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
        "client_secret": {"key": "clientSecret", "type": "str"},
        "b2_c_authentication_policy": {"key": "b2cAuthenticationPolicy", "type": "str"},
        "b2_c_password_reset_policy": {"key": "b2cPasswordResetPolicy", "type": "str"},
        "custom_login_parameters": {"key": "customLoginParameters", "type": "str"},
    }

    def __init__(
        self,
        *,
        identity_type: str,
        tenant_id: str,
        domain_name: str,
        client_id: str,
        client_secret: str,
        teams_enabled: bool = False,
        b2_c_authentication_policy: Optional[str] = None,
        b2_c_password_reset_policy: Optional[str] = None,
        custom_login_parameters: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword identity_type: The identity type of the Community Training Resource. Required.
        :paramtype identity_type: str
        :keyword teams_enabled: To indicate whether the Community Training Resource has Teams enabled.
        :paramtype teams_enabled: bool
        :keyword tenant_id: The tenantId of the selected identity provider for the Community Training
         Resource. Required.
        :paramtype tenant_id: str
        :keyword domain_name: The domain name of the selected identity provider for the Community
         Training Resource. Required.
        :paramtype domain_name: str
        :keyword client_id: The clientId of the application registered in the selected identity
         provider for the Community Training Resource. Required.
        :paramtype client_id: str
        :keyword client_secret: The client secret of the application registered in the selected
         identity provider for the Community Training Resource. Required.
        :paramtype client_secret: str
        :keyword b2_c_authentication_policy: The name of the authentication policy registered in ADB2C
         for the Community Training Resource.
        :paramtype b2_c_authentication_policy: str
        :keyword b2_c_password_reset_policy: The name of the password reset policy registered in ADB2C
         for the Community Training Resource.
        :paramtype b2_c_password_reset_policy: str
        :keyword custom_login_parameters: The custom login parameters for the Community Training
         Resource.
        :paramtype custom_login_parameters: str
        """
        super().__init__(**kwargs)
        self.identity_type = identity_type
        self.teams_enabled = teams_enabled
        self.tenant_id = tenant_id
        self.domain_name = domain_name
        self.client_id = client_id
        self.client_secret = client_secret
        self.b2_c_authentication_policy = b2_c_authentication_policy
        self.b2_c_password_reset_policy = b2_c_password_reset_policy
        self.custom_login_parameters = custom_login_parameters


class IdentityConfigurationPropertiesUpdate(_serialization.Model):
    """Details of the Community CommunityTraining Identity Configuration.

    :ivar identity_type: The identity type of the Community Training Resource.
    :vartype identity_type: str
    :ivar teams_enabled: To indicate whether the Community Training Resource has Teams enabled.
    :vartype teams_enabled: bool
    :ivar tenant_id: The tenantId of the selected identity provider for the Community Training
     Resource.
    :vartype tenant_id: str
    :ivar domain_name: The domain name of the selected identity provider for the Community Training
     Resource.
    :vartype domain_name: str
    :ivar client_id: The clientId of the application registered in the selected identity provider
     for the Community Training Resource.
    :vartype client_id: str
    :ivar client_secret: The client secret of the application registered in the selected identity
     provider for the Community Training Resource.
    :vartype client_secret: str
    :ivar b2_c_authentication_policy: The name of the authentication policy registered in ADB2C for
     the Community Training Resource.
    :vartype b2_c_authentication_policy: str
    :ivar b2_c_password_reset_policy: The name of the password reset policy registered in ADB2C for
     the Community Training Resource.
    :vartype b2_c_password_reset_policy: str
    :ivar custom_login_parameters: The custom login parameters for the Community Training Resource.
    :vartype custom_login_parameters: str
    """

    _attribute_map = {
        "identity_type": {"key": "identityType", "type": "str"},
        "teams_enabled": {"key": "teamsEnabled", "type": "bool"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "domain_name": {"key": "domainName", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
        "client_secret": {"key": "clientSecret", "type": "str"},
        "b2_c_authentication_policy": {"key": "b2cAuthenticationPolicy", "type": "str"},
        "b2_c_password_reset_policy": {"key": "b2cPasswordResetPolicy", "type": "str"},
        "custom_login_parameters": {"key": "customLoginParameters", "type": "str"},
    }

    def __init__(
        self,
        *,
        identity_type: Optional[str] = None,
        teams_enabled: bool = False,
        tenant_id: Optional[str] = None,
        domain_name: Optional[str] = None,
        client_id: Optional[str] = None,
        client_secret: Optional[str] = None,
        b2_c_authentication_policy: Optional[str] = None,
        b2_c_password_reset_policy: Optional[str] = None,
        custom_login_parameters: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword identity_type: The identity type of the Community Training Resource.
        :paramtype identity_type: str
        :keyword teams_enabled: To indicate whether the Community Training Resource has Teams enabled.
        :paramtype teams_enabled: bool
        :keyword tenant_id: The tenantId of the selected identity provider for the Community Training
         Resource.
        :paramtype tenant_id: str
        :keyword domain_name: The domain name of the selected identity provider for the Community
         Training Resource.
        :paramtype domain_name: str
        :keyword client_id: The clientId of the application registered in the selected identity
         provider for the Community Training Resource.
        :paramtype client_id: str
        :keyword client_secret: The client secret of the application registered in the selected
         identity provider for the Community Training Resource.
        :paramtype client_secret: str
        :keyword b2_c_authentication_policy: The name of the authentication policy registered in ADB2C
         for the Community Training Resource.
        :paramtype b2_c_authentication_policy: str
        :keyword b2_c_password_reset_policy: The name of the password reset policy registered in ADB2C
         for the Community Training Resource.
        :paramtype b2_c_password_reset_policy: str
        :keyword custom_login_parameters: The custom login parameters for the Community Training
         Resource.
        :paramtype custom_login_parameters: str
        """
        super().__init__(**kwargs)
        self.identity_type = identity_type
        self.teams_enabled = teams_enabled
        self.tenant_id = tenant_id
        self.domain_name = domain_name
        self.client_id = client_id
        self.client_secret = client_secret
        self.b2_c_authentication_policy = b2_c_authentication_policy
        self.b2_c_password_reset_policy = b2_c_password_reset_policy
        self.custom_login_parameters = custom_login_parameters


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.communitytraining.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.communitytraining.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.communitytraining.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.communitytraining.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.communitytraining.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class Sku(_serialization.Model):
    """The resource model definition representing SKU.

    All required parameters must be populated in order to send to Azure.

    :ivar name: The name of the SKU. Ex - P3. It is typically a letter+number code. Required.
    :vartype name: str
    :ivar tier: This field is required to be implemented by the Resource Provider if the service
     has more than one tier, but is not required on a PUT. Known values are: "Free", "Basic",
     "Standard", and "Premium".
    :vartype tier: str or ~azure.mgmt.communitytraining.models.SkuTier
    :ivar size: The SKU size. When the name field is the combination of tier and some other value,
     this would be the standalone code.
    :vartype size: str
    :ivar family: If the service has different generations of hardware, for the same SKU, then that
     can be captured here.
    :vartype family: str
    :ivar capacity: If the SKU supports scale out/in then the capacity integer should be included.
     If scale out/in is not possible for the resource this may be omitted.
    :vartype capacity: int
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "tier": {"key": "tier", "type": "str"},
        "size": {"key": "size", "type": "str"},
        "family": {"key": "family", "type": "str"},
        "capacity": {"key": "capacity", "type": "int"},
    }

    def __init__(
        self,
        *,
        name: str,
        tier: Optional[Union[str, "_models.SkuTier"]] = None,
        size: Optional[str] = None,
        family: Optional[str] = None,
        capacity: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of the SKU. Ex - P3. It is typically a letter+number code. Required.
        :paramtype name: str
        :keyword tier: This field is required to be implemented by the Resource Provider if the service
         has more than one tier, but is not required on a PUT. Known values are: "Free", "Basic",
         "Standard", and "Premium".
        :paramtype tier: str or ~azure.mgmt.communitytraining.models.SkuTier
        :keyword size: The SKU size. When the name field is the combination of tier and some other
         value, this would be the standalone code.
        :paramtype size: str
        :keyword family: If the service has different generations of hardware, for the same SKU, then
         that can be captured here.
        :paramtype family: str
        :keyword capacity: If the SKU supports scale out/in then the capacity integer should be
         included. If scale out/in is not possible for the resource this may be omitted.
        :paramtype capacity: int
        """
        super().__init__(**kwargs)
        self.name = name
        self.tier = tier
        self.size = size
        self.family = family
        self.capacity = capacity


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.communitytraining.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.communitytraining.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.communitytraining.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.communitytraining.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
