{
    "swagger": "2.0",
    "info": {
        "title": "Azure AgFoodPlatform Data Plane Service",
        "description": "APIs documentation for Azure AgPlatform DataPlane Service.",
        "version": "2021-03-31-preview"
    },
    "x-ms-parameterized-host": {
        "hostTemplate": "{Endpoint}",
        "useSchemePrefix": false,
        "parameters": [
            {
                "$ref": "#/parameters/Endpoint"
            }
        ]
    },
    "paths": {
        "/farmers/{farmerId}/application-data": {
            "get": {
                "tags": [
                    "ApplicationData"
                ],
                "description": "Returns a paginated list of application data resources under a particular farm.",
                "operationId": "ApplicationData_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minAvgMaterial",
                        "description": "Minimum average amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgMaterial",
                        "description": "Maximum average amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTotalMaterial",
                        "description": "Minimum total amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalMaterial",
                        "description": "Maximum total amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApplicationDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/application-data": {
            "get": {
                "tags": [
                    "ApplicationData"
                ],
                "description": "Returns a paginated list of application data resources across all farmers.",
                "operationId": "ApplicationData_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "minAvgMaterial",
                        "description": "Minimum average amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgMaterial",
                        "description": "Maximum average amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTotalMaterial",
                        "description": "Minimum total amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalMaterial",
                        "description": "Maximum total amount of material applied during the application (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApplicationDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/application-data/{applicationDataId}": {
            "get": {
                "tags": [
                    "ApplicationData"
                ],
                "description": "Get a specified application data resource under a particular farmer.",
                "operationId": "ApplicationData_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "applicationDataId",
                        "description": "ID of the application data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApplicationData"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ApplicationData"
                ],
                "description": "Creates or updates an application data resource under a particular farmer.",
                "operationId": "ApplicationData_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "applicationDataId",
                        "description": "ID of the application data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "applicationData",
                        "description": "Application data resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApplicationData"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApplicationData"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ApplicationData"
                ],
                "description": "Deletes a specified application data resource under a particular farmer.",
                "operationId": "ApplicationData_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "applicationDataId",
                        "description": "ID of the application data.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/{farmerId}/attachments": {
            "get": {
                "tags": [
                    "Attachments"
                ],
                "description": "Returns a paginated list of attachment resources under a particular farmer.",
                "operationId": "Attachments_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "resourceIds",
                        "description": "Resource Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "resourceTypes",
                        "description": "Resource Types of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AttachmentListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/attachments/{attachmentId}": {
            "get": {
                "tags": [
                    "Attachments"
                ],
                "description": "Gets a specified attachment resource under a particular farmer.",
                "operationId": "Attachments_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associted farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "attachmentId",
                        "description": "Id of the attachment.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Attachments"
                ],
                "description": "Creates or updates an attachment resource under a particular farmer.",
                "operationId": "Attachments_CreateOrUpdate",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "attachmentId",
                        "description": "Id of the attachment resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "file",
                        "description": "File to be uploaded.",
                        "type": "file",
                        "format": "binary"
                    },
                    {
                        "in": "formData",
                        "name": "FarmerId",
                        "description": "Farmer id for this attachment.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "ResourceId",
                        "description": "Associated Resource id for this attachment.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "ResourceType",
                        "description": "Associated Resource type for this attachment\r\ni.e. Farmer, Farm, Field, SeasonalField, Boundary, FarmOperationApplicationData, HarvestData, TillageData, PlantingData.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "OriginalFileName",
                        "description": "Original File Name for this attachment.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Id",
                        "description": "Unique id.",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Status",
                        "description": "Status of the resource.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 0
                    },
                    {
                        "in": "formData",
                        "name": "CreatedDateTime",
                        "description": "Date when resource was created.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "formData",
                        "name": "ModifiedDateTime",
                        "description": "Date when resource was last modified.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "formData",
                        "name": "Name",
                        "description": "Name to identify resource.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 0
                    },
                    {
                        "in": "formData",
                        "name": "Description",
                        "description": "Textual description of resource.",
                        "type": "string",
                        "maxLength": 500,
                        "minLength": 0
                    },
                    {
                        "in": "formData",
                        "name": "ETag",
                        "description": "The ETag value to implement optimistic concurrency.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attachments"
                ],
                "description": "Deletes a specified attachment resource under a particular farmer.",
                "operationId": "Attachments_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "attachmentId",
                        "description": "Id of the attachment.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/{farmerId}/attachments/{attachmentId}/file": {
            "get": {
                "tags": [
                    "Attachments"
                ],
                "description": "Downloads and returns attachment as response for the given input filePath.",
                "operationId": "Attachments_Download",
                "produces": [
                    "application/octet-stream",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "attachmentId",
                        "description": "Id of attachment to be downloaded.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "binary",
                            "type": "file"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/{farmerId}/boundaries": {
            "get": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Returns a paginated list of boundary resources under a particular farmer.",
                "operationId": "Boundaries_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "isPrimary",
                        "description": "Is the boundary primary.",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "parentType",
                        "description": "Type of the parent it belongs to.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "parentIds",
                        "description": "Parent Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minAcreage",
                        "description": "Minimum acreage of the boundary (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAcreage",
                        "description": "Maximum acreage of the boundary (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BoundaryListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            },
            "post": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Search for boundaries by fields and intersecting geometry.",
                "operationId": "Boundaries_SearchByFarmerId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "query",
                        "description": "Query filters.",
                        "schema": {
                            "$ref": "#/definitions/SearchBoundaryQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BoundaryListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/boundaries": {
            "get": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Returns a paginated list of boundary resources across all farmers.",
                "operationId": "Boundaries_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "isPrimary",
                        "description": "Is the boundary primary.",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "parentType",
                        "description": "Type of the parent it belongs to.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "parentIds",
                        "description": "Parent Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minAcreage",
                        "description": "Minimum acreage of the boundary (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAcreage",
                        "description": "Maximum acreage of the boundary (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BoundaryListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            },
            "post": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Search for boundaries across all farmers by fields and intersecting geometry.",
                "operationId": "Boundaries_Search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "query",
                        "description": "Query filters.",
                        "schema": {
                            "$ref": "#/definitions/SearchBoundaryQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BoundaryListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/boundaries/cascade-delete/{jobId}": {
            "get": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Get cascade delete job for specified boundary.",
                "operationId": "Boundaries_GetCascadeDeleteJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Create a cascade delete job for specified boundary.",
                "operationId": "Boundaries_CreateCascadeDeleteJob",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job ID supplied by end user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "boundaryId",
                        "description": "ID of the boundary to be deleted.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/farmers/{farmerId}/boundaries/{boundaryId}": {
            "get": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Gets a specified boundary resource under a particular farmer.",
                "operationId": "Boundaries_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associted farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "boundaryId",
                        "description": "Id of the boundary.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Boundary"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Creates or updates a boundary resource.",
                "operationId": "Boundaries_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "boundaryId",
                        "description": "Id of the boundary resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "boundary",
                        "description": "Boundary resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/Boundary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Boundary"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Boundary"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Deletes a specified boundary resource under a particular farmer.",
                "operationId": "Boundaries_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "boundaryId",
                        "description": "Id of the boundary.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/{farmerId}/boundaries/{boundaryId}/overlap": {
            "get": {
                "tags": [
                    "Boundaries"
                ],
                "description": "Returns overlapping acreage between two boundary Ids.",
                "operationId": "Boundaries_GetOverlap",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "boundaryId",
                        "description": "Id of the boundary.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "otherFarmerId",
                        "description": "FarmerId of the other field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "otherBoundaryId",
                        "description": "Id of the other boundary.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BoundaryOverlapResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/crops": {
            "get": {
                "tags": [
                    "Crops"
                ],
                "description": "Returns a paginated list of crop resources.",
                "operationId": "Crops_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "phenotypes",
                        "description": "Crop phenotypes of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CropListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/crops/{cropId}": {
            "get": {
                "tags": [
                    "Crops"
                ],
                "description": "Gets a specified crop resource.",
                "operationId": "Crops_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cropId",
                        "description": "Id of the crop.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Crop"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Crops"
                ],
                "description": "Creates or updates a crop resource.",
                "operationId": "Crops_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cropId",
                        "description": "Id of the crop resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "crop",
                        "description": "Crop resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/Crop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Crop"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Crop"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Crops"
                ],
                "description": "Deletes Crop for given crop id.",
                "operationId": "Crops_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cropId",
                        "description": "Id of crop to be deleted.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/crops/{cropId}/crop-varieties": {
            "get": {
                "tags": [
                    "CropVarieties"
                ],
                "description": "Returns a paginated list of crop variety resources under a particular crop.",
                "operationId": "CropVarieties_ListByCropId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cropId",
                        "description": "Id of the associated crop.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "cropIds",
                        "description": "CropIds of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "brands",
                        "description": "Brands of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "products",
                        "description": "Products of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CropVarietyListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/crop-varieties": {
            "get": {
                "tags": [
                    "CropVarieties"
                ],
                "description": "Returns a paginated list of crop variety resources across all crops.",
                "operationId": "CropVarieties_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "cropIds",
                        "description": "CropIds of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "brands",
                        "description": "Brands of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "products",
                        "description": "Products of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CropVarietyListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/crops/{cropId}/crop-varieties/{cropVarietyId}": {
            "get": {
                "tags": [
                    "CropVarieties"
                ],
                "description": "Gets a specified crop variety resource under a particular crop.",
                "operationId": "CropVarieties_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cropId",
                        "description": "Id of the associted crop.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cropVarietyId",
                        "description": "Id of the crop variety.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CropVariety"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "CropVarieties"
                ],
                "description": "Creates or updates a crop variety resource.",
                "operationId": "CropVarieties_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cropId",
                        "description": "Id of the crop resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cropVarietyId",
                        "description": "Id of the crop variety resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "cropVariety",
                        "description": "Crop variety resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/CropVariety"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CropVariety"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CropVariety"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CropVarieties"
                ],
                "description": "Deletes a specified crop variety resource under a particular crop.",
                "operationId": "CropVarieties_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "cropId",
                        "description": "Id of the crop.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cropVarietyId",
                        "description": "Id of the crop variety.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers": {
            "get": {
                "tags": [
                    "Farmers"
                ],
                "description": "Returns a paginated list of farmer resources.",
                "operationId": "Farmers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FarmerListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}": {
            "get": {
                "tags": [
                    "Farmers"
                ],
                "description": "Gets a specified farmer resource.",
                "operationId": "Farmers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Farmer"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Farmers"
                ],
                "description": "Creates or updates a farmer resource.",
                "operationId": "Farmers_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "farmer",
                        "description": "Farmer resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/Farmer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Farmer"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Farmer"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Farmers"
                ],
                "description": "Deletes a specified farmer resource.",
                "operationId": "Farmers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of farmer to be deleted.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/cascade-delete/{jobId}": {
            "get": {
                "tags": [
                    "Farmers"
                ],
                "description": "Get a cascade delete job for specified farmer.",
                "operationId": "Farmers_GetCascadeDeleteJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Farmers"
                ],
                "description": "Create a cascade delete job for specified farmer.",
                "operationId": "Farmers_CreateCascadeDeleteJob",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job ID supplied by end user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "ID of the farmer to be deleted.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/farm-operations/ingest-data/{jobId}": {
            "put": {
                "tags": [
                    "FarmOperations"
                ],
                "description": "Create a farm operation data ingestion job.",
                "operationId": "FarmOperations_CreateDataIngestionJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job Id supplied by user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "job",
                        "description": "Job parameters supplied by user.",
                        "schema": {
                            "$ref": "#/definitions/FarmOperationDataIngestionJob"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FarmOperationDataIngestionJob"
                        }
                    },
                    "default": {
                        "description": "Error"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "FarmOperations"
                ],
                "description": "Get a farm operation data ingestion job.",
                "operationId": "FarmOperations_GetDataIngestionJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FarmOperationDataIngestionJob"
                        }
                    },
                    "default": {
                        "description": "Error"
                    }
                }
            }
        },
        "/farmers/{farmerId}/farms": {
            "get": {
                "tags": [
                    "Farms"
                ],
                "description": "Returns a paginated list of farm resources under a particular farmer.",
                "operationId": "Farms_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FarmListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farms": {
            "get": {
                "tags": [
                    "Farms"
                ],
                "description": "Returns a paginated list of farm resources across all farmers.",
                "operationId": "Farms_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FarmListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/farms/{farmId}": {
            "get": {
                "tags": [
                    "Farms"
                ],
                "description": "Gets a specified farm resource under a particular farmer.",
                "operationId": "Farms_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "farmId",
                        "description": "ID of the farm resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Farm"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Farms"
                ],
                "description": "Creates or updates a farm resource under a particular farmer.",
                "operationId": "Farms_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "farmId",
                        "description": "Id of the farm resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "farm",
                        "description": "Farm resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/Farm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Farm"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Farm"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Farms"
                ],
                "description": "Deletes a specified farm resource under a particular farmer.",
                "operationId": "Farms_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "farmId",
                        "description": "Id of the farm.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farms/cascade-delete/{jobId}": {
            "get": {
                "tags": [
                    "Farms"
                ],
                "description": "Get a cascade delete job for specified farm.",
                "operationId": "Farms_GetCascadeDeleteJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Farms"
                ],
                "description": "Create a cascade delete job for specified farm.",
                "operationId": "Farms_CreateCascadeDeleteJob",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job ID supplied by end user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmId",
                        "description": "ID of the farm to be deleted.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/farmers/{farmerId}/fields": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "description": "Returns a paginated list of field resources under a particular farmer.",
                "operationId": "Fields_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmIds",
                        "description": "Farm Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/fields": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "description": "Returns a paginated list of field resources across all farmers.",
                "operationId": "Fields_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "farmIds",
                        "description": "Farm Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/fields/{fieldId}": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "description": "Gets a specified field resource under a particular farmer.",
                "operationId": "Fields_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "fieldId",
                        "description": "Id of the field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Field"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Fields"
                ],
                "description": "Creates or Updates a field resource under a particular farmer.",
                "operationId": "Fields_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "fieldId",
                        "description": "Id of the field resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "field",
                        "description": "Field resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/Field"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Field"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Field"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Fields"
                ],
                "description": "Deletes a specified field resource under a particular farmer.",
                "operationId": "Fields_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "fieldId",
                        "description": "Id of the field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fields/cascade-delete/{jobId}": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "description": "Get a cascade delete job for specified field.",
                "operationId": "Fields_GetCascadeDeleteJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Fields"
                ],
                "description": "Create a cascade delete job for specified field.",
                "operationId": "Fields_CreateCascadeDeleteJob",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job ID supplied by end user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldId",
                        "description": "ID of the field to be deleted.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/farmers/{farmerId}/harvest-data": {
            "get": {
                "tags": [
                    "HarvestData"
                ],
                "description": "Returns a paginated list of harvest data resources under a particular farm.",
                "operationId": "HarvestData_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minTotalYield",
                        "description": "Minimum Yield value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalYield",
                        "description": "Maximum Yield value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgYield",
                        "description": "Minimum AvgYield value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgYield",
                        "description": "Maximum AvgYield value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTotalWetMass",
                        "description": "Minimum Total WetMass value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalWetMass",
                        "description": "Maximum Total WetMass value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgWetMass",
                        "description": "Minimum AvgWetMass value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgWetMass",
                        "description": "Maximum AvgWetMass value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgMoisture",
                        "description": "Minimum AvgMoisture value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgMoisture",
                        "description": "Maximum AvgMoisture value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgSpeed",
                        "description": "Minimum AvgSpeed value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgSpeed",
                        "description": "Maximum AvgSpeed value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HarvestDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/harvest-data": {
            "get": {
                "tags": [
                    "HarvestData"
                ],
                "description": "Returns a paginated list of harvest data resources across all farmers.",
                "operationId": "HarvestData_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "minTotalYield",
                        "description": "Minimum Yield value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalYield",
                        "description": "Maximum Yield value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgYield",
                        "description": "Minimum AvgYield value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgYield",
                        "description": "Maximum AvgYield value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTotalWetMass",
                        "description": "Minimum Total WetMass value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalWetMass",
                        "description": "Maximum Total WetMass value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgWetMass",
                        "description": "Minimum AvgWetMass value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgWetMass",
                        "description": "Maximum AvgWetMass value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgMoisture",
                        "description": "Minimum AvgMoisture value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgMoisture",
                        "description": "Maximum AvgMoisture value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgSpeed",
                        "description": "Minimum AvgSpeed value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgSpeed",
                        "description": "Maximum AvgSpeed value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HarvestDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/harvest-data/{harvestDataId}": {
            "get": {
                "tags": [
                    "HarvestData"
                ],
                "description": "Get a specified harvest data resource under a particular farmer.",
                "operationId": "HarvestData_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "harvestDataId",
                        "description": "ID of the harvest data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HarvestData"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "HarvestData"
                ],
                "description": "Creates or updates harvest data resource under a particular farmer.",
                "operationId": "HarvestData_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "harvestDataId",
                        "description": "ID of the harvest data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "harvestData",
                        "description": "Harvest data resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/HarvestData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HarvestData"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HarvestData"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "HarvestData"
                ],
                "description": "Deletes a specified harvest data resource under a particular farmer.",
                "operationId": "HarvestData_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "harvestDataId",
                        "description": "ID of the harvest data.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth/providers": {
            "get": {
                "tags": [
                    "OAuthProviders"
                ],
                "description": "Returns a paginated list of oauthProvider resources.",
                "operationId": "OAuthProviders_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OAuthProviderListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/oauth/providers/{oauthProviderId}": {
            "get": {
                "tags": [
                    "OAuthProviders"
                ],
                "description": "Get a specified oauthProvider resource.",
                "operationId": "OAuthProviders_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "oauthProviderId",
                        "description": "ID of the oauthProvider resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OAuthProvider"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "OAuthProviders"
                ],
                "description": "Creates or updates an oauthProvider resource.",
                "operationId": "OAuthProviders_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "oauthProviderId",
                        "description": "ID of oauthProvider resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "oauthProvider",
                        "description": "OauthProvider resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/OAuthProvider"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OAuthProvider"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OAuthProvider"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "OAuthProviders"
                ],
                "description": "Deletes an specified oauthProvider resource.",
                "operationId": "OAuthProviders_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "oauthProviderId",
                        "description": "ID of oauthProvider.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth/tokens": {
            "get": {
                "tags": [
                    "OAuthTokens"
                ],
                "description": "Returns a list of OAuthToken documents.",
                "operationId": "OAuthTokens_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "authProviderIds",
                        "description": "Name of AuthProvider.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "farmerIds",
                        "description": "List of farmers.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "isValid",
                        "description": "If the token object is valid.",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OAuthTokenListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/oauth/tokens/:remove": {
            "post": {
                "tags": [
                    "OAuthTokens"
                ],
                "description": "Deletes OAuth Token for given oauth provider Id and farmer Id.",
                "operationId": "OAuthTokens_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "oauthProviderId",
                        "description": "Id of the associated oauth provider.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth/tokens/:connect": {
            "post": {
                "tags": [
                    "OAuthTokens"
                ],
                "description": "Returns Connection link needed in the OAuth flow.",
                "operationId": "OAuthTokens_GetOAuthConnectionLink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "oauthConnectRequest",
                        "description": "OAuth Connect Request.",
                        "schema": {
                            "$ref": "#/definitions/OAuthConnectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/{farmerId}/planting-data": {
            "get": {
                "tags": [
                    "PlantingData"
                ],
                "description": "Returns a paginated list of planting data resources under a particular farm.",
                "operationId": "PlantingData_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minAvgPlantingRate",
                        "description": "Minimum AvgPlantingRate value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgPlantingRate",
                        "description": "Maximum AvgPlantingRate value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTotalMaterial",
                        "description": "Minimum TotalMaterial value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalMaterial",
                        "description": "Maximum TotalMaterial value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgMaterial",
                        "description": "Minimum AvgMaterial value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgMaterial",
                        "description": "Maximum AvgMaterial value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PlantingDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/planting-data": {
            "get": {
                "tags": [
                    "PlantingData"
                ],
                "description": "Returns a paginated list of planting data resources across all farmers.",
                "operationId": "PlantingData_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "minAvgPlantingRate",
                        "description": "Minimum AvgPlantingRate value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgPlantingRate",
                        "description": "Maximum AvgPlantingRate value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTotalMaterial",
                        "description": "Minimum TotalMaterial value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTotalMaterial",
                        "description": "Maximum TotalMaterial value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minAvgMaterial",
                        "description": "Minimum AvgMaterial value(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgMaterial",
                        "description": "Maximum AvgMaterial value (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PlantingDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/planting-data/{plantingDataId}": {
            "get": {
                "tags": [
                    "PlantingData"
                ],
                "description": "Get a specified planting data resource under a particular farmer.",
                "operationId": "PlantingData_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "plantingDataId",
                        "description": "ID of the planting data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PlantingData"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "PlantingData"
                ],
                "description": "Creates or updates an planting data resource under a particular farmer.",
                "operationId": "PlantingData_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "plantingDataId",
                        "description": "ID of the planting data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "plantingData",
                        "description": "Planting data resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/PlantingData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PlantingData"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PlantingData"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PlantingData"
                ],
                "description": "Deletes a specified planting data resource under a particular farmer.",
                "operationId": "PlantingData_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "plantingDataId",
                        "description": "ID of the planting data.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenes": {
            "get": {
                "tags": [
                    "Scenes"
                ],
                "description": "Returns a paginated list of scene resources.",
                "operationId": "Scenes_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "provider",
                        "description": "Provider name of scene data.",
                        "required": true,
                        "type": "string",
                        "default": "Microsoft"
                    },
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "FarmerId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "boundaryId",
                        "description": "BoundaryId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "source",
                        "description": "Source name of scene data, default value Sentinel_2_L2A (Sentinel 2 L2A).",
                        "type": "string",
                        "default": "Sentinel_2_L2A"
                    },
                    {
                        "in": "query",
                        "name": "startDateTime",
                        "description": "Scene start UTC datetime (inclusive), sample format: yyyy-MM-ddThh:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "endDateTime",
                        "description": "Scene end UTC datetime (inclusive), sample format: yyyy-MM-dThh:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCloudCoveragePercentage",
                        "description": "Filter scenes with cloud coverage percentage less than max value. Range [0 to 100.0].",
                        "type": "number",
                        "format": "double",
                        "default": 100,
                        "maximum": 100,
                        "minimum": 0
                    },
                    {
                        "in": "query",
                        "name": "maxDarkPixelCoveragePercentage",
                        "description": "Filter scenes with dark pixel coverage percentage less than max value. Range [0 to 100.0].",
                        "type": "number",
                        "format": "double",
                        "default": 100,
                        "maximum": 100,
                        "minimum": 0
                    },
                    {
                        "in": "query",
                        "name": "imageNames",
                        "description": "List of image names to be filtered.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "imageResolutions",
                        "description": "List of image resolutions in meters to be filtered.",
                        "type": "array",
                        "items": {
                            "format": "double",
                            "type": "number"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "imageFormats",
                        "description": "List of image formats to be filtered.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SceneListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/scenes/satellite/ingest-data/{jobId}": {
            "put": {
                "tags": [
                    "Scenes"
                ],
                "description": "Create a satellite data ingestion job.",
                "operationId": "Scenes_CreateSatelliteDataIngestionJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "JobId provided by user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "job",
                        "description": "Job parameters supplied by user.",
                        "schema": {
                            "$ref": "#/definitions/SatelliteDataIngestionJob"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SatelliteDataIngestionJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "Scenes"
                ],
                "description": "Get a satellite data ingestion job.",
                "operationId": "Scenes_GetSatelliteDataIngestionJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SatelliteDataIngestionJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenes/downloadFiles": {
            "get": {
                "tags": [
                    "Scenes"
                ],
                "description": "Downloads and returns file Stream as response for the given input filePath.",
                "operationId": "Scenes_Download",
                "produces": [
                    "application/octet-stream",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filePath",
                        "description": "cloud storage path of scene file.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "binary",
                            "type": "file"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/{farmerId}/seasonal-fields": {
            "get": {
                "tags": [
                    "SeasonalFields"
                ],
                "description": "Returns a paginated list of seasonal field resources under a particular farmer.",
                "operationId": "SeasonalFields_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmIds",
                        "description": "Farm Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "fieldIds",
                        "description": "Field Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "seasonIds",
                        "description": "Season Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "cropVarietyIds",
                        "description": "CropVarietyIds of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "cropIds",
                        "description": "Ids of the crop it belongs to.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minAvgYieldValue",
                        "description": "Minimum average yield value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgYieldValue",
                        "description": "Maximum average yield value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "avgYieldUnit",
                        "description": "Unit of the average yield value attribute.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minAvgSeedPopulationValue",
                        "description": "Minimum average seed population value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgSeedPopulationValue",
                        "description": "Maximum average seed population value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "avgSeedPopulationUnit",
                        "description": "Unit of average seed population value attribute.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minPlantingDateTime",
                        "description": "Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxPlantingDateTime",
                        "description": "Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeasonalFieldListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/seasonal-fields": {
            "get": {
                "tags": [
                    "SeasonalFields"
                ],
                "description": "Returns a paginated list of seasonal field resources across all farmers.",
                "operationId": "SeasonalFields_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "farmIds",
                        "description": "Farm Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "fieldIds",
                        "description": "Field Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "seasonIds",
                        "description": "Season Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "cropVarietyIds",
                        "description": "CropVarietyIds of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "cropIds",
                        "description": "Ids of the crop it belongs to.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minAvgYieldValue",
                        "description": "Minimum average yield value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgYieldValue",
                        "description": "Maximum average yield value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "avgYieldUnit",
                        "description": "Unit of the average yield value attribute.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minAvgSeedPopulationValue",
                        "description": "Minimum average seed population value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxAvgSeedPopulationValue",
                        "description": "Maximum average seed population value of the seasonal field(inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "avgSeedPopulationUnit",
                        "description": "Unit of average seed population value attribute.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minPlantingDateTime",
                        "description": "Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxPlantingDateTime",
                        "description": "Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeasonalFieldListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/seasonal-fields/{seasonalFieldId}": {
            "get": {
                "tags": [
                    "SeasonalFields"
                ],
                "description": "Gets a specified seasonal field resource under a particular farmer.",
                "operationId": "SeasonalFields_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associted farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "seasonalFieldId",
                        "description": "Id of the seasonal field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeasonalField"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "SeasonalFields"
                ],
                "description": "Creates or Updates a seasonal field resource under a particular farmer.",
                "operationId": "SeasonalFields_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "seasonalFieldId",
                        "description": "Id of the seasonal field resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "seasonalField",
                        "description": "Seasonal field resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/SeasonalField"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeasonalField"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeasonalField"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SeasonalFields"
                ],
                "description": "Deletes a specified seasonal-field resource under a particular farmer.",
                "operationId": "SeasonalFields_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "Id of the farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "seasonalFieldId",
                        "description": "Id of the seasonal field.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seasonal-fields/cascade-delete/{jobId}": {
            "get": {
                "tags": [
                    "SeasonalFields"
                ],
                "description": "Get cascade delete job for specified seasonal field.",
                "operationId": "SeasonalFields_GetCascadeDeleteJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SeasonalFields"
                ],
                "description": "Create a cascade delete job for specified seasonal field.",
                "operationId": "SeasonalFields_CreateCascadeDeleteJob",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job ID supplied by end user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "seasonalFieldId",
                        "description": "ID of the seasonalField to be deleted.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CascadeDeleteJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/seasons": {
            "get": {
                "tags": [
                    "Seasons"
                ],
                "description": "Returns a paginated list of season resources.",
                "operationId": "Seasons_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "minStartDateTime",
                        "description": "Minimum season start datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxStartDateTime",
                        "description": "Maximum season start datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minEndDateTime",
                        "description": "Minimum season end datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxEndDateTime",
                        "description": "Maximum season end datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "years",
                        "description": "Years of the resource.",
                        "type": "array",
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeasonListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/seasons/{seasonId}": {
            "get": {
                "tags": [
                    "Seasons"
                ],
                "description": "Gets a specified season resource.",
                "operationId": "Seasons_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "seasonId",
                        "description": "Id of the season.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Season"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Seasons"
                ],
                "description": "Creates or updates a season resource.",
                "operationId": "Seasons_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "seasonId",
                        "description": "Id of the season resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "season",
                        "description": "Season resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/Season"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Season"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Season"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Seasons"
                ],
                "description": "Deletes a specified season resource.",
                "operationId": "Seasons_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "seasonId",
                        "description": "Id of the season.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/farmers/{farmerId}/tillage-data": {
            "get": {
                "tags": [
                    "TillageData"
                ],
                "description": "Returns a paginated list of tillage data resources under a particular farm.",
                "operationId": "TillageData_ListByFarmerId",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "minTillageDepth",
                        "description": "Minimum measured tillage depth (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTillageDepth",
                        "description": "Maximum measured tillage depth (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTillagePressure",
                        "description": "Minimum downforce applied to a tillage implement (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTillagePressure",
                        "description": "Maximum downforce applied to a tillage implement (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TillageDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/tillage-data": {
            "get": {
                "tags": [
                    "TillageData"
                ],
                "description": "Returns a paginated list of tillage data resources across all farmers.",
                "operationId": "TillageData_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "minTillageDepth",
                        "description": "Minimum measured tillage depth (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTillageDepth",
                        "description": "Maximum measured tillage depth (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "minTillagePressure",
                        "description": "Minimum downforce applied to a tillage implement (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxTillagePressure",
                        "description": "Maximum downforce applied to a tillage implement (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "sources",
                        "description": "Sources of the operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "associatedBoundaryIds",
                        "description": "Boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "operationBoundaryIds",
                        "description": "Operation boundary IDs associated with operation data.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minOperationStartDateTime",
                        "description": "Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationStartDateTime",
                        "description": "Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationEndDateTime",
                        "description": "Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationEndDateTime",
                        "description": "Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minOperationModifiedDateTime",
                        "description": "Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxOperationModifiedDateTime",
                        "description": "Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minArea",
                        "description": "Minimum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "maxArea",
                        "description": "Maximum area for which operation was applied (inclusive).",
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "description": "Ids of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "propertyFilters",
                        "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Statuses of the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "in": "query",
                        "name": "minCreatedDateTime",
                        "description": "Minimum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxCreatedDateTime",
                        "description": "Maximum creation date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "minLastModifiedDateTime",
                        "description": "Minimum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "maxLastModifiedDateTime",
                        "description": "Maximum last modified date of resource (inclusive).",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TillageDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/farmers/{farmerId}/tillage-data/{tillageDataId}": {
            "get": {
                "tags": [
                    "TillageData"
                ],
                "description": "Get a specified tillage data resource under a particular farmer.",
                "operationId": "TillageData_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tillageDataId",
                        "description": "ID of the tillage data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TillageData"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "TillageData"
                ],
                "description": "Creates or updates an tillage data resource under a particular farmer.",
                "operationId": "TillageData_CreateOrUpdate",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tillageDataId",
                        "description": "ID of the tillage data resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "tillageData",
                        "description": "Tillage data resource payload to create or update.",
                        "schema": {
                            "$ref": "#/definitions/TillageData"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TillageData"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TillageData"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TillageData"
                ],
                "description": "Deletes a specified tillage data resource under a particular farmer.",
                "operationId": "TillageData_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "farmerId",
                        "description": "ID of the associated farmer resource.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tillageDataId",
                        "description": "ID of the tillage data.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/weather": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "description": "Returns a paginated list of weather data.",
                "operationId": "Weather_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "farmerId",
                        "description": "Farmer ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "boundaryId",
                        "description": "Boundary ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "extensionId",
                        "description": "ID of the weather extension.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[A-za-z]{3,50}[.][A-za-z]{3,100}$"
                    },
                    {
                        "in": "query",
                        "name": "weatherDataType",
                        "description": "Type of weather data (forecast/historical).",
                        "required": true,
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 0
                    },
                    {
                        "in": "query",
                        "name": "granularity",
                        "description": "Granularity of weather data (daily/hourly).",
                        "required": true,
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 0
                    },
                    {
                        "in": "query",
                        "name": "startDateTime",
                        "description": "Weather data start UTC date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "endDateTime",
                        "description": "Weather data end UTC date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "in": "query",
                        "name": "$maxPageSize",
                        "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                        "type": "integer",
                        "format": "int32",
                        "default": 50,
                        "maximum": 1000,
                        "minimum": 10
                    },
                    {
                        "in": "query",
                        "name": "$skipToken",
                        "description": "Skip token for getting next set of results.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WeatherDataListResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/weather/ingest-data/{jobId}": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "description": "Get weather ingestion job.",
                "operationId": "Weather_GetDataIngestionJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WeatherDataIngestionJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Weather"
                ],
                "description": "Create a weather data ingestion job.",
                "operationId": "Weather_CreateDataIngestionJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job id supplied by user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "job",
                        "description": "Job parameters supplied by user.",
                        "schema": {
                            "$ref": "#/definitions/WeatherDataIngestionJob"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WeatherDataIngestionJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/weather/delete-data/{jobId}": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "description": "Get weather data delete job.",
                "operationId": "Weather_GetDataDeleteJobDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Id of the job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WeatherDataDeleteJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Weather"
                ],
                "description": "Create a weather data delete job.",
                "operationId": "Weather_CreateDataDeleteJob",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "description": "Job Id supplied by end user.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "api-version",
                        "description": "The requested API version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "job",
                        "description": "Job parameters supplied by user.",
                        "schema": {
                            "$ref": "#/definitions/WeatherDataDeleteJob"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WeatherDataDeleteJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        }
    },
    "parameters": {
        "Endpoint": {
            "name": "Endpoint",
            "description": "The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{vaultName}.farmbeats.azure.net).",
            "x-ms-parameter-location": "client",
            "required": true,
            "type": "string",
            "in": "path",
            "x-ms-skip-url-encoding": true
        }
    },
    "definitions": {
        "Measure": {
            "description": "Schema for storing measurement reading and unit.",
            "type": "object",
            "properties": {
                "unit": {
                    "description": "Data unit.",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                },
                "value": {
                    "format": "double",
                    "description": "Data value.",
                    "type": "number"
                }
            }
        },
        "ApplicationProductDetail": {
            "description": "Schema of product used during application.",
            "type": "object",
            "properties": {
                "productName": {
                    "description": "Name of the product applied.",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "isCarrier": {
                    "description": "A flag indicating whether product is a carrier for a tank mix.",
                    "default": false,
                    "type": "boolean"
                },
                "avgMaterial": {
                    "$ref": "#/definitions/Measure"
                },
                "totalMaterial": {
                    "$ref": "#/definitions/Measure"
                }
            }
        },
        "ApplicationData": {
            "description": "Schema of application data resource.",
            "type": "object",
            "properties": {
                "applicationProductDetails": {
                    "description": "Application product details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationProductDetail"
                    }
                },
                "avgMaterial": {
                    "$ref": "#/definitions/Measure"
                },
                "totalMaterial": {
                    "$ref": "#/definitions/Measure"
                },
                "area": {
                    "$ref": "#/definitions/Measure"
                },
                "source": {
                    "description": "Source of the operation data.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "operationModifiedDateTime": {
                    "format": "date-time",
                    "description": "Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.\r\nNote: this will be specified by the source provider itself.",
                    "type": "string"
                },
                "operationStartDateTime": {
                    "format": "date-time",
                    "description": "Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "operationEndDateTime": {
                    "format": "date-time",
                    "description": "End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "attachmentsLink": {
                    "description": "Link for attachments.",
                    "type": "string",
                    "readOnly": true
                },
                "associatedBoundaryId": {
                    "description": "Optional boundary ID of the field for which operation was applied.",
                    "type": "string"
                },
                "operationBoundaryId": {
                    "description": "Optional boundary ID of the actual area for which operation was applied inside the specified field.",
                    "type": "string"
                },
                "farmerId": {
                    "description": "Farmer ID which belongs to the operation data.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "ApplicationDataListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApplicationData"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "InnerError": {
            "description": "Inner error containing list of errors.\r\n<see href=\"https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#innererror--object\">InnerError reference document</see>.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Specific error code than was provided by the\r\ncontaining error.",
                    "type": "string"
                },
                "innererror": {
                    "$ref": "#/definitions/InnerError"
                }
            },
            "additionalProperties": {
                "type": "object"
            }
        },
        "Error": {
            "description": "An error from the Azure AgPlatform service.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Server-defined set of error codes.",
                    "type": "string"
                },
                "message": {
                    "description": "Human-readable representation of the error.",
                    "type": "string"
                },
                "target": {
                    "description": "Target of the error.",
                    "type": "string"
                },
                "details": {
                    "description": "Array of details about specific errors that led to this reported error.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "innererror": {
                    "$ref": "#/definitions/InnerError"
                }
            }
        },
        "ErrorResponse": {
            "description": "An error response from the Azure AgPlatform service.\r\n<see href=\"https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses\">ErrorResponse reference document.</see>.",
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/Error"
                },
                "traceId": {
                    "description": "Unique trace Id.",
                    "type": "string"
                }
            }
        },
        "Attachment": {
            "description": "Schema of attachment resource.",
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer id for this attachment.",
                    "type": "string",
                    "readOnly": true
                },
                "resourceId": {
                    "description": "Associated Resource id for this attachment.",
                    "type": "string"
                },
                "resourceType": {
                    "description": "Associated Resource type for this attachment\r\ni.e. Farmer, Farm, Field, SeasonalField, Boundary, FarmOperationApplicationData, HarvestData, TillageData, PlantingData.",
                    "type": "string"
                },
                "originalFileName": {
                    "description": "Original File Name for this attachment.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "description": "Unique id.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date when resource was created.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date when resource was last modified.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "AttachmentListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "GeoJsonObjectType": {
            "description": "GeoJSON object type.",
            "enum": [
                "Point",
                "Polygon",
                "MultiPolygon"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "GeoJsonObjectType",
                "modelAsString": true
            }
        },
        "GeoJsonObject": {
            "description": "GeoJSON abstract class.",
            "required": [
                "type"
            ],
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/GeoJsonObjectType"
                }
            },
            "discriminator": "type"
        },
        "Boundary": {
            "description": "Schema of boundary resource.",
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer Id.",
                    "type": "string",
                    "readOnly": true
                },
                "parentId": {
                    "description": "Id of the parent(field or seasonalField) it belongs to.",
                    "type": "string"
                },
                "geometry": {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                "isPrimary": {
                    "description": "Is the boundary primary.",
                    "type": "boolean"
                },
                "acreage": {
                    "format": "double",
                    "description": "Boundary area in acres.",
                    "type": "number",
                    "readOnly": true
                },
                "parentType": {
                    "description": "Type of the parent it belongs to.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            },
            "example": {
                "name": "string",
                "description": "string",
                "parentId": "string",
                "isPrimary": false,
                "geometry": {
                    "type": "Polygon",
                    "coordinates": [
                        [
                            [
                                73.70457172393799,
                                20.545385304358106
                            ],
                            [
                                73.70457172393799,
                                20.545385304358106
                            ],
                            [
                                73.70448589324951,
                                20.542411534243367
                            ],
                            [
                                73.70877742767334,
                                20.541688176010233
                            ],
                            [
                                73.71023654937744,
                                20.545083911372505
                            ],
                            [
                                73.70663166046143,
                                20.546992723579137
                            ],
                            [
                                73.70457172393799,
                                20.545385304358106
                            ]
                        ]
                    ]
                }
            }
        },
        "BoundaryListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Boundary"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "SearchBoundaryQuery": {
            "description": "SearchAllBoundaries and SearchBoundaries parameters.",
            "type": "object",
            "properties": {
                "ids": {
                    "description": "Ids of the resource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "names": {
                    "description": "Names of the resource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "propertyFilters": {
                    "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testkey} eq {testvalue}\".",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "statuses": {
                    "description": "Statuses of the resource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "minCreatedDateTime": {
                    "format": "date-time",
                    "description": "Minimum creation date of resource (inclusive).",
                    "type": "string"
                },
                "maxCreatedDateTime": {
                    "format": "date-time",
                    "description": "Maximum creation date of resource (inclusive).",
                    "type": "string"
                },
                "minLastModifiedDateTime": {
                    "format": "date-time",
                    "description": "Minimum last modified date of resource (inclusive).",
                    "type": "string"
                },
                "maxLastModifiedDateTime": {
                    "format": "date-time",
                    "description": "Maximum last modified date of resource (inclusive).",
                    "type": "string"
                },
                "$maxPageSize": {
                    "format": "int32",
                    "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
                    "default": 50,
                    "maximum": 1000,
                    "minimum": 10,
                    "type": "integer"
                },
                "$skipToken": {
                    "description": "Skip token for getting next set of results.",
                    "type": "string"
                },
                "isPrimary": {
                    "description": "Is the boundary primary.",
                    "type": "boolean"
                },
                "parentType": {
                    "description": "Type of the parent it belongs to.",
                    "type": "string"
                },
                "parentIds": {
                    "description": "Parent Ids of the resource.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "minAcreage": {
                    "format": "double",
                    "description": "Minimum acreage of the boundary (inclusive).",
                    "type": "number"
                },
                "maxAcreage": {
                    "format": "double",
                    "description": "Maximum acreage of the boundary (inclusive).",
                    "type": "number"
                },
                "intersectsWithGeometry": {
                    "$ref": "#/definitions/GeoJsonObject"
                }
            }
        },
        "CascadeDeleteJob": {
            "description": "Schema of cascade delete job.",
            "required": [
                "farmerId",
                "resourceId",
                "resourceType"
            ],
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer Id.",
                    "type": "string"
                },
                "resourceId": {
                    "description": "The id of the resource.",
                    "type": "string"
                },
                "resourceType": {
                    "description": "The type of the resource.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique job id.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "durationInSeconds": {
                    "description": "Duration of the job in seconds.",
                    "type": "string",
                    "readOnly": true
                },
                "message": {
                    "description": "Status message to capture more details of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "description": "Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "startTime": {
                    "format": "date-time",
                    "description": "Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "endTime": {
                    "format": "date-time",
                    "description": "Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "BoundaryOverlapResponse": {
            "description": "Schema of boundary overlap response.",
            "type": "object",
            "properties": {
                "boundaryAcreage": {
                    "format": "double",
                    "description": "Acreage of Main boundary.",
                    "type": "number"
                },
                "otherBoundaryAcreage": {
                    "format": "double",
                    "description": "Acreage of other boundary.",
                    "type": "number"
                },
                "intersectingAcreage": {
                    "format": "double",
                    "description": "Acreage of intersecting boundary.",
                    "type": "number"
                }
            }
        },
        "Crop": {
            "description": "Schema of crop resource.",
            "type": "object",
            "properties": {
                "phenotype": {
                    "description": "Crop phenotype.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "CropListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Crop"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "CropVariety": {
            "description": "Schema of crop variety resource.",
            "type": "object",
            "properties": {
                "cropId": {
                    "description": "Id of the crop it belongs to.",
                    "type": "string",
                    "readOnly": true
                },
                "brand": {
                    "description": "CropVariety Brand.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "product": {
                    "description": "CropVariety product.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "CropVarietyListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CropVariety"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "Farmer": {
            "description": "Schema of farmer resource.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "FarmerListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Farmer"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "FarmOperationDataIngestionJob": {
            "description": "Schema of farm operation data ingestion job.",
            "required": [
                "authProviderId",
                "farmerId",
                "startYear"
            ],
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer Id.",
                    "type": "string"
                },
                "authProviderId": {
                    "description": "Authentication provider Id.",
                    "type": "string"
                },
                "operations": {
                    "description": "List of operation types for which data needs to be downloaded. Available values: AllOperations, Application, Planting, Harvest, Tillage.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startYear": {
                    "format": "int32",
                    "description": "Start Year (Minimum = 2000, Maximum = CurrentYear).",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique job id.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "durationInSeconds": {
                    "description": "Duration of the job in seconds.",
                    "type": "string",
                    "readOnly": true
                },
                "message": {
                    "description": "Status message to capture more details of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "description": "Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "startTime": {
                    "format": "date-time",
                    "description": "Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "endTime": {
                    "format": "date-time",
                    "description": "Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "Farm": {
            "description": "Schema of farm resource.",
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer Id.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "FarmListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Farm"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "Field": {
            "description": "Schema of field resource.",
            "type": "object",
            "properties": {
                "farmId": {
                    "description": "Id of the associated Farm.",
                    "type": "string"
                },
                "farmerId": {
                    "description": "Farmer Id.",
                    "type": "string",
                    "readOnly": true
                },
                "primaryBoundaryId": {
                    "description": "Primary boundary id.",
                    "type": "string",
                    "readOnly": true
                },
                "boundaryIds": {
                    "description": "Boundary Ids.",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "FieldListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "HarvestProductDetail": {
            "description": "Schema of product used during harvesting.",
            "type": "object",
            "properties": {
                "productName": {
                    "description": "Name of the product.",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "area": {
                    "$ref": "#/definitions/Measure"
                },
                "totalYield": {
                    "$ref": "#/definitions/Measure"
                },
                "avgYield": {
                    "$ref": "#/definitions/Measure"
                },
                "avgMoisture": {
                    "$ref": "#/definitions/Measure"
                },
                "totalWetMass": {
                    "$ref": "#/definitions/Measure"
                },
                "avgWetMass": {
                    "$ref": "#/definitions/Measure"
                }
            }
        },
        "HarvestData": {
            "description": "Schema of harvest data resource.",
            "type": "object",
            "properties": {
                "totalYield": {
                    "$ref": "#/definitions/Measure"
                },
                "avgYield": {
                    "$ref": "#/definitions/Measure"
                },
                "totalWetMass": {
                    "$ref": "#/definitions/Measure"
                },
                "avgWetMass": {
                    "$ref": "#/definitions/Measure"
                },
                "avgMoisture": {
                    "$ref": "#/definitions/Measure"
                },
                "avgSpeed": {
                    "$ref": "#/definitions/Measure"
                },
                "harvestProductDetails": {
                    "description": "Harvest product details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HarvestProductDetail"
                    }
                },
                "area": {
                    "$ref": "#/definitions/Measure"
                },
                "source": {
                    "description": "Source of the operation data.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "operationModifiedDateTime": {
                    "format": "date-time",
                    "description": "Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.\r\nNote: this will be specified by the source provider itself.",
                    "type": "string"
                },
                "operationStartDateTime": {
                    "format": "date-time",
                    "description": "Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "operationEndDateTime": {
                    "format": "date-time",
                    "description": "End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "attachmentsLink": {
                    "description": "Link for attachments.",
                    "type": "string",
                    "readOnly": true
                },
                "associatedBoundaryId": {
                    "description": "Optional boundary ID of the field for which operation was applied.",
                    "type": "string"
                },
                "operationBoundaryId": {
                    "description": "Optional boundary ID of the actual area for which operation was applied inside the specified field.",
                    "type": "string"
                },
                "farmerId": {
                    "description": "Farmer ID which belongs to the operation data.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "HarvestDataListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HarvestData"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "OAuthProvider": {
            "description": "Schema of OAuth provider resource.",
            "type": "object",
            "properties": {
                "appId": {
                    "description": "OAuth App Id for given OAuth Provider.",
                    "maxLength": 200,
                    "minLength": 2,
                    "type": "string"
                },
                "appSecret": {
                    "description": "OAuth App secret for given Provider.\r\nNote: Won't be sent in response.",
                    "maxLength": 200,
                    "minLength": 2,
                    "type": "string"
                },
                "apiKey": {
                    "description": "OAuth Api key for given Provider.\r\nNote: currently Applicable to Climate provider. Won't be sent in response.",
                    "maxLength": 200,
                    "minLength": 2,
                    "type": "string"
                },
                "isProductionApp": {
                    "description": "An optional flag to determine if the App is ready to be used for Production scenarios in the provider side or not. (Default value: false)\r\nNote: Currently applicable for JohnDeere.",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "Unique OAuth provider ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "OAuthProviderListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OAuthProvider"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "OAuthToken": {
            "description": "Schema of OAuth token resource.",
            "required": [
                "authProviderId",
                "farmerId"
            ],
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer ID for this OAuth config.",
                    "type": "string"
                },
                "authProviderId": {
                    "description": "ID of the OAuth provider resource containing app information.",
                    "type": "string"
                },
                "isValid": {
                    "description": "An optional flag indicating whether the token is a valid or expired (Default value: true).",
                    "default": true,
                    "type": "boolean"
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "OAuthTokenListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OAuthToken"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "OAuthConnectRequest": {
            "description": "Get OAuth config query parameters.",
            "required": [
                "farmerId",
                "oAuthProviderId",
                "userRedirectLink"
            ],
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Id of the farmer.",
                    "type": "string"
                },
                "oAuthProviderId": {
                    "description": "Id of the OAuthProvider.",
                    "type": "string"
                },
                "userRedirectLink": {
                    "description": "Link to redirect the user to, at the end of the oauth flow.",
                    "maxLength": 1000,
                    "minLength": 0,
                    "type": "string"
                },
                "userRedirectState": {
                    "description": "State to provide back when redirecting the user, at the end of the oauth flow.",
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string"
                }
            }
        },
        "PlantingProductDetail": {
            "description": "Schema for Planting product detail.",
            "type": "object",
            "properties": {
                "productName": {
                    "description": "Name of the product.",
                    "type": "string"
                },
                "area": {
                    "$ref": "#/definitions/Measure"
                },
                "totalMaterial": {
                    "$ref": "#/definitions/Measure"
                },
                "avgMaterial": {
                    "$ref": "#/definitions/Measure"
                }
            }
        },
        "PlantingData": {
            "description": "Schema of planting data resource.",
            "type": "object",
            "properties": {
                "avgPlantingRate": {
                    "$ref": "#/definitions/Measure"
                },
                "totalMaterial": {
                    "$ref": "#/definitions/Measure"
                },
                "avgMaterial": {
                    "$ref": "#/definitions/Measure"
                },
                "plantingProductDetails": {
                    "description": "Planting product details.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlantingProductDetail"
                    }
                },
                "area": {
                    "$ref": "#/definitions/Measure"
                },
                "source": {
                    "description": "Source of the operation data.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "operationModifiedDateTime": {
                    "format": "date-time",
                    "description": "Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.\r\nNote: this will be specified by the source provider itself.",
                    "type": "string"
                },
                "operationStartDateTime": {
                    "format": "date-time",
                    "description": "Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "operationEndDateTime": {
                    "format": "date-time",
                    "description": "End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "attachmentsLink": {
                    "description": "Link for attachments.",
                    "type": "string",
                    "readOnly": true
                },
                "associatedBoundaryId": {
                    "description": "Optional boundary ID of the field for which operation was applied.",
                    "type": "string"
                },
                "operationBoundaryId": {
                    "description": "Optional boundary ID of the actual area for which operation was applied inside the specified field.",
                    "type": "string"
                },
                "farmerId": {
                    "description": "Farmer ID which belongs to the operation data.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "PlantingDataListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlantingData"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "ImageFormat": {
            "description": "Supported image formats for scene resource.",
            "enum": [
                "TIF"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ImageFormat",
                "modelAsString": true
            }
        },
        "ImageFile": {
            "description": "Schema of image file resource.",
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "fileLink": {
                    "description": "Link of the image file.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the image file.",
                    "type": "string"
                },
                "imageFormat": {
                    "$ref": "#/definitions/ImageFormat"
                },
                "resolution": {
                    "format": "double",
                    "description": "Resolution of image file in meters.",
                    "type": "number"
                }
            }
        },
        "Scene": {
            "description": "Schema of scene resource.",
            "type": "object",
            "properties": {
                "sceneDateTime": {
                    "format": "date-time",
                    "description": "Date-time of the scene, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "provider": {
                    "description": "Data provider of the scene.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "source": {
                    "description": "Data source of the scene.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "imageFiles": {
                    "description": "Collection of image files.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageFile"
                    }
                },
                "imageFormat": {
                    "$ref": "#/definitions/ImageFormat"
                },
                "cloudCoverPercentage": {
                    "format": "double",
                    "description": "Cloud cover percentage of the scene.",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                },
                "darkPixelPercentage": {
                    "format": "double",
                    "description": "Dark pixel percentage of the scene.",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                },
                "ndviMedianValue": {
                    "format": "double",
                    "description": "Median of NDVI of the scene.",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                },
                "boundaryId": {
                    "description": "Boundary ID which belongs to the scene.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "farmerId": {
                    "description": "Farmer ID which belongs to the scene.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique scene resource ID.",
                    "type": "string"
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SceneListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Scene"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "DataProvider": {
            "description": "Provider of satellite data.",
            "enum": [
                "Microsoft"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "DataProvider",
                "modelAsString": true
            }
        },
        "Source": {
            "description": "Source of satellite data.",
            "enum": [
                "Sentinel_2_L2A"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "Source",
                "modelAsString": true
            }
        },
        "SatelliteData": {
            "description": "Data Model for SatelliteInjestionJobRequest.",
            "type": "object",
            "properties": {
                "imageNames": {
                    "description": "List of ImageNames.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "NDVI"
                    ]
                },
                "imageFormats": {
                    "description": "List of ImageFormats. Available value: TIF.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "TIF"
                    ]
                },
                "imageResolutions": {
                    "description": "List of ImageResolutions in meters. Available values: 10, 20, 60.",
                    "type": "array",
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "example": [
                        10
                    ]
                }
            }
        },
        "SatelliteDataIngestionJob": {
            "description": "Schema of satellite data ingestion job.",
            "required": [
                "boundaryId",
                "endDateTime",
                "farmerId",
                "startDateTime"
            ],
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer Id.",
                    "type": "string"
                },
                "boundaryId": {
                    "description": "The id of the boundary object for which satellite data is being fetched.",
                    "type": "string"
                },
                "startDateTime": {
                    "format": "date-time",
                    "description": "Start Date.",
                    "type": "string"
                },
                "endDateTime": {
                    "format": "date-time",
                    "description": "End Date.",
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/DataProvider"
                },
                "source": {
                    "$ref": "#/definitions/Source"
                },
                "data": {
                    "$ref": "#/definitions/SatelliteData"
                },
                "id": {
                    "description": "Unique job id.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "durationInSeconds": {
                    "description": "Duration of the job in seconds.",
                    "type": "string",
                    "readOnly": true
                },
                "message": {
                    "description": "Status message to capture more details of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "description": "Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "startTime": {
                    "format": "date-time",
                    "description": "Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "endTime": {
                    "format": "date-time",
                    "description": "Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "SeasonalField": {
            "description": "Schema of seasonal field resource.",
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer Id.",
                    "type": "string",
                    "readOnly": true
                },
                "primaryBoundaryId": {
                    "description": "Primary boundary id.",
                    "type": "string",
                    "readOnly": true
                },
                "boundaryIds": {
                    "description": "Boundary Ids.",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "farmId": {
                    "description": "Id of the associated Farm.",
                    "type": "string"
                },
                "fieldId": {
                    "description": "Id of the associated Field.",
                    "type": "string"
                },
                "seasonId": {
                    "description": "Id of the season it belongs to.",
                    "type": "string"
                },
                "cropVarietyIds": {
                    "description": "CropVariety ids.",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cropId": {
                    "description": "Id of the crop it belongs to.",
                    "type": "string"
                },
                "avgYieldValue": {
                    "format": "double",
                    "description": "Average yield value of the seasonal field.",
                    "type": "number"
                },
                "avgYieldUnit": {
                    "description": "Unit of the average yield value attribute.",
                    "maxLength": 32,
                    "minLength": 2,
                    "type": "string"
                },
                "avgSeedPopulationValue": {
                    "format": "double",
                    "description": "Average seed population value of the seasonal field.",
                    "type": "number"
                },
                "avgSeedPopulationUnit": {
                    "description": "Unit of average seed population value attribute.",
                    "maxLength": 32,
                    "minLength": 2,
                    "type": "string"
                },
                "plantingDateTime": {
                    "format": "date-time",
                    "description": "Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "SeasonalFieldListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeasonalField"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "Season": {
            "description": "Schema of season resource.",
            "type": "object",
            "properties": {
                "startDateTime": {
                    "format": "date-time",
                    "description": "Season start datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "endDateTime": {
                    "format": "date-time",
                    "description": "Season end datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "year": {
                    "format": "int32",
                    "description": "Season year.",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "SeasonListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Season"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "TillageData": {
            "description": "Schema of tillage data resource.",
            "type": "object",
            "properties": {
                "tillageDepth": {
                    "$ref": "#/definitions/Measure"
                },
                "tillagePressure": {
                    "$ref": "#/definitions/Measure"
                },
                "area": {
                    "$ref": "#/definitions/Measure"
                },
                "source": {
                    "description": "Source of the operation data.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "operationModifiedDateTime": {
                    "format": "date-time",
                    "description": "Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.\r\nNote: this will be specified by the source provider itself.",
                    "type": "string"
                },
                "operationStartDateTime": {
                    "format": "date-time",
                    "description": "Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "operationEndDateTime": {
                    "format": "date-time",
                    "description": "End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "attachmentsLink": {
                    "description": "Link for attachments.",
                    "type": "string",
                    "readOnly": true
                },
                "associatedBoundaryId": {
                    "description": "Optional boundary ID of the field for which operation was applied.",
                    "type": "string"
                },
                "operationBoundaryId": {
                    "description": "Optional boundary ID of the actual area for which operation was applied inside the specified field.",
                    "type": "string"
                },
                "farmerId": {
                    "description": "Farmer ID which belongs to the operation data.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "description": "Unique resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "TillageDataListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TillageData"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "Location": {
            "description": "Location model class.",
            "required": [
                "latitude",
                "longitude"
            ],
            "type": "object",
            "properties": {
                "latitude": {
                    "format": "double",
                    "description": "Latitude of the location.",
                    "maximum": 90,
                    "minimum": -90,
                    "type": "number"
                },
                "longitude": {
                    "format": "double",
                    "description": "Longitude of the location.",
                    "maximum": 180,
                    "minimum": -180,
                    "type": "number"
                }
            }
        },
        "WeatherData": {
            "description": "Schema of weather data.",
            "required": [
                "boundaryId",
                "dateTime",
                "extensionId",
                "extensionVersion",
                "farmerId",
                "granularity",
                "location",
                "weatherDataType"
            ],
            "type": "object",
            "properties": {
                "farmerId": {
                    "description": "Farmer ID.",
                    "type": "string"
                },
                "boundaryId": {
                    "description": "Boundary ID.",
                    "type": "string"
                },
                "extensionId": {
                    "description": "ID of the weather extension.",
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/Location"
                },
                "dateTime": {
                    "format": "date-time",
                    "description": "Date-time of the weather data, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "unitSystemCode": {
                    "description": "Unit System like US/SI etc.",
                    "type": "string"
                },
                "extensionVersion": {
                    "description": "Version of the weather data extension.",
                    "type": "string"
                },
                "weatherDataType": {
                    "description": "Type of weather data (forecast/historical).",
                    "type": "string"
                },
                "granularity": {
                    "description": "Granularity of weather data (daily/hourly).",
                    "type": "string"
                },
                "cloudCover": {
                    "$ref": "#/definitions/Measure"
                },
                "dewPoint": {
                    "$ref": "#/definitions/Measure"
                },
                "growingDegreeDay": {
                    "$ref": "#/definitions/Measure"
                },
                "precipitation": {
                    "$ref": "#/definitions/Measure"
                },
                "pressure": {
                    "$ref": "#/definitions/Measure"
                },
                "relativeHumidity": {
                    "$ref": "#/definitions/Measure"
                },
                "soilMoisture": {
                    "$ref": "#/definitions/Measure"
                },
                "soilTemperature": {
                    "$ref": "#/definitions/Measure"
                },
                "temperature": {
                    "$ref": "#/definitions/Measure"
                },
                "visibility": {
                    "$ref": "#/definitions/Measure"
                },
                "wetBulbTemperature": {
                    "$ref": "#/definitions/Measure"
                },
                "windChill": {
                    "$ref": "#/definitions/Measure"
                },
                "windDirection": {
                    "$ref": "#/definitions/Measure"
                },
                "windGust": {
                    "$ref": "#/definitions/Measure"
                },
                "windSpeed": {
                    "$ref": "#/definitions/Measure"
                },
                "id": {
                    "description": "Weather data ID.",
                    "type": "string"
                },
                "eTag": {
                    "description": "The ETag value to implement optimistic concurrency.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "WeatherDataListResponse": {
            "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of requested objects.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WeatherData"
                    }
                },
                "$skipToken": {
                    "description": "Token used in retrieving the next page. If null, there are no additional pages.",
                    "type": "string"
                },
                "nextLink": {
                    "description": "Continuation link (absolute URI) to the next page of results in the list.",
                    "type": "string"
                }
            }
        },
        "WeatherDataIngestionJob": {
            "description": "Schema of weather ingestion job.",
            "required": [
                "boundaryId",
                "extensionApiInput",
                "extensionApiName",
                "extensionId",
                "farmerId"
            ],
            "type": "object",
            "properties": {
                "boundaryId": {
                    "description": "The id of the boundary object for which weather data is being fetched.",
                    "type": "string"
                },
                "farmerId": {
                    "description": "The id of the farmer object for which weather data is being fetched.",
                    "type": "string"
                },
                "extensionId": {
                    "description": "Id of the extension to be used for the providerInput. eg. DTN.ClearAg.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "extensionApiName": {
                    "description": "Extension api name to which request is to be made.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "extensionApiInput": {
                    "description": "Extension api input dictionary which would be used to feed request query/body/parameter information.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "extensionDataProviderAppId": {
                    "description": "App id of the weather data provider.",
                    "maxLength": 200,
                    "minLength": 2,
                    "type": "string"
                },
                "extensionDataProviderApiKey": {
                    "description": "Api key of the weather data provider.",
                    "maxLength": 200,
                    "minLength": 2,
                    "type": "string"
                },
                "id": {
                    "description": "Unique job id.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "durationInSeconds": {
                    "description": "Duration of the job in seconds.",
                    "type": "string",
                    "readOnly": true
                },
                "message": {
                    "description": "Status message to capture more details of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "description": "Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "startTime": {
                    "format": "date-time",
                    "description": "Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "endTime": {
                    "format": "date-time",
                    "description": "Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "WeatherDataDeleteJob": {
            "description": "Schema of weather data delete job.",
            "required": [
                "boundaryId",
                "extensionId",
                "farmerId"
            ],
            "type": "object",
            "properties": {
                "extensionId": {
                    "description": "Id of the extension to be used for the providerInput. eg. DTN.ClearAg.",
                    "maxLength": 100,
                    "minLength": 2,
                    "type": "string"
                },
                "farmerId": {
                    "description": "The id of the farmer object for which weather data is being fetched.",
                    "type": "string"
                },
                "boundaryId": {
                    "description": "The id of the boundary object for which weather data is being fetched.",
                    "type": "string"
                },
                "weatherDataType": {
                    "description": "Type of weather data. Possible values include: 'forecast' , 'historical'.",
                    "type": "string"
                },
                "granularity": {
                    "description": "Granularity of weather data. Possible values include: 'daily' , 'hourly'.",
                    "type": "string"
                },
                "startDateTime": {
                    "format": "date-time",
                    "description": "Weather data start UTC date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "endDateTime": {
                    "format": "date-time",
                    "description": "Weather data end UTC date-time (inclusive), sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique job id.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "Status of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "durationInSeconds": {
                    "description": "Duration of the job in seconds.",
                    "type": "string",
                    "readOnly": true
                },
                "message": {
                    "description": "Status message to capture more details of the job.",
                    "type": "string",
                    "readOnly": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "lastActionDateTime": {
                    "format": "date-time",
                    "description": "Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "startTime": {
                    "format": "date-time",
                    "description": "Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "endTime": {
                    "format": "date-time",
                    "description": "Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name to identify resource.",
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                },
                "description": {
                    "description": "Textual description of the resource.",
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                },
                "properties": {
                    "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "example": {
                        "key1": "value1",
                        "key2": 123.45
                    }
                }
            }
        },
        "MultiPolygon": {
            "description": "MultiPolygon geometry.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "required": [
                        "coordinates"
                    ],
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "description": "Gets or sets Coordinates of GeoJSON Object.\r\nIt must be an array of polygons, each polygon contains list of linear rings.\r\nFor Polygons with more than one of these rings, the first MUST be the exterior ring,\r\nand any others MUST be interior rings.",
                            "minLength": 1,
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            ],
            "x-ms-discriminator-value": "MultiPolygon"
        },
        "Point": {
            "description": "Point geometry.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "required": [
                        "coordinates"
                    ],
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "description": "Gets or sets the coordinate of this point.\r\nIt must be an array of 2 or 3 elements for a 2D or 3D system.",
                            "maximum": 3,
                            "minimum": 2,
                            "type": "array",
                            "items": {
                                "format": "double",
                                "type": "number"
                            }
                        }
                    }
                }
            ],
            "x-ms-discriminator-value": "Point"
        },
        "Polygon": {
            "description": "Polygon geometry.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/GeoJsonObject"
                },
                {
                    "required": [
                        "coordinates"
                    ],
                    "type": "object",
                    "properties": {
                        "coordinates": {
                            "description": "Gets or sets type of the GeoJSON Object.\r\nIt must be an array of linear ring coordinate arrays.\r\nFor Polygons with more than one of these rings, the first MUST be the exterior ring,\r\nand any others MUST be interior rings.",
                            "minLength": 1,
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                }
            ],
            "x-ms-discriminator-value": "Polygon"
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Please provide a valid bearer token for authorized API calls. Note that you might need to clear your browser cache if you tried un-authenticated calls before."
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}