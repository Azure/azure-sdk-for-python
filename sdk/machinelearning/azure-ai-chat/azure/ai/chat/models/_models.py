# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import sys
from typing import Any, Dict, List, Mapping, Optional, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_field

if sys.version_info >= (3, 8):
    from typing import Literal  # pylint: disable=no-name-in-module, ungrouped-imports
else:
    from typing_extensions import Literal  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ChatChoice(_model_base.Model):
    """placeholder.

    All required parameters must be populated in order to send to Azure.

    :ivar index: placeholder. Required.
    :vartype index: int
    :ivar message: placeholder. Required.
    :vartype message: ~azure.ai.chat.models.ChatMessage
    :ivar extra_arguments: placeholder. Required.
    :vartype extra_arguments: dict[str, any]
    :ivar session_state: placeholder. Required.
    :vartype session_state: any
    :ivar finish_reason: placeholder. Required. Known values are: "stop", "length",
     "content_filter", and "function_call".
    :vartype finish_reason: str or ~azure.ai.chat.models.FinishReason
    """

    index: int = rest_field()
    """placeholder. Required."""
    message: "_models.ChatMessage" = rest_field()
    """placeholder. Required."""
    extra_arguments: Dict[str, Any] = rest_field(name="extra_args")
    """placeholder. Required."""
    session_state: Any = rest_field()
    """placeholder. Required."""
    finish_reason: Union[str, "_models.FinishReason"] = rest_field(name="finishReason")
    """placeholder. Required. Known values are: \"stop\", \"length\", \"content_filter\", and
     \"function_call\"."""

    @overload
    def __init__(
        self,
        *,
        index: int,
        message: "_models.ChatMessage",
        extra_arguments: Dict[str, Any],
        session_state: Any,
        finish_reason: Union[str, "_models.FinishReason"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ChatCompletion(_model_base.Model):
    """placeholder.

    All required parameters must be populated in order to send to Azure.

    :ivar choices: placeholder. Required.
    :vartype choices: list[~azure.ai.chat.models.ChatChoice]
    """

    choices: List["_models.ChatChoice"] = rest_field()
    """placeholder. Required."""

    @overload
    def __init__(
        self,
        *,
        choices: List["_models.ChatChoice"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ChatCompletionChunk(_model_base.Model):
    """placeholder.

    All required parameters must be populated in order to send to Azure.

    :ivar choices: placeholder. Required.
    :vartype choices: list[~azure.ai.chat.models.ChoiceDelta]
    """

    choices: List["_models.ChoiceDelta"] = rest_field()
    """placeholder. Required."""

    @overload
    def __init__(
        self,
        *,
        choices: List["_models.ChoiceDelta"],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ChatCompletionOptions(_model_base.Model):
    """ChatCompletionOptions.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar messages: Required.
    :vartype messages: list[~azure.ai.chat.models.ChatMessage]
    :ivar stream: Required. Default value is True.
    :vartype stream: bool
    :ivar session_state: Required.
    :vartype session_state: any
    :ivar extra_arguments: Required.
    :vartype extra_arguments: dict[str, any]
    """

    messages: List["_models.ChatMessage"] = rest_field()
    """Required."""
    stream: Literal[True] = rest_field()
    """Required. Default value is True."""
    session_state: Any = rest_field()
    """Required."""
    extra_arguments: Dict[str, Any] = rest_field(name="extra_args")
    """Required."""

    @overload
    def __init__(
        self,
        *,
        messages: List["_models.ChatMessage"],
        session_state: Any,
        extra_arguments: Dict[str, Any],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
        self.stream: Literal[True] = True


class ChatMessage(_model_base.Model):
    """placeholder.

    All required parameters must be populated in order to send to Azure.

    :ivar content: placeholder. Required.
    :vartype content: str
    :ivar role: placeholder. Required. Known values are: "user", "system", and "assistant".
    :vartype role: str or ~azure.ai.chat.models.ChatRole
    :ivar session_state: placeholder. Required.
    :vartype session_state: any
    """

    content: str = rest_field()
    """placeholder. Required."""
    role: Union[str, "_models.ChatRole"] = rest_field()
    """placeholder. Required. Known values are: \"user\", \"system\", and \"assistant\"."""
    session_state: Any = rest_field()
    """placeholder. Required."""

    @overload
    def __init__(
        self,
        *,
        content: str,
        role: Union[str, "_models.ChatRole"],
        session_state: Any,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ChatMessageDelta(_model_base.Model):
    """placeholder.

    :ivar content: placeholder.
    :vartype content: str
    :ivar role: placeholder. Known values are: "user", "system", and "assistant".
    :vartype role: str or ~azure.ai.chat.models.ChatRole
    :ivar session_state: placeholder.
    :vartype session_state: any
    """

    content: Optional[str] = rest_field()
    """placeholder."""
    role: Optional[Union[str, "_models.ChatRole"]] = rest_field()
    """placeholder. Known values are: \"user\", \"system\", and \"assistant\"."""
    session_state: Optional[Any] = rest_field()
    """placeholder."""

    @overload
    def __init__(
        self,
        *,
        content: Optional[str] = None,
        role: Optional[Union[str, "_models.ChatRole"]] = None,
        session_state: Optional[Any] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ChoiceDelta(_model_base.Model):
    """placeholder.

    All required parameters must be populated in order to send to Azure.

    :ivar index: placeholder. Required.
    :vartype index: int
    :ivar delta: placeholder. Required.
    :vartype delta: ~azure.ai.chat.models.ChatMessageDelta
    :ivar extra_arguments: placeholder.
    :vartype extra_arguments: dict[str, any]
    :ivar session_state: placeholder.
    :vartype session_state: any
    :ivar finish_reason: placeholder. Known values are: "stop", "length", "content_filter", and
     "function_call".
    :vartype finish_reason: str or ~azure.ai.chat.models.FinishReason
    """

    index: int = rest_field()
    """placeholder. Required."""
    delta: "_models.ChatMessageDelta" = rest_field()
    """placeholder. Required."""
    extra_arguments: Optional[Dict[str, Any]] = rest_field(name="extra_args")
    """placeholder."""
    session_state: Optional[Any] = rest_field()
    """placeholder."""
    finish_reason: Optional[Union[str, "_models.FinishReason"]] = rest_field(name="finishReason")
    """placeholder. Known values are: \"stop\", \"length\", \"content_filter\", and \"function_call\"."""

    @overload
    def __init__(
        self,
        *,
        index: int,
        delta: "_models.ChatMessageDelta",
        extra_arguments: Optional[Dict[str, Any]] = None,
        session_state: Optional[Any] = None,
        finish_reason: Optional[Union[str, "_models.FinishReason"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class StreamingChatCompletionOptions(_model_base.Model):
    """placeholder.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar messages: placeholder. Required.
    :vartype messages: list[~azure.ai.chat.models.ChatMessage]
    :ivar stream: placeholder. Required. Default value is False.
    :vartype stream: bool
    :ivar session_state: placeholder. Required.
    :vartype session_state: any
    :ivar extra_arguments: placeholder. Required.
    :vartype extra_arguments: dict[str, any]
    """

    messages: List["_models.ChatMessage"] = rest_field()
    """placeholder. Required."""
    stream: Literal[False] = rest_field()
    """placeholder. Required. Default value is False."""
    session_state: Any = rest_field()
    """placeholder. Required."""
    extra_arguments: Dict[str, Any] = rest_field(name="extra_args")
    """placeholder. Required."""

    @overload
    def __init__(
        self,
        *,
        messages: List["_models.ChatMessage"],
        session_state: Any,
        extra_arguments: Dict[str, Any],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
        self.stream: Literal[False] = False
