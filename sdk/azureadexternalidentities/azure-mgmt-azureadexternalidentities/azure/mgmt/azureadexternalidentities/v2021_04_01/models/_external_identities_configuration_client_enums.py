# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from six import with_metaclass
from azure.core import CaseInsensitiveEnumMeta


class B2CResourceSKUName(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The name of the SKU for the tenant.
    """

    #: Azure AD B2C usage is billed to a linked Azure subscription and uses a monthly active users
    #: (MAU) billing model.
    STANDARD = "Standard"
    #: Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications
    #: based billing.
    PREMIUM_P1 = "PremiumP1"
    #: Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications
    #: based billing.
    PREMIUM_P2 = "PremiumP2"

class BillingType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The type of billing. Will be MAU for all new customers. If 'Auths', it can be updated to 'MAU'.
    Cannot be changed if value is 'MAU'. Learn more about Azure AD B2C billing at
    `aka.ms/b2cBilling <https://aka.ms/b2cbilling>`_.
    """

    #: Azure AD B2C usage is billed to a linked Azure subscription and uses a monthly active users
    #: (MAU) billing model.
    MAU = "MAU"
    #: Azure AD B2C usage is billed to a linked Azure subscription and uses number of authentications
    #: based billing.
    AUTHS = "Auths"

class NameAvailabilityReasonType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Describes the reason for the 'nameAvailable' value.
    """

    #: The name is already in use and is therefore unavailable.
    ALREADY_EXISTS = "AlreadyExists"
    #: The name provided does not match the resource providerâ€™s naming requirements (incorrect length,
    #: unsupported characters, etc.).
    INVALID = "Invalid"

class StatusType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The status of the operation.
    """

    #: The operation succeeded.
    SUCCEEDED = "Succeeded"
    #: The operation is pending.
    PENDING = "Pending"
    #: The operation failed.
    FAILED = "Failed"
