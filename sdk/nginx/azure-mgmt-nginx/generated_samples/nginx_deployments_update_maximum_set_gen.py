# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.mgmt.nginx import NginxManagementClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-nginx
# USAGE
    python nginx_deployments_update_maximum_set_gen.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = NginxManagementClient(
        credential=DefaultAzureCredential(),
        subscription_id="333F7B80-063D-40E5-975B-6E3C3CAC8296",
    )

    response = client.nginx_deployments.update(
        resource_group_name="rgopenapi",
        nginx_deployment_name="myDeployment",
        properties={
            "identity": {"type": "None", "userAssignedIdentities": {"key337": {}}},
            "properties": {
                "autoUpgradeProfile": {"upgradeChannel": "ymprjrocuishkfwxjq"},
                "dataplaneApiEndpoint": "kbiufuqmpq",
                "enableDiagnosticsSupport": True,
                "ipAddress": "s",
                "logging": {
                    "storageAccount": {
                        "accountName": "abkrcmhgcltbxuylszapyfm",
                        "containerName": "efgsyusocjaprhscvmgwrbucwbskm",
                    }
                },
                "networkProfile": {
                    "frontEndIPConfiguration": {
                        "privateIPAddresses": [
                            {
                                "privateIPAddress": "psbnydlzwdttexeljdcfh",
                                "privateIPAllocationMethod": "Static",
                                "subnetId": "fquufbmeybmmxbcapozztvgklo",
                            }
                        ],
                        "publicIPAddresses": [{"id": "shguvav"}],
                    },
                    "networkInterfaceConfiguration": {"subnetId": "qquluyeug"},
                },
                "nginxAppProtect": {
                    "webApplicationFirewallSettings": {"activationState": "Enabled"},
                    "webApplicationFirewallStatus": {
                        "attackSignaturesPackage": {"revisionDatetime": "rknwqymfap", "version": "lpejes"},
                        "botSignaturesPackage": {"revisionDatetime": "rknwqymfap", "version": "lpejes"},
                        "componentVersions": {
                            "wafEngineVersion": "obyyywbsvealqqnyrywe",
                            "wafNginxVersion": "ulptzjmifyyxdobni",
                        },
                        "threatCampaignsPackage": {"revisionDatetime": "rknwqymfap", "version": "lpejes"},
                        "wafRelease": "onmxvdxdnlzovetdqte",
                    },
                },
                "nginxVersion": "vtzduzvjepaooanrkbxscijwealiuh",
                "scalingProperties": {
                    "autoScaleSettings": {"profiles": [{"capacity": {"max": 30, "min": 2}, "name": "qgaibobr"}]},
                    "capacity": 19,
                },
                "userProfile": {"preferredEmail": "nxqrabztuufzbdnmgqfg"},
            },
            "sku": {
                "capacity": 5,
                "family": "suykyfprhrlgpmsoufdrqokmqpp",
                "name": "iccbcaojxhefokrdozqgdrllblzg",
                "size": "cggqadyh",
                "tier": "Free",
            },
            "tags": {"key5701": "gplzuuljzalcbbvm"},
        },
    )
    print(response)


# x-ms-original-file: specification/nginx/resource-manager/NGINX.NGINXPLUS/preview/2025-03-01-preview/examples/NginxDeployments_Update_MaximumSet_Gen.json
if __name__ == "__main__":
    main()
