# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SkuAvailability(Model):
    """SKU availability model.

    All required parameters must be populated in order to send to Azure.

    :param dedicated_availability_zone_id: CSOS Availability Zone id
    :type dedicated_availability_zone_id: str
    :param dedicated_availability_zone_name: CSOS Availability Zone Name
    :type dedicated_availability_zone_name: str
    :param dedicated_placement_group_id: CSOS Placement Group Id
    :type dedicated_placement_group_id: str
    :param dedicated_placement_group_name: CSOS Placement Group name
    :type dedicated_placement_group_name: str
    :param limit: Required. indicates how many resources of a given SKU is
     available in a AZ->PG
    :type limit: int
    :param resource_type: resource type e.g. DedicatedCloudNodes
    :type resource_type: str
    :param sku_id: sku id
    :type sku_id: str
    :param sku_name: sku name
    :type sku_name: str
    """

    _validation = {
        'limit': {'required': True},
    }

    _attribute_map = {
        'dedicated_availability_zone_id': {'key': 'dedicatedAvailabilityZoneId', 'type': 'str'},
        'dedicated_availability_zone_name': {'key': 'dedicatedAvailabilityZoneName', 'type': 'str'},
        'dedicated_placement_group_id': {'key': 'dedicatedPlacementGroupId', 'type': 'str'},
        'dedicated_placement_group_name': {'key': 'dedicatedPlacementGroupName', 'type': 'str'},
        'limit': {'key': 'limit', 'type': 'int'},
        'resource_type': {'key': 'resourceType', 'type': 'str'},
        'sku_id': {'key': 'skuId', 'type': 'str'},
        'sku_name': {'key': 'skuName', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(SkuAvailability, self).__init__(**kwargs)
        self.dedicated_availability_zone_id = kwargs.get('dedicated_availability_zone_id', None)
        self.dedicated_availability_zone_name = kwargs.get('dedicated_availability_zone_name', None)
        self.dedicated_placement_group_id = kwargs.get('dedicated_placement_group_id', None)
        self.dedicated_placement_group_name = kwargs.get('dedicated_placement_group_name', None)
        self.limit = kwargs.get('limit', None)
        self.resource_type = kwargs.get('resource_type', None)
        self.sku_id = kwargs.get('sku_id', None)
        self.sku_name = kwargs.get('sku_name', None)
