# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import DynamicSchemasOperations  # type: ignore
from ._operations import SchemasOperations  # type: ignore
from ._operations import SchemaVersionsOperations  # type: ignore
from ._operations import SolutionVersionsOperations  # type: ignore
from ._operations import JobsOperations  # type: ignore
from ._operations import TargetsOperations  # type: ignore
from ._operations import DynamicSchemaVersionsOperations  # type: ignore
from ._operations import SchemaReferencesOperations  # type: ignore
from ._operations import SolutionsOperations  # type: ignore
from ._operations import SolutionTemplateVersionsOperations  # type: ignore
from ._operations import SolutionTemplatesOperations  # type: ignore
from ._operations import InstancesOperations  # type: ignore
from ._operations import InstanceHistoriesOperations  # type: ignore
from ._operations import ConfigTemplatesOperations  # type: ignore
from ._operations import ConfigTemplateVersionsOperations  # type: ignore
from ._operations import WorkflowsOperations  # type: ignore
from ._operations import WorkflowVersionsOperations  # type: ignore
from ._operations import ExecutionsOperations  # type: ignore
from ._operations import DiagnosticsOperations  # type: ignore
from ._operations import ContextsOperations  # type: ignore
from ._operations import SiteReferencesOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "DynamicSchemasOperations",
    "SchemasOperations",
    "SchemaVersionsOperations",
    "SolutionVersionsOperations",
    "JobsOperations",
    "TargetsOperations",
    "DynamicSchemaVersionsOperations",
    "SchemaReferencesOperations",
    "SolutionsOperations",
    "SolutionTemplateVersionsOperations",
    "SolutionTemplatesOperations",
    "InstancesOperations",
    "InstanceHistoriesOperations",
    "ConfigTemplatesOperations",
    "ConfigTemplateVersionsOperations",
    "WorkflowsOperations",
    "WorkflowVersionsOperations",
    "ExecutionsOperations",
    "DiagnosticsOperations",
    "ContextsOperations",
    "SiteReferencesOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
