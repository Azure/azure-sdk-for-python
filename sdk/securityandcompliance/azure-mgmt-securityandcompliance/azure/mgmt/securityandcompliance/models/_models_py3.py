# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

from ._security_and_compliance_client_enums import *


class ErrorDetails(msrest.serialization.Model):
    """Error details.

    :ivar error: Object containing error details.
    :vartype error: ~azure.mgmt.securityandcompliance.models.ErrorDetailsInternal
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetailsInternal'},
    }

    def __init__(
        self,
        *,
        error: Optional["ErrorDetailsInternal"] = None,
        **kwargs
    ):
        """
        :keyword error: Object containing error details.
        :paramtype error: ~azure.mgmt.securityandcompliance.models.ErrorDetailsInternal
        """
        super(ErrorDetails, self).__init__(**kwargs)
        self.error = error


class ErrorDetailsInternal(msrest.serialization.Model):
    """Error details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The target of the particular error.
    :vartype target: str
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorDetailsInternal, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None


class Operation(msrest.serialization.Model):
    """Service REST API operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Operation name: {provider}/{resource}/{read | write | action | delete}.
    :vartype name: str
    :ivar is_data_action: Indicates whether the operation is a data action.
    :vartype is_data_action: bool
    :ivar origin: Default value is 'user,system'.
    :vartype origin: str
    :ivar display: The information displayed about the operation.
    :vartype display: ~azure.mgmt.securityandcompliance.models.OperationDisplay
    """

    _validation = {
        'name': {'readonly': True},
        'is_data_action': {'readonly': True},
        'origin': {'readonly': True},
        'display': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'is_data_action': {'key': 'isDataAction', 'type': 'bool'},
        'origin': {'key': 'origin', 'type': 'str'},
        'display': {'key': 'display', 'type': 'OperationDisplay'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Operation, self).__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.origin = None
        self.display = None


class OperationDisplay(msrest.serialization.Model):
    """The object that represents the operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: Service provider: Microsoft.SecurityAndCompliance.
    :vartype provider: str
    :ivar resource: Resource Type: Services.
    :vartype resource: str
    :ivar operation: Name of the operation.
    :vartype operation: str
    :ivar description: Friendly description for the operation,.
    :vartype description: str
    """

    _validation = {
        'provider': {'readonly': True},
        'resource': {'readonly': True},
        'operation': {'readonly': True},
        'description': {'readonly': True},
    }

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationDisplay, self).__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(msrest.serialization.Model):
    """A list of service operations. It contains a list of operations and a URL link to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar next_link: The link used to get the next page of service description objects.
    :vartype next_link: str
    :ivar value: A list of service operations supported by the Microsoft.SecurityAndCompliance
     resource provider.
    :vartype value: list[~azure.mgmt.securityandcompliance.models.Operation]
    """

    _validation = {
        'next_link': {'readonly': True},
        'value': {'readonly': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[Operation]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationListResult, self).__init__(**kwargs)
        self.next_link = None
        self.value = None


class OperationResultsDescription(msrest.serialization.Model):
    """The properties indicating the operation result of an operation on a service.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The ID of the operation returned.
    :vartype id: str
    :ivar name: The name of the operation result.
    :vartype name: str
    :ivar status: The status of the operation being performed. Possible values include: "Canceled",
     "Succeeded", "Failed", "Requested", "Running".
    :vartype status: str or ~azure.mgmt.securityandcompliance.models.OperationResultStatus
    :ivar start_time: The time that the operation was started.
    :vartype start_time: str
    :ivar properties: Additional properties of the operation result.
    :vartype properties: any
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'status': {'readonly': True},
        'start_time': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'start_time': {'key': 'startTime', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        properties: Optional[Any] = None,
        **kwargs
    ):
        """
        :keyword properties: Additional properties of the operation result.
        :paramtype properties: any
        """
        super(OperationResultsDescription, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.status = None
        self.start_time = None
        self.properties = properties


class PrivateEndpoint(msrest.serialization.Model):
    """The Private Endpoint resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: The ARM identifier for Private Endpoint.
    :vartype id: str
    """

    _validation = {
        'id': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(PrivateEndpoint, self).__init__(**kwargs)
        self.id = None


class Resource(msrest.serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Resource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class PrivateEndpointConnection(Resource):
    """The Private Endpoint Connection resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar private_endpoint: The resource of private end point.
    :vartype private_endpoint: ~azure.mgmt.securityandcompliance.models.PrivateEndpoint
    :ivar private_link_service_connection_state: A collection of information about the state of the
     connection between service consumer and provider.
    :vartype private_link_service_connection_state:
     ~azure.mgmt.securityandcompliance.models.PrivateLinkServiceConnectionState
    :ivar provisioning_state: The provisioning state of the private endpoint connection resource.
     Possible values include: "Succeeded", "Creating", "Deleting", "Failed".
    :vartype provisioning_state: str or
     ~azure.mgmt.securityandcompliance.models.PrivateEndpointConnectionProvisioningState
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'private_endpoint': {'key': 'properties.privateEndpoint', 'type': 'PrivateEndpoint'},
        'private_link_service_connection_state': {'key': 'properties.privateLinkServiceConnectionState', 'type': 'PrivateLinkServiceConnectionState'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        private_endpoint: Optional["PrivateEndpoint"] = None,
        private_link_service_connection_state: Optional["PrivateLinkServiceConnectionState"] = None,
        **kwargs
    ):
        """
        :keyword private_endpoint: The resource of private end point.
        :paramtype private_endpoint: ~azure.mgmt.securityandcompliance.models.PrivateEndpoint
        :keyword private_link_service_connection_state: A collection of information about the state of
         the connection between service consumer and provider.
        :paramtype private_link_service_connection_state:
         ~azure.mgmt.securityandcompliance.models.PrivateLinkServiceConnectionState
        """
        super(PrivateEndpointConnection, self).__init__(**kwargs)
        self.system_data = None
        self.private_endpoint = private_endpoint
        self.private_link_service_connection_state = private_link_service_connection_state
        self.provisioning_state = None


class PrivateEndpointConnectionListResult(msrest.serialization.Model):
    """List of private endpoint connection associated with the specified storage account.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Array of private endpoint connections.
    :vartype value: list[~azure.mgmt.securityandcompliance.models.PrivateEndpointConnection]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[PrivateEndpointConnection]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateEndpointConnection"]] = None,
        **kwargs
    ):
        """
        :keyword value: Array of private endpoint connections.
        :paramtype value: list[~azure.mgmt.securityandcompliance.models.PrivateEndpointConnection]
        """
        super(PrivateEndpointConnectionListResult, self).__init__(**kwargs)
        self.value = value
        self.next_link = None


class PrivateLinkResource(Resource):
    """A private link resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar group_id: The private link resource group id.
    :vartype group_id: str
    :ivar required_members: The private link resource required member names.
    :vartype required_members: list[str]
    :ivar required_zone_names: The private link resource Private link DNS zone name.
    :vartype required_zone_names: list[str]
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'group_id': {'readonly': True},
        'required_members': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'group_id': {'key': 'properties.groupId', 'type': 'str'},
        'required_members': {'key': 'properties.requiredMembers', 'type': '[str]'},
        'required_zone_names': {'key': 'properties.requiredZoneNames', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        required_zone_names: Optional[List[str]] = None,
        **kwargs
    ):
        """
        :keyword required_zone_names: The private link resource Private link DNS zone name.
        :paramtype required_zone_names: list[str]
        """
        super(PrivateLinkResource, self).__init__(**kwargs)
        self.system_data = None
        self.group_id = None
        self.required_members = None
        self.required_zone_names = required_zone_names


class PrivateLinkResourceListResult(msrest.serialization.Model):
    """A list of private link resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: Array of private link resources.
    :vartype value: list[~azure.mgmt.securityandcompliance.models.PrivateLinkResource]
    :ivar next_link: The URL to get the next set of results.
    :vartype next_link: str
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[PrivateLinkResource]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateLinkResource"]] = None,
        **kwargs
    ):
        """
        :keyword value: Array of private link resources.
        :paramtype value: list[~azure.mgmt.securityandcompliance.models.PrivateLinkResource]
        """
        super(PrivateLinkResourceListResult, self).__init__(**kwargs)
        self.value = value
        self.next_link = None


class PrivateLinkServiceConnectionState(msrest.serialization.Model):
    """A collection of information about the state of the connection between service consumer and provider.

    :ivar status: Indicates whether the connection has been Approved/Rejected/Removed by the owner
     of the service. Possible values include: "Pending", "Approved", "Rejected".
    :vartype status: str or
     ~azure.mgmt.securityandcompliance.models.PrivateEndpointServiceConnectionStatus
    :ivar description: The reason for approval/rejection of the connection.
    :vartype description: str
    :ivar actions_required: A message indicating if changes on the service provider require any
     updates on the consumer.
    :vartype actions_required: str
    """

    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'actions_required': {'key': 'actionsRequired', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        status: Optional[Union[str, "PrivateEndpointServiceConnectionStatus"]] = None,
        description: Optional[str] = None,
        actions_required: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword status: Indicates whether the connection has been Approved/Rejected/Removed by the
         owner of the service. Possible values include: "Pending", "Approved", "Rejected".
        :paramtype status: str or
         ~azure.mgmt.securityandcompliance.models.PrivateEndpointServiceConnectionStatus
        :keyword description: The reason for approval/rejection of the connection.
        :paramtype description: str
        :keyword actions_required: A message indicating if changes on the service provider require any
         updates on the consumer.
        :paramtype actions_required: str
        """
        super(PrivateLinkServiceConnectionState, self).__init__(**kwargs)
        self.status = status
        self.description = description
        self.actions_required = actions_required


class ServicesResource(msrest.serialization.Model):
    """The common properties of a service.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource identifier.
    :vartype id: str
    :ivar name: The resource name.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
     "fhir-R4".
    :vartype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
    :ivar location: Required. The resource location.
    :vartype location: str
    :ivar tags: A set of tags. The resource tags.
    :vartype tags: dict[str, str]
    :ivar etag: An etag associated with the resource, used for optimistic concurrency when editing
     it.
    :vartype etag: str
    :ivar identity: Setting indicating whether the service has a managed identity associated with
     it.
    :vartype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True, 'pattern': r'^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$'},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'kind': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'ServicesResourceIdentity'},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "Kind"],
        location: str,
        tags: Optional[Dict[str, str]] = None,
        etag: Optional[str] = None,
        identity: Optional["ServicesResourceIdentity"] = None,
        **kwargs
    ):
        """
        :keyword kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
         "fhir-R4".
        :paramtype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
        :keyword location: Required. The resource location.
        :paramtype location: str
        :keyword tags: A set of tags. The resource tags.
        :paramtype tags: dict[str, str]
        :keyword etag: An etag associated with the resource, used for optimistic concurrency when
         editing it.
        :paramtype etag: str
        :keyword identity: Setting indicating whether the service has a managed identity associated
         with it.
        :paramtype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
        """
        super(ServicesResource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None
        self.kind = kind
        self.location = location
        self.tags = tags
        self.etag = etag
        self.identity = identity


class PrivateLinkServicesForEDMUploadDescription(ServicesResource):
    """The description of the service.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource identifier.
    :vartype id: str
    :ivar name: The resource name.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
     "fhir-R4".
    :vartype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
    :ivar location: Required. The resource location.
    :vartype location: str
    :ivar tags: A set of tags. The resource tags.
    :vartype tags: dict[str, str]
    :ivar etag: An etag associated with the resource, used for optimistic concurrency when editing
     it.
    :vartype etag: str
    :ivar identity: Setting indicating whether the service has a managed identity associated with
     it.
    :vartype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
    :ivar properties: The common properties of a service.
    :vartype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True, 'pattern': r'^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$'},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'kind': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'ServicesResourceIdentity'},
        'properties': {'key': 'properties', 'type': 'ServicesProperties'},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "Kind"],
        location: str,
        tags: Optional[Dict[str, str]] = None,
        etag: Optional[str] = None,
        identity: Optional["ServicesResourceIdentity"] = None,
        properties: Optional["ServicesProperties"] = None,
        **kwargs
    ):
        """
        :keyword kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
         "fhir-R4".
        :paramtype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
        :keyword location: Required. The resource location.
        :paramtype location: str
        :keyword tags: A set of tags. The resource tags.
        :paramtype tags: dict[str, str]
        :keyword etag: An etag associated with the resource, used for optimistic concurrency when
         editing it.
        :paramtype etag: str
        :keyword identity: Setting indicating whether the service has a managed identity associated
         with it.
        :paramtype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
        :keyword properties: The common properties of a service.
        :paramtype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
        """
        super(PrivateLinkServicesForEDMUploadDescription, self).__init__(kind=kind, location=location, tags=tags, etag=etag, identity=identity, **kwargs)
        self.properties = properties


class PrivateLinkServicesForEDMUploadDescriptionListResult(msrest.serialization.Model):
    """A list of service description objects with a next link.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar next_link: The link used to get the next page of service description objects.
    :vartype next_link: str
    :ivar value: A list of service description objects.
    :vartype value:
     list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForEDMUploadDescription]
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[PrivateLinkServicesForEDMUploadDescription]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateLinkServicesForEDMUploadDescription"]] = None,
        **kwargs
    ):
        """
        :keyword value: A list of service description objects.
        :paramtype value:
         list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForEDMUploadDescription]
        """
        super(PrivateLinkServicesForEDMUploadDescriptionListResult, self).__init__(**kwargs)
        self.next_link = None
        self.value = value


class PrivateLinkServicesForM365ComplianceCenterDescription(ServicesResource):
    """The description of the service.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource identifier.
    :vartype id: str
    :ivar name: The resource name.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
     "fhir-R4".
    :vartype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
    :ivar location: Required. The resource location.
    :vartype location: str
    :ivar tags: A set of tags. The resource tags.
    :vartype tags: dict[str, str]
    :ivar etag: An etag associated with the resource, used for optimistic concurrency when editing
     it.
    :vartype etag: str
    :ivar identity: Setting indicating whether the service has a managed identity associated with
     it.
    :vartype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
    :ivar properties: The common properties of a service.
    :vartype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True, 'pattern': r'^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$'},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'kind': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'ServicesResourceIdentity'},
        'properties': {'key': 'properties', 'type': 'ServicesProperties'},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "Kind"],
        location: str,
        tags: Optional[Dict[str, str]] = None,
        etag: Optional[str] = None,
        identity: Optional["ServicesResourceIdentity"] = None,
        properties: Optional["ServicesProperties"] = None,
        **kwargs
    ):
        """
        :keyword kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
         "fhir-R4".
        :paramtype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
        :keyword location: Required. The resource location.
        :paramtype location: str
        :keyword tags: A set of tags. The resource tags.
        :paramtype tags: dict[str, str]
        :keyword etag: An etag associated with the resource, used for optimistic concurrency when
         editing it.
        :paramtype etag: str
        :keyword identity: Setting indicating whether the service has a managed identity associated
         with it.
        :paramtype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
        :keyword properties: The common properties of a service.
        :paramtype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
        """
        super(PrivateLinkServicesForM365ComplianceCenterDescription, self).__init__(kind=kind, location=location, tags=tags, etag=etag, identity=identity, **kwargs)
        self.properties = properties


class PrivateLinkServicesForM365ComplianceCenterDescriptionListResult(msrest.serialization.Model):
    """A list of service description objects with a next link.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar next_link: The link used to get the next page of service description objects.
    :vartype next_link: str
    :ivar value: A list of service description objects.
    :vartype value:
     list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForM365ComplianceCenterDescription]
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[PrivateLinkServicesForM365ComplianceCenterDescription]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateLinkServicesForM365ComplianceCenterDescription"]] = None,
        **kwargs
    ):
        """
        :keyword value: A list of service description objects.
        :paramtype value:
         list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForM365ComplianceCenterDescription]
        """
        super(PrivateLinkServicesForM365ComplianceCenterDescriptionListResult, self).__init__(**kwargs)
        self.next_link = None
        self.value = value


class PrivateLinkServicesForM365SecurityCenterDescription(ServicesResource):
    """The description of the service.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource identifier.
    :vartype id: str
    :ivar name: The resource name.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
     "fhir-R4".
    :vartype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
    :ivar location: Required. The resource location.
    :vartype location: str
    :ivar tags: A set of tags. The resource tags.
    :vartype tags: dict[str, str]
    :ivar etag: An etag associated with the resource, used for optimistic concurrency when editing
     it.
    :vartype etag: str
    :ivar identity: Setting indicating whether the service has a managed identity associated with
     it.
    :vartype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
    :ivar properties: The common properties of a service.
    :vartype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True, 'pattern': r'^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$'},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'kind': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'ServicesResourceIdentity'},
        'properties': {'key': 'properties', 'type': 'ServicesProperties'},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "Kind"],
        location: str,
        tags: Optional[Dict[str, str]] = None,
        etag: Optional[str] = None,
        identity: Optional["ServicesResourceIdentity"] = None,
        properties: Optional["ServicesProperties"] = None,
        **kwargs
    ):
        """
        :keyword kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
         "fhir-R4".
        :paramtype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
        :keyword location: Required. The resource location.
        :paramtype location: str
        :keyword tags: A set of tags. The resource tags.
        :paramtype tags: dict[str, str]
        :keyword etag: An etag associated with the resource, used for optimistic concurrency when
         editing it.
        :paramtype etag: str
        :keyword identity: Setting indicating whether the service has a managed identity associated
         with it.
        :paramtype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
        :keyword properties: The common properties of a service.
        :paramtype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
        """
        super(PrivateLinkServicesForM365SecurityCenterDescription, self).__init__(kind=kind, location=location, tags=tags, etag=etag, identity=identity, **kwargs)
        self.properties = properties


class PrivateLinkServicesForM365SecurityCenterDescriptionListResult(msrest.serialization.Model):
    """A list of service description objects with a next link.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar next_link: The link used to get the next page of service description objects.
    :vartype next_link: str
    :ivar value: A list of service description objects.
    :vartype value:
     list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForM365SecurityCenterDescription]
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[PrivateLinkServicesForM365SecurityCenterDescription]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateLinkServicesForM365SecurityCenterDescription"]] = None,
        **kwargs
    ):
        """
        :keyword value: A list of service description objects.
        :paramtype value:
         list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForM365SecurityCenterDescription]
        """
        super(PrivateLinkServicesForM365SecurityCenterDescriptionListResult, self).__init__(**kwargs)
        self.next_link = None
        self.value = value


class PrivateLinkServicesForMIPPolicySyncDescription(ServicesResource):
    """The description of the service.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource identifier.
    :vartype id: str
    :ivar name: The resource name.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
     "fhir-R4".
    :vartype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
    :ivar location: Required. The resource location.
    :vartype location: str
    :ivar tags: A set of tags. The resource tags.
    :vartype tags: dict[str, str]
    :ivar etag: An etag associated with the resource, used for optimistic concurrency when editing
     it.
    :vartype etag: str
    :ivar identity: Setting indicating whether the service has a managed identity associated with
     it.
    :vartype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
    :ivar properties: The common properties of a service.
    :vartype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True, 'pattern': r'^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$'},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'kind': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'ServicesResourceIdentity'},
        'properties': {'key': 'properties', 'type': 'ServicesProperties'},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "Kind"],
        location: str,
        tags: Optional[Dict[str, str]] = None,
        etag: Optional[str] = None,
        identity: Optional["ServicesResourceIdentity"] = None,
        properties: Optional["ServicesProperties"] = None,
        **kwargs
    ):
        """
        :keyword kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
         "fhir-R4".
        :paramtype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
        :keyword location: Required. The resource location.
        :paramtype location: str
        :keyword tags: A set of tags. The resource tags.
        :paramtype tags: dict[str, str]
        :keyword etag: An etag associated with the resource, used for optimistic concurrency when
         editing it.
        :paramtype etag: str
        :keyword identity: Setting indicating whether the service has a managed identity associated
         with it.
        :paramtype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
        :keyword properties: The common properties of a service.
        :paramtype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
        """
        super(PrivateLinkServicesForMIPPolicySyncDescription, self).__init__(kind=kind, location=location, tags=tags, etag=etag, identity=identity, **kwargs)
        self.properties = properties


class PrivateLinkServicesForMIPPolicySyncDescriptionListResult(msrest.serialization.Model):
    """A list of service description objects with a next link.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar next_link: The link used to get the next page of service description objects.
    :vartype next_link: str
    :ivar value: A list of service description objects.
    :vartype value:
     list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForMIPPolicySyncDescription]
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[PrivateLinkServicesForMIPPolicySyncDescription]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateLinkServicesForMIPPolicySyncDescription"]] = None,
        **kwargs
    ):
        """
        :keyword value: A list of service description objects.
        :paramtype value:
         list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForMIPPolicySyncDescription]
        """
        super(PrivateLinkServicesForMIPPolicySyncDescriptionListResult, self).__init__(**kwargs)
        self.next_link = None
        self.value = value


class PrivateLinkServicesForO365ManagementActivityAPIDescription(ServicesResource):
    """The description of the service.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource identifier.
    :vartype id: str
    :ivar name: The resource name.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
     "fhir-R4".
    :vartype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
    :ivar location: Required. The resource location.
    :vartype location: str
    :ivar tags: A set of tags. The resource tags.
    :vartype tags: dict[str, str]
    :ivar etag: An etag associated with the resource, used for optimistic concurrency when editing
     it.
    :vartype etag: str
    :ivar identity: Setting indicating whether the service has a managed identity associated with
     it.
    :vartype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
    :ivar properties: The common properties of a service.
    :vartype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True, 'pattern': r'^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$'},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'kind': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'ServicesResourceIdentity'},
        'properties': {'key': 'properties', 'type': 'ServicesProperties'},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "Kind"],
        location: str,
        tags: Optional[Dict[str, str]] = None,
        etag: Optional[str] = None,
        identity: Optional["ServicesResourceIdentity"] = None,
        properties: Optional["ServicesProperties"] = None,
        **kwargs
    ):
        """
        :keyword kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
         "fhir-R4".
        :paramtype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
        :keyword location: Required. The resource location.
        :paramtype location: str
        :keyword tags: A set of tags. The resource tags.
        :paramtype tags: dict[str, str]
        :keyword etag: An etag associated with the resource, used for optimistic concurrency when
         editing it.
        :paramtype etag: str
        :keyword identity: Setting indicating whether the service has a managed identity associated
         with it.
        :paramtype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
        :keyword properties: The common properties of a service.
        :paramtype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
        """
        super(PrivateLinkServicesForO365ManagementActivityAPIDescription, self).__init__(kind=kind, location=location, tags=tags, etag=etag, identity=identity, **kwargs)
        self.properties = properties


class PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult(msrest.serialization.Model):
    """A list of service description objects with a next link.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar next_link: The link used to get the next page of service description objects.
    :vartype next_link: str
    :ivar value: A list of service description objects.
    :vartype value:
     list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForO365ManagementActivityAPIDescription]
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[PrivateLinkServicesForO365ManagementActivityAPIDescription]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateLinkServicesForO365ManagementActivityAPIDescription"]] = None,
        **kwargs
    ):
        """
        :keyword value: A list of service description objects.
        :paramtype value:
         list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForO365ManagementActivityAPIDescription]
        """
        super(PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult, self).__init__(**kwargs)
        self.next_link = None
        self.value = value


class PrivateLinkServicesForSCCPowershellDescription(ServicesResource):
    """The description of the service.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: The resource identifier.
    :vartype id: str
    :ivar name: The resource name.
    :vartype name: str
    :ivar type: The resource type.
    :vartype type: str
    :ivar system_data: Required property for system data.
    :vartype system_data: ~azure.mgmt.securityandcompliance.models.SystemData
    :ivar kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
     "fhir-R4".
    :vartype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
    :ivar location: Required. The resource location.
    :vartype location: str
    :ivar tags: A set of tags. The resource tags.
    :vartype tags: dict[str, str]
    :ivar etag: An etag associated with the resource, used for optimistic concurrency when editing
     it.
    :vartype etag: str
    :ivar identity: Setting indicating whether the service has a managed identity associated with
     it.
    :vartype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
    :ivar properties: The common properties of a service.
    :vartype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True, 'pattern': r'^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$'},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'kind': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'kind': {'key': 'kind', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'ServicesResourceIdentity'},
        'properties': {'key': 'properties', 'type': 'ServicesProperties'},
    }

    def __init__(
        self,
        *,
        kind: Union[str, "Kind"],
        location: str,
        tags: Optional[Dict[str, str]] = None,
        etag: Optional[str] = None,
        identity: Optional["ServicesResourceIdentity"] = None,
        properties: Optional["ServicesProperties"] = None,
        **kwargs
    ):
        """
        :keyword kind: Required. The kind of the service. Possible values include: "fhir", "fhir-Stu3",
         "fhir-R4".
        :paramtype kind: str or ~azure.mgmt.securityandcompliance.models.Kind
        :keyword location: Required. The resource location.
        :paramtype location: str
        :keyword tags: A set of tags. The resource tags.
        :paramtype tags: dict[str, str]
        :keyword etag: An etag associated with the resource, used for optimistic concurrency when
         editing it.
        :paramtype etag: str
        :keyword identity: Setting indicating whether the service has a managed identity associated
         with it.
        :paramtype identity: ~azure.mgmt.securityandcompliance.models.ServicesResourceIdentity
        :keyword properties: The common properties of a service.
        :paramtype properties: ~azure.mgmt.securityandcompliance.models.ServicesProperties
        """
        super(PrivateLinkServicesForSCCPowershellDescription, self).__init__(kind=kind, location=location, tags=tags, etag=etag, identity=identity, **kwargs)
        self.properties = properties


class PrivateLinkServicesForSCCPowershellDescriptionListResult(msrest.serialization.Model):
    """A list of service description objects with a next link.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar next_link: The link used to get the next page of service description objects.
    :vartype next_link: str
    :ivar value: A list of service description objects.
    :vartype value:
     list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForSCCPowershellDescription]
    """

    _validation = {
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'value': {'key': 'value', 'type': '[PrivateLinkServicesForSCCPowershellDescription]'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["PrivateLinkServicesForSCCPowershellDescription"]] = None,
        **kwargs
    ):
        """
        :keyword value: A list of service description objects.
        :paramtype value:
         list[~azure.mgmt.securityandcompliance.models.PrivateLinkServicesForSCCPowershellDescription]
        """
        super(PrivateLinkServicesForSCCPowershellDescriptionListResult, self).__init__(**kwargs)
        self.next_link = None
        self.value = value


class ServiceAccessPolicyEntry(msrest.serialization.Model):
    """An access policy entry.

    All required parameters must be populated in order to send to Azure.

    :ivar object_id: Required. An Azure AD object ID (User or Apps) that is allowed access to the
     FHIR service.
    :vartype object_id: str
    """

    _validation = {
        'object_id': {'required': True, 'pattern': r'^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$'},
    }

    _attribute_map = {
        'object_id': {'key': 'objectId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        object_id: str,
        **kwargs
    ):
        """
        :keyword object_id: Required. An Azure AD object ID (User or Apps) that is allowed access to
         the FHIR service.
        :paramtype object_id: str
        """
        super(ServiceAccessPolicyEntry, self).__init__(**kwargs)
        self.object_id = object_id


class ServiceAuthenticationConfigurationInfo(msrest.serialization.Model):
    """Authentication configuration information.

    :ivar authority: The authority url for the service.
    :vartype authority: str
    :ivar audience: The audience url for the service.
    :vartype audience: str
    :ivar smart_proxy_enabled: If the SMART on FHIR proxy is enabled.
    :vartype smart_proxy_enabled: bool
    """

    _attribute_map = {
        'authority': {'key': 'authority', 'type': 'str'},
        'audience': {'key': 'audience', 'type': 'str'},
        'smart_proxy_enabled': {'key': 'smartProxyEnabled', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        authority: Optional[str] = None,
        audience: Optional[str] = None,
        smart_proxy_enabled: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword authority: The authority url for the service.
        :paramtype authority: str
        :keyword audience: The audience url for the service.
        :paramtype audience: str
        :keyword smart_proxy_enabled: If the SMART on FHIR proxy is enabled.
        :paramtype smart_proxy_enabled: bool
        """
        super(ServiceAuthenticationConfigurationInfo, self).__init__(**kwargs)
        self.authority = authority
        self.audience = audience
        self.smart_proxy_enabled = smart_proxy_enabled


class ServiceCorsConfigurationInfo(msrest.serialization.Model):
    """The settings for the CORS configuration of the service instance.

    :ivar origins: The origins to be allowed via CORS.
    :vartype origins: list[str]
    :ivar headers: The headers to be allowed via CORS.
    :vartype headers: list[str]
    :ivar methods: The methods to be allowed via CORS.
    :vartype methods: list[str]
    :ivar max_age: The max age to be allowed via CORS.
    :vartype max_age: long
    :ivar allow_credentials: If credentials are allowed via CORS.
    :vartype allow_credentials: bool
    """

    _validation = {
        'max_age': {'maximum': 99999, 'minimum': 0},
    }

    _attribute_map = {
        'origins': {'key': 'origins', 'type': '[str]'},
        'headers': {'key': 'headers', 'type': '[str]'},
        'methods': {'key': 'methods', 'type': '[str]'},
        'max_age': {'key': 'maxAge', 'type': 'long'},
        'allow_credentials': {'key': 'allowCredentials', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        origins: Optional[List[str]] = None,
        headers: Optional[List[str]] = None,
        methods: Optional[List[str]] = None,
        max_age: Optional[int] = None,
        allow_credentials: Optional[bool] = None,
        **kwargs
    ):
        """
        :keyword origins: The origins to be allowed via CORS.
        :paramtype origins: list[str]
        :keyword headers: The headers to be allowed via CORS.
        :paramtype headers: list[str]
        :keyword methods: The methods to be allowed via CORS.
        :paramtype methods: list[str]
        :keyword max_age: The max age to be allowed via CORS.
        :paramtype max_age: long
        :keyword allow_credentials: If credentials are allowed via CORS.
        :paramtype allow_credentials: bool
        """
        super(ServiceCorsConfigurationInfo, self).__init__(**kwargs)
        self.origins = origins
        self.headers = headers
        self.methods = methods
        self.max_age = max_age
        self.allow_credentials = allow_credentials


class ServiceCosmosDbConfigurationInfo(msrest.serialization.Model):
    """The settings for the Cosmos DB database backing the service.

    :ivar offer_throughput: The provisioned throughput for the backing database.
    :vartype offer_throughput: long
    :ivar key_vault_key_uri: The URI of the customer-managed key for the backing database.
    :vartype key_vault_key_uri: str
    """

    _validation = {
        'offer_throughput': {'maximum': 10000, 'minimum': 400},
    }

    _attribute_map = {
        'offer_throughput': {'key': 'offerThroughput', 'type': 'long'},
        'key_vault_key_uri': {'key': 'keyVaultKeyUri', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        offer_throughput: Optional[int] = None,
        key_vault_key_uri: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword offer_throughput: The provisioned throughput for the backing database.
        :paramtype offer_throughput: long
        :keyword key_vault_key_uri: The URI of the customer-managed key for the backing database.
        :paramtype key_vault_key_uri: str
        """
        super(ServiceCosmosDbConfigurationInfo, self).__init__(**kwargs)
        self.offer_throughput = offer_throughput
        self.key_vault_key_uri = key_vault_key_uri


class ServiceExportConfigurationInfo(msrest.serialization.Model):
    """Export operation configuration information.

    :ivar storage_account_name: The name of the default export storage account.
    :vartype storage_account_name: str
    """

    _attribute_map = {
        'storage_account_name': {'key': 'storageAccountName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        storage_account_name: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword storage_account_name: The name of the default export storage account.
        :paramtype storage_account_name: str
        """
        super(ServiceExportConfigurationInfo, self).__init__(**kwargs)
        self.storage_account_name = storage_account_name


class ServicesPatchDescription(msrest.serialization.Model):
    """The description of the service.

    :ivar tags: A set of tags. Instance tags.
    :vartype tags: dict[str, str]
    :ivar public_network_access: Control permission for data plane traffic coming from public
     networks while private endpoint is enabled. Possible values include: "Enabled", "Disabled".
    :vartype public_network_access: str or
     ~azure.mgmt.securityandcompliance.models.PublicNetworkAccess
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
        'public_network_access': {'key': 'properties.publicNetworkAccess', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        public_network_access: Optional[Union[str, "PublicNetworkAccess"]] = None,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Instance tags.
        :paramtype tags: dict[str, str]
        :keyword public_network_access: Control permission for data plane traffic coming from public
         networks while private endpoint is enabled. Possible values include: "Enabled", "Disabled".
        :paramtype public_network_access: str or
         ~azure.mgmt.securityandcompliance.models.PublicNetworkAccess
        """
        super(ServicesPatchDescription, self).__init__(**kwargs)
        self.tags = tags
        self.public_network_access = public_network_access


class ServicesProperties(msrest.serialization.Model):
    """The properties of a service instance.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provisioning_state: The provisioning state. Possible values include: "Deleting",
     "Succeeded", "Creating", "Accepted", "Verifying", "Updating", "Failed", "Canceled",
     "Deprovisioned".
    :vartype provisioning_state: str or ~azure.mgmt.securityandcompliance.models.ProvisioningState
    :ivar access_policies: The access policies of the service instance.
    :vartype access_policies:
     list[~azure.mgmt.securityandcompliance.models.ServiceAccessPolicyEntry]
    :ivar cosmos_db_configuration: The settings for the Cosmos DB database backing the service.
    :vartype cosmos_db_configuration:
     ~azure.mgmt.securityandcompliance.models.ServiceCosmosDbConfigurationInfo
    :ivar authentication_configuration: The authentication configuration for the service instance.
    :vartype authentication_configuration:
     ~azure.mgmt.securityandcompliance.models.ServiceAuthenticationConfigurationInfo
    :ivar cors_configuration: The settings for the CORS configuration of the service instance.
    :vartype cors_configuration:
     ~azure.mgmt.securityandcompliance.models.ServiceCorsConfigurationInfo
    :ivar export_configuration: The settings for the export operation of the service instance.
    :vartype export_configuration:
     ~azure.mgmt.securityandcompliance.models.ServiceExportConfigurationInfo
    :ivar private_endpoint_connections: The list of private endpoint connections that are set up
     for this resource.
    :vartype private_endpoint_connections:
     list[~azure.mgmt.securityandcompliance.models.PrivateEndpointConnection]
    :ivar public_network_access: Control permission for data plane traffic coming from public
     networks while private endpoint is enabled. Possible values include: "Enabled", "Disabled".
    :vartype public_network_access: str or
     ~azure.mgmt.securityandcompliance.models.PublicNetworkAccess
    """

    _validation = {
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
        'access_policies': {'key': 'accessPolicies', 'type': '[ServiceAccessPolicyEntry]'},
        'cosmos_db_configuration': {'key': 'cosmosDbConfiguration', 'type': 'ServiceCosmosDbConfigurationInfo'},
        'authentication_configuration': {'key': 'authenticationConfiguration', 'type': 'ServiceAuthenticationConfigurationInfo'},
        'cors_configuration': {'key': 'corsConfiguration', 'type': 'ServiceCorsConfigurationInfo'},
        'export_configuration': {'key': 'exportConfiguration', 'type': 'ServiceExportConfigurationInfo'},
        'private_endpoint_connections': {'key': 'privateEndpointConnections', 'type': '[PrivateEndpointConnection]'},
        'public_network_access': {'key': 'publicNetworkAccess', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        access_policies: Optional[List["ServiceAccessPolicyEntry"]] = None,
        cosmos_db_configuration: Optional["ServiceCosmosDbConfigurationInfo"] = None,
        authentication_configuration: Optional["ServiceAuthenticationConfigurationInfo"] = None,
        cors_configuration: Optional["ServiceCorsConfigurationInfo"] = None,
        export_configuration: Optional["ServiceExportConfigurationInfo"] = None,
        private_endpoint_connections: Optional[List["PrivateEndpointConnection"]] = None,
        public_network_access: Optional[Union[str, "PublicNetworkAccess"]] = None,
        **kwargs
    ):
        """
        :keyword access_policies: The access policies of the service instance.
        :paramtype access_policies:
         list[~azure.mgmt.securityandcompliance.models.ServiceAccessPolicyEntry]
        :keyword cosmos_db_configuration: The settings for the Cosmos DB database backing the service.
        :paramtype cosmos_db_configuration:
         ~azure.mgmt.securityandcompliance.models.ServiceCosmosDbConfigurationInfo
        :keyword authentication_configuration: The authentication configuration for the service
         instance.
        :paramtype authentication_configuration:
         ~azure.mgmt.securityandcompliance.models.ServiceAuthenticationConfigurationInfo
        :keyword cors_configuration: The settings for the CORS configuration of the service instance.
        :paramtype cors_configuration:
         ~azure.mgmt.securityandcompliance.models.ServiceCorsConfigurationInfo
        :keyword export_configuration: The settings for the export operation of the service instance.
        :paramtype export_configuration:
         ~azure.mgmt.securityandcompliance.models.ServiceExportConfigurationInfo
        :keyword private_endpoint_connections: The list of private endpoint connections that are set up
         for this resource.
        :paramtype private_endpoint_connections:
         list[~azure.mgmt.securityandcompliance.models.PrivateEndpointConnection]
        :keyword public_network_access: Control permission for data plane traffic coming from public
         networks while private endpoint is enabled. Possible values include: "Enabled", "Disabled".
        :paramtype public_network_access: str or
         ~azure.mgmt.securityandcompliance.models.PublicNetworkAccess
        """
        super(ServicesProperties, self).__init__(**kwargs)
        self.provisioning_state = None
        self.access_policies = access_policies
        self.cosmos_db_configuration = cosmos_db_configuration
        self.authentication_configuration = authentication_configuration
        self.cors_configuration = cors_configuration
        self.export_configuration = export_configuration
        self.private_endpoint_connections = private_endpoint_connections
        self.public_network_access = public_network_access


class ServicesResourceIdentity(msrest.serialization.Model):
    """Setting indicating whether the service has a managed identity associated with it.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal ID of the resource identity.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of the resource.
    :vartype tenant_id: str
    :ivar type: Type of identity being specified, currently SystemAssigned and None are allowed.
     Possible values include: "SystemAssigned", "None".
    :vartype type: str or ~azure.mgmt.securityandcompliance.models.ManagedServiceIdentityType
    """

    _validation = {
        'principal_id': {'readonly': True},
        'tenant_id': {'readonly': True},
    }

    _attribute_map = {
        'principal_id': {'key': 'principalId', 'type': 'str'},
        'tenant_id': {'key': 'tenantId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        type: Optional[Union[str, "ManagedServiceIdentityType"]] = None,
        **kwargs
    ):
        """
        :keyword type: Type of identity being specified, currently SystemAssigned and None are allowed.
         Possible values include: "SystemAssigned", "None".
        :paramtype type: str or ~azure.mgmt.securityandcompliance.models.ManagedServiceIdentityType
        """
        super(ServicesResourceIdentity, self).__init__(**kwargs)
        self.principal_id = None
        self.tenant_id = None
        self.type = type


class SystemData(msrest.serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Possible values include:
     "User", "Application", "ManagedIdentity", "Key".
    :vartype created_by_type: str or ~azure.mgmt.securityandcompliance.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Possible
     values include: "User", "Application", "ManagedIdentity", "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.securityandcompliance.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_by_type': {'key': 'createdByType', 'type': 'str'},
        'created_at': {'key': 'createdAt', 'type': 'iso-8601'},
        'last_modified_by': {'key': 'lastModifiedBy', 'type': 'str'},
        'last_modified_by_type': {'key': 'lastModifiedByType', 'type': 'str'},
        'last_modified_at': {'key': 'lastModifiedAt', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Possible values
         include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype created_by_type: str or ~azure.mgmt.securityandcompliance.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Possible
         values include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.securityandcompliance.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super(SystemData, self).__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
