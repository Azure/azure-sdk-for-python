# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models import AvailabilitySet
from ._models import AvailabilitySetListItem
from ._models import AvailabilitySetProperties
from ._models import AvailabilitySetTagsUpdate
from ._models import Checkpoint
from ._models import Cloud
from ._models import CloudCapacity
from ._models import CloudInventoryItem
from ._models import CloudProperties
from ._models import CloudTagsUpdate
from ._models import ErrorAdditionalInfo
from ._models import ErrorDetail
from ._models import ErrorResponse
from ._models import ExtendedLocation
from ._models import ExtensionResource
from ._models import GuestAgent
from ._models import GuestAgentProperties
from ._models import GuestCredential
from ._models import HardwareProfile
from ._models import HardwareProfileUpdate
from ._models import HttpProxyConfiguration
from ._models import InfrastructureProfile
from ._models import InfrastructureProfileUpdate
from ._models import InventoryItem
from ._models import InventoryItemDetails
from ._models import InventoryItemProperties
from ._models import NetworkInterface
from ._models import NetworkInterfaceUpdate
from ._models import NetworkProfile
from ._models import NetworkProfileUpdate
from ._models import Operation
from ._models import OperationDisplay
from ._models import OsProfileForVmInstance
from ._models import ProxyResource
from ._models import Resource
from ._models import StopVirtualMachineOptions
from ._models import StorageProfile
from ._models import StorageProfileUpdate
from ._models import StorageQosPolicy
from ._models import StorageQosPolicyDetails
from ._models import SystemData
from ._models import TrackedResource
from ._models import VirtualDisk
from ._models import VirtualDiskUpdate
from ._models import VirtualMachineCreateCheckpoint
from ._models import VirtualMachineDeleteCheckpoint
from ._models import VirtualMachineInstance
from ._models import VirtualMachineInstanceProperties
from ._models import VirtualMachineInstanceUpdate
from ._models import VirtualMachineInstanceUpdateProperties
from ._models import VirtualMachineInventoryItem
from ._models import VirtualMachineRestoreCheckpoint
from ._models import VirtualMachineTemplate
from ._models import VirtualMachineTemplateInventoryItem
from ._models import VirtualMachineTemplateProperties
from ._models import VirtualMachineTemplateTagsUpdate
from ._models import VirtualNetwork
from ._models import VirtualNetworkInventoryItem
from ._models import VirtualNetworkProperties
from ._models import VirtualNetworkTagsUpdate
from ._models import VmInstanceHybridIdentityMetadata
from ._models import VmInstanceHybridIdentityMetadataProperties
from ._models import VmmCredential
from ._models import VmmServer
from ._models import VmmServerProperties
from ._models import VmmServerTagsUpdate

from ._enums import ActionType
from ._enums import AllocationMethod
from ._enums import CreateDiffDisk
from ._enums import CreatedByType
from ._enums import DeleteFromHost
from ._enums import DynamicMemoryEnabled
from ._enums import ForceDelete
from ._enums import InventoryType
from ._enums import IsCustomizable
from ._enums import IsHighlyAvailable
from ._enums import LimitCpuForMigration
from ._enums import Origin
from ._enums import OsType
from ._enums import ProvisioningAction
from ._enums import ResourceProvisioningState
from ._enums import SkipShutdown
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AvailabilitySet",
    "AvailabilitySetListItem",
    "AvailabilitySetProperties",
    "AvailabilitySetTagsUpdate",
    "Checkpoint",
    "Cloud",
    "CloudCapacity",
    "CloudInventoryItem",
    "CloudProperties",
    "CloudTagsUpdate",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "ExtendedLocation",
    "ExtensionResource",
    "GuestAgent",
    "GuestAgentProperties",
    "GuestCredential",
    "HardwareProfile",
    "HardwareProfileUpdate",
    "HttpProxyConfiguration",
    "InfrastructureProfile",
    "InfrastructureProfileUpdate",
    "InventoryItem",
    "InventoryItemDetails",
    "InventoryItemProperties",
    "NetworkInterface",
    "NetworkInterfaceUpdate",
    "NetworkProfile",
    "NetworkProfileUpdate",
    "Operation",
    "OperationDisplay",
    "OsProfileForVmInstance",
    "ProxyResource",
    "Resource",
    "StopVirtualMachineOptions",
    "StorageProfile",
    "StorageProfileUpdate",
    "StorageQosPolicy",
    "StorageQosPolicyDetails",
    "SystemData",
    "TrackedResource",
    "VirtualDisk",
    "VirtualDiskUpdate",
    "VirtualMachineCreateCheckpoint",
    "VirtualMachineDeleteCheckpoint",
    "VirtualMachineInstance",
    "VirtualMachineInstanceProperties",
    "VirtualMachineInstanceUpdate",
    "VirtualMachineInstanceUpdateProperties",
    "VirtualMachineInventoryItem",
    "VirtualMachineRestoreCheckpoint",
    "VirtualMachineTemplate",
    "VirtualMachineTemplateInventoryItem",
    "VirtualMachineTemplateProperties",
    "VirtualMachineTemplateTagsUpdate",
    "VirtualNetwork",
    "VirtualNetworkInventoryItem",
    "VirtualNetworkProperties",
    "VirtualNetworkTagsUpdate",
    "VmInstanceHybridIdentityMetadata",
    "VmInstanceHybridIdentityMetadataProperties",
    "VmmCredential",
    "VmmServer",
    "VmmServerProperties",
    "VmmServerTagsUpdate",
    "ActionType",
    "AllocationMethod",
    "CreateDiffDisk",
    "CreatedByType",
    "DeleteFromHost",
    "DynamicMemoryEnabled",
    "ForceDelete",
    "InventoryType",
    "IsCustomizable",
    "IsHighlyAvailable",
    "LimitCpuForMigration",
    "Origin",
    "OsType",
    "ProvisioningAction",
    "ResourceProvisioningState",
    "SkipShutdown",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
