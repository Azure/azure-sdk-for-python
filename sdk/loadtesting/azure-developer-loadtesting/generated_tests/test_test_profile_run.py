# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils import recorded_by_proxy
from testpreparer import TestProfileRunClientTestBase, TestProfileRunPreparer


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestTestProfileRun(TestProfileRunClientTestBase):
    @TestProfileRunPreparer()
    @recorded_by_proxy
    def test_create_or_update_test_profile_run(self, testprofilerun_endpoint):
        client = self.create_client(endpoint=testprofilerun_endpoint)
        response = client.create_or_update_test_profile_run(
            test_profile_run_id="str",
            body={
                "testProfileRunId": "str",
                "createdBy": "str",
                "createdDateTime": "2020-02-20 00:00:00",
                "description": "str",
                "displayName": "str",
                "durationInSeconds": 0,
                "endDateTime": "2020-02-20 00:00:00",
                "errorDetails": [{"message": "str"}],
                "lastModifiedBy": "str",
                "lastModifiedDateTime": "2020-02-20 00:00:00",
                "recommendations": [{"category": "str", "configurations": ["str"]}],
                "startDateTime": "2020-02-20 00:00:00",
                "status": "str",
                "targetResourceConfigurations": "target_resource_configurations",
                "targetResourceId": "str",
                "testProfileId": "str",
                "testRunDetails": {"str": {"configurationId": "str", "properties": {"str": "str"}, "status": "str"}},
            },
        )

        # please add some check logic here by yourself
        # ...

    @TestProfileRunPreparer()
    @recorded_by_proxy
    def test_delete_test_profile_run(self, testprofilerun_endpoint):
        client = self.create_client(endpoint=testprofilerun_endpoint)
        response = client.delete_test_profile_run(
            test_profile_run_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @TestProfileRunPreparer()
    @recorded_by_proxy
    def test_get_test_profile_run(self, testprofilerun_endpoint):
        client = self.create_client(endpoint=testprofilerun_endpoint)
        response = client.get_test_profile_run(
            test_profile_run_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @TestProfileRunPreparer()
    @recorded_by_proxy
    def test_list_test_profile_runs(self, testprofilerun_endpoint):
        client = self.create_client(endpoint=testprofilerun_endpoint)
        response = client.list_test_profile_runs()
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @TestProfileRunPreparer()
    @recorded_by_proxy
    def test_stop_test_profile_run(self, testprofilerun_endpoint):
        client = self.create_client(endpoint=testprofilerun_endpoint)
        response = client.stop_test_profile_run(
            test_profile_run_id="str",
        )

        # please add some check logic here by yourself
        # ...
