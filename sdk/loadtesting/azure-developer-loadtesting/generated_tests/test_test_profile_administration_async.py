# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils.aio import recorded_by_proxy_async
from testpreparer import TestProfileAdministrationPreparer
from testpreparer_async import TestProfileAdministrationClientTestBaseAsync


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestTestProfileAdministrationAsync(TestProfileAdministrationClientTestBaseAsync):
    @TestProfileAdministrationPreparer()
    @recorded_by_proxy_async
    async def test_create_or_update_test_profile(self, testprofileadministration_endpoint):
        client = self.create_async_client(endpoint=testprofileadministration_endpoint)
        response = await client.create_or_update_test_profile(
            test_profile_id="str",
            body={
                "testProfileId": "str",
                "createdBy": "str",
                "createdDateTime": "2020-02-20 00:00:00",
                "description": "str",
                "displayName": "str",
                "lastModifiedBy": "str",
                "lastModifiedDateTime": "2020-02-20 00:00:00",
                "targetResourceConfigurations": "target_resource_configurations",
                "targetResourceId": "str",
                "testId": "str",
            },
        )

        # please add some check logic here by yourself
        # ...

    @TestProfileAdministrationPreparer()
    @recorded_by_proxy_async
    async def test_delete_test_profile(self, testprofileadministration_endpoint):
        client = self.create_async_client(endpoint=testprofileadministration_endpoint)
        response = await client.delete_test_profile(
            test_profile_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @TestProfileAdministrationPreparer()
    @recorded_by_proxy_async
    async def test_get_test_profile(self, testprofileadministration_endpoint):
        client = self.create_async_client(endpoint=testprofileadministration_endpoint)
        response = await client.get_test_profile(
            test_profile_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @TestProfileAdministrationPreparer()
    @recorded_by_proxy_async
    async def test_list_test_profiles(self, testprofileadministration_endpoint):
        client = self.create_async_client(endpoint=testprofileadministration_endpoint)
        response = client.list_test_profiles()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...
