# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._dns_resolvers_operations import DnsResolversOperations  # type: ignore
from ._inbound_endpoints_operations import InboundEndpointsOperations  # type: ignore
from ._outbound_endpoints_operations import OutboundEndpointsOperations  # type: ignore
from ._dns_forwarding_rulesets_operations import DnsForwardingRulesetsOperations  # type: ignore
from ._forwarding_rules_operations import ForwardingRulesOperations  # type: ignore
from ._virtual_network_links_operations import VirtualNetworkLinksOperations  # type: ignore
from ._dns_resolver_policies_operations import DnsResolverPoliciesOperations  # type: ignore
from ._dns_security_rules_operations import DnsSecurityRulesOperations  # type: ignore
from ._dns_resolver_policy_virtual_network_links_operations import DnsResolverPolicyVirtualNetworkLinksOperations  # type: ignore
from ._dns_resolver_domain_lists_operations import DnsResolverDomainListsOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "DnsResolversOperations",
    "InboundEndpointsOperations",
    "OutboundEndpointsOperations",
    "DnsForwardingRulesetsOperations",
    "ForwardingRulesOperations",
    "VirtualNetworkLinksOperations",
    "DnsResolverPoliciesOperations",
    "DnsSecurityRulesOperations",
    "DnsResolverPolicyVirtualNetworkLinksOperations",
    "DnsResolverDomainListsOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
