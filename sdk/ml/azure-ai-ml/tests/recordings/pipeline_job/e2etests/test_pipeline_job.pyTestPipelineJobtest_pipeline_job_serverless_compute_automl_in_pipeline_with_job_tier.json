{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "434",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "isAnonymous": true,
          "isArchived": false,
          "condaFile": "channels:\n- conda-forge\ndependencies:\n- python=3.8\n- numpy=1.21.2\n- pip=21.2.4\n- scikit-learn=0.24.2\n- scipy=1.7.1\n- pandas\u003E=1.1,\u003C1.2\n- pip:\n  - inference-schema[numpy-support]==1.3.0\n  - xlrd==2.0.1\n  - azureml-mlflow==1.42.0\n  - mltable==0.1.0b4\n  - pyyaml==6.0\nname: model-env\n",
          "image": "mcr.microsoft.com/azureml/openmpi4.1.0-ubuntu20.04"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Build-ID": "chc",
        "Cache-Control": "no-cache",
        "Content-Length": "1528",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:36 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-14405b0e605782128cc67c4ebebb7109-4a401dcadf7b22f8-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "e82d18b0-be60-4820-923a-94ac9726d369",
        "x-ms-ratelimit-remaining-subscription-writes": "1194",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230524T035036Z:e82d18b0-be60-4820-923a-94ac9726d369",
        "x-request-time": "10.723"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0",
        "name": "79daefb48b9f53338f24ac9d6725dfa0",
        "type": "Microsoft.MachineLearningServices/workspaces/environments/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": true,
          "autoDeleteSetting": null,
          "environmentType": "UserCreated",
          "image": "mcr.microsoft.com/azureml/openmpi4.1.0-ubuntu20.04",
          "condaFile": "{\n  \u0022channels\u0022: [\n    \u0022conda-forge\u0022\n  ],\n  \u0022dependencies\u0022: [\n    \u0022python=3.8\u0022,\n    \u0022numpy=1.21.2\u0022,\n    \u0022pip=21.2.4\u0022,\n    \u0022scikit-learn=0.24.2\u0022,\n    \u0022scipy=1.7.1\u0022,\n    \u0022pandas\u003E=1.1,\u003C1.2\u0022,\n    {\n      \u0022pip\u0022: [\n        \u0022inference-schema[numpy-support]==1.3.0\u0022,\n        \u0022xlrd==2.0.1\u0022,\n        \u0022azureml-mlflow==1.42.0\u0022,\n        \u0022mltable==0.1.0b4\u0022,\n        \u0022pyyaml==6.0\u0022\n      ]\n    }\n  ],\n  \u0022name\u0022: \u0022model-env\u0022\n}",
          "osType": "Linux",
          "autoRebuild": "Disabled",
          "provisioningState": "Succeeded",
          "stage": "Logged",
          "intellectualProperty": null
        },
        "systemData": {
          "createdAt": "2023-05-24T03:50:26.0265441\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-24T03:50:26.0265441\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions?api-version=2023-04-01\u0026hash=4c493813d12c7051bc2a23d0f83aa8cc305a1313d8ba60c78b62734e242e0ef1\u0026hashVersion=202208",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:38 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-4f1a79735dca339af83986dc28fab012-ff07a7b783feedcc-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "329b3868-af68-494b-a1d6-ff7492f7b168",
        "x-ms-ratelimit-remaining-subscription-reads": "11990",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230524T035038Z:329b3868-af68-494b-a1d6-ff7492f7b168",
        "x-request-time": "0.027"
      },
      "ResponseBody": {
        "value": []
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions?api-version=2023-04-01\u0026hash=4c493813d12c7051bc2a23d0f83aa8cc305a1313d8ba60c78b62734e242e0ef1\u0026hashVersion=202208",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:39 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-c2c4830940d7e1509ee9c7d28682cb1d-e6852c0c9c660a80-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "914496ea-61c3-4957-8024-26228a0b2701",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035039Z:914496ea-61c3-4957-8024-26228a0b2701",
        "x-request-time": "0.026"
      },
      "ResponseBody": {
        "value": []
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1/startPendingUpload?api-version=2023-04-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "47",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "pendingUploadType": "TemporaryBlobReference"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:39 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-f80aab89a68c9e0774d95155f65cdad5-cb43b41824939650-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "bf56241a-0ccf-4cec-930a-23e1e0607509",
        "x-ms-ratelimit-remaining-subscription-writes": "1193",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230524T035039Z:bf56241a-0ccf-4cec-930a-23e1e0607509",
        "x-request-time": "0.290"
      },
      "ResponseBody": {
        "blobReferenceForConsumption": {
          "blobUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0",
          "storageAccountArmId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/amltest5899420437",
          "credential": {
            "credentialType": "SAS",
            "sasUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A39Z\u0026se=2023-05-24T11%3A50%3A39Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000"
          }
        },
        "pendingUploadId": "8bbc72bc-9025-4451-ae9e-34a5888e6103",
        "pendingUploadType": "None"
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A39Z\u0026se=2023-05-24T11%3A50%3A39Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:39 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Wed, 24 May 2023 03:50:39 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1/startPendingUpload?api-version=2023-04-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "47",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "pendingUploadType": "TemporaryBlobReference"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:39 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-9299b5e50e333d0ccf7e5dc121daf226-f3135579d9addba7-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d12a103d-2139-4d1a-a7ee-1f51f90484ef",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035040Z:d12a103d-2139-4d1a-a7ee-1f51f90484ef",
        "x-request-time": "0.183"
      },
      "ResponseBody": {
        "blobReferenceForConsumption": {
          "blobUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8",
          "storageAccountArmId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/amltest5899420437",
          "credential": {
            "credentialType": "SAS",
            "sasUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A40Z\u0026se=2023-05-24T11%3A50%3A40Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000"
          }
        },
        "pendingUploadId": "56a59fdd-b706-484c-bf22-ebc53b0de06e",
        "pendingUploadType": "None"
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A39Z\u0026se=2023-05-24T11%3A50%3A39Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "3142",
        "Content-MD5": "DHYWDlwjLBbBzfk6TlY\u002Bmw==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:40 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQppbXBvcnQgb3MNCmltcG9ydCBhcmdwYXJzZQ0KaW1wb3J0IGRhdGV0aW1lDQpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgNCmltcG9ydCB5YW1sDQpmcm9tIG1sdGFibGUgaW1wb3J0IGxvYWQNCg0KDQpkZWYgcGFyc2VfYXJncygpOg0KICAgICMgc2V0dXAgYXJnIHBhcnNlcg0KICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkNCg0KICAgICMgYWRkIGFyZ3VtZW50cw0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tdHJhaW5fZGF0YSIsIHR5cGU9c3RyKQ0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tdmFsaWRhdGlvbl9kYXRhIiwgdHlwZT1zdHIpDQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1wcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSIsIHR5cGU9c3RyKQ0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSIsIHR5cGU9c3RyKQ0KICAgICMgcGFyc2UgYXJncw0KICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpDQogICAgcHJpbnQoImFyZ3MgcmVjZWl2ZWQgIiwgYXJncykNCiAgICAjIHJldHVybiBhcmdzDQogICAgcmV0dXJuIGFyZ3MNCg0KDQpkZWYgZ2V0X3ByZXByb2Nlc3NlZF9kYXRhKHRleHQpOg0KICAgICIiIg0KICAgIERvIHByZXByb2Nlc3NpbmcgYXMgbmVlZGVkDQogICAgQ3VycmVudGx5IHdlIGFyZSBqdXN0IHBhc3NpbmcgdGV4dCBmaWxlIGFzIGl0IGlzDQogICAgIiIiDQogICAgcmV0dXJuIHRleHQNCg0KDQpkZWYgbWFpbihhcmdzKToNCiAgICAiIiINCiAgICBQcmVwcm9jZXNzaW5nIG9mIHRyYWluaW5nL3ZhbGlkYXRpb24gZGF0YQ0KICAgICIiIg0KICAgIHRyYWluX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnRyYWluX2RhdGEsICJ0cmFpbi50eHQiKQ0KICAgIHdpdGggb3Blbih0cmFpbl9kYXRhX3BhdGgpIGFzIGY6DQogICAgICAgIHRyYWluX2RhdGEgPSBmLnJlYWQoKQ0KICAgIHByZXByb2Nlc3NlZF90cmFpbl9kYXRhID0gZ2V0X3ByZXByb2Nlc3NlZF9kYXRhKHRyYWluX2RhdGEpDQoNCiAgICAjIHdyaXRlIHByZXByb2Nlc3NlZCB0cmFpbiB0eHQgZmlsZQ0KICAgIHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy5wcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSwgInRyYWluLnR4dCIpDQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX3BhdGgsICJ3IikgYXMgZjoNCiAgICAgICAgZi53cml0ZShwcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSkNCg0KICAgIHZhbGlkYXRpb25fZGF0YV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudmFsaWRhdGlvbl9kYXRhLCAidmFsaWQudHh0IikNCiAgICB3aXRoIG9wZW4odmFsaWRhdGlvbl9kYXRhX3BhdGgpIGFzIGY6DQogICAgICAgIHZhbGlkYXRpb25fZGF0YSA9IGYucmVhZCgpDQogICAgcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSA9IGdldF9wcmVwcm9jZXNzZWRfZGF0YSh2YWxpZGF0aW9uX2RhdGEpDQoNCiAgICAjIHdyaXRlIHByZXByb2Nlc3NlZCB2YWxpZGF0aW9uIHR4dCBmaWxlDQogICAgcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MucHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSwgInZhbGlkLnR4dCIpDQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGFfcGF0aCwgInciKSBhcyBmOg0KICAgICAgICBmLndyaXRlKHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEpDQoNCiAgICAjIFdyaXRlIE1MVGFibGUgeWFtbCBmaWxlIGFzIHdlbGwgaW4gb3V0cHV0IGZvbGRlcg0KICAgICMgU2luY2UgaW4gdGhpcyBleGFtcGxlIHdlIGFyZSBub3QgZG9pbmcgYW55IHByZXByb2Nlc3NpbmcsIHdlIGFyZSBqdXN0IGNvcHlpbmcgc2FtZSB5YW1sIGZpbGUgZnJvbSBpbnB1dCxjaGFuZ2UgaXQgaWYgbmVlZGVkDQoNCiAgICAjIHJlYWQgYW5kIHdyaXRlIE1MTW9kZWwgeWFtbCBmaWxlIGZvciB0cmFpbiBkYXRhDQogICAgdHJhaW5fZGF0YV9tbHRhYmxlX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy50cmFpbl9kYXRhLCAiTUxUYWJsZSIpDQogICAgcHJlcHJvY2Vzc2VkX3RyYWluX2RhdGFfbWx0YWJsZV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MucHJlcHJvY2Vzc2VkX3RyYWluX2RhdGEsICJNTFRhYmxlIikNCiAgICB3aXRoIG9wZW4odHJhaW5fZGF0YV9tbHRhYmxlX3BhdGgsICJyIikgYXMgZmlsZToNCiAgICAgICAgeWFtbF9maWxlID0geWFtbC5zYWZlX2xvYWQoZmlsZSkNCiAgICB3aXRoIG9wZW4ocHJlcHJvY2Vzc2VkX3RyYWluX2RhdGFfbWx0YWJsZV9wYXRoLCAidyIpIGFzIGZpbGU6DQogICAgICAgIHlhbWwuZHVtcCh5YW1sX2ZpbGUsIGZpbGUpDQoNCiAgICAjIHJlYWQgYW5kIHdyaXRlIE1MTW9kZWwgeWFtbCBmaWxlIGZvciB2YWxpZGF0aW9uIGRhdGENCiAgICB2YWxpZGF0aW9uX2RhdGFfbWx0YWJsZV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudmFsaWRhdGlvbl9kYXRhLCAiTUxUYWJsZSIpDQogICAgcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YV9tbHRhYmxlX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy5wcmVwcm9jZXNzZWRfdmFsaWRhdGlvbl9kYXRhLCAiTUxUYWJsZSIpDQogICAgd2l0aCBvcGVuKHZhbGlkYXRpb25fZGF0YV9tbHRhYmxlX3BhdGgsICJyIikgYXMgZmlsZToNCiAgICAgICAgeWFtbF9maWxlID0geWFtbC5zYWZlX2xvYWQoZmlsZSkNCiAgICB3aXRoIG9wZW4ocHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YV9tbHRhYmxlX3BhdGgsICJ3IikgYXMgZmlsZToNCiAgICAgICAgeWFtbC5kdW1wKHlhbWxfZmlsZSwgZmlsZSkNCg0KDQojIHJ1biBzY3JpcHQNCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6DQogICAgIyBwYXJzZSBhcmdzDQogICAgYXJncyA9IHBhcnNlX2FyZ3MoKQ0KDQogICAgIyBydW4gbWFpbiBmdW5jdGlvbg0KICAgIG1haW4oYXJncykNCg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "DHYWDlwjLBbBzfk6TlY\u002Bmw==",
        "Date": "Wed, 24 May 2023 03:50:39 GMT",
        "ETag": "\u00220x8DB5C0A0AC2AC65\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:40 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "FYOL47tR5hU=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0/src/register.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A39Z\u0026se=2023-05-24T11%3A50%3A39Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "2120",
        "Content-MD5": "DaXvNrjHCsaK8BJ0XOIzjQ==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:40 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQppbXBvcnQgYXJncGFyc2UNCmltcG9ydCBqc29uDQppbXBvcnQgb3MNCmltcG9ydCB0aW1lDQoNCg0KZnJvbSBhenVyZW1sLmNvcmUgaW1wb3J0IFJ1bg0KDQppbXBvcnQgbWxmbG93DQppbXBvcnQgbWxmbG93LnNrbGVhcm4NCg0KIyBCYXNlZCBvbiBleGFtcGxlOg0KIyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9tYWNoaW5lLWxlYXJuaW5nL2hvdy10by10cmFpbi1jbGkNCiMgd2hpY2ggcmVmZXJlbmNlcw0KIyBodHRwczovL2dpdGh1Yi5jb20vQXp1cmUvYXp1cmVtbC1leGFtcGxlcy90cmVlL21haW4vY2xpL2pvYnMvdHJhaW4vbGlnaHRnYm0vaXJpcw0KDQoNCmRlZiBwYXJzZV9hcmdzKCk6DQogICAgIyBzZXR1cCBhcmcgcGFyc2VyDQogICAgcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQ0KDQogICAgIyBhZGQgYXJndW1lbnRzDQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1tb2RlbF9pbnB1dF9wYXRoIiwgdHlwZT1zdHIsIGhlbHA9IlBhdGggdG8gaW5wdXQgbW9kZWwiKQ0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tbW9kZWxfYmFzZV9uYW1lIiwgdHlwZT1zdHIsIGhlbHA9Ik5hbWUgb2YgdGhlIHJlZ2lzdGVyZWQgbW9kZWwiKQ0KDQogICAgIyBwYXJzZSBhcmdzDQogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkNCiAgICBwcmludCgiUGF0aDogIiArIGFyZ3MubW9kZWxfaW5wdXRfcGF0aCkNCiAgICAjIHJldHVybiBhcmdzDQogICAgcmV0dXJuIGFyZ3MNCg0KDQpkZWYgbWFpbihhcmdzKToNCiAgICAiIiINCiAgICBSZWdpc3RlciBNb2RlbCBFeGFtcGxlDQogICAgIiIiDQogICAgIyBTZXQgVHJhY2tpbmcgVVJJDQogICAgY3VycmVudF9leHBlcmltZW50ID0gUnVuLmdldF9jb250ZXh0KCkuZXhwZXJpbWVudA0KICAgIHRyYWNraW5nX3VyaSA9IGN1cnJlbnRfZXhwZXJpbWVudC53b3Jrc3BhY2UuZ2V0X21sZmxvd190cmFja2luZ191cmkoKQ0KICAgIHByaW50KCJ0cmFja2luZ191cmk6IHswfSIuZm9ybWF0KHRyYWNraW5nX3VyaSkpDQogICAgbWxmbG93LnNldF90cmFja2luZ191cmkodHJhY2tpbmdfdXJpKQ0KICAgIG1sZmxvdy5zZXRfZXhwZXJpbWVudChjdXJyZW50X2V4cGVyaW1lbnQubmFtZSkNCg0KICAgICMgR2V0IFJ1biBJRCBmcm9tIG1vZGVsIHBhdGgNCiAgICBwcmludCgiR2V0dGluZyBtb2RlbCBwYXRoIikNCiAgICBtbG1vZGVsX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy5tb2RlbF9pbnB1dF9wYXRoLCAiTUxtb2RlbCIpDQogICAgcnVuaWQgPSAiIg0KICAgIHdpdGggb3BlbihtbG1vZGVsX3BhdGgsICJyIikgYXMgbW9kZWxmaWxlOg0KICAgICAgICBmb3IgbGluZSBpbiBtb2RlbGZpbGU6DQogICAgICAgICAgICBpZiAicnVuX2lkIiBpbiBsaW5lOg0KICAgICAgICAgICAgICAgIHJ1bmlkID0gbGluZS5zcGxpdCgiOiIpWzFdLnN0cmlwKCkNCg0KICAgICMgQ29uc3RydWN0IE1vZGVsIFVSSSBmcm9tIHJ1biBJRCBleHRyYWN0IHByZXZpb3VzbHkNCiAgICBtb2RlbF91cmkgPSAicnVuczove30vb3V0cHV0cy8iLmZvcm1hdChydW5pZCkNCiAgICBwcmludCgiTW9kZWwgVVJJOiAiICsgbW9kZWxfdXJpKQ0KDQogICAgIyBSZWdpc3RlciB0aGUgbW9kZWwgd2l0aCBNb2RlbCBVUkkgYW5kIE5hbWUgb2YgY2hvaWNlDQogICAgcmVnaXN0ZXJlZF9uYW1lID0gYXJncy5tb2RlbF9iYXNlX25hbWUNCiAgICBwcmludChmIlJlZ2lzdGVyaW5nIG1vZGVsIGFzIHtyZWdpc3RlcmVkX25hbWV9IikNCiAgICBtbGZsb3cucmVnaXN0ZXJfbW9kZWwobW9kZWxfdXJpLCByZWdpc3RlcmVkX25hbWUpDQoNCg0KIyBydW4gc2NyaXB0DQppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOg0KICAgICMgcGFyc2UgYXJncw0KICAgIGFyZ3MgPSBwYXJzZV9hcmdzKCkNCg0KICAgICMgcnVuIG1haW4gZnVuY3Rpb24NCiAgICBtYWluKGFyZ3MpDQo=",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "DaXvNrjHCsaK8BJ0XOIzjQ==",
        "Date": "Wed, 24 May 2023 03:50:40 GMT",
        "ETag": "\u00220x8DB5C0A0AE745D9\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:40 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "B0ia0hmOtf4=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A40Z\u0026se=2023-05-24T11%3A50%3A40Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:40 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Wed, 24 May 2023 03:50:40 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0/src/preprocess.py?comp=metadata\u0026skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A39Z\u0026se=2023-05-24T11%3A50%3A39Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:40 GMT",
        "x-ms-meta-name": "000000000000000000000",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "1",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Wed, 24 May 2023 03:50:40 GMT",
        "ETag": "\u00220x8DB5C0A0B31B116\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:41 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8/src/register.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A40Z\u0026se=2023-05-24T11%3A50%3A40Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "2120",
        "Content-MD5": "DaXvNrjHCsaK8BJ0XOIzjQ==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:40 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQppbXBvcnQgYXJncGFyc2UNCmltcG9ydCBqc29uDQppbXBvcnQgb3MNCmltcG9ydCB0aW1lDQoNCg0KZnJvbSBhenVyZW1sLmNvcmUgaW1wb3J0IFJ1bg0KDQppbXBvcnQgbWxmbG93DQppbXBvcnQgbWxmbG93LnNrbGVhcm4NCg0KIyBCYXNlZCBvbiBleGFtcGxlOg0KIyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9tYWNoaW5lLWxlYXJuaW5nL2hvdy10by10cmFpbi1jbGkNCiMgd2hpY2ggcmVmZXJlbmNlcw0KIyBodHRwczovL2dpdGh1Yi5jb20vQXp1cmUvYXp1cmVtbC1leGFtcGxlcy90cmVlL21haW4vY2xpL2pvYnMvdHJhaW4vbGlnaHRnYm0vaXJpcw0KDQoNCmRlZiBwYXJzZV9hcmdzKCk6DQogICAgIyBzZXR1cCBhcmcgcGFyc2VyDQogICAgcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQ0KDQogICAgIyBhZGQgYXJndW1lbnRzDQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1tb2RlbF9pbnB1dF9wYXRoIiwgdHlwZT1zdHIsIGhlbHA9IlBhdGggdG8gaW5wdXQgbW9kZWwiKQ0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tbW9kZWxfYmFzZV9uYW1lIiwgdHlwZT1zdHIsIGhlbHA9Ik5hbWUgb2YgdGhlIHJlZ2lzdGVyZWQgbW9kZWwiKQ0KDQogICAgIyBwYXJzZSBhcmdzDQogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkNCiAgICBwcmludCgiUGF0aDogIiArIGFyZ3MubW9kZWxfaW5wdXRfcGF0aCkNCiAgICAjIHJldHVybiBhcmdzDQogICAgcmV0dXJuIGFyZ3MNCg0KDQpkZWYgbWFpbihhcmdzKToNCiAgICAiIiINCiAgICBSZWdpc3RlciBNb2RlbCBFeGFtcGxlDQogICAgIiIiDQogICAgIyBTZXQgVHJhY2tpbmcgVVJJDQogICAgY3VycmVudF9leHBlcmltZW50ID0gUnVuLmdldF9jb250ZXh0KCkuZXhwZXJpbWVudA0KICAgIHRyYWNraW5nX3VyaSA9IGN1cnJlbnRfZXhwZXJpbWVudC53b3Jrc3BhY2UuZ2V0X21sZmxvd190cmFja2luZ191cmkoKQ0KICAgIHByaW50KCJ0cmFja2luZ191cmk6IHswfSIuZm9ybWF0KHRyYWNraW5nX3VyaSkpDQogICAgbWxmbG93LnNldF90cmFja2luZ191cmkodHJhY2tpbmdfdXJpKQ0KICAgIG1sZmxvdy5zZXRfZXhwZXJpbWVudChjdXJyZW50X2V4cGVyaW1lbnQubmFtZSkNCg0KICAgICMgR2V0IFJ1biBJRCBmcm9tIG1vZGVsIHBhdGgNCiAgICBwcmludCgiR2V0dGluZyBtb2RlbCBwYXRoIikNCiAgICBtbG1vZGVsX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy5tb2RlbF9pbnB1dF9wYXRoLCAiTUxtb2RlbCIpDQogICAgcnVuaWQgPSAiIg0KICAgIHdpdGggb3BlbihtbG1vZGVsX3BhdGgsICJyIikgYXMgbW9kZWxmaWxlOg0KICAgICAgICBmb3IgbGluZSBpbiBtb2RlbGZpbGU6DQogICAgICAgICAgICBpZiAicnVuX2lkIiBpbiBsaW5lOg0KICAgICAgICAgICAgICAgIHJ1bmlkID0gbGluZS5zcGxpdCgiOiIpWzFdLnN0cmlwKCkNCg0KICAgICMgQ29uc3RydWN0IE1vZGVsIFVSSSBmcm9tIHJ1biBJRCBleHRyYWN0IHByZXZpb3VzbHkNCiAgICBtb2RlbF91cmkgPSAicnVuczove30vb3V0cHV0cy8iLmZvcm1hdChydW5pZCkNCiAgICBwcmludCgiTW9kZWwgVVJJOiAiICsgbW9kZWxfdXJpKQ0KDQogICAgIyBSZWdpc3RlciB0aGUgbW9kZWwgd2l0aCBNb2RlbCBVUkkgYW5kIE5hbWUgb2YgY2hvaWNlDQogICAgcmVnaXN0ZXJlZF9uYW1lID0gYXJncy5tb2RlbF9iYXNlX25hbWUNCiAgICBwcmludChmIlJlZ2lzdGVyaW5nIG1vZGVsIGFzIHtyZWdpc3RlcmVkX25hbWV9IikNCiAgICBtbGZsb3cucmVnaXN0ZXJfbW9kZWwobW9kZWxfdXJpLCByZWdpc3RlcmVkX25hbWUpDQoNCg0KIyBydW4gc2NyaXB0DQppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOg0KICAgICMgcGFyc2UgYXJncw0KICAgIGFyZ3MgPSBwYXJzZV9hcmdzKCkNCg0KICAgICMgcnVuIG1haW4gZnVuY3Rpb24NCiAgICBtYWluKGFyZ3MpDQo=",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "DaXvNrjHCsaK8BJ0XOIzjQ==",
        "Date": "Wed, 24 May 2023 03:50:40 GMT",
        "ETag": "\u00220x8DB5C0A0B3C36D3\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:41 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "B0ia0hmOtf4=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A40Z\u0026se=2023-05-24T11%3A50%3A40Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "3142",
        "Content-MD5": "DHYWDlwjLBbBzfk6TlY\u002Bmw==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:40 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQppbXBvcnQgb3MNCmltcG9ydCBhcmdwYXJzZQ0KaW1wb3J0IGRhdGV0aW1lDQpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgNCmltcG9ydCB5YW1sDQpmcm9tIG1sdGFibGUgaW1wb3J0IGxvYWQNCg0KDQpkZWYgcGFyc2VfYXJncygpOg0KICAgICMgc2V0dXAgYXJnIHBhcnNlcg0KICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkNCg0KICAgICMgYWRkIGFyZ3VtZW50cw0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tdHJhaW5fZGF0YSIsIHR5cGU9c3RyKQ0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tdmFsaWRhdGlvbl9kYXRhIiwgdHlwZT1zdHIpDQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1wcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSIsIHR5cGU9c3RyKQ0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSIsIHR5cGU9c3RyKQ0KICAgICMgcGFyc2UgYXJncw0KICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpDQogICAgcHJpbnQoImFyZ3MgcmVjZWl2ZWQgIiwgYXJncykNCiAgICAjIHJldHVybiBhcmdzDQogICAgcmV0dXJuIGFyZ3MNCg0KDQpkZWYgZ2V0X3ByZXByb2Nlc3NlZF9kYXRhKHRleHQpOg0KICAgICIiIg0KICAgIERvIHByZXByb2Nlc3NpbmcgYXMgbmVlZGVkDQogICAgQ3VycmVudGx5IHdlIGFyZSBqdXN0IHBhc3NpbmcgdGV4dCBmaWxlIGFzIGl0IGlzDQogICAgIiIiDQogICAgcmV0dXJuIHRleHQNCg0KDQpkZWYgbWFpbihhcmdzKToNCiAgICAiIiINCiAgICBQcmVwcm9jZXNzaW5nIG9mIHRyYWluaW5nL3ZhbGlkYXRpb24gZGF0YQ0KICAgICIiIg0KICAgIHRyYWluX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnRyYWluX2RhdGEsICJ0cmFpbi50eHQiKQ0KICAgIHdpdGggb3Blbih0cmFpbl9kYXRhX3BhdGgpIGFzIGY6DQogICAgICAgIHRyYWluX2RhdGEgPSBmLnJlYWQoKQ0KICAgIHByZXByb2Nlc3NlZF90cmFpbl9kYXRhID0gZ2V0X3ByZXByb2Nlc3NlZF9kYXRhKHRyYWluX2RhdGEpDQoNCiAgICAjIHdyaXRlIHByZXByb2Nlc3NlZCB0cmFpbiB0eHQgZmlsZQ0KICAgIHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy5wcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSwgInRyYWluLnR4dCIpDQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX3BhdGgsICJ3IikgYXMgZjoNCiAgICAgICAgZi53cml0ZShwcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSkNCg0KICAgIHZhbGlkYXRpb25fZGF0YV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudmFsaWRhdGlvbl9kYXRhLCAidmFsaWQudHh0IikNCiAgICB3aXRoIG9wZW4odmFsaWRhdGlvbl9kYXRhX3BhdGgpIGFzIGY6DQogICAgICAgIHZhbGlkYXRpb25fZGF0YSA9IGYucmVhZCgpDQogICAgcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSA9IGdldF9wcmVwcm9jZXNzZWRfZGF0YSh2YWxpZGF0aW9uX2RhdGEpDQoNCiAgICAjIHdyaXRlIHByZXByb2Nlc3NlZCB2YWxpZGF0aW9uIHR4dCBmaWxlDQogICAgcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MucHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSwgInZhbGlkLnR4dCIpDQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGFfcGF0aCwgInciKSBhcyBmOg0KICAgICAgICBmLndyaXRlKHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEpDQoNCiAgICAjIFdyaXRlIE1MVGFibGUgeWFtbCBmaWxlIGFzIHdlbGwgaW4gb3V0cHV0IGZvbGRlcg0KICAgICMgU2luY2UgaW4gdGhpcyBleGFtcGxlIHdlIGFyZSBub3QgZG9pbmcgYW55IHByZXByb2Nlc3NpbmcsIHdlIGFyZSBqdXN0IGNvcHlpbmcgc2FtZSB5YW1sIGZpbGUgZnJvbSBpbnB1dCxjaGFuZ2UgaXQgaWYgbmVlZGVkDQoNCiAgICAjIHJlYWQgYW5kIHdyaXRlIE1MTW9kZWwgeWFtbCBmaWxlIGZvciB0cmFpbiBkYXRhDQogICAgdHJhaW5fZGF0YV9tbHRhYmxlX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy50cmFpbl9kYXRhLCAiTUxUYWJsZSIpDQogICAgcHJlcHJvY2Vzc2VkX3RyYWluX2RhdGFfbWx0YWJsZV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MucHJlcHJvY2Vzc2VkX3RyYWluX2RhdGEsICJNTFRhYmxlIikNCiAgICB3aXRoIG9wZW4odHJhaW5fZGF0YV9tbHRhYmxlX3BhdGgsICJyIikgYXMgZmlsZToNCiAgICAgICAgeWFtbF9maWxlID0geWFtbC5zYWZlX2xvYWQoZmlsZSkNCiAgICB3aXRoIG9wZW4ocHJlcHJvY2Vzc2VkX3RyYWluX2RhdGFfbWx0YWJsZV9wYXRoLCAidyIpIGFzIGZpbGU6DQogICAgICAgIHlhbWwuZHVtcCh5YW1sX2ZpbGUsIGZpbGUpDQoNCiAgICAjIHJlYWQgYW5kIHdyaXRlIE1MTW9kZWwgeWFtbCBmaWxlIGZvciB2YWxpZGF0aW9uIGRhdGENCiAgICB2YWxpZGF0aW9uX2RhdGFfbWx0YWJsZV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudmFsaWRhdGlvbl9kYXRhLCAiTUxUYWJsZSIpDQogICAgcHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YV9tbHRhYmxlX3BhdGggPSBvcy5wYXRoLmpvaW4oYXJncy5wcmVwcm9jZXNzZWRfdmFsaWRhdGlvbl9kYXRhLCAiTUxUYWJsZSIpDQogICAgd2l0aCBvcGVuKHZhbGlkYXRpb25fZGF0YV9tbHRhYmxlX3BhdGgsICJyIikgYXMgZmlsZToNCiAgICAgICAgeWFtbF9maWxlID0geWFtbC5zYWZlX2xvYWQoZmlsZSkNCiAgICB3aXRoIG9wZW4ocHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YV9tbHRhYmxlX3BhdGgsICJ3IikgYXMgZmlsZToNCiAgICAgICAgeWFtbC5kdW1wKHlhbWxfZmlsZSwgZmlsZSkNCg0KDQojIHJ1biBzY3JpcHQNCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6DQogICAgIyBwYXJzZSBhcmdzDQogICAgYXJncyA9IHBhcnNlX2FyZ3MoKQ0KDQogICAgIyBydW4gbWFpbiBmdW5jdGlvbg0KICAgIG1haW4oYXJncykNCg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "DHYWDlwjLBbBzfk6TlY\u002Bmw==",
        "Date": "Wed, 24 May 2023 03:50:40 GMT",
        "ETag": "\u00220x8DB5C0A0B55394C\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:41 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "FYOL47tR5hU=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8/src/preprocess.py?comp=metadata\u0026skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-24T02%3A49%3A26Z\u0026ske=2023-05-25T10%3A59%3A26Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-24T03%3A40%3A40Z\u0026se=2023-05-24T11%3A50%3A40Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:41 GMT",
        "x-ms-meta-name": "000000000000000000000",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "1",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Wed, 24 May 2023 03:50:40 GMT",
        "ETag": "\u00220x8DB5C0A0B7BCE3E\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:41 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "246",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isAnonymous": true,
          "isArchived": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0/src"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "795",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:41 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-38d7ba276197106b82f22b1c7c1a7225-f2696b365d02ef9e-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "45493fc2-0a56-4dd8-9a0c-8eefe831c70a",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035041Z:45493fc2-0a56-4dd8-9a0c-8eefe831c70a",
        "x-request-time": "0.177"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
        "name": "1",
        "type": "Microsoft.MachineLearningServices/workspaces/codes/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isArchived": false,
          "isAnonymous": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-d9c1b7f5-f077-51b3-a2fb-3ae3802b50d0/src",
          "provisioningState": "Succeeded"
        },
        "systemData": {
          "createdAt": "2023-05-24T03:50:41.6034823\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-24T03:50:41.6034823\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "246",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isAnonymous": true,
          "isArchived": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8/src"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "791",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:42 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-af2d2db7040f9d27c2e3c3586fceaf30-1e973c6c0f50c094-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8443bbb0-10d5-4749-97a8-517632cc3788",
        "x-ms-ratelimit-remaining-subscription-writes": "1192",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230524T035042Z:8443bbb0-10d5-4749-97a8-517632cc3788",
        "x-request-time": "0.194"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
        "name": "1",
        "type": "Microsoft.MachineLearningServices/workspaces/codes/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isArchived": false,
          "isAnonymous": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-0038a801-0708-5cd5-8e41-f9bdd4595be8/src",
          "provisioningState": "Succeeded"
        },
        "systemData": {
          "createdAt": "2023-05-24T03:50:42.17024\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-24T03:50:42.17024\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "1276",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": true,
          "isArchived": false,
          "componentSpec": {
            "command": "python preprocess.py --train_data ${{inputs.train_data}} --validation_data ${{inputs.validation_data}} --preprocessed_train_data ${{outputs.preprocessed_train_data}} --preprocessed_validation_data ${{outputs.preprocessed_validation_data}}",
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0",
            "resources": {
              "instance_type": "Standard_D3_v2"
            },
            "name": "azureml_anonymous",
            "version": "1",
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "display_name": "Data Preprocessing",
            "is_deterministic": true,
            "inputs": {
              "train_data": {
                "type": "mltable"
              },
              "validation_data": {
                "type": "mltable"
              }
            },
            "outputs": {
              "preprocessed_train_data": {
                "type": "mltable"
              },
              "preprocessed_validation_data": {
                "type": "mltable"
              }
            },
            "type": "command",
            "_source": "YAML.JOB"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2198",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:43 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-b5b90b95e12e5aa12c79342bb1113a96-c951546959366483-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ebb18c5d-782e-4192-866d-937ca9676ce0",
        "x-ms-ratelimit-remaining-subscription-writes": "1191",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230524T035044Z:ebb18c5d-782e-4192-866d-937ca9676ce0",
        "x-request-time": "0.382"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/c31d1985-fecc-4d5d-a2e0-349754ab2bc2",
        "name": "c31d1985-fecc-4d5d-a2e0-349754ab2bc2",
        "type": "Microsoft.MachineLearningServices/workspaces/components/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": true,
          "componentSpec": {
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "name": "azureml_anonymous",
            "version": "1",
            "display_name": "Data Preprocessing",
            "is_deterministic": "True",
            "type": "command",
            "inputs": {
              "train_data": {
                "type": "mltable",
                "optional": "False"
              },
              "validation_data": {
                "type": "mltable",
                "optional": "False"
              }
            },
            "outputs": {
              "preprocessed_train_data": {
                "type": "mltable"
              },
              "preprocessed_validation_data": {
                "type": "mltable"
              }
            },
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0",
            "resources": {
              "instance_count": "1"
            },
            "command": "python preprocess.py --train_data ${{inputs.train_data}} --validation_data ${{inputs.validation_data}} --preprocessed_train_data ${{outputs.preprocessed_train_data}} --preprocessed_validation_data ${{outputs.preprocessed_validation_data}}"
          }
        },
        "systemData": {
          "createdAt": "2023-05-24T03:50:43.9196055\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-24T03:50:43.9196055\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "871",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": true,
          "isArchived": false,
          "componentSpec": {
            "command": "python register.py --model_input_path ${{inputs.model_input_path}} --model_base_name ${{inputs.model_base_name}}",
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml:AzureML-sklearn-1.0-ubuntu20.04-py38-cpu:1",
            "resources": {
              "instance_type": "Standard_D3_v2"
            },
            "name": "azureml_anonymous",
            "version": "1",
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "display_name": "Register Model",
            "is_deterministic": true,
            "inputs": {
              "model_input_path": {
                "type": "uri_folder"
              },
              "model_base_name": {
                "type": "string"
              }
            },
            "type": "command",
            "_source": "YAML.JOB"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1764",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:44 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-8e567b289a3a2328f6e12c27b219d646-024b4b1cf29fc1df-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "7dc34fff-a60c-4aba-ad8b-acd6fead72f5",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035044Z:7dc34fff-a60c-4aba-ad8b-acd6fead72f5",
        "x-request-time": "0.490"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/24503379-982b-4fab-9b33-e6601e9f95c6",
        "name": "24503379-982b-4fab-9b33-e6601e9f95c6",
        "type": "Microsoft.MachineLearningServices/workspaces/components/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": true,
          "componentSpec": {
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "name": "azureml_anonymous",
            "version": "1",
            "display_name": "Register Model",
            "is_deterministic": "True",
            "type": "command",
            "inputs": {
              "model_input_path": {
                "type": "uri_folder",
                "optional": "False"
              },
              "model_base_name": {
                "type": "string",
                "optional": "False"
              }
            },
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml://registries/azureml/environments/AzureML-sklearn-1.0-ubuntu20.04-py38-cpu/versions/1",
            "resources": {
              "instance_count": "1"
            },
            "command": "python register.py --model_input_path ${{inputs.model_input_path}} --model_base_name ${{inputs.model_base_name}}"
          }
        },
        "systemData": {
          "createdAt": "2023-05-24T03:50:44.502966\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-24T03:50:44.502966\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:44 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-057fd862ac4ca9282d57a39ce93dd4de-59bbc001742f95b3-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "18280a4a-4e99-40ba-9af0-4e7ca2740834",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035045Z:18280a4a-4e99-40ba-9af0-4e7ca2740834",
        "x-request-time": "0.065"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "amltest5899420437",
          "containerName": "azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2023-05-19T09:41:55.3790868\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2023-05-19T09:41:56.0641774\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:45 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-a34d8c44306d5d0604ed8c2e71e40cba-0162aba774da0b02-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f240819e-06f6-4570-ba03-763c27e15ace",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035045Z:f240819e-06f6-4570-ba03-763c27e15ace",
        "x-request-time": "0.139"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/MLTable",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:45 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Wed, 24 May 2023 03:50:45 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/MLTable",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "60",
        "Content-MD5": "/YkJp5g9GXskFEC8n8YYVQ==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:46 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "cGF0aHM6DQogIC0gZmlsZTogLi90cmFpbi50eHQNCnRyYW5zZm9ybWF0aW9uczoNCiAgLSB0YWtlOiAx",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "/YkJp5g9GXskFEC8n8YYVQ==",
        "Date": "Wed, 24 May 2023 03:50:45 GMT",
        "ETag": "\u00220x8DB5C0A0E4B9854\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:46 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "tQtd573nClk=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/train.txt",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "87888",
        "Content-MD5": "q0F9\u002B1mAdKSIm2Hh5oQl2w==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:46 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "q0F9\u002B1mAdKSIm2Hh5oQl2w==",
        "Date": "Wed, 24 May 2023 03:50:46 GMT",
        "ETag": "\u00220x8DB5C0A0E942F1C\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:46 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "q6G7omNBsbA=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/MLTable?comp=metadata",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:46 GMT",
        "x-ms-meta-name": "bad0120a-ccfb-4f00-ac90-93bd99e2f9be",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "0c4cb3c7-1ade-4698-acdb-1459e90f4be3",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Wed, 24 May 2023 03:50:46 GMT",
        "ETag": "\u00220x8DB5C0A0EB87A79\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:46 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:47 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-1d37f5cca0c380c976c4743bd261b3c9-f1ecb0e5a0e9ed41-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "375cdefa-cd95-4444-8079-3bc3a8161770",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035047Z:375cdefa-cd95-4444-8079-3bc3a8161770",
        "x-request-time": "0.095"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "amltest5899420437",
          "containerName": "azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2023-05-19T09:41:55.3790868\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2023-05-19T09:41:56.0641774\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:47 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-0366d0bceb606146f89ec9ab93d5a2b4-59dbe8ceb2452ee1-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b316c51c-1750-4970-9bfd-96a6320488db",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035048Z:b316c51c-1750-4970-9bfd-96a6320488db",
        "x-request-time": "0.075"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/MLTable",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:48 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Wed, 24 May 2023 03:50:47 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/MLTable",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "60",
        "Content-MD5": "2ZKDa5HergDli3h8qtR2vQ==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:48 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "cGF0aHM6DQogIC0gZmlsZTogLi92YWxpZC50eHQNCnRyYW5zZm9ybWF0aW9uczoNCiAgLSB0YWtlOiAx",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "2ZKDa5HergDli3h8qtR2vQ==",
        "Date": "Wed, 24 May 2023 03:50:48 GMT",
        "ETag": "\u00220x8DB5C0A0FAC5280\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:48 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "xH8eVjmQPVg=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/valid.txt",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "85666",
        "Content-MD5": "7LS9kTwD5ZuJwvgs9O7QSQ==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Wed, 24 May 2023 03:50:48 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "7LS9kTwD5ZuJwvgs9O7QSQ==",
        "Date": "Wed, 24 May 2023 03:50:48 GMT",
        "ETag": "\u00220x8DB5C0A0FF44D1F\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:49 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "jvhxYf6r2y8=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/MLTable?comp=metadata",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Wed, 24 May 2023 03:50:49 GMT",
        "x-ms-meta-name": "006dfdd2-8ad7-4f26-adc5-8d0e21753740",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "b539bfc7-cb74-496e-8acd-789138b73853",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Wed, 24 May 2023 03:50:48 GMT",
        "ETag": "\u00220x8DB5C0A101982BE\u0022",
        "Last-Modified": "Wed, 24 May 2023 03:50:49 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "2747",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "displayName": "AutoML with instance type - pipeline serverless compute",
          "experimentName": "Serverless-in-Pipeline",
          "isArchived": false,
          "jobType": "Pipeline",
          "inputs": {
            "text_ner_training_data": {
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/training-mltable-folder",
              "jobInputType": "mltable"
            },
            "text_ner_validation_data": {
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/validation-mltable-folder",
              "jobInputType": "mltable"
            }
          },
          "jobs": {
            "preprocessing_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "preprocessing_node",
              "type": "command",
              "inputs": {
                "train_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_training_data}}"
                },
                "validation_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_validation_data}}"
                }
              },
              "outputs": {
                "preprocessed_train_data": {
                  "job_output_type": "mltable"
                },
                "preprocessed_validation_data": {
                  "job_output_type": "mltable"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/c31d1985-fecc-4d5d-a2e0-349754ab2bc2"
            },
            "text_ner_node": {
              "name": "text_ner_node",
              "tags": {},
              "properties": {},
              "type": "automl",
              "outputs": {
                "best_model": {
                  "job_output_type": "mlflow_model"
                }
              },
              "resources": {
                "instance_type": "Standard_NC6",
                "properties": {}
              },
              "queue_settings": {
                "job_tier": "spot"
              },
              "log_verbosity": "info",
              "training_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_train_data}}",
              "limits": {
                "max_trials": 1,
                "max_nodes": 1,
                "timeout_minutes": 60
              },
              "validation_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_validation_data}}",
              "task": "text_ner",
              "primary_metric": "accuracy",
              "target_column_name": "label"
            },
            "register_model_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "register_model_node",
              "type": "command",
              "inputs": {
                "model_input_path": {
                  "job_input_type": "literal",
                  "value": "${{parent.jobs.text_ner_node.outputs.best_model}}"
                },
                "model_base_name": {
                  "job_input_type": "literal",
                  "value": "paper_categorization_model"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/24503379-982b-4fab-9b33-e6601e9f95c6"
            }
          },
          "outputs": {},
          "settings": {
            "default_compute": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/serverless",
            "_source": "YAML.JOB"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "5638",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:55 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-fd0bd87b232562a46fa80e32479f2031-bdd20d0efd56103d-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f7a6674c-64f6-4419-95d9-43991702b053",
        "x-ms-ratelimit-remaining-subscription-writes": "1196",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035056Z:f7a6674c-64f6-4419-95d9-43991702b053",
        "x-request-time": "6.346"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000",
        "name": "000000000000000000000",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {
            "azureml.DevPlatv2": "true",
            "azureml.DatasetAccessMode": "Asset",
            "azureml.runsource": "azureml.PipelineRun",
            "runSource": "MFE",
            "runType": "HTTP",
            "azureml.parameters": "{}",
            "azureml.continue_on_step_failure": "True",
            "azureml.continue_on_failed_optional_input": "True",
            "azureml.enforceRerun": "False",
            "azureml.defaultComputeName": "serverless",
            "azureml.defaultDataStoreName": "workspaceblobstore",
            "azureml.pipelineComponent": "pipelinerun"
          },
          "displayName": "AutoML with instance type - pipeline serverless compute",
          "status": "Preparing",
          "experimentName": "Serverless-in-Pipeline",
          "services": {
            "Tracking": {
              "jobServiceType": "Tracking",
              "port": null,
              "endpoint": "azureml://eastus2.api.azureml.ms/mlflow/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000?",
              "status": null,
              "errorMessage": null,
              "properties": null,
              "nodes": null
            },
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/000000000000000000000?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000",
              "status": null,
              "errorMessage": null,
              "properties": null,
              "nodes": null
            }
          },
          "computeId": null,
          "isArchived": false,
          "identity": null,
          "componentId": null,
          "notificationSetting": null,
          "secretsConfiguration": null,
          "jobType": "Pipeline",
          "settings": {
            "default_compute": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/serverless",
            "_source": "YAML.JOB"
          },
          "jobs": {
            "preprocessing_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "preprocessing_node",
              "type": "command",
              "inputs": {
                "train_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_training_data}}"
                },
                "validation_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_validation_data}}"
                }
              },
              "outputs": {
                "preprocessed_train_data": {
                  "job_output_type": "mltable"
                },
                "preprocessed_validation_data": {
                  "job_output_type": "mltable"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/c31d1985-fecc-4d5d-a2e0-349754ab2bc2"
            },
            "text_ner_node": {
              "name": "text_ner_node",
              "tags": {},
              "properties": {},
              "type": "automl",
              "outputs": {
                "best_model": {
                  "job_output_type": "mlflow_model"
                }
              },
              "resources": {
                "instance_type": "Standard_NC6",
                "properties": {}
              },
              "queue_settings": {
                "job_tier": "spot"
              },
              "log_verbosity": "info",
              "training_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_train_data}}",
              "limits": {
                "max_trials": 1,
                "max_nodes": 1,
                "timeout_minutes": 60
              },
              "validation_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_validation_data}}",
              "task": "text_ner",
              "primary_metric": "accuracy",
              "target_column_name": "label"
            },
            "register_model_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "register_model_node",
              "type": "command",
              "inputs": {
                "model_input_path": {
                  "job_input_type": "literal",
                  "value": "${{parent.jobs.text_ner_node.outputs.best_model}}"
                },
                "model_base_name": {
                  "job_input_type": "literal",
                  "value": "paper_categorization_model"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/24503379-982b-4fab-9b33-e6601e9f95c6"
            }
          },
          "inputs": {
            "text_ner_training_data": {
              "description": null,
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/training-mltable-folder",
              "mode": "ReadOnlyMount",
              "jobInputType": "mltable"
            },
            "text_ner_validation_data": {
              "description": null,
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/validation-mltable-folder",
              "mode": "ReadOnlyMount",
              "jobInputType": "mltable"
            }
          },
          "outputs": {},
          "sourceJobId": null
        },
        "systemData": {
          "createdAt": "2023-05-24T03:50:55.7359083\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000/cancel?api-version=2023-04-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "4",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 24 May 2023 03:50:57 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/eastus2/mfeOperationResults/jc:0bdd51b6-cd9c-4978-b870-99997b393b81:000000000000000000000?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-async-operation-timeout": "PT1H",
        "x-ms-correlation-request-id": "824d19b1-1d54-49d8-9b21-9233216551b5",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035058Z:824d19b1-1d54-49d8-9b21-9233216551b5",
        "x-request-time": "0.486"
      },
      "ResponseBody": "null"
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/eastus2/mfeOperationResults/jc:0bdd51b6-cd9c-4978-b870-99997b393b81:000000000000000000000?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Wed, 24 May 2023 03:50:58 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-fdd39c13445fc6fbfbbf7ef16dd3b53c-7aa1b2a039e44553-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "7ef4a3a2-d257-48c0-a2f5-ae07bd623629",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230524T035059Z:7ef4a3a2-d257-48c0-a2f5-ae07bd623629",
        "x-request-time": "0.031"
      },
      "ResponseBody": null
    }
  ],
  "Variables": {}
}
