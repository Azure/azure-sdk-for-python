{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "434",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "isAnonymous": true,
          "isArchived": false,
          "condaFile": "channels:\n- conda-forge\ndependencies:\n- python=3.8\n- numpy=1.21.2\n- pip=21.2.4\n- scikit-learn=0.24.2\n- scipy=1.7.1\n- pandas\u003E=1.1,\u003C1.2\n- pip:\n  - inference-schema[numpy-support]==1.3.0\n  - xlrd==2.0.1\n  - azureml-mlflow==1.42.0\n  - mltable==0.1.0b4\n  - pyyaml==6.0\nname: model-env\n",
          "image": "mcr.microsoft.com/azureml/openmpi4.1.0-ubuntu20.04"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1528",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:24 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-2445b65dbc6934a490d19c6834de8cba-cfb9f387c5f6ac0e-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "e7db8c08-cd00-45d6-8258-dba134654ff1",
        "x-ms-ratelimit-remaining-subscription-writes": "1193",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080924Z:e7db8c08-cd00-45d6-8258-dba134654ff1",
        "x-request-time": "0.690"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0",
        "name": "79daefb48b9f53338f24ac9d6725dfa0",
        "type": "Microsoft.MachineLearningServices/workspaces/environments/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": true,
          "autoDeleteSetting": null,
          "environmentType": "UserCreated",
          "image": "mcr.microsoft.com/azureml/openmpi4.1.0-ubuntu20.04",
          "condaFile": "{\n  \u0022channels\u0022: [\n    \u0022conda-forge\u0022\n  ],\n  \u0022dependencies\u0022: [\n    \u0022python=3.8\u0022,\n    \u0022numpy=1.21.2\u0022,\n    \u0022pip=21.2.4\u0022,\n    \u0022scikit-learn=0.24.2\u0022,\n    \u0022scipy=1.7.1\u0022,\n    \u0022pandas\u003E=1.1,\u003C1.2\u0022,\n    {\n      \u0022pip\u0022: [\n        \u0022inference-schema[numpy-support]==1.3.0\u0022,\n        \u0022xlrd==2.0.1\u0022,\n        \u0022azureml-mlflow==1.42.0\u0022,\n        \u0022mltable==0.1.0b4\u0022,\n        \u0022pyyaml==6.0\u0022\n      ]\n    }\n  ],\n  \u0022name\u0022: \u0022model-env\u0022\n}",
          "osType": "Linux",
          "autoRebuild": "Disabled",
          "provisioningState": "Succeeded",
          "stage": "Logged",
          "intellectualProperty": null
        },
        "systemData": {
          "createdAt": "2023-05-24T03:50:26.0265441\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-24T03:50:26.0265441\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions?api-version=2023-04-01\u0026hash=d4f7e0b4945c96edf6856bb4701f6cf243f9bbac63d9407be6e2cef148409f13\u0026hashVersion=202208",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-492478ef07ed1a0c05d4decd58a8d09c-be01192af65a4315-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b479f740-3564-41b2-8bc7-906d2bf0f588",
        "x-ms-ratelimit-remaining-subscription-reads": "11990",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080926Z:b479f740-3564-41b2-8bc7-906d2bf0f588",
        "x-request-time": "0.026"
      },
      "ResponseBody": {
        "value": []
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions?api-version=2023-04-01\u0026hash=d4f7e0b4945c96edf6856bb4701f6cf243f9bbac63d9407be6e2cef148409f13\u0026hashVersion=202208",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-bf4909728e70716cd48a0c3a18825867-371b7b85315ed7cb-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "21a97cc8-8ab1-4a14-b808-546b0bb4ffeb",
        "x-ms-ratelimit-remaining-subscription-reads": "11990",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080926Z:21a97cc8-8ab1-4a14-b808-546b0bb4ffeb",
        "x-request-time": "0.039"
      },
      "ResponseBody": {
        "value": []
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1/startPendingUpload?api-version=2023-04-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "47",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "pendingUploadType": "TemporaryBlobReference"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-4426af2b3ae3c4d8b485454f2ca4e7d7-574db5847e26e4d0-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "72ecccef-432c-440a-8e7b-8ee3d5fbb18b",
        "x-ms-ratelimit-remaining-subscription-writes": "1191",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080927Z:72ecccef-432c-440a-8e7b-8ee3d5fbb18b",
        "x-request-time": "0.123"
      },
      "ResponseBody": {
        "blobReferenceForConsumption": {
          "blobUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a",
          "storageAccountArmId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/amltest5899420437",
          "credential": {
            "credentialType": "SAS",
            "sasUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A26Z\u0026se=2023-05-30T16%3A09%3A26Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000"
          }
        },
        "pendingUploadId": "1802bda2-269e-4f44-ada0-e459ae9fb960",
        "pendingUploadType": "None"
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A26Z\u0026se=2023-05-30T16%3A09%3A26Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:24 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 30 May 2023 08:09:26 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A26Z\u0026se=2023-05-30T16%3A09%3A26Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "3055",
        "Content-MD5": "bk3m5J/iKk5hyViO4MvQ8w==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:25 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmltcG9ydCBvcwppbXBvcnQgYXJncGFyc2UKaW1wb3J0IGRhdGV0aW1lCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgeWFtbApmcm9tIG1sdGFibGUgaW1wb3J0IGxvYWQKCgpkZWYgcGFyc2VfYXJncygpOgogICAgIyBzZXR1cCBhcmcgcGFyc2VyCiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcigpCgogICAgIyBhZGQgYXJndW1lbnRzCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLXRyYWluX2RhdGEiLCB0eXBlPXN0cikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tdmFsaWRhdGlvbl9kYXRhIiwgdHlwZT1zdHIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLXByZXByb2Nlc3NlZF90cmFpbl9kYXRhIiwgdHlwZT1zdHIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLXByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEiLCB0eXBlPXN0cikKICAgICMgcGFyc2UgYXJncwogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKICAgIHByaW50KCJhcmdzIHJlY2VpdmVkICIsIGFyZ3MpCiAgICAjIHJldHVybiBhcmdzCiAgICByZXR1cm4gYXJncwoKCmRlZiBnZXRfcHJlcHJvY2Vzc2VkX2RhdGEodGV4dCk6CiAgICAiIiIKICAgIERvIHByZXByb2Nlc3NpbmcgYXMgbmVlZGVkCiAgICBDdXJyZW50bHkgd2UgYXJlIGp1c3QgcGFzc2luZyB0ZXh0IGZpbGUgYXMgaXQgaXMKICAgICIiIgogICAgcmV0dXJuIHRleHQKCgpkZWYgbWFpbihhcmdzKToKICAgICIiIgogICAgUHJlcHJvY2Vzc2luZyBvZiB0cmFpbmluZy92YWxpZGF0aW9uIGRhdGEKICAgICIiIgogICAgdHJhaW5fZGF0YV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudHJhaW5fZGF0YSwgInRyYWluLnR4dCIpCiAgICB3aXRoIG9wZW4odHJhaW5fZGF0YV9wYXRoKSBhcyBmOgogICAgICAgIHRyYWluX2RhdGEgPSBmLnJlYWQoKQogICAgcHJlcHJvY2Vzc2VkX3RyYWluX2RhdGEgPSBnZXRfcHJlcHJvY2Vzc2VkX2RhdGEodHJhaW5fZGF0YSkKCiAgICAjIHdyaXRlIHByZXByb2Nlc3NlZCB0cmFpbiB0eHQgZmlsZQogICAgcHJlcHJvY2Vzc2VkX3RyYWluX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF90cmFpbl9kYXRhLCAidHJhaW4udHh0IikKICAgIHdpdGggb3BlbihwcmVwcm9jZXNzZWRfdHJhaW5fZGF0YV9wYXRoLCAidyIpIGFzIGY6CiAgICAgICAgZi53cml0ZShwcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSkKCiAgICB2YWxpZGF0aW9uX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnZhbGlkYXRpb25fZGF0YSwgInZhbGlkLnR4dCIpCiAgICB3aXRoIG9wZW4odmFsaWRhdGlvbl9kYXRhX3BhdGgpIGFzIGY6CiAgICAgICAgdmFsaWRhdGlvbl9kYXRhID0gZi5yZWFkKCkKICAgIHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEgPSBnZXRfcHJlcHJvY2Vzc2VkX2RhdGEodmFsaWRhdGlvbl9kYXRhKQoKICAgICMgd3JpdGUgcHJlcHJvY2Vzc2VkIHZhbGlkYXRpb24gdHh0IGZpbGUKICAgIHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEsICJ2YWxpZC50eHQiKQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGFfcGF0aCwgInciKSBhcyBmOgogICAgICAgIGYud3JpdGUocHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSkKCiAgICAjIFdyaXRlIE1MVGFibGUgeWFtbCBmaWxlIGFzIHdlbGwgaW4gb3V0cHV0IGZvbGRlcgogICAgIyBTaW5jZSBpbiB0aGlzIGV4YW1wbGUgd2UgYXJlIG5vdCBkb2luZyBhbnkgcHJlcHJvY2Vzc2luZywgd2UgYXJlIGp1c3QgY29weWluZyBzYW1lIHlhbWwgZmlsZSBmcm9tIGlucHV0LGNoYW5nZSBpdCBpZiBuZWVkZWQKCiAgICAjIHJlYWQgYW5kIHdyaXRlIE1MTW9kZWwgeWFtbCBmaWxlIGZvciB0cmFpbiBkYXRhCiAgICB0cmFpbl9kYXRhX21sdGFibGVfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnRyYWluX2RhdGEsICJNTFRhYmxlIikKICAgIHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX21sdGFibGVfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF90cmFpbl9kYXRhLCAiTUxUYWJsZSIpCiAgICB3aXRoIG9wZW4odHJhaW5fZGF0YV9tbHRhYmxlX3BhdGgsICJyIikgYXMgZmlsZToKICAgICAgICB5YW1sX2ZpbGUgPSB5YW1sLnNhZmVfbG9hZChmaWxlKQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX21sdGFibGVfcGF0aCwgInciKSBhcyBmaWxlOgogICAgICAgIHlhbWwuZHVtcCh5YW1sX2ZpbGUsIGZpbGUpCgogICAgIyByZWFkIGFuZCB3cml0ZSBNTE1vZGVsIHlhbWwgZmlsZSBmb3IgdmFsaWRhdGlvbiBkYXRhCiAgICB2YWxpZGF0aW9uX2RhdGFfbWx0YWJsZV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudmFsaWRhdGlvbl9kYXRhLCAiTUxUYWJsZSIpCiAgICBwcmVwcm9jZXNzZWRfdmFsaWRhdGlvbl9kYXRhX21sdGFibGVfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEsICJNTFRhYmxlIikKICAgIHdpdGggb3Blbih2YWxpZGF0aW9uX2RhdGFfbWx0YWJsZV9wYXRoLCAiciIpIGFzIGZpbGU6CiAgICAgICAgeWFtbF9maWxlID0geWFtbC5zYWZlX2xvYWQoZmlsZSkKICAgIHdpdGggb3BlbihwcmVwcm9jZXNzZWRfdmFsaWRhdGlvbl9kYXRhX21sdGFibGVfcGF0aCwgInciKSBhcyBmaWxlOgogICAgICAgIHlhbWwuZHVtcCh5YW1sX2ZpbGUsIGZpbGUpCgoKIyBydW4gc2NyaXB0CmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICAjIHBhcnNlIGFyZ3MKICAgIGFyZ3MgPSBwYXJzZV9hcmdzKCkKCiAgICAjIHJ1biBtYWluIGZ1bmN0aW9uCiAgICBtYWluKGFyZ3MpCg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "bk3m5J/iKk5hyViO4MvQ8w==",
        "Date": "Tue, 30 May 2023 08:09:26 GMT",
        "ETag": "\u00220x8DB60E53023E841\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:27 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "i9WxYLuPSDk=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1/startPendingUpload?api-version=2023-04-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "47",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "pendingUploadType": "TemporaryBlobReference"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:27 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-c47153f78fdfda86f480009cc0bfda90-52e4d367eb1ee73c-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "3a825076-12d7-4ce4-9c7f-d71669ff7593",
        "x-ms-ratelimit-remaining-subscription-writes": "1191",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080927Z:3a825076-12d7-4ce4-9c7f-d71669ff7593",
        "x-request-time": "0.181"
      },
      "ResponseBody": {
        "blobReferenceForConsumption": {
          "blobUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214",
          "storageAccountArmId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/amltest5899420437",
          "credential": {
            "credentialType": "SAS",
            "sasUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A27Z\u0026se=2023-05-30T16%3A09%3A27Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000"
          }
        },
        "pendingUploadId": "51a1283d-f6bd-4ef7-a17c-4639222a35fe",
        "pendingUploadType": "None"
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a/src/register.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A26Z\u0026se=2023-05-30T16%3A09%3A26Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "2047",
        "Content-MD5": "9b2gQP2c020B8vWYjq/FhA==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:25 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmltcG9ydCBhcmdwYXJzZQppbXBvcnQganNvbgppbXBvcnQgb3MKaW1wb3J0IHRpbWUKCgpmcm9tIGF6dXJlbWwuY29yZSBpbXBvcnQgUnVuCgppbXBvcnQgbWxmbG93CmltcG9ydCBtbGZsb3cuc2tsZWFybgoKIyBCYXNlZCBvbiBleGFtcGxlOgojIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL2F6dXJlL21hY2hpbmUtbGVhcm5pbmcvaG93LXRvLXRyYWluLWNsaQojIHdoaWNoIHJlZmVyZW5jZXMKIyBodHRwczovL2dpdGh1Yi5jb20vQXp1cmUvYXp1cmVtbC1leGFtcGxlcy90cmVlL21haW4vY2xpL2pvYnMvdHJhaW4vbGlnaHRnYm0vaXJpcwoKCmRlZiBwYXJzZV9hcmdzKCk6CiAgICAjIHNldHVwIGFyZyBwYXJzZXIKICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKCiAgICAjIGFkZCBhcmd1bWVudHMKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tbW9kZWxfaW5wdXRfcGF0aCIsIHR5cGU9c3RyLCBoZWxwPSJQYXRoIHRvIGlucHV0IG1vZGVsIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tbW9kZWxfYmFzZV9uYW1lIiwgdHlwZT1zdHIsIGhlbHA9Ik5hbWUgb2YgdGhlIHJlZ2lzdGVyZWQgbW9kZWwiKQoKICAgICMgcGFyc2UgYXJncwogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKICAgIHByaW50KCJQYXRoOiAiICsgYXJncy5tb2RlbF9pbnB1dF9wYXRoKQogICAgIyByZXR1cm4gYXJncwogICAgcmV0dXJuIGFyZ3MKCgpkZWYgbWFpbihhcmdzKToKICAgICIiIgogICAgUmVnaXN0ZXIgTW9kZWwgRXhhbXBsZQogICAgIiIiCiAgICAjIFNldCBUcmFja2luZyBVUkkKICAgIGN1cnJlbnRfZXhwZXJpbWVudCA9IFJ1bi5nZXRfY29udGV4dCgpLmV4cGVyaW1lbnQKICAgIHRyYWNraW5nX3VyaSA9IGN1cnJlbnRfZXhwZXJpbWVudC53b3Jrc3BhY2UuZ2V0X21sZmxvd190cmFja2luZ191cmkoKQogICAgcHJpbnQoInRyYWNraW5nX3VyaTogezB9Ii5mb3JtYXQodHJhY2tpbmdfdXJpKSkKICAgIG1sZmxvdy5zZXRfdHJhY2tpbmdfdXJpKHRyYWNraW5nX3VyaSkKICAgIG1sZmxvdy5zZXRfZXhwZXJpbWVudChjdXJyZW50X2V4cGVyaW1lbnQubmFtZSkKCiAgICAjIEdldCBSdW4gSUQgZnJvbSBtb2RlbCBwYXRoCiAgICBwcmludCgiR2V0dGluZyBtb2RlbCBwYXRoIikKICAgIG1sbW9kZWxfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLm1vZGVsX2lucHV0X3BhdGgsICJNTG1vZGVsIikKICAgIHJ1bmlkID0gIiIKICAgIHdpdGggb3BlbihtbG1vZGVsX3BhdGgsICJyIikgYXMgbW9kZWxmaWxlOgogICAgICAgIGZvciBsaW5lIGluIG1vZGVsZmlsZToKICAgICAgICAgICAgaWYgInJ1bl9pZCIgaW4gbGluZToKICAgICAgICAgICAgICAgIHJ1bmlkID0gbGluZS5zcGxpdCgiOiIpWzFdLnN0cmlwKCkKCiAgICAjIENvbnN0cnVjdCBNb2RlbCBVUkkgZnJvbSBydW4gSUQgZXh0cmFjdCBwcmV2aW91c2x5CiAgICBtb2RlbF91cmkgPSAicnVuczove30vb3V0cHV0cy8iLmZvcm1hdChydW5pZCkKICAgIHByaW50KCJNb2RlbCBVUkk6ICIgKyBtb2RlbF91cmkpCgogICAgIyBSZWdpc3RlciB0aGUgbW9kZWwgd2l0aCBNb2RlbCBVUkkgYW5kIE5hbWUgb2YgY2hvaWNlCiAgICByZWdpc3RlcmVkX25hbWUgPSBhcmdzLm1vZGVsX2Jhc2VfbmFtZQogICAgcHJpbnQoZiJSZWdpc3RlcmluZyBtb2RlbCBhcyB7cmVnaXN0ZXJlZF9uYW1lfSIpCiAgICBtbGZsb3cucmVnaXN0ZXJfbW9kZWwobW9kZWxfdXJpLCByZWdpc3RlcmVkX25hbWUpCgoKIyBydW4gc2NyaXB0CmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICAjIHBhcnNlIGFyZ3MKICAgIGFyZ3MgPSBwYXJzZV9hcmdzKCkKCiAgICAjIHJ1biBtYWluIGZ1bmN0aW9uCiAgICBtYWluKGFyZ3MpCg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "9b2gQP2c020B8vWYjq/FhA==",
        "Date": "Tue, 30 May 2023 08:09:26 GMT",
        "ETag": "\u00220x8DB60E53047BE71\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:27 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "/tocDZhsByQ=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a/src/preprocess.py?comp=metadata\u0026skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A26Z\u0026se=2023-05-30T16%3A09%3A26Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:25 GMT",
        "x-ms-meta-name": "000000000000000000000",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "1",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Tue, 30 May 2023 08:09:27 GMT",
        "ETag": "\u00220x8DB60E5306DB72F\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:27 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A27Z\u0026se=2023-05-30T16%3A09%3A27Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:25 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 30 May 2023 08:09:27 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214/src/preprocess.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A27Z\u0026se=2023-05-30T16%3A09%3A27Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "3055",
        "Content-MD5": "bk3m5J/iKk5hyViO4MvQ8w==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:25 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmltcG9ydCBvcwppbXBvcnQgYXJncGFyc2UKaW1wb3J0IGRhdGV0aW1lCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgeWFtbApmcm9tIG1sdGFibGUgaW1wb3J0IGxvYWQKCgpkZWYgcGFyc2VfYXJncygpOgogICAgIyBzZXR1cCBhcmcgcGFyc2VyCiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcigpCgogICAgIyBhZGQgYXJndW1lbnRzCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLXRyYWluX2RhdGEiLCB0eXBlPXN0cikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tdmFsaWRhdGlvbl9kYXRhIiwgdHlwZT1zdHIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLXByZXByb2Nlc3NlZF90cmFpbl9kYXRhIiwgdHlwZT1zdHIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLXByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEiLCB0eXBlPXN0cikKICAgICMgcGFyc2UgYXJncwogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKICAgIHByaW50KCJhcmdzIHJlY2VpdmVkICIsIGFyZ3MpCiAgICAjIHJldHVybiBhcmdzCiAgICByZXR1cm4gYXJncwoKCmRlZiBnZXRfcHJlcHJvY2Vzc2VkX2RhdGEodGV4dCk6CiAgICAiIiIKICAgIERvIHByZXByb2Nlc3NpbmcgYXMgbmVlZGVkCiAgICBDdXJyZW50bHkgd2UgYXJlIGp1c3QgcGFzc2luZyB0ZXh0IGZpbGUgYXMgaXQgaXMKICAgICIiIgogICAgcmV0dXJuIHRleHQKCgpkZWYgbWFpbihhcmdzKToKICAgICIiIgogICAgUHJlcHJvY2Vzc2luZyBvZiB0cmFpbmluZy92YWxpZGF0aW9uIGRhdGEKICAgICIiIgogICAgdHJhaW5fZGF0YV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudHJhaW5fZGF0YSwgInRyYWluLnR4dCIpCiAgICB3aXRoIG9wZW4odHJhaW5fZGF0YV9wYXRoKSBhcyBmOgogICAgICAgIHRyYWluX2RhdGEgPSBmLnJlYWQoKQogICAgcHJlcHJvY2Vzc2VkX3RyYWluX2RhdGEgPSBnZXRfcHJlcHJvY2Vzc2VkX2RhdGEodHJhaW5fZGF0YSkKCiAgICAjIHdyaXRlIHByZXByb2Nlc3NlZCB0cmFpbiB0eHQgZmlsZQogICAgcHJlcHJvY2Vzc2VkX3RyYWluX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF90cmFpbl9kYXRhLCAidHJhaW4udHh0IikKICAgIHdpdGggb3BlbihwcmVwcm9jZXNzZWRfdHJhaW5fZGF0YV9wYXRoLCAidyIpIGFzIGY6CiAgICAgICAgZi53cml0ZShwcmVwcm9jZXNzZWRfdHJhaW5fZGF0YSkKCiAgICB2YWxpZGF0aW9uX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnZhbGlkYXRpb25fZGF0YSwgInZhbGlkLnR4dCIpCiAgICB3aXRoIG9wZW4odmFsaWRhdGlvbl9kYXRhX3BhdGgpIGFzIGY6CiAgICAgICAgdmFsaWRhdGlvbl9kYXRhID0gZi5yZWFkKCkKICAgIHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEgPSBnZXRfcHJlcHJvY2Vzc2VkX2RhdGEodmFsaWRhdGlvbl9kYXRhKQoKICAgICMgd3JpdGUgcHJlcHJvY2Vzc2VkIHZhbGlkYXRpb24gdHh0IGZpbGUKICAgIHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGFfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEsICJ2YWxpZC50eHQiKQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGFfcGF0aCwgInciKSBhcyBmOgogICAgICAgIGYud3JpdGUocHJlcHJvY2Vzc2VkX3ZhbGlkYXRpb25fZGF0YSkKCiAgICAjIFdyaXRlIE1MVGFibGUgeWFtbCBmaWxlIGFzIHdlbGwgaW4gb3V0cHV0IGZvbGRlcgogICAgIyBTaW5jZSBpbiB0aGlzIGV4YW1wbGUgd2UgYXJlIG5vdCBkb2luZyBhbnkgcHJlcHJvY2Vzc2luZywgd2UgYXJlIGp1c3QgY29weWluZyBzYW1lIHlhbWwgZmlsZSBmcm9tIGlucHV0LGNoYW5nZSBpdCBpZiBuZWVkZWQKCiAgICAjIHJlYWQgYW5kIHdyaXRlIE1MTW9kZWwgeWFtbCBmaWxlIGZvciB0cmFpbiBkYXRhCiAgICB0cmFpbl9kYXRhX21sdGFibGVfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnRyYWluX2RhdGEsICJNTFRhYmxlIikKICAgIHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX21sdGFibGVfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF90cmFpbl9kYXRhLCAiTUxUYWJsZSIpCiAgICB3aXRoIG9wZW4odHJhaW5fZGF0YV9tbHRhYmxlX3BhdGgsICJyIikgYXMgZmlsZToKICAgICAgICB5YW1sX2ZpbGUgPSB5YW1sLnNhZmVfbG9hZChmaWxlKQogICAgd2l0aCBvcGVuKHByZXByb2Nlc3NlZF90cmFpbl9kYXRhX21sdGFibGVfcGF0aCwgInciKSBhcyBmaWxlOgogICAgICAgIHlhbWwuZHVtcCh5YW1sX2ZpbGUsIGZpbGUpCgogICAgIyByZWFkIGFuZCB3cml0ZSBNTE1vZGVsIHlhbWwgZmlsZSBmb3IgdmFsaWRhdGlvbiBkYXRhCiAgICB2YWxpZGF0aW9uX2RhdGFfbWx0YWJsZV9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MudmFsaWRhdGlvbl9kYXRhLCAiTUxUYWJsZSIpCiAgICBwcmVwcm9jZXNzZWRfdmFsaWRhdGlvbl9kYXRhX21sdGFibGVfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLnByZXByb2Nlc3NlZF92YWxpZGF0aW9uX2RhdGEsICJNTFRhYmxlIikKICAgIHdpdGggb3Blbih2YWxpZGF0aW9uX2RhdGFfbWx0YWJsZV9wYXRoLCAiciIpIGFzIGZpbGU6CiAgICAgICAgeWFtbF9maWxlID0geWFtbC5zYWZlX2xvYWQoZmlsZSkKICAgIHdpdGggb3BlbihwcmVwcm9jZXNzZWRfdmFsaWRhdGlvbl9kYXRhX21sdGFibGVfcGF0aCwgInciKSBhcyBmaWxlOgogICAgICAgIHlhbWwuZHVtcCh5YW1sX2ZpbGUsIGZpbGUpCgoKIyBydW4gc2NyaXB0CmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICAjIHBhcnNlIGFyZ3MKICAgIGFyZ3MgPSBwYXJzZV9hcmdzKCkKCiAgICAjIHJ1biBtYWluIGZ1bmN0aW9uCiAgICBtYWluKGFyZ3MpCg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "bk3m5J/iKk5hyViO4MvQ8w==",
        "Date": "Tue, 30 May 2023 08:09:27 GMT",
        "ETag": "\u00220x8DB60E530B47966\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:28 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "i9WxYLuPSDk=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214/src/register.py?skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A27Z\u0026se=2023-05-30T16%3A09%3A27Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "2047",
        "Content-MD5": "9b2gQP2c020B8vWYjq/FhA==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:25 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmltcG9ydCBhcmdwYXJzZQppbXBvcnQganNvbgppbXBvcnQgb3MKaW1wb3J0IHRpbWUKCgpmcm9tIGF6dXJlbWwuY29yZSBpbXBvcnQgUnVuCgppbXBvcnQgbWxmbG93CmltcG9ydCBtbGZsb3cuc2tsZWFybgoKIyBCYXNlZCBvbiBleGFtcGxlOgojIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL2F6dXJlL21hY2hpbmUtbGVhcm5pbmcvaG93LXRvLXRyYWluLWNsaQojIHdoaWNoIHJlZmVyZW5jZXMKIyBodHRwczovL2dpdGh1Yi5jb20vQXp1cmUvYXp1cmVtbC1leGFtcGxlcy90cmVlL21haW4vY2xpL2pvYnMvdHJhaW4vbGlnaHRnYm0vaXJpcwoKCmRlZiBwYXJzZV9hcmdzKCk6CiAgICAjIHNldHVwIGFyZyBwYXJzZXIKICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKCiAgICAjIGFkZCBhcmd1bWVudHMKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tbW9kZWxfaW5wdXRfcGF0aCIsIHR5cGU9c3RyLCBoZWxwPSJQYXRoIHRvIGlucHV0IG1vZGVsIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tbW9kZWxfYmFzZV9uYW1lIiwgdHlwZT1zdHIsIGhlbHA9Ik5hbWUgb2YgdGhlIHJlZ2lzdGVyZWQgbW9kZWwiKQoKICAgICMgcGFyc2UgYXJncwogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKICAgIHByaW50KCJQYXRoOiAiICsgYXJncy5tb2RlbF9pbnB1dF9wYXRoKQogICAgIyByZXR1cm4gYXJncwogICAgcmV0dXJuIGFyZ3MKCgpkZWYgbWFpbihhcmdzKToKICAgICIiIgogICAgUmVnaXN0ZXIgTW9kZWwgRXhhbXBsZQogICAgIiIiCiAgICAjIFNldCBUcmFja2luZyBVUkkKICAgIGN1cnJlbnRfZXhwZXJpbWVudCA9IFJ1bi5nZXRfY29udGV4dCgpLmV4cGVyaW1lbnQKICAgIHRyYWNraW5nX3VyaSA9IGN1cnJlbnRfZXhwZXJpbWVudC53b3Jrc3BhY2UuZ2V0X21sZmxvd190cmFja2luZ191cmkoKQogICAgcHJpbnQoInRyYWNraW5nX3VyaTogezB9Ii5mb3JtYXQodHJhY2tpbmdfdXJpKSkKICAgIG1sZmxvdy5zZXRfdHJhY2tpbmdfdXJpKHRyYWNraW5nX3VyaSkKICAgIG1sZmxvdy5zZXRfZXhwZXJpbWVudChjdXJyZW50X2V4cGVyaW1lbnQubmFtZSkKCiAgICAjIEdldCBSdW4gSUQgZnJvbSBtb2RlbCBwYXRoCiAgICBwcmludCgiR2V0dGluZyBtb2RlbCBwYXRoIikKICAgIG1sbW9kZWxfcGF0aCA9IG9zLnBhdGguam9pbihhcmdzLm1vZGVsX2lucHV0X3BhdGgsICJNTG1vZGVsIikKICAgIHJ1bmlkID0gIiIKICAgIHdpdGggb3BlbihtbG1vZGVsX3BhdGgsICJyIikgYXMgbW9kZWxmaWxlOgogICAgICAgIGZvciBsaW5lIGluIG1vZGVsZmlsZToKICAgICAgICAgICAgaWYgInJ1bl9pZCIgaW4gbGluZToKICAgICAgICAgICAgICAgIHJ1bmlkID0gbGluZS5zcGxpdCgiOiIpWzFdLnN0cmlwKCkKCiAgICAjIENvbnN0cnVjdCBNb2RlbCBVUkkgZnJvbSBydW4gSUQgZXh0cmFjdCBwcmV2aW91c2x5CiAgICBtb2RlbF91cmkgPSAicnVuczove30vb3V0cHV0cy8iLmZvcm1hdChydW5pZCkKICAgIHByaW50KCJNb2RlbCBVUkk6ICIgKyBtb2RlbF91cmkpCgogICAgIyBSZWdpc3RlciB0aGUgbW9kZWwgd2l0aCBNb2RlbCBVUkkgYW5kIE5hbWUgb2YgY2hvaWNlCiAgICByZWdpc3RlcmVkX25hbWUgPSBhcmdzLm1vZGVsX2Jhc2VfbmFtZQogICAgcHJpbnQoZiJSZWdpc3RlcmluZyBtb2RlbCBhcyB7cmVnaXN0ZXJlZF9uYW1lfSIpCiAgICBtbGZsb3cucmVnaXN0ZXJfbW9kZWwobW9kZWxfdXJpLCByZWdpc3RlcmVkX25hbWUpCgoKIyBydW4gc2NyaXB0CmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICAjIHBhcnNlIGFyZ3MKICAgIGFyZ3MgPSBwYXJzZV9hcmdzKCkKCiAgICAjIHJ1biBtYWluIGZ1bmN0aW9uCiAgICBtYWluKGFyZ3MpCg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "9b2gQP2c020B8vWYjq/FhA==",
        "Date": "Tue, 30 May 2023 08:09:27 GMT",
        "ETag": "\u00220x8DB60E530BD519F\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:28 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "/tocDZhsByQ=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "246",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isAnonymous": true,
          "isArchived": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a/src"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "795",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:28 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-b4203d4c6d6e3df5d41c7c5e7e799227-2f02c69f02ab875b-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "1653331a-49cc-4dec-85a5-c2bc9951a8a2",
        "x-ms-ratelimit-remaining-subscription-writes": "1190",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080928Z:1653331a-49cc-4dec-85a5-c2bc9951a8a2",
        "x-request-time": "0.173"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
        "name": "1",
        "type": "Microsoft.MachineLearningServices/workspaces/codes/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isArchived": false,
          "isAnonymous": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-e3fe7b01-69dd-50d4-bbb7-5b8f983a3c8a/src",
          "provisioningState": "Succeeded"
        },
        "systemData": {
          "createdAt": "2023-05-30T08:09:28.4717847\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-30T08:09:28.4717847\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214/src/preprocess.py?comp=metadata\u0026skoid=372c30a9-c04f-422f-b38c-872e6b7d5540\u0026sktid=72f988bf-86f1-41af-91ab-2d7cd011db47\u0026skt=2023-05-30T07%3A11%3A03Z\u0026ske=2023-05-31T15%3A21%3A03Z\u0026sks=b\u0026skv=2019-07-07\u0026sv=2021-10-04\u0026st=2023-05-30T07%3A59%3A27Z\u0026se=2023-05-30T16%3A09%3A27Z\u0026sr=c\u0026sp=rcwl\u0026sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:26 GMT",
        "x-ms-meta-name": "000000000000000000000",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "1",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Tue, 30 May 2023 08:09:28 GMT",
        "ETag": "\u00220x8DB60E530E127D7\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:28 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "246",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isAnonymous": true,
          "isArchived": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214/src"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "795",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:29 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1?api-version=2023-04-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-7c1c059cf7d7b1aee83f78480ac86c00-e71f7edde5a629b4-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "3402cd8e-2946-4b92-8945-77fa44e550e5",
        "x-ms-ratelimit-remaining-subscription-writes": "1189",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080929Z:3402cd8e-2946-4b92-8945-77fa44e550e5",
        "x-request-time": "0.242"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
        "name": "1",
        "type": "Microsoft.MachineLearningServices/workspaces/codes/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isArchived": false,
          "isAnonymous": false,
          "codeUri": "https://amltest5899420437.blob.core.windows.net:443/0bdd51b6-c-3e4af202-396c-54e8-a6c6-0ca89775a214/src",
          "provisioningState": "Succeeded"
        },
        "systemData": {
          "createdAt": "2023-05-30T08:09:29.2786489\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-30T08:09:29.2786489\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "871",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": true,
          "isArchived": false,
          "componentSpec": {
            "command": "python register.py --model_input_path ${{inputs.model_input_path}} --model_base_name ${{inputs.model_base_name}}",
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml:AzureML-sklearn-1.0-ubuntu20.04-py38-cpu:1",
            "resources": {
              "instance_type": "Standard_D3_v2"
            },
            "name": "azureml_anonymous",
            "version": "1",
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "display_name": "Register Model",
            "is_deterministic": true,
            "inputs": {
              "model_input_path": {
                "type": "uri_folder"
              },
              "model_base_name": {
                "type": "string"
              }
            },
            "type": "command",
            "_source": "YAML.JOB"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1766",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:30 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-2aae8acef74d1a35a335c4085095d37e-6890a68cc7c486a2-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0446e5fc-8d87-4d6f-b779-d4bbb24690f6",
        "x-ms-ratelimit-remaining-subscription-writes": "1187",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080931Z:0446e5fc-8d87-4d6f-b779-d4bbb24690f6",
        "x-request-time": "0.548"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/10cb54c1-ce9a-4310-9d5e-1c14d72a5b90",
        "name": "10cb54c1-ce9a-4310-9d5e-1c14d72a5b90",
        "type": "Microsoft.MachineLearningServices/workspaces/components/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": true,
          "componentSpec": {
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "name": "azureml_anonymous",
            "version": "1",
            "display_name": "Register Model",
            "is_deterministic": "True",
            "type": "command",
            "inputs": {
              "model_input_path": {
                "type": "uri_folder",
                "optional": "False"
              },
              "model_base_name": {
                "type": "string",
                "optional": "False"
              }
            },
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml://registries/azureml/environments/AzureML-sklearn-1.0-ubuntu20.04-py38-cpu/versions/1",
            "resources": {
              "instance_count": "1"
            },
            "command": "python register.py --model_input_path ${{inputs.model_input_path}} --model_base_name ${{inputs.model_base_name}}"
          }
        },
        "systemData": {
          "createdAt": "2023-05-30T08:09:30.9492283\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-30T08:09:30.9492283\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "1276",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": true,
          "isArchived": false,
          "componentSpec": {
            "command": "python preprocess.py --train_data ${{inputs.train_data}} --validation_data ${{inputs.validation_data}} --preprocessed_train_data ${{outputs.preprocessed_train_data}} --preprocessed_validation_data ${{outputs.preprocessed_validation_data}}",
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0",
            "resources": {
              "instance_type": "Standard_D3_v2"
            },
            "name": "azureml_anonymous",
            "version": "1",
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "display_name": "Data Preprocessing",
            "is_deterministic": true,
            "inputs": {
              "train_data": {
                "type": "mltable"
              },
              "validation_data": {
                "type": "mltable"
              }
            },
            "outputs": {
              "preprocessed_train_data": {
                "type": "mltable"
              },
              "preprocessed_validation_data": {
                "type": "mltable"
              }
            },
            "type": "command",
            "_source": "YAML.JOB"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2198",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:31 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/000000000000000000000?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-8bdfa96b7958895f12996c05c0eb9753-4d9cf08a93814a94-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "bd3fa15f-74f3-4434-9339-8688b94eeb9e",
        "x-ms-ratelimit-remaining-subscription-writes": "1187",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080931Z:bd3fa15f-74f3-4434-9339-8688b94eeb9e",
        "x-request-time": "0.318"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/c84f1b4b-8811-4a3c-8a06-b8b6fe3c4be5",
        "name": "c84f1b4b-8811-4a3c-8a06-b8b6fe3c4be5",
        "type": "Microsoft.MachineLearningServices/workspaces/components/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": true,
          "componentSpec": {
            "$schema": "https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json",
            "name": "azureml_anonymous",
            "version": "1",
            "display_name": "Data Preprocessing",
            "is_deterministic": "True",
            "type": "command",
            "inputs": {
              "train_data": {
                "type": "mltable",
                "optional": "False"
              },
              "validation_data": {
                "type": "mltable",
                "optional": "False"
              }
            },
            "outputs": {
              "preprocessed_train_data": {
                "type": "mltable"
              },
              "preprocessed_validation_data": {
                "type": "mltable"
              }
            },
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/000000000000000000000/versions/1",
            "environment": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/environments/CliV2AnonymousEnvironment/versions/79daefb48b9f53338f24ac9d6725dfa0",
            "resources": {
              "instance_count": "1"
            },
            "command": "python preprocess.py --train_data ${{inputs.train_data}} --validation_data ${{inputs.validation_data}} --preprocessed_train_data ${{outputs.preprocessed_train_data}} --preprocessed_validation_data ${{outputs.preprocessed_validation_data}}"
          }
        },
        "systemData": {
          "createdAt": "2023-05-30T08:09:31.5079538\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User",
          "lastModifiedAt": "2023-05-30T08:09:31.5079538\u002B00:00",
          "lastModifiedBy": "Chenyang Zhang",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:31 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-bf8e0a6abacee7bebb984ed8769c2691-ffc57e720d3621d0-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "958b6544-eade-4164-94d6-28edcdd989cd",
        "x-ms-ratelimit-remaining-subscription-reads": "11989",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080932Z:958b6544-eade-4164-94d6-28edcdd989cd",
        "x-request-time": "0.112"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "amltest5899420437",
          "containerName": "azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2023-05-19T09:41:55.3790868\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2023-05-19T09:41:56.0641774\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:32 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-91295e35e85e3cde5f0ce03add67dc25-f710fc37d02cef9e-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "5d3eddcc-333d-4d0e-aefc-a1d4901270e2",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080932Z:5d3eddcc-333d-4d0e-aefc-a1d4901270e2",
        "x-request-time": "0.205"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/MLTable",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:30 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 30 May 2023 08:09:32 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/MLTable",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "57",
        "Content-MD5": "Sir4LsEq7wMlRHKxXkBmBA==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:30 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "cGF0aHM6CiAgLSBmaWxlOiAuL3RyYWluLnR4dAp0cmFuc2Zvcm1hdGlvbnM6CiAgLSB0YWtlOiAx",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "Sir4LsEq7wMlRHKxXkBmBA==",
        "Date": "Tue, 30 May 2023 08:09:32 GMT",
        "ETag": "\u00220x8DB60E533A66AFC\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:33 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "qr3POj3uAnM=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/train.txt",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "77890",
        "Content-MD5": "uyRVWDDJ/JwLyNpWjkPmOA==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:30 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "uyRVWDDJ/JwLyNpWjkPmOA==",
        "Date": "Tue, 30 May 2023 08:09:32 GMT",
        "ETag": "\u00220x8DB60E533CA4139\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:33 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "1l/05eVvsw4=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/training-mltable-folder/MLTable?comp=metadata",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:31 GMT",
        "x-ms-meta-name": "462c284d-c6ec-4cef-8b84-1d4fd645af83",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "b1e7c9d8-b1ba-4953-91f3-0ecebe41aaad",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Tue, 30 May 2023 08:09:33 GMT",
        "ETag": "\u00220x8DB60E533ED7B3C\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:33 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:33 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-ada13dc48e21c7ca582f04a7bccc4605-f570b952672456d8-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "4ce3f2b6-5a94-4376-8626-af81458bd5ce",
        "x-ms-ratelimit-remaining-subscription-reads": "11988",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080934Z:4ce3f2b6-5a94-4376-8626-af81458bd5ce",
        "x-request-time": "0.082"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "amltest5899420437",
          "containerName": "azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2023-05-19T09:41:55.3790868\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2023-05-19T09:41:56.0641774\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:34 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-fe960be5a13a238f9730558ad0cf5c6a-b546f141eb84dae5-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "db28772a-404b-424e-b833-ea0cfe5b8908",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080934Z:db28772a-404b-424e-b833-ea0cfe5b8908",
        "x-request-time": "0.085"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/MLTable",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:32 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 30 May 2023 08:09:34 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/MLTable",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "57",
        "Content-MD5": "5W7V/CMd0I41DKA8PXaaiA==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:32 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "cGF0aHM6CiAgLSBmaWxlOiAuL3ZhbGlkLnR4dAp0cmFuc2Zvcm1hdGlvbnM6CiAgLSB0YWtlOiAx",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "5W7V/CMd0I41DKA8PXaaiA==",
        "Date": "Tue, 30 May 2023 08:09:34 GMT",
        "ETag": "\u00220x8DB60E534E23D20\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:35 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "F2OVMNNmy4A=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/valid.txt",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "75659",
        "Content-MD5": "okvziNE3QKeH8TMtRjfUTw==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 30 May 2023 08:09:32 GMT",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": "",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "okvziNE3QKeH8TMtRjfUTw==",
        "Date": "Tue, 30 May 2023 08:09:35 GMT",
        "ETag": "\u00220x8DB60E53528D84D\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:35 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "eNezPNN0u/Y=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://amltest5899420437.blob.core.windows.net/azureml-blobstore-0bdd51b6-cd9c-4978-b870-99997b393b81/LocalUpload/00000000000000000000000000000000/validation-mltable-folder/MLTable?comp=metadata",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.16.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)",
        "x-ms-date": "Tue, 30 May 2023 08:09:33 GMT",
        "x-ms-meta-name": "68d27fbc-3e5c-4a53-9a19-1bb582d9b20b",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "052601cd-8628-4aa5-a60b-9a09a9858df6",
        "x-ms-version": "2022-11-02"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Tue, 30 May 2023 08:09:35 GMT",
        "ETag": "\u00220x8DB60E5354B4F23\u0022",
        "Last-Modified": "Tue, 30 May 2023 08:09:36 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2022-11-02"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "2747",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "displayName": "AutoML with instance type - pipeline serverless compute",
          "experimentName": "Serverless-in-Pipeline",
          "isArchived": false,
          "jobType": "Pipeline",
          "inputs": {
            "text_ner_training_data": {
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/training-mltable-folder",
              "jobInputType": "mltable"
            },
            "text_ner_validation_data": {
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/validation-mltable-folder",
              "jobInputType": "mltable"
            }
          },
          "jobs": {
            "preprocessing_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "preprocessing_node",
              "type": "command",
              "inputs": {
                "train_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_training_data}}"
                },
                "validation_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_validation_data}}"
                }
              },
              "outputs": {
                "preprocessed_train_data": {
                  "job_output_type": "mltable"
                },
                "preprocessed_validation_data": {
                  "job_output_type": "mltable"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/c84f1b4b-8811-4a3c-8a06-b8b6fe3c4be5"
            },
            "text_ner_node": {
              "name": "text_ner_node",
              "tags": {},
              "properties": {},
              "type": "automl",
              "outputs": {
                "best_model": {
                  "job_output_type": "mlflow_model"
                }
              },
              "resources": {
                "instance_type": "Standard_NC6",
                "properties": {}
              },
              "queue_settings": {
                "job_tier": "spot"
              },
              "log_verbosity": "info",
              "training_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_train_data}}",
              "limits": {
                "max_trials": 1,
                "max_nodes": 1,
                "timeout_minutes": 60
              },
              "validation_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_validation_data}}",
              "task": "text_ner",
              "primary_metric": "accuracy",
              "target_column_name": "label"
            },
            "register_model_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "register_model_node",
              "type": "command",
              "inputs": {
                "model_input_path": {
                  "job_input_type": "literal",
                  "value": "${{parent.jobs.text_ner_node.outputs.best_model}}"
                },
                "model_base_name": {
                  "job_input_type": "literal",
                  "value": "paper_categorization_model"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/10cb54c1-ce9a-4310-9d5e-1c14d72a5b90"
            }
          },
          "outputs": {},
          "settings": {
            "default_compute": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/serverless",
            "_source": "YAML.JOB"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "5638",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:37 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-5fce471fca1abc618a29c3c763c4c935-0fe34a89e9c9a5d6-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "4e288cff-d32c-421a-bd74-7d96e2ceddf9",
        "x-ms-ratelimit-remaining-subscription-writes": "1186",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080938Z:4e288cff-d32c-421a-bd74-7d96e2ceddf9",
        "x-request-time": "1.851"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000",
        "name": "000000000000000000000",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {
            "azureml.DevPlatv2": "true",
            "azureml.DatasetAccessMode": "Asset",
            "azureml.runsource": "azureml.PipelineRun",
            "runSource": "MFE",
            "runType": "HTTP",
            "azureml.parameters": "{}",
            "azureml.continue_on_step_failure": "True",
            "azureml.continue_on_failed_optional_input": "True",
            "azureml.enforceRerun": "False",
            "azureml.defaultComputeName": "serverless",
            "azureml.defaultDataStoreName": "workspaceblobstore",
            "azureml.pipelineComponent": "pipelinerun"
          },
          "displayName": "AutoML with instance type - pipeline serverless compute",
          "status": "Preparing",
          "experimentName": "Serverless-in-Pipeline",
          "services": {
            "Tracking": {
              "jobServiceType": "Tracking",
              "port": null,
              "endpoint": "azureml://eastus2.api.azureml.ms/mlflow/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000?",
              "status": null,
              "errorMessage": null,
              "properties": null,
              "nodes": null
            },
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/000000000000000000000?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000",
              "status": null,
              "errorMessage": null,
              "properties": null,
              "nodes": null
            }
          },
          "computeId": null,
          "isArchived": false,
          "identity": null,
          "componentId": null,
          "notificationSetting": null,
          "secretsConfiguration": null,
          "jobType": "Pipeline",
          "settings": {
            "default_compute": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/serverless",
            "_source": "YAML.JOB"
          },
          "jobs": {
            "preprocessing_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "preprocessing_node",
              "type": "command",
              "inputs": {
                "train_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_training_data}}"
                },
                "validation_data": {
                  "job_input_type": "literal",
                  "value": "${{parent.inputs.text_ner_validation_data}}"
                }
              },
              "outputs": {
                "preprocessed_train_data": {
                  "job_output_type": "mltable"
                },
                "preprocessed_validation_data": {
                  "job_output_type": "mltable"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/c84f1b4b-8811-4a3c-8a06-b8b6fe3c4be5"
            },
            "text_ner_node": {
              "name": "text_ner_node",
              "tags": {},
              "properties": {},
              "type": "automl",
              "outputs": {
                "best_model": {
                  "job_output_type": "mlflow_model"
                }
              },
              "resources": {
                "instance_type": "Standard_NC6",
                "properties": {}
              },
              "queue_settings": {
                "job_tier": "spot"
              },
              "log_verbosity": "info",
              "training_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_train_data}}",
              "limits": {
                "max_trials": 1,
                "max_nodes": 1,
                "timeout_minutes": 60
              },
              "validation_data": "${{parent.jobs.preprocessing_node.outputs.preprocessed_validation_data}}",
              "task": "text_ner",
              "primary_metric": "accuracy",
              "target_column_name": "label"
            },
            "register_model_node": {
              "resources": {
                "instance_type": "Standard_D3_v2"
              },
              "name": "register_model_node",
              "type": "command",
              "inputs": {
                "model_input_path": {
                  "job_input_type": "literal",
                  "value": "${{parent.jobs.text_ner_node.outputs.best_model}}"
                },
                "model_base_name": {
                  "job_input_type": "literal",
                  "value": "paper_categorization_model"
                }
              },
              "_source": "YAML.JOB",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/10cb54c1-ce9a-4310-9d5e-1c14d72a5b90"
            }
          },
          "inputs": {
            "text_ner_training_data": {
              "description": null,
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/training-mltable-folder",
              "mode": "ReadOnlyMount",
              "jobInputType": "mltable"
            },
            "text_ner_validation_data": {
              "description": null,
              "uri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/validation-mltable-folder",
              "mode": "ReadOnlyMount",
              "jobInputType": "mltable"
            }
          },
          "outputs": {},
          "sourceJobId": null
        },
        "systemData": {
          "createdAt": "2023-05-30T08:09:38.1695977\u002B00:00",
          "createdBy": "Chenyang Zhang",
          "createdByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/000000000000000000000/cancel?api-version=2023-04-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "4",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:40 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/eastus2/mfeOperationResults/jc:0bdd51b6-cd9c-4978-b870-99997b393b81:000000000000000000000?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-async-operation-timeout": "PT1H",
        "x-ms-correlation-request-id": "6ead2a6e-b58d-44aa-aa41-1e26bfa03009",
        "x-ms-ratelimit-remaining-subscription-writes": "1196",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080940Z:6ead2a6e-b58d-44aa-aa41-1e26bfa03009",
        "x-request-time": "0.384"
      },
      "ResponseBody": "null"
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/eastus2/mfeOperationResults/jc:0bdd51b6-cd9c-4978-b870-99997b393b81:000000000000000000000?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 30 May 2023 08:09:40 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/eastus2/mfeOperationResults/jc:0bdd51b6-cd9c-4978-b870-99997b393b81:000000000000000000000?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f411afe0-f3ee-44b2-9ea6-570ec5b6cc26",
        "x-ms-ratelimit-remaining-subscription-reads": "11987",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T080941Z:f411afe0-f3ee-44b2-9ea6-570ec5b6cc26",
        "x-request-time": "0.029"
      },
      "ResponseBody": {}
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/eastus2/mfeOperationResults/jc:0bdd51b6-cd9c-4978-b870-99997b393b81:000000000000000000000?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.8.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.12 (Windows-10-10.0.22621-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Tue, 30 May 2023 08:10:11 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-b08559b748e35ef83635742545ee7b38-e35b40ccb3e6ccfd-00\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-eastus2-01",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d03e9ace-e48d-4f2c-9d04-5bafcc4692d0",
        "x-ms-ratelimit-remaining-subscription-reads": "11986",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230530T081011Z:d03e9ace-e48d-4f2c-9d04-5bafcc4692d0",
        "x-request-time": "0.029"
      },
      "ResponseBody": null
    }
  ],
  "Variables": {}
}
