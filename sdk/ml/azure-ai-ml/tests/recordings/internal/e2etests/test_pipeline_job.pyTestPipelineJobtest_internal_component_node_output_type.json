{
  "Entries": [
    {
      "RequestUri": "https://azuremlschemasprod.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-core/1.25.2 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Encoding": "gzip",
        "Content-MD5": "uU\u002ByQWSARp5Gs8TUQXVxrw==",
        "Content-Type": "application/json",
        "Date": "Thu, 30 Mar 2023 02:56:54 GMT",
        "ETag": "\u00220x8DB2CE2040CA717\u0022",
        "Last-Modified": "Sat, 25 Mar 2023 03:35:44 GMT",
        "Transfer-Encoding": "chunked",
        "X-Azure-Ref": "0dvokZAAAAAClr25H5icXRJuh9sDqaZxgVFlPMDFFREdFMjMxOQBhM2RjMTViMS02M2IyLTQ3NjAtOTY5OS1jYjA0ODc3MzlhOTk=",
        "X-Cache": "TCP_HIT",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:56:58 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-9a4fb0b42644a922c432f72e20b6998e-08f841febe37b0a0-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0eb4dac5-8984-4ee6-9097-c9e64a1a9d3b",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025658Z:0eb4dac5-8984-4ee6-9097-c9e64a1a9d3b",
        "x-request-time": "0.124"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "00000stor",
          "containerName": "azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2021-10-27T21:15:23.4100698\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2021-10-27T21:15:24.2140945\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:56:58 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-4c14fdf08106eb160db3dede5f82c25a-0427ed7031596384-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d3aa6809-a69c-42c1-906a-e57a42a30645",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025659Z:d3aa6809-a69c-42c1-906a-e57a42a30645",
        "x-request-time": "0.104"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:56:59 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": "iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAAAAABXZoBIAAAApklEQVR4nGNgGG4gZOf86TYqOCTv/QOCj8egYJUJiqRzkUfR4sf/HgKV/Hr6718PpnZBJz5nZ2dr0Tf/snDaH/z3ohAuObGX/4Nxamz8904Hl5z1z392ODW2/tvNikuO8\u002BwPK5wa6/5twynn/fuDJS454bv/luGSYz7977YyLkm1f/98ccnJP/hXzIhLsvXfPxNccraf8EhW/vt3WwO35HmcUYUFAADoRUgXjdCLBAAAAABJRU5ErkJggg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "ETag": "\u00220x8DB30CA6F228664\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:00 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "udv6YBRBC3o=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/1.png",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "255",
        "Content-MD5": "4soERrkbkp\u002BoJQfBCzPTxw==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": "iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAAAAABXZoBIAAAAxklEQVR4nGNgoDUoqV39//\u002B0WKxyK/\u002BCwS05HHJX\u002Bzb8/VuFKWfy6\u002B8lBR4GtnN/ezAlfX9fkgRSVT/\u002BOmIxVl4IRF78i1USDEq//z3GhUPO5/vf5/a4NDb8/TsBl9yGb3/n8\u002BCQk3z196UyLo3H/v7txSXn9\u002BPvXlyGCp/Ao7Ht79\u002B1uDQy/Pj7VxKXHEhSWwQIWBlYRURUp02bNpkLRRIMVvQvg7KqEZLr/iLAz\u002B/fV5aWWiKZW1ZdXQ3SNLu6WhOn5QMMADeOcLN/VWHoAAAAAElFTkSuQmCC",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "4soERrkbkp\u002BoJQfBCzPTxw==",
        "Date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "ETag": "\u00220x8DB30CA6F3C733F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "GFNu8HXRRJ0=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/2.png",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "181",
        "Content-MD5": "ZFD2PtrWo3KKbhKY8o6U0Q==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": "iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAAAAABXZoBIAAAAfElEQVR4nGNgGARA7V8ubsnwP0G4Jds/4pbT/TINt2TIP3vckqfuc\u002BOUU/h3A7fG\u002BH\u002BHcUv2/PPFKWf59iwHTsma/0txm7r6XyBOOYkX13FrrPg3H7fk9H99uCWf/HPCKWf7G49k77\u002BzzLjkuK7/q8SpkfXYBi7c7qEXAACSSyaQJMO2CwAAAABJRU5ErkJggg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "ZFD2PtrWo3KKbhKY8o6U0Q==",
        "Date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "ETag": "\u00220x8DB30CA6F56AE21\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "JgB64NheC6Y=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/3.png",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "266",
        "Content-MD5": "u9vq0WTYgE2NVJ8dagwc/w==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": "iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAAAAABXZoBIAAAA0UlEQVR4nGNgGGDAPe3vKXlckqq/f//NxiEnehS3ZN6\u002B30DJlbl22CT//gZJ/v59xxhTbtv/v0Dw6h6QwJCzvwvSOdnXruH370w0OYXnQBPvdHIxMMg/\u002B/25kBXDF3tEwMxcoDJldMmTchCm/AkMSYQzFE79/7sERbLn928YE9PYmzBJUXug057JYZecAPTQXVsGrJLb7gIlt6D589bfv56eT/7\u002BBQcTmhxDIThYIcRkdElguEAkn\u002B1V5kKXZLDrg0jiiE\u002BPdb/XunvIYZekGwAAcICQlxrnDN8AAAAASUVORK5CYII=",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "u9vq0WTYgE2NVJ8dagwc/w==",
        "Date": "Thu, 30 Mar 2023 02:57:01 GMT",
        "ETag": "\u00220x8DB30CA6F715E3C\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "EysDbvmWNSg=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/MLTable",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "84",
        "Content-MD5": "MqcWyV2Ifb9O1CFXsVXNBg==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": "cGF0aHM6DQogIC0gZmlsZTogLi8wLnBuZw0KICAtIGZpbGU6IC4vMS5wbmcNCiAgLSBmaWxlOiAuLzIucG5nDQogIC0gZmlsZTogLi8zLnBuZw0K",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "MqcWyV2Ifb9O1CFXsVXNBg==",
        "Date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "ETag": "\u00220x8DB30CA6F7D6A55\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "0CgkdSBqsos=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?comp=metadata",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-meta-name": "mltable_mnist_model",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "2",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Thu, 30 Mar 2023 02:57:00 GMT",
        "ETag": "\u00220x8DB30CA6F9AB20F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist_model/versions/2?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "928",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:02 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist_model/versions/2?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-e599066b3a3c9bf434b45523e3644c4f-74b150c6c572a493-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "c744a7e0-aba5-482c-9d4b-bb5f6a8a4a0d",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025702Z:c744a7e0-aba5-482c-9d4b-bb5f6a8a4a0d",
        "x-request-time": "0.581"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist_model/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2023-03-30T02:57:02.6483189\u002B00:00",
          "createdBy": "Han Wang",
          "createdByType": "User",
          "lastModifiedAt": "2023-03-30T02:57:02.6574903\u002B00:00"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1016",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:03 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "04d6bef9-b0fe-4d5f-a555-0d165d06b45f",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025703Z:04d6bef9-b0fe-4d5f-a555-0d165d06b45f",
        "x-request-time": "0.049"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "Data version mltable_mnist:2 (dataContainerName:version) not found.",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "c4bbc916a3a1a73c7c1f62506ceefc7b",
                  "request": "0984fba60c97bd35"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2023-03-30T02:57:03.2644142\u002B00:00"
              }
            },
            {
              "type": "InnerError",
              "info": {
                "value": {
                  "code": "NotFoundError",
                  "innerError": null
                }
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://azuremlschemasprod.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-core/1.25.2 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Encoding": "gzip",
        "Content-MD5": "uU\u002ByQWSARp5Gs8TUQXVxrw==",
        "Content-Type": "application/json",
        "Date": "Thu, 30 Mar 2023 02:57:03 GMT",
        "ETag": "\u00220x8DB2CE2040CA717\u0022",
        "Last-Modified": "Sat, 25 Mar 2023 03:35:44 GMT",
        "Transfer-Encoding": "chunked",
        "X-Azure-Ref": "0f/okZAAAAADo7YoW5JewSIf6zRlfs/GZVFlPMDFFREdFMjMxOQBhM2RjMTViMS02M2IyLTQ3NjAtOTY5OS1jYjA0ODc3MzlhOTk=",
        "X-Cache": "TCP_HIT",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:03 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-672df9bc3e5766eb56a67a99ac802f49-df8c4ba83fa5266e-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "a4dfdfce-bc12-4448-a55a-df6b1dab36e1",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025703Z:a4dfdfce-bc12-4448-a55a-df6b1dab36e1",
        "x-request-time": "0.096"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "00000stor",
          "containerName": "azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2021-10-27T21:15:23.4100698\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2021-10-27T21:15:24.2140945\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:04 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-1d569427336d18301b46f461aac43353-40f858f38cec5444-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0c5a14f3-4181-49e4-ba0e-ef2aed30174e",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025704Z:0c5a14f3-4181-49e4-ba0e-ef2aed30174e",
        "x-request-time": "0.105"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:03 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 30 Mar 2023 02:57:03 GMT",
        "ETag": "\u00220x8DB30CA6F9AB20F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "mltable_mnist_model",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "2",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:04 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Thu, 30 Mar 2023 02:57:04 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "922",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:05 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-5a8c006ac9766f0b3340b3f08a977c2b-0c98b00849fc8c5c-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "c4698fa5-45dc-4098-89fb-d124d61239d3",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025705Z:c4698fa5-45dc-4098-89fb-d124d61239d3",
        "x-request-time": "0.207"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2023-03-30T02:57:05.4722764\u002B00:00",
          "createdBy": "Han Wang",
          "createdByType": "User",
          "lastModifiedAt": "2023-03-30T02:57:05.5190548\u002B00:00"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1029",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:06 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "183db348-ea03-4a33-aa5f-edbeaaa3cce4",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025706Z:183db348-ea03-4a33-aa5f-edbeaaa3cce4",
        "x-request-time": "0.050"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "Data version mltable_imdb_reviews_train:2 (dataContainerName:version) not found.",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "cfc1cd08283a4dd37c4826bcdebebc98",
                  "request": "ba151f8e1bce6d31"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2023-03-30T02:57:06.0122493\u002B00:00"
              }
            },
            {
              "type": "InnerError",
              "info": {
                "value": {
                  "code": "NotFoundError",
                  "innerError": null
                }
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://azuremlschemasprod.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-core/1.25.2 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Encoding": "gzip",
        "Content-MD5": "uU\u002ByQWSARp5Gs8TUQXVxrw==",
        "Content-Type": "application/json",
        "Date": "Thu, 30 Mar 2023 02:57:06 GMT",
        "ETag": "\u00220x8DB2CE2040CA717\u0022",
        "Last-Modified": "Sat, 25 Mar 2023 03:35:44 GMT",
        "Transfer-Encoding": "chunked",
        "X-Azure-Ref": "0gvokZAAAAACHumtgpgDSTIL58RuEtzj4VFlPMDFFREdFMjMxOQBhM2RjMTViMS02M2IyLTQ3NjAtOTY5OS1jYjA0ODc3MzlhOTk=",
        "X-Cache": "TCP_HIT",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:06 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-aa11ed963c79af23206d746124506650-9064451f8ffd0469-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8deb00c2-c073-4bdf-bc86-e275e8839237",
        "x-ms-ratelimit-remaining-subscription-reads": "11995",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025706Z:8deb00c2-c073-4bdf-bc86-e275e8839237",
        "x-request-time": "0.105"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "00000stor",
          "containerName": "azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2021-10-27T21:15:23.4100698\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2021-10-27T21:15:24.2140945\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:07 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-0e5f1a4ee4dc9d6688b34c5cf5a6f423-3f2a0a431c1107b0-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "6acf2174-57ed-4735-aa17-d2e994db9cd2",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025707Z:6acf2174-57ed-4735-aa17-d2e994db9cd2",
        "x-request-time": "0.121"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:06 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 30 Mar 2023 02:57:06 GMT",
        "ETag": "\u00220x8DB30CA6F9AB20F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "mltable_mnist_model",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "2",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:07 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Thu, 30 Mar 2023 02:57:07 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "935",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:08 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-63d568bea21b40f5a417d371b2c06787-0dfcf8571d700d92-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "147a7150-452b-4582-ac79-5256bef7aa5c",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025708Z:147a7150-452b-4582-ac79-5256bef7aa5c",
        "x-request-time": "0.192"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2023-03-30T02:57:08.3592569\u002B00:00",
          "createdBy": "Han Wang",
          "createdByType": "User",
          "lastModifiedAt": "2023-03-30T02:57:08.3747283\u002B00:00"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1019",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:08 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "4e587225-6d4f-4e14-92f1-b8208e7d88b9",
        "x-ms-ratelimit-remaining-subscription-reads": "11994",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025708Z:4e587225-6d4f-4e14-92f1-b8208e7d88b9",
        "x-request-time": "0.038"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "Data version mltable_Adls_Tsv:2 (dataContainerName:version) not found.",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "74a70683be33fa68a1debeec71dc61c0",
                  "request": "f87c815206beb687"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2023-03-30T02:57:08.8558331\u002B00:00"
              }
            },
            {
              "type": "InnerError",
              "info": {
                "value": {
                  "code": "NotFoundError",
                  "innerError": null
                }
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://azuremlschemasprod.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-core/1.25.2 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Encoding": "gzip",
        "Content-MD5": "uU\u002ByQWSARp5Gs8TUQXVxrw==",
        "Content-Type": "application/json",
        "Date": "Thu, 30 Mar 2023 02:57:09 GMT",
        "ETag": "\u00220x8DB2CE2040CA717\u0022",
        "Last-Modified": "Sat, 25 Mar 2023 03:35:44 GMT",
        "Transfer-Encoding": "chunked",
        "X-Azure-Ref": "0hfokZAAAAACfHA44lvkbS7gy6pnMA5\u002BhVFlPMDFFREdFMjMxOQBhM2RjMTViMS02M2IyLTQ3NjAtOTY5OS1jYjA0ODc3MzlhOTk=",
        "X-Cache": "TCP_HIT",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:09 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-f0d37ef69df31641348932b13545315d-1426530b7a63c27a-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "342f6a5c-e3be-4d95-8ed9-67d038b01614",
        "x-ms-ratelimit-remaining-subscription-reads": "11993",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025709Z:342f6a5c-e3be-4d95-8ed9-67d038b01614",
        "x-request-time": "0.114"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "00000stor",
          "containerName": "azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2021-10-27T21:15:23.4100698\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2021-10-27T21:15:24.2140945\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:09 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-eafd1da434a6cc6d3aa72ef5970ed764-6e1237bfe3b370a8-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ce460f5e-e8ae-4648-af12-c4eeaef8fe3d",
        "x-ms-ratelimit-remaining-subscription-writes": "1196",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025710Z:ce460f5e-e8ae-4648-af12-c4eeaef8fe3d",
        "x-request-time": "0.090"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:09 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 30 Mar 2023 02:57:09 GMT",
        "ETag": "\u00220x8DB30CA6F9AB20F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "mltable_mnist_model",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "2",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:09 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Thu, 30 Mar 2023 02:57:09 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "925",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:10 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-7fd59ea4a998837b2487401b545c730b-2e8c98398006db74-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "bcbdde3f-7172-4987-bdfa-a85c1f96a140",
        "x-ms-ratelimit-remaining-subscription-writes": "1196",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025711Z:bcbdde3f-7172-4987-bdfa-a85c1f96a140",
        "x-request-time": "0.164"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2023-03-30T02:57:11.0075952\u002B00:00",
          "createdBy": "Han Wang",
          "createdByType": "User",
          "lastModifiedAt": "2023-03-30T02:57:11.0198307\u002B00:00"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1044",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:11 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "842acd5c-fd6e-4323-abfb-6be36d2960d9",
        "x-ms-ratelimit-remaining-subscription-reads": "11992",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025711Z:842acd5c-fd6e-4323-abfb-6be36d2960d9",
        "x-request-time": "0.036"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "Data version mltable_aml_component_datatransfer_folder:2 (dataContainerName:version) not found.",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "cc8d9d59c9c329dc2bc79eebc941df16",
                  "request": "8f9b90ee4d7ca180"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2023-03-30T02:57:11.5194951\u002B00:00"
              }
            },
            {
              "type": "InnerError",
              "info": {
                "value": {
                  "code": "NotFoundError",
                  "innerError": null
                }
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://azuremlschemasprod.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-core/1.25.2 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Encoding": "gzip",
        "Content-MD5": "uU\u002ByQWSARp5Gs8TUQXVxrw==",
        "Content-Type": "application/json",
        "Date": "Thu, 30 Mar 2023 02:57:11 GMT",
        "ETag": "\u00220x8DB2CE2040CA717\u0022",
        "Last-Modified": "Sat, 25 Mar 2023 03:35:44 GMT",
        "Transfer-Encoding": "chunked",
        "X-Azure-Ref": "0h/okZAAAAAA8PcGzprNdQ5XuYHkm7F5FVFlPMDFFREdFMjMxOQBhM2RjMTViMS02M2IyLTQ3NjAtOTY5OS1jYjA0ODc3MzlhOTk=",
        "X-Cache": "TCP_HIT",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:12 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-28a83fe37a0c991419437f0a0843c810-87c08b77f7ebba1b-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "17436bbd-c574-4f9d-9bf3-08d71fdd3063",
        "x-ms-ratelimit-remaining-subscription-reads": "11991",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025712Z:17436bbd-c574-4f9d-9bf3-08d71fdd3063",
        "x-request-time": "0.096"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "00000stor",
          "containerName": "azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2021-10-27T21:15:23.4100698\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2021-10-27T21:15:24.2140945\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:12 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-68e3ec3b13195c6794970a025796b68d-a40c42c311f90cf4-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "a760ce79-072d-482c-8cb2-59d30904a2e3",
        "x-ms-ratelimit-remaining-subscription-writes": "1195",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025712Z:a760ce79-072d-482c-8cb2-59d30904a2e3",
        "x-request-time": "0.090"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:12 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 30 Mar 2023 02:57:12 GMT",
        "ETag": "\u00220x8DB30CA6F9AB20F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "mltable_mnist_model",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "2",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:12 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Thu, 30 Mar 2023 02:57:12 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "950",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:13 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-440ede5570514b0d0931476ee98b0155-325641bcc17da86b-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "6999cada-5237-4ef8-9d55-5d74d39c3c3d",
        "x-ms-ratelimit-remaining-subscription-writes": "1195",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025713Z:6999cada-5237-4ef8-9d55-5d74d39c3c3d",
        "x-request-time": "0.220"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2023-03-30T02:57:13.6705811\u002B00:00",
          "createdBy": "Han Wang",
          "createdByType": "User",
          "lastModifiedAt": "2023-03-30T02:57:13.6834149\u002B00:00"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1018",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:14 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "08ef68e5-c83e-4f11-8352-964f8eaef38e",
        "x-ms-ratelimit-remaining-subscription-reads": "11990",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025714Z:08ef68e5-c83e-4f11-8352-964f8eaef38e",
        "x-request-time": "0.037"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "Data version mltable_reghits:2 (dataContainerName:version) not found.",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "27e6fb6109ddacd3571b1fb39a9e602b",
                  "request": "3252330e07295d16"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2023-03-30T02:57:14.2094006\u002B00:00"
              }
            },
            {
              "type": "InnerError",
              "info": {
                "value": {
                  "code": "NotFoundError",
                  "innerError": null
                }
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://azuremlschemasprod.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-core/1.25.2 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Encoding": "gzip",
        "Content-MD5": "uU\u002ByQWSARp5Gs8TUQXVxrw==",
        "Content-Type": "application/json",
        "Date": "Thu, 30 Mar 2023 02:57:14 GMT",
        "ETag": "\u00220x8DB2CE2040CA717\u0022",
        "Last-Modified": "Sat, 25 Mar 2023 03:35:44 GMT",
        "Transfer-Encoding": "chunked",
        "X-Azure-Ref": "0ivokZAAAAAC1yKDQNSrlSpa4VAfJBB\u002BjVFlPMDFFREdFMjMxOQBhM2RjMTViMS02M2IyLTQ3NjAtOTY5OS1jYjA0ODc3MzlhOTk=",
        "X-Cache": "TCP_HIT",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:14 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-2e891c8f673cc7ddfa7a0e6b1b77138a-87aa5d679c45514b-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "e3fd45b4-7df9-40bf-865d-d8df46889e92",
        "x-ms-ratelimit-remaining-subscription-reads": "11989",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025714Z:e3fd45b4-7df9-40bf-865d-d8df46889e92",
        "x-request-time": "0.108"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "00000stor",
          "containerName": "azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2021-10-27T21:15:23.4100698\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2021-10-27T21:15:24.2140945\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:15 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-50dbf0b55108d09d89f3cc0c8fea3e98-9995b812fa09ed59-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "a66e3615-c384-49b5-b689-260e00611df5",
        "x-ms-ratelimit-remaining-subscription-writes": "1194",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025715Z:a66e3615-c384-49b5-b689-260e00611df5",
        "x-request-time": "0.113"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:14 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 30 Mar 2023 02:57:14 GMT",
        "ETag": "\u00220x8DB30CA6F9AB20F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "mltable_mnist_model",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "2",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:15 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Thu, 30 Mar 2023 02:57:15 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "924",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:16 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-68a03b119a25a296ec85f03a906edbcf-fd0989a3f61b58b4-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f4f1b006-79d8-4d34-a34c-59a8ee6e1051",
        "x-ms-ratelimit-remaining-subscription-writes": "1194",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025716Z:f4f1b006-79d8-4d34-a34c-59a8ee6e1051",
        "x-request-time": "0.190"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2023-03-30T02:57:16.4103376\u002B00:00",
          "createdBy": "Han Wang",
          "createdByType": "User",
          "lastModifiedAt": "2023-03-30T02:57:16.4644593\u002B00:00"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1033",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:16 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "508a98ee-eac6-4acb-8965-ec07ffa62781",
        "x-ms-ratelimit-remaining-subscription-reads": "11988",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025717Z:508a98ee-eac6-4acb-8965-ec07ffa62781",
        "x-request-time": "0.034"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "Data version mltable_starlite_sample_output:2 (dataContainerName:version) not found.",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "896a10298e36a0ea7c4a0e74508c4ef9",
                  "request": "0e6868c8c13f9227"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus2"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2023-03-30T02:57:16.9201233\u002B00:00"
              }
            },
            {
              "type": "InnerError",
              "info": {
                "value": {
                  "code": "NotFoundError",
                  "innerError": null
                }
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://azuremlschemasprod.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-core/1.25.2 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Encoding": "gzip",
        "Content-MD5": "uU\u002ByQWSARp5Gs8TUQXVxrw==",
        "Content-Type": "application/json",
        "Date": "Thu, 30 Mar 2023 02:57:17 GMT",
        "ETag": "\u00220x8DB2CE2040CA717\u0022",
        "Last-Modified": "Sat, 25 Mar 2023 03:35:44 GMT",
        "Transfer-Encoding": "chunked",
        "X-Azure-Ref": "0jfokZAAAAACINMvcpvQ9SZ89serXEfmiVFlPMDFFREdFMjMxOQBhM2RjMTViMS02M2IyLTQ3NjAtOTY5OS1jYjA0ODc3MzlhOTk=",
        "X-Cache": "TCP_HIT",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2022-10-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:17 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-ca7ced4020bd3a0be64898bd09919cfb-d95e5bcc514653cd-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": [
          "Accept-Encoding",
          "Accept-Encoding"
        ],
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "85109f34-3e50-40b4-b108-eb3ea17bd705",
        "x-ms-ratelimit-remaining-subscription-reads": "11987",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025717Z:85109f34-3e50-40b4-b108-eb3ea17bd705",
        "x-request-time": "0.114"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "datastoreType": "AzureBlob",
          "accountName": "00000stor",
          "containerName": "azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2021-10-27T21:15:23.4100698\u002B00:00",
          "createdBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "createdByType": "Application",
          "lastModifiedAt": "2021-10-27T21:15:24.2140945\u002B00:00",
          "lastModifiedBy": "779301c0-18b2-4cdc-801b-a0a3368fee0a",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2022-10-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-81dfe8b0c5477f2592cb1b5706738e26-ecccfe6da7800740-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0bd7887b-1dd2-43b5-a135-e3ed0ae71bc0",
        "x-ms-ratelimit-remaining-subscription-writes": "1193",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025718Z:0bd7887b-1dd2-43b5-a135-e3ed0ae71bc0",
        "x-request-time": "0.108"
      },
      "ResponseBody": {
        "secretsType": "AccountKey",
        "key": "dGhpcyBpcyBmYWtlIGtleQ=="
      }
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/LocalUpload/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:17 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Thu, 30 Mar 2023 02:57:17 GMT",
        "ETag": "\u00220x8DB30CA6F9AB20F\u0022",
        "Last-Modified": "Thu, 30 Mar 2023 02:57:01 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Vary": "Origin",
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Thu, 30 Mar 2023 02:57:00 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "mltable_mnist_model",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "2",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://00000stor.blob.core.windows.net/azureml-blobstore-165bd9a2-3d91-4351-9f86-a2416720ee4e/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.13.1 Python/3.8.13 (Windows-10-10.0.19045-SP0)",
        "x-ms-date": "Thu, 30 Mar 2023 02:57:18 GMT",
        "x-ms-version": "2021-08-06"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Thu, 30 Mar 2023 02:57:17 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "Vary": "Origin",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2021-08-06"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2?api-version=2022-10-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.6.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.8.13 (Windows-10-10.0.19045-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "939",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Mar 2023 02:57:19 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2?api-version=2022-10-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Server-Timing": "traceparent;desc=\u002200-7e49e5d7544298d382141644c52e78b9-dde897b3fe2c7789-01\u0022",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus2-02",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d8da46d7-893a-4394-9820-9a0f8a4ca009",
        "x-ms-ratelimit-remaining-subscription-writes": "1193",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "JAPANEAST:20230330T025719Z:d8da46d7-893a-4394-9820-9a0f8a4ca009",
        "x-request-time": "0.155"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2023-03-30T02:57:19.3638213\u002B00:00",
          "createdBy": "Han Wang",
          "createdByType": "User",
          "lastModifiedAt": "2023-03-30T02:57:19.3771207\u002B00:00"
        }
      }
    }
  ],
  "Variables": {}
}
