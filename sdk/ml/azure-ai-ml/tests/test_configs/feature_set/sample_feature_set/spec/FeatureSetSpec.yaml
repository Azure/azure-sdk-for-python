$schema: http://azureml/sdk-2-0/FeatureSetSpec.json

# Registered mltable assets can also be referenced: `source: "mymltable:1"`
source:
  type: mltable
  path: abfss://container@storage.dfs.core.windows.net/data_sources/customer_transactions/mltable
  timestamp_column:
    name: timestamp
    format: "%Y-%m-%d %H:%M:%S"
  source_delay:
    days: 1
    hours: 0
    minutes: 0
feature_transformation_code: # This transformation logic will be applied on the source to generate features
  path: ./code # folder.
  transformer_class: foo.CustomerTransactionsTransformer # a spark ml transformer class. You can expose class via __init__.py
features: # schema and properties of features generated by the feature_transformation_code
  - name: transactions_6hr_sum
    type: integer # allowed values of datatype are from mlflow: https://www.mlflow.org/docs/latest/python_api/mlflow.types.html#mlflow.types.DataType
    tags: {"feature-type":"customer_transaction"}
    description: "customer rolling 6 hour transaction count"
  - name: transactions_1day_sum
    type: integer
    tags: {"feature-type":"customer_transaction"}
    description: "customer rolling 6 hour transaction count"
  - name: spend_6hr_sum
    type: float
  - name: spend_1day_sum
    type: float
  - name: is_sunny
    type: boolean
index_columns:
  - name: customer_id
    type: string
source_lookback: # [Optional] Window of source data fed to the feature transformation function. This is needed for e.g. to calculate 30 day aggregate
  days: 30
  hours: 0
  minutes: 0
temporal_join_lookback: # [Optional] Tolerance of the temporal join when the event data is joined with featureset
  days: 2
  hours: 0
  minutes: 0