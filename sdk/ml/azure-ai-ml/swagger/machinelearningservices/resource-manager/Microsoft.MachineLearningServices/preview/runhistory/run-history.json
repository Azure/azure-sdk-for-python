{
  "openapi": "3.0.1",
  "info": {
    "title": "Run History APIs",
    "version": "v1.0"
  },
  "paths": {
    "/history/v1.0/private/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/deleteConfiguration": {
      "patch": {
        "tags": [
          "Delete"
        ],
        "operationId": "Delete_PatchConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteConfiguration"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Delete"
        ],
        "operationId": "Delete_GetConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteConfiguration"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/batch/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_BatchPostByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchEventCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchEventCommandResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/batch/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_BatchPostByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchEventCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchEventCommandResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batch/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_BatchPost",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchEventCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchEventCommandResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_PostByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_PostByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_Post",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}": {
      "get": {
        "tags": [
          "Experiments"
        ],
        "summary": "Get details of an Experiment.",
        "description": "Get details of an Experiment with specific Experiment name.",
        "operationId": "Experiments_Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The experiment name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the Experiment are returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Experiments"
        ],
        "summary": "Create an Experiment.",
        "description": "Create a new Experiment.",
        "operationId": "Experiments_Create",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentName",
            "in": "path",
            "description": "The experiment name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Experiment is created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}": {
      "get": {
        "tags": [
          "Experiments"
        ],
        "summary": "Get details of an Experiment.",
        "description": "Get details of an Experiment with specific Experiment Id.",
        "operationId": "Experiments_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "description": "The identifier of the experiment.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Experiments"
        ],
        "summary": "Update details of an Experiment.",
        "description": "Update details of an Experiment with specific Experiment Id.",
        "operationId": "Experiments_Update",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "description": "The identifier of the experiment.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Experiment details which needs to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyExperiment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Experiments"
        ],
        "summary": "Delete an Experiment.",
        "description": "Delete an existing Empty Experiment.",
        "operationId": "Experiments_Delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "description": "The identifier of the experiment.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Long running operation has been accepted and the URI in the Location header should be polled for completion.",
            "headers": {
              "Location": {
                "description": "URI to poll for long running operation result",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Response when operation is complete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongRunningNullResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments:query": {
      "post": {
        "tags": [
          "Experiments"
        ],
        "summary": "Get all Experiments in a specific workspace.",
        "description": "Get all experiments in a specific workspace with the specified query filters.",
        "operationId": "Experiments_GetByQuery",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "urlSafeExperimentNamesOnly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Query parameters for data sorting and filtering.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentQueryParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedExperimentList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/tags:delete": {
      "post": {
        "tags": [
          "Experiments"
        ],
        "summary": "Delete list of Tags in an Experiment.",
        "description": "Delete list of Tags from a specific Experiment Id.",
        "operationId": "Experiments_DeleteTags",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "description": "The identifier of the experiment.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The requested tags list to be deleted.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTagsCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteExperimentTagsResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metric/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/full": {
      "post": {
        "tags": [
          "Metric"
        ],
        "summary": "API to retrieve the full-fidelity sequence associated with a particular run and metricName",
        "operationId": "Metric_GetFullFidelityMetric",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveFullFidelityMetricRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricV2"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metric/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/list": {
      "post": {
        "tags": [
          "Metric"
        ],
        "summary": "API to list metric for a particular datacontainer and metricName",
        "operationId": "Metric_ListMetric",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMetricDefinitionList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/metric/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/azuremonitor/list": {
      "post": {
        "tags": [
          "Metric"
        ],
        "summary": "API to list workspace/subworkspace resource metrics for a particular ResourceId",
        "operationId": "Metric_ListGenericResourceMetrics",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListGenericResourceMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMetricDefinitionList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/metric/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/sample": {
      "post": {
        "tags": [
          "Metric"
        ],
        "summary": "Stub for future action\r\nAPI to retrieve samples for one or many runs to compare a given metricName\r\nThrow if schemas don't match across metrics",
        "operationId": "Metric_GetSampledMetric",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSampledMetricRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricSample"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metric/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/batch": {
      "post": {
        "tags": [
          "Metric"
        ],
        "summary": "Post Metrics to a Run.",
        "description": "Post Metrics to a specific Run Id.",
        "operationId": "Metric_PostRunMetrics",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchIMetricV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Run Metrics are posted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostRunMetricsResult"
                }
              }
            }
          },
          "207": {
            "description": "The Run Metrics are posted successfully depending on the response. Reponse contains information on metrics that were not written;\r\n                metrics that were successfully written are not included.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostRunMetricsResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metric/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentId}/containers/{dataContainerId}/deleteMetrics": {
      "delete": {
        "tags": [
          "Metric"
        ],
        "summary": "API to delete metrics by data container id",
        "operationId": "Metric_DeleteMetricsByDataContainerId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataContainerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Long running operation has been accepted and the URI in the Location header should be polled for completion.",
            "headers": {
              "Location": {
                "description": "URI to poll for long running operation result",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Response when operation is complete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongRunningNullResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/metric/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/deleteMetrics": {
      "delete": {
        "tags": [
          "Metric"
        ],
        "summary": "API to delete metrics by run id",
        "operationId": "Metric_DeleteMetricsByRunId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Long running operation has been accepted and the URI in the Location header should be polled for completion.",
            "headers": {
              "Location": {
                "description": "URI to poll for long running operation result",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {}
            }
          },
          "200": {
            "description": "Response when operation is complete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongRunningNullResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/children": {
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetChildByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "schema": {
              "type": "string",
              "example": "Color=red"
            },
            "example": "Color=red"
          },
          {
            "name": "$continuationtoken",
            "in": "query",
            "description": "The continuation token to use for getting the next set of resources.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$sortorder",
            "in": "query",
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "schema": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SortOrderDirection",
                "modelAsString": false
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            },
            "example": 100
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRunList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/children": {
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetChildByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "schema": {
              "type": "string",
              "example": "Color=red"
            },
            "example": "Color=red"
          },
          {
            "name": "$continuationtoken",
            "in": "query",
            "description": "The continuation token to use for getting the next set of resources.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$sortorder",
            "in": "query",
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "schema": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SortOrderDirection",
                "modelAsString": false
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            },
            "example": 100
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRunList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/children": {
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetChild",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "schema": {
              "type": "string",
              "example": "Color=red"
            },
            "example": "Color=red"
          },
          {
            "name": "$continuationtoken",
            "in": "query",
            "description": "The continuation token to use for getting the next set of resources.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$sortorder",
            "in": "query",
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "schema": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SortOrderDirection",
                "modelAsString": false
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            },
            "example": 100
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRunList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/details": {
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetDetailsByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/details": {
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetDetailsByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/details": {
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/rundata": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetRunData",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRunDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRunDataResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchrundata": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_BatchGetRunData",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResult_1"
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResult_1"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/batch/runs": {
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_BatchAddOrModifyByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchAddOrModifyRunRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRunResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/batch/runs": {
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_BatchAddOrModifyByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchAddOrModifyRunRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRunResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}": {
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_AddOrModifyByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][\\w-]{0,255}$",
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRun"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}": {
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_AddOrModifyByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][\\w-]{0,255}$",
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRun"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}": {
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_AddOrModifyExperiment",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][\\w-]{0,255}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRun"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_Add",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][\\w-]{0,255}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRun"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/tags": {
      "delete": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_DeleteTagsByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_ModifyOrDeleteTagsByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrModifyTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/tags": {
      "delete": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_DeleteTagsByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_ModifyOrDeleteTagsByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrModifyTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/tags": {
      "delete": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_DeleteTags",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/services": {
      "delete": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_DeleteRunServicesByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRunServices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/services": {
      "delete": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_DeleteRunServicesByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRunServices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/services": {
      "delete": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_DeleteRunServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRunServices"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/serviceinstances/{nodeId}": {
      "patch": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_AddOrModifyRunServiceInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrModifyRunServiceInstancesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunServiceInstances"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetRunServiceInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunServiceInstances"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs:query": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetByQueryByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRunList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs:query": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetByQueryByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRunList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/runIds": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetByIdsByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRunsByIds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRunResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/runIds": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_GetByIdsByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRunsByIds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchRunResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/cancel": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_CancelRunWithUriByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CancelationReason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/cancel": {
      "post": {
        "tags": [
          "Run"
        ],
        "operationId": "Runs_CancelRunWithUriByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CancelationReason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_ListInContainerByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedArtifactList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/artifacts": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_ListInContainerByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedArtifactList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/path": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_ListInPathByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedArtifactList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/artifacts/path": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_ListInPathByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedArtifactList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/metadata": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_GetByIdByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artifact"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/artifacts/metadata": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_GetByIdByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artifact"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/contentinfo": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_GetContentInformationByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactContentInformation"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/artifacts/contentinfo": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_GetContentInformationByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactContentInformation"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/artifacturi": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_GetSasUriByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/artifacts/artifacturi": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_GetSasUriByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/prefix/contentinfo": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_ListSasByPrefixByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedArtifactContentInformationList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/artifacts/prefix/contentinfo": {
      "get": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_ListSasByPrefixByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedArtifactContentInformationList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/batch/metadata": {
      "post": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_BatchCreateEmptyArtifactsByExperimentName",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactPathList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchArtifactContentInformationResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/runs/{runId}/artifacts/batch/metadata": {
      "post": {
        "tags": [
          "RunArtifacts"
        ],
        "operationId": "RunArtifacts_BatchCreateEmptyArtifactsByExperimentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactPathList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchArtifactContentInformationResult"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/metrics/{metricId}": {
      "get": {
        "tags": [
          "RunMetrics"
        ],
        "operationId": "Metric_GetMetricDetailsByExperimentName",
        "summary": "Get Metric details.",
        "description": "Get Metric details for a specific Metric Id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "metricId",
            "in": "path",
            "description": "The identifier for a Metric.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "experimentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunMetric"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/metrics/{metricId}": {
      "get": {
        "tags": [
          "RunMetrics"
        ],
        "operationId": "Metric_GetMetricDetailsByExperimentId",
        "summary": "Get Metric details.",
        "description": "Get Metric details for a specific Metric Id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "metricId",
            "in": "path",
            "description": "The identifier for a Metric.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunMetric"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/runs": {
      "get": {
        "tags": [
          "RunsByCompute"
        ],
        "operationId": "Run_ListByCompute",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "schema": {
              "type": "string",
              "example": "Color=red"
            },
            "example": "Color=red"
          },
          {
            "name": "$continuationtoken",
            "in": "query",
            "description": "The continuation token to use for getting the next set of resources.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$sortorder",
            "in": "query",
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "schema": {
              "enum": [
                "Asc",
                "Desc"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SortOrderDirection",
                "modelAsString": false
              }
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 100
            },
            "example": 100
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRunList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/private/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/spans": {
      "post": {
        "tags": [
          "RunStatusSpan"
        ],
        "operationId": "Spans_Post",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunStatusSpans"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "RunStatusSpan"
        ],
        "operationId": "Spans_List",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSpanDefinition_1List"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/history/v1.0/private/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/runs/{runId}/spans/active": {
      "get": {
        "tags": [
          "RunStatusSpan"
        ],
        "operationId": "Spans_GetActive",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/workspaceNameParameter"
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSpanDefinition_1List"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddOrModifyRunServiceInstancesRequest": {
        "type": "object",
        "properties": {
          "instances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ServiceInstance"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Artifact": {
        "required": [
          "container",
          "origin",
          "path"
        ],
        "type": "object",
        "properties": {
          "artifactId": {
            "type": "string",
            "description": "The identifier of an Artifact. Format of ArtifactId - {Origin}/{Container}/{Path}.",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "The origin of the Artifact creation request. Available origins are 'ExperimentRun', 'LocalUpload', 'WebUpload', 'Dataset' and 'Unknown'."
          },
          "container": {
            "type": "string",
            "description": "The name of container. Artifacts can be grouped by container."
          },
          "path": {
            "type": "string",
            "description": "The path to the Artifact in a container."
          },
          "etag": {
            "type": "string",
            "description": "The Etag of the Artifact.",
            "nullable": true
          },
          "createdTime": {
            "type": "string",
            "description": "The Date and Time at which the Artifact is created. The DateTime is in UTC.",
            "format": "date-time"
          },
          "dataPath": {
            "$ref": "#/components/schemas/ArtifactDataPath"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of an Artifact."
      },
      "ArtifactContentInformation": {
        "type": "object",
        "properties": {
          "contentUri": {
            "type": "string",
            "description": "The URI of the content.",
            "format": "uri",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "description": "The origin of the Artifact creation request. Available origins are 'ExperimentRun', 'LocalUpload', 'WebUpload', 'Dataset', 'ComputeRecord', 'Metric', and 'Unknown'.",
            "nullable": true
          },
          "container": {
            "type": "string",
            "description": "The name of container. Artifacts can be grouped by container.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "The path to the Artifact in a container.",
            "nullable": true
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags on the artifact",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of an Artifact Content Information."
      },
      "ArtifactDataPath": {
        "type": "object",
        "properties": {
          "dataStoreName": {
            "type": "string",
            "nullable": true
          },
          "relativePath": {
            "type": "string",
            "nullable": true
          },
          "sqlDataPath": {
            "$ref": "#/components/schemas/SqlDataPath"
          }
        },
        "additionalProperties": false
      },
      "ArtifactPath": {
        "required": [
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The path to the Artifact in a container."
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of an Artifact Path."
      },
      "ArtifactPathList": {
        "required": [
          "paths"
        ],
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtifactPath"
            },
            "description": "List of Artifact Paths.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains list of Artifact Paths."
      },
      "BaseEvent": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Base event is the envelope used to post event data to the Event controller"
      },
      "BatchAddOrModifyRunRequest": {
        "type": "object",
        "properties": {
          "runs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRun"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchArtifactContentInformationResult": {
        "type": "object",
        "properties": {
          "artifacts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Artifact"
            },
            "description": "Artifact details of the Artifact Ids requested.",
            "nullable": true
          },
          "artifactContentInformation": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ArtifactContentInformation"
            },
            "description": "Artifact Content Information details of the Artifact Ids requested.",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "description": "Errors occurred while fetching the requested Artifact Ids.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Results of the Batch Artifact Content Information request."
      },
      "BatchEventCommand": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchEventCommandResult": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairBaseEventErrorResponse"
            },
            "nullable": true
          },
          "successes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchIMetricV2": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IMetricV2"
            },
            "nullable": true
          },
          "reportErrors": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BatchRequest_1": {
        "type": "object",
        "properties": {
          "requests": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GetRunDataRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchResult_1": {
        "type": "object",
        "properties": {
          "successfulResults": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/GetRunDataResult"
            },
            "nullable": true
          },
          "failedResults": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchRunResult": {
        "type": "object",
        "properties": {
          "runs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Run"
            },
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Compute": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "nullable": true
          },
          "targetType": {
            "type": "string",
            "nullable": true
          },
          "vmSize": {
            "type": "string",
            "nullable": true
          },
          "instanceCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gpuCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComputeRequest": {
        "type": "object",
        "properties": {
          "nodeCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gpuCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedFrom": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Notebook"
            ],
            "type": "string",
            "nullable": true,
            "x-ms-enum": {
              "name": "CreatedFromType",
              "modelAsString": false
            }
          },
          "locationType": {
            "enum": [
              "ArtifactId"
            ],
            "type": "string",
            "nullable": true,
            "x-ms-enum": {
              "name": "CreatedFromLocationType",
              "modelAsString": false
            }
          },
          "location": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRun": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "description": "The identifier for the run. Run IDs must be less than 256 characters and contain only alphanumeric characters with dashes and underscores.",
            "nullable": true
          },
          "parentRunId": {
            "type": "string",
            "description": "The parent of the run if the run is hierarchical; otherwise, Null.",
            "nullable": true
          },
          "experimentId": {
            "type": "string",
            "description": "The Id of the experiment that created this run.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The status of the run. The Status string value maps to the RunStatus Enum.",
            "nullable": true
          },
          "startTimeUtc": {
            "type": "string",
            "description": "The start time of the run in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "endTimeUtc": {
            "type": "string",
            "description": "The end time of the run in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/RunOptions"
          },
          "isVirtual": {
            "type": "boolean",
            "description": "A virtual run can set an active child run that will override the virtual run status and properties"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataContainerId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "nullable": true
          },
          "runType": {
            "type": "string",
            "nullable": true
          },
          "runTypeV2": {
            "$ref": "#/components/schemas/RunTypeV2"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "actionUris": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "scriptName": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "uniqueChildRunComputeTargets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "services": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EndpointSetting"
            },
            "nullable": true
          },
          "inputDatasets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasetLineage"
            },
            "nullable": true
          },
          "outputDatasets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputDatasetLineage"
            },
            "nullable": true
          },
          "runDefinition": {
            "nullable": true
          },
          "jobSpecification": {
            "nullable": true
          },
          "primaryMetricName": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "$ref": "#/components/schemas/CreatedFrom"
          },
          "cancelUri": {
            "type": "string",
            "nullable": true
          },
          "completeUri": {
            "type": "string",
            "nullable": true
          },
          "diagnosticsUri": {
            "type": "string",
            "nullable": true
          },
          "computeRequest": {
            "$ref": "#/components/schemas/ComputeRequest"
          },
          "compute": {
            "$ref": "#/components/schemas/Compute"
          },
          "retainForLifetimeOfWorkspace": {
            "type": "boolean",
            "nullable": true
          },
          "queueingInfo": {
            "$ref": "#/components/schemas/QueueingInfo"
          },
          "activeChildRunId": {
            "type": "string",
            "description": "The RunId of the active child on a virtual run",
            "nullable": true
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TypedAssetReference"
            },
            "nullable": true
          },
          "outputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TypedAssetReference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatasetIdentifier": {
        "type": "object",
        "properties": {
          "savedId": {
            "type": "string",
            "nullable": true
          },
          "registeredId": {
            "type": "string",
            "nullable": true
          },
          "registeredVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatasetInputDetails": {
        "type": "object",
        "properties": {
          "inputName": {
            "type": "string",
            "nullable": true
          },
          "mechanism": {
            "enum": [
              "Direct",
              "Mount",
              "Download",
              "Hdfs"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DatasetDeliveryMechanism",
              "modelAsString": false
            }
          },
          "pathOnCompute": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatasetLineage": {
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/DatasetIdentifier"
          },
          "consumptionType": {
            "enum": [
              "RunInput",
              "Reference"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DatasetConsumptionType",
              "modelAsString": false
            }
          },
          "inputDetails": {
            "$ref": "#/components/schemas/DatasetInputDetails"
          }
        },
        "additionalProperties": false
      },
      "DatasetOutputDetails": {
        "type": "object",
        "properties": {
          "outputName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteConfiguration": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "cutoffDays": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteExperimentTagsResult": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteOrModifyTags": {
        "type": "object",
        "properties": {
          "tagsToModify": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The KV pairs of tags to modify.",
            "nullable": true
          },
          "tagsToDelete": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of tags to delete.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Tags to modify or delete."
      },
      "DeleteRunServices": {
        "type": "object",
        "properties": {
          "servicesToDelete": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of Services to delete.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Services to delete."
      },
      "DeleteTagsCommand": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DerivedMetricKey": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "labels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "columnNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EndpointSetting": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sslThumbprint": {
            "type": "string",
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "proxyEndpoint": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorAdditionalInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The additional info type.",
            "nullable": true
          },
          "info": {
            "description": "The additional info.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The resource management error additional info."
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/RootError"
          },
          "correlation": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Dictionary containing correlation details for the error.",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "description": "The hosting environment.",
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "The Azure region.",
            "nullable": true
          },
          "time": {
            "type": "string",
            "description": "The time in UTC.",
            "format": "date-time"
          },
          "componentName": {
            "type": "string",
            "description": "Component name where error originated/encountered.",
            "nullable": true
          }
        },
        "description": "The error response."
      },
      "Event": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets the Microsoft.MachineLearning.RunHistory.Contracts.Event name.",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "Gets the Microsoft.MachineLearning.RunHistory.Contracts.Event timestamp.",
            "format": "date-time"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Gets the System.Collections.Generic.IDictionary`2 collection of attributes associated with the event.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Experiment": {
        "type": "object",
        "properties": {
          "experimentId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "archivedTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "retainForLifetimeOfWorkspace": {
            "type": "boolean",
            "nullable": true
          },
          "artifactLocation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExperimentQueryParams": {
        "type": "object",
        "properties": {
          "viewType": {
            "enum": [
              "Default",
              "All",
              "ActiveOnly",
              "ArchivedOnly"
            ],
            "type": "string",
            "description": "ViewType filters experiments by their archived state. Default is ActiveOnly",
            "x-ms-enum": {
              "name": "ExperimentViewType",
              "modelAsString": false
            }
          },
          "filter": {
            "type": "string",
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.\r\nSee https://docs.microsoft.com/en-us/azure/search/query-odata-filter-orderby-syntax for details on the expression syntax.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The continuation token to use for getting the next set of resources.",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "description": "The comma separated list of resource properties to use for sorting the requested resources.\r\nOptionally, can be followed by either 'asc' or 'desc'",
            "nullable": true,
            "example": "Color, Size desc"
          },
          "top": {
            "type": "integer",
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Extends Query Params DTO for ViewType"
      },
      "GetRunDataRequest": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "selectRunMetadata": {
            "type": "boolean",
            "nullable": true
          },
          "selectRunDefinition": {
            "type": "boolean",
            "nullable": true
          },
          "selectJobSpecification": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRunDataResult": {
        "type": "object",
        "properties": {
          "runMetadata": {
            "$ref": "#/components/schemas/Run"
          },
          "runDefinition": {
            "nullable": true
          },
          "jobSpecification": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRunsByIds": {
        "type": "object",
        "properties": {
          "runIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSampledMetricRequest": {
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "nullable": true
          },
          "metricNamespace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IMetricV2": {
        "type": "object",
        "properties": {
          "dataContainerId": {
            "type": "string",
            "description": "Data container to which this Metric belongs",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name identifying this Metric within the Data Container",
            "nullable": true
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "enum": [
                "Int",
                "Double",
                "String",
                "Bool",
                "Artifact"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MetricValueType",
                "modelAsString": false
              }
            },
            "description": "Schema shared by all values under this Metric\r\nColumns.Keys define the column names which are required for each MetricValue\r\nColumns.Values define the type of the associated object for each column",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "description": "Namespace for this Metric",
            "nullable": true
          },
          "standardSchemaId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricV2Value"
            },
            "description": "The list of values",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sequence of one or many values sharing a common  DataContainerId, Name, and Schema. Used only for Post Metrics."
      },
      "InnerErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code.",
            "nullable": true
          },
          "innerError": {
            "$ref": "#/components/schemas/InnerErrorResponse"
          }
        },
        "additionalProperties": false,
        "description": "A nested structure of errors."
      },
      "JobCost": {
        "type": "object",
        "properties": {
          "chargedCpuCoreSeconds": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargedCpuMemoryMegabyteSeconds": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargedGpuSeconds": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "chargedNodeUtilizationSeconds": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "KeyValuePairBaseEventErrorResponse": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/BaseEvent"
          },
          "value": {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        },
        "additionalProperties": false
      },
      "KeyValuePairStringJToken": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyValuePairStringString": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Link": {
        "type": "object",
        "properties": {
          "context": {
            "$ref": "#/components/schemas/SpanContext"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Gets the collection of attributes associated with the link.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListGenericResourceMetrics": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "metricNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "labelFilters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "metricNamespace": {
            "type": "string",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListMetrics": {
        "type": "object",
        "properties": {
          "metricNamespace": {
            "type": "string",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LongRunningNullResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "MetricDefinition": {
        "type": "object",
        "properties": {
          "metricKey": {
            "$ref": "#/components/schemas/DerivedMetricKey"
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "enum": [
                "Int",
                "Double",
                "String",
                "Bool",
                "Artifact"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MetricValueType",
                "modelAsString": false
              }
            },
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/MetricProperties"
          }
        },
        "additionalProperties": false
      },
      "MetricProperties": {
        "type": "object",
        "properties": {
          "uxMetricType": {
            "type": "string",
            "description": "String value UX uses to decide how to render your metrics\r\nEx: azureml.v1.scalar or azureml.v1.table",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricSample": {
        "type": "object",
        "properties": {
          "derivedLabelValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "isPartialResult": {
            "type": "boolean"
          },
          "numValuesLogged": {
            "type": "integer",
            "format": "int64"
          },
          "dataContainerId": {
            "type": "string",
            "description": "Data container to which this Metric belongs",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name identifying this Metric within the Data Container",
            "nullable": true
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "enum": [
                "Int",
                "Double",
                "String",
                "Bool",
                "Artifact"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MetricValueType",
                "modelAsString": false
              }
            },
            "description": "Schema shared by all values under this Metric\r\nColumns.Keys define the column names which are required for each MetricValue\r\nColumns.Values define the type of the associated object for each column",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/MetricProperties"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace for this Metric",
            "nullable": true
          },
          "standardSchemaId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricV2Value"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricSchema": {
        "type": "object",
        "properties": {
          "numProperties": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricSchemaProperty"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricSchemaProperty": {
        "type": "object",
        "properties": {
          "propertyId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricV2": {
        "type": "object",
        "properties": {
          "dataContainerId": {
            "type": "string",
            "description": "Data container to which this Metric belongs",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name identifying this Metric within the Data Container",
            "nullable": true
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "enum": [
                "Int",
                "Double",
                "String",
                "Bool",
                "Artifact"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MetricValueType",
                "modelAsString": false
              }
            },
            "description": "Schema shared by all values under this Metric\r\nColumns.Keys define the column names which are required for each MetricValue\r\nColumns.Values define the type of the associated object for each column",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/MetricProperties"
          },
          "namespace": {
            "type": "string",
            "description": "Namespace for this Metric",
            "nullable": true
          },
          "standardSchemaId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricV2Value"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Sequence of one or many values sharing a common DataContainerId, Name, and Schema"
      },
      "MetricV2Value": {
        "type": "object",
        "properties": {
          "metricId": {
            "type": "string",
            "description": "Unique Id for this metric value\r\nFormat is either a Guid or a Guid augmented with an additional int index for cases where multiple metric values shared a\r\n  MetricId in the old schema",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "description": "Client specified timestamp for this metric value",
            "format": "date-time"
          },
          "step": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {},
            "description": "Dictionary mapping column names (specified as the keys in MetricV2Dto.Columns) to values expressed in type associated\r\nwith that column in the metric's schema",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An individual value logged within a Metric"
      },
      "ModifyExperiment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "archive": {
            "type": "boolean",
            "nullable": true
          },
          "retainForLifetimeOfWorkspace": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OutputDatasetLineage": {
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/DatasetIdentifier"
          },
          "outputType": {
            "enum": [
              "RunOutput",
              "Reference"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DatasetOutputType",
              "modelAsString": false
            }
          },
          "outputDetails": {
            "$ref": "#/components/schemas/DatasetOutputDetails"
          }
        },
        "additionalProperties": false
      },
      "PaginatedArtifactContentInformationList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtifactContentInformation"
            },
            "description": "An array of objects of type ArtifactContentInformation.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paginated list of ArtifactContentInformations."
      },
      "PaginatedArtifactList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            },
            "description": "An array of objects of type Artifact.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paginated list of Artifacts."
      },
      "PaginatedExperimentList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Experiment"
            },
            "description": "An array of objects of type Experiment.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paginated list of Experiments."
      },
      "PaginatedMetricDefinitionList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricDefinition"
            },
            "description": "An array of objects of type MetricDefinition.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paginated list of MetricDefinitions."
      },
      "PaginatedRunList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Run"
            },
            "description": "An array of objects of type Run.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paginated list of Runs."
      },
      "PaginatedSpanDefinition_1List": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpanDefinition_1"
            },
            "description": "An array of objects of type SpanDefinition`1.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The token used in retrieving the next page. If null, there are no additional pages.",
            "nullable": true
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A paginated list of SpanDefinition`1s."
      },
      "PostRunMetricsError": {
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/IMetricV2"
          },
          "errorResponse": {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        },
        "additionalProperties": false
      },
      "PostRunMetricsResult": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostRunMetricsError"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryParams": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.\r\nSee https://docs.microsoft.com/en-us/azure/search/query-odata-filter-orderby-syntax for details on the expression syntax.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "The continuation token to use for getting the next set of resources.",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "description": "The comma separated list of resource properties to use for sorting the requested resources.\r\nOptionally, can be followed by either 'asc' or 'desc'",
            "nullable": true,
            "example": "Color, Size desc"
          },
          "top": {
            "type": "integer",
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The set of supported filters."
      },
      "QueueingInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "lastRefreshTimestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RetrieveFullFidelityMetricRequest": {
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metricNamespace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RootError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The service-defined error code. Supported error codes: ServiceError, UserError, ValidationError, AzureStorageError, TransientError, RequestThrottled.",
            "nullable": true
          },
          "severity": {
            "type": "integer",
            "description": "The Severity of error",
            "format": "int32",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "A human-readable representation of the error.",
            "nullable": true
          },
          "messageFormat": {
            "type": "string",
            "description": "An unformatted version of the message with no variable substitution.",
            "nullable": true
          },
          "messageParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Value substitutions corresponding to the contents of MessageFormat.",
            "nullable": true
          },
          "referenceCode": {
            "type": "string",
            "description": "This code can optionally be set by the system generating the error.\r\nIt should be used to classify the problem and identify the module and code area where the failure occured.",
            "nullable": true
          },
          "detailsUri": {
            "type": "string",
            "description": "A URI which points to more details about the context of the error.",
            "format": "uri",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "The target of the error (e.g., the name of the property in error).",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RootError"
            },
            "description": "The related errors that occurred during the request.",
            "nullable": true
          },
          "innerError": {
            "$ref": "#/components/schemas/InnerErrorResponse"
          },
          "additionalInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorAdditionalInfo"
            },
            "description": "The error additional info.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The root error."
      },
      "Run": {
        "type": "object",
        "properties": {
          "runNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rootRunId": {
            "type": "string",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "description": "The time the run was created in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "type": "string",
            "description": "The Id of the user that created the run.",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "A token used for authenticating a run.",
            "nullable": true
          },
          "tokenExpiryTimeUtc": {
            "type": "string",
            "description": "The Token expiration time in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RunDetailsWarning"
            },
            "description": "A list of warnings that occurred during the run.",
            "nullable": true
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "statusRevision": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "runUuid": {
            "type": "string",
            "description": "A system generated Id for the run",
            "format": "uuid",
            "nullable": true
          },
          "parentRunUuid": {
            "type": "string",
            "description": "A system generated Id for the run's parent",
            "format": "uuid",
            "nullable": true
          },
          "rootRunUuid": {
            "type": "string",
            "description": "A system generated Id for the root of the run's hierarchy",
            "format": "uuid",
            "nullable": true
          },
          "hasVirtualParent": {
            "type": "boolean",
            "description": "Indicates if this is a child of a virtual run."
          },
          "lastStartTimeUtc": {
            "type": "string",
            "description": "The last timestamp when a run transitioned from paused to running. Initialized when StartTimeUtc is first set.",
            "format": "date-time",
            "nullable": true
          },
          "currentComputeTime": {
            "type": "string",
            "description": "The cumulative time spent in an active status for an active run.",
            "format": "date-span",
            "nullable": true
          },
          "computeDuration": {
            "type": "string",
            "description": "The cumulative time spent in an active status for a terminal run.",
            "format": "date-span",
            "nullable": true
          },
          "effectiveStartTimeUtc": {
            "type": "string",
            "description": "A relative start time set as LastStartTimeUtc - ComputeTime for active runs. This allows sorting active runs on how long they have been active, since an actual active duration cannot be frequently updated.",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/User"
          },
          "lastModifiedUtc": {
            "type": "string",
            "description": "The time the run was created in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The total duration of a run.",
            "format": "date-span",
            "nullable": true
          },
          "cancelationReason": {
            "type": "string",
            "description": "The cancelation Reason if the run was canceled.",
            "nullable": true
          },
          "runId": {
            "type": "string",
            "description": "The identifier for the run. Run IDs must be less than 256 characters and contain only alphanumeric characters with dashes and underscores.",
            "nullable": true
          },
          "parentRunId": {
            "type": "string",
            "description": "The parent of the run if the run is hierarchical; otherwise, Null.",
            "nullable": true
          },
          "experimentId": {
            "type": "string",
            "description": "The Id of the experiment that created this run.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The status of the run. The Status string value maps to the RunStatus Enum.",
            "nullable": true
          },
          "startTimeUtc": {
            "type": "string",
            "description": "The start time of the run in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "endTimeUtc": {
            "type": "string",
            "description": "The end time of the run in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/RunOptions"
          },
          "isVirtual": {
            "type": "boolean",
            "description": "A virtual run can set an active child run that will override the virtual run status and properties"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataContainerId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "nullable": true
          },
          "runType": {
            "type": "string",
            "nullable": true
          },
          "runTypeV2": {
            "$ref": "#/components/schemas/RunTypeV2"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "actionUris": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "scriptName": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "uniqueChildRunComputeTargets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "services": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EndpointSetting"
            },
            "nullable": true
          },
          "inputDatasets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasetLineage"
            },
            "nullable": true
          },
          "outputDatasets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputDatasetLineage"
            },
            "nullable": true
          },
          "runDefinition": {
            "nullable": true
          },
          "jobSpecification": {
            "nullable": true
          },
          "primaryMetricName": {
            "type": "string",
            "nullable": true
          },
          "createdFrom": {
            "$ref": "#/components/schemas/CreatedFrom"
          },
          "cancelUri": {
            "type": "string",
            "nullable": true
          },
          "completeUri": {
            "type": "string",
            "nullable": true
          },
          "diagnosticsUri": {
            "type": "string",
            "nullable": true
          },
          "computeRequest": {
            "$ref": "#/components/schemas/ComputeRequest"
          },
          "compute": {
            "$ref": "#/components/schemas/Compute"
          },
          "retainForLifetimeOfWorkspace": {
            "type": "boolean",
            "nullable": true
          },
          "queueingInfo": {
            "$ref": "#/components/schemas/QueueingInfo"
          },
          "activeChildRunId": {
            "type": "string",
            "description": "The RunId of the active child on a virtual run",
            "nullable": true
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TypedAssetReference"
            },
            "nullable": true
          },
          "outputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TypedAssetReference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The definition of a Run."
      },
      "RunDetails": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "description": "The identifier for the run.",
            "nullable": true
          },
          "runUuid": {
            "type": "string",
            "description": "A system generated Id for the run",
            "format": "uuid",
            "nullable": true
          },
          "parentRunUuid": {
            "type": "string",
            "description": "A system generated Id for the run's parent",
            "format": "uuid",
            "nullable": true
          },
          "rootRunUuid": {
            "type": "string",
            "description": "A system generated Id for the root of the run's hierarchy",
            "format": "uuid",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "The name of the compute target where the run is executed.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The status of the run. The Status string value maps to the RunStatus Enum.",
            "nullable": true
          },
          "parentRunId": {
            "type": "string",
            "description": "The parent of the run if the run is hierarchical.",
            "nullable": true
          },
          "createdTimeUtc": {
            "type": "string",
            "description": "The creation time of the run in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "startTimeUtc": {
            "type": "string",
            "description": "The start time of the run in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "endTimeUtc": {
            "type": "string",
            "description": "The end time of the run in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RunDetailsWarning"
            },
            "description": "A list of warnings that occurred during the run.",
            "nullable": true
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tag dictionary for the run. Tags are mutable.",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The properties dictionary for the run. Properties are immutable.",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "The parameters dictionary for the run. Parameters are immutable.",
            "nullable": true
          },
          "services": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EndpointSetting"
            },
            "description": "The interactive run services for a run. Services are mutable",
            "nullable": true
          },
          "inputDatasets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasetLineage"
            },
            "description": "A list of dataset used as input to the run.",
            "nullable": true
          },
          "outputDatasets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputDatasetLineage"
            },
            "description": "A list of dataset used as output to the run.",
            "nullable": true
          },
          "runDefinition": {
            "description": "The run definition specification.",
            "nullable": true
          },
          "logFiles": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "jobCost": {
            "$ref": "#/components/schemas/JobCost"
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "runTypeV2": {
            "$ref": "#/components/schemas/RunTypeV2"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The run settings.",
            "nullable": true
          },
          "computeRequest": {
            "$ref": "#/components/schemas/ComputeRequest"
          },
          "compute": {
            "$ref": "#/components/schemas/Compute"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "computeDuration": {
            "type": "string",
            "description": "Time spent in an active state for terminal runs.",
            "format": "date-span",
            "nullable": true
          },
          "effectiveStartTimeUtc": {
            "type": "string",
            "description": "Relative start time of active runs for ordering and computing active compute duration.\r\nCompute duration of an active run is now() - EffectiveStartTimeUtc",
            "format": "date-time",
            "nullable": true
          },
          "runNumber": {
            "type": "integer",
            "description": "Relative start time of active runs for ordering and computing active compute duration.\r\nCompute duration of an active run is now() - EffectiveStartTimeUtc",
            "format": "int32",
            "nullable": true
          },
          "rootRunId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "The Id of the user that created the run.",
            "nullable": true
          },
          "statusRevision": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hasVirtualParent": {
            "type": "boolean",
            "description": "Indicates if this is a child of a virtual run."
          },
          "currentComputeTime": {
            "type": "string",
            "description": "The cumulative time spent in an active status for an active run.",
            "format": "date-span",
            "nullable": true
          },
          "lastStartTimeUtc": {
            "type": "string",
            "description": "The last timestamp when a run transitioned from paused to running. Initialized when StartTimeUtc is first set.",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/User"
          },
          "lastModifiedUtc": {
            "type": "string",
            "description": "The time the run was created in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The total duration of a run.",
            "format": "date-span",
            "nullable": true
          },
          "inputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TypedAssetReference"
            },
            "description": "The inputs for the run",
            "nullable": true
          },
          "outputs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TypedAssetReference"
            },
            "description": "The outputs for the run",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The details of the run."
      },
      "RunDetailsWarning": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunServiceInstances": {
        "type": "object",
        "properties": {
          "instances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ServiceInstanceResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunMetric": {
        "type": "object",
        "properties": {
          "runId": {
            "type": "string",
            "nullable": true
          },
          "metricId": {
            "type": "string",
            "format": "uuid"
          },
          "dataContainerId": {
            "type": "string",
            "nullable": true
          },
          "metricType": {
            "type": "string",
            "nullable": true
          },
          "createdUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "numCells": {
            "type": "integer",
            "format": "int32"
          },
          "dataLocation": {
            "type": "string",
            "nullable": true
          },
          "cells": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "nullable": true
          },
          "schema": {
            "$ref": "#/components/schemas/MetricSchema"
          }
        },
        "additionalProperties": false
      },
      "RunOptions": {
        "type": "object",
        "properties": {
          "generateDataContainerIdIfNotSpecified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RunStatusSpans": {
        "type": "object",
        "properties": {
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpanDefinition_1"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RunTypeV2": {
        "type": "object",
        "properties": {
          "orchestrator": {
            "type": "string",
            "nullable": true
          },
          "traits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "attribution": {
            "type": "string",
            "nullable": true
          },
          "computeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceInstance": {
        "type": "object",
        "properties": {
          "isSingleNode": {
            "type": "boolean",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceInstanceResult": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpanContext": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "Gets the TraceId associated with this Microsoft.MachineLearning.RunHistory.Contracts.SpanContext.\r\nTODO: In actual spec, it is ActivityTraceId type. But that causes problems in serialization/deserialization",
            "nullable": true
          },
          "spanId": {
            "type": "string",
            "description": "Gets the SpanId associated with this Microsoft.MachineLearning.RunHistory.Contracts.SpanContext.\r\nTODO: In actual spec, it is ActivitySpanId type. But that causes problems in serialization/deserialization",
            "nullable": true
          },
          "isRemote": {
            "type": "boolean",
            "description": "Gets a value indicating whether this Microsoft.MachineLearning.RunHistory.Contracts.SpanContext\r\nwas propagated from a remote parent."
          },
          "isValid": {
            "type": "boolean",
            "description": "Gets a value indicating whether this Microsoft.MachineLearning.RunHistory.Contracts.SpanContext is valid."
          },
          "tracestate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairStringString"
            },
            "description": "Gets the Microsoft.MachineLearning.RunHistory.Contracts.SpanContext.Tracestate associated with this Microsoft.MachineLearning.RunHistory.Contracts.SpanContext.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpanDefinition_1": {
        "type": "object",
        "properties": {
          "context": {
            "$ref": "#/components/schemas/SpanContext"
          },
          "name": {
            "type": "string",
            "description": "Gets span name.",
            "nullable": true
          },
          "status": {
            "enum": [
              "NotStarted",
              "Unapproved",
              "Pausing",
              "Paused",
              "Starting",
              "Preparing",
              "Queued",
              "Running",
              "Finalizing",
              "CancelRequested",
              "Completed",
              "Failed",
              "Canceled"
            ],
            "type": "string",
            "description": "Gets span status.\r\nOpenTelemetry sets it to https://github.com/open-telemetry/opentelemetry-dotnet/blob/master/src/OpenTelemetry.Api/Trace/Status.cs\r\nThat status enums are not very meaningful to us, so we customize this.",
            "x-ms-enum": {
              "name": "RunStatus",
              "modelAsString": false
            }
          },
          "parentSpanId": {
            "type": "string",
            "description": "Gets parent span id.\r\nTODO: In actual spec, it is ActivitySpanId type. But that causes problems in serialization/deserialization",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairStringJToken"
            },
            "description": "Gets attributes.",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "description": "Gets events.",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "description": "Gets links.",
            "nullable": true
          },
          "startTimestamp": {
            "type": "string",
            "description": "Gets span start timestamp.",
            "format": "date-time"
          },
          "endTimestamp": {
            "type": "string",
            "description": "Gets span end timestamp.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Most of the code in this class is vendored from here.\r\nhttps://github.com/open-telemetry/opentelemetry-dotnet/blob/master/src/OpenTelemetry/Trace/Export/SpanData.cs\r\nSpanData on that github link is readonly, we can't set properties on it after creation. So, just vendoring the Span\r\ncontract.\r\nTStatus is the status enum. For runs, it is RunStatus\r\nThis is the link for span spec https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/overview.md#span"
      },
      "SqlDataPath": {
        "type": "object",
        "properties": {
          "sqlTableName": {
            "type": "string",
            "nullable": true
          },
          "sqlQuery": {
            "type": "string",
            "nullable": true
          },
          "sqlStoredProcedureName": {
            "type": "string",
            "nullable": true
          },
          "sqlStoredProcedureParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoredProcedureParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoredProcedureParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "String",
              "Int",
              "Decimal",
              "Guid",
              "Boolean",
              "Date"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "StoredProcedureParameterType",
              "modelAsString": false
            }
          }
        },
        "additionalProperties": false
      },
      "TypedAssetReference": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "userObjectId": {
            "type": "string",
            "description": "A user or service principal's object ID.\r\nThis is EUPI and may only be logged to warm path telemetry.",
            "nullable": true
          },
          "userPuId": {
            "type": "string",
            "description": "A user or service principal's PuID.\r\nThis is PII and should never be logged.",
            "nullable": true
          },
          "userIdp": {
            "type": "string",
            "description": "A user identity provider. Eg live.com\r\nThis is PII and should never be logged.",
            "nullable": true
          },
          "userAltSecId": {
            "type": "string",
            "description": "A user alternate sec id. This represents the user in a different identity provider system Eg.1:live.com:puid\r\nThis is PII and should never be logged.",
            "nullable": true
          },
          "userIss": {
            "type": "string",
            "description": "The issuer which issed the token for this user.\r\nThis is PII and should never be logged.",
            "nullable": true
          },
          "userTenantId": {
            "type": "string",
            "description": "A user or service principal's tenant ID.",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "A user's full name or a service principal's app ID.\r\nThis is PII and should never be logged.",
            "nullable": true
          },
          "upn": {
            "type": "string",
            "description": "A user's Principal name (upn)\r\nThis is PII andshould never be logged",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "parameters": {
      "subscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "description": "The Azure Subscription ID.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "name": "resourceGroupName",
        "in": "path",
        "description": "The Name of the resource group in which the workspace is located.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "workspaceNameParameter": {
        "name": "workspaceName",
        "in": "path",
        "description": "The name of the workspace.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "experimentNameParameter": {
        "name": "experimentName",
        "in": "path",
        "description": "Experiment name.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "experimentIdParameter": {
        "name": "experimentId",
        "in": "path",
        "description": "Experiment Id.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}