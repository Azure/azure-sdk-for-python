{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Services",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources.",
    "version": "2024-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.MachineLearningServices/operations": {
      "get": {
        "tags": [
          "Operation"
        ],
        "summary": "Lists all of the available Azure Machine Learning Workspaces REST API operations",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/Workspace/operationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Lists all the available machine learning workspaces under the specified subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceKindParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "aiCapabilities",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspaces by subscription": {
            "$ref": "./examples/Workspace/listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Lists all the available machine learning workspaces under the specified resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceKindParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "aiCapabilities",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspaces by Resource Group": {
            "$ref": "./examples/Workspace/listByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}": {
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Deletes a machine learning workspace.",
        "operationId": "Workspaces_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceForceToPurgeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace": {
            "$ref": "./examples/Workspace/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Gets the properties of the specified machine learning workspace.",
        "operationId": "Workspaces_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace": {
            "$ref": "./examples/Workspace/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Updates a machine learning workspace with the specified parameters.",
        "operationId": "Workspaces_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The parameters for updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace": {
            "$ref": "./examples/Workspace/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Creates or updates a workspace with the specified parameters.",
        "operationId": "Workspaces_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The parameters for creating or updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Workspace": {
            "$ref": "./examples/Workspace/create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Lists all the available machine learning workspaces connections under the specified workspace.",
        "operationId": "WorkspaceConnections_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/TargetParameter"
          },
          {
            "$ref": "#/parameters/CategoryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "includeAll",
            "description": "query parameter that indicates if get connection call should return both connections and datastores",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListWorkspaceConnections": {
            "$ref": "./examples/WorkspaceConnection/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}": {
      "delete": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Delete machine learning workspaces connections by name.",
        "operationId": "WorkspaceConnections_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Lists machine learning workspaces connections by name.",
        "operationId": "WorkspaceConnections_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Update machine learning workspaces connections under the specified workspace.",
        "operationId": "WorkspaceConnections_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for workspace connection update.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionUpdateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpdateWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/update.json"
          }
        }
      },
      "put": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Create or update machine learning workspaces connections under the specified workspace.",
        "operationId": "WorkspaceConnections_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The object for creating or updating a new workspace connection",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/deployments": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Get all the deployments under the Azure OpenAI connection.",
        "operationId": "Connection_ListDeployments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Azure OpenAI Connection Deployments": {
            "$ref": "./examples/WorkspaceConnection/listDeployments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Delete Azure OpenAI connection deployment resource by name",
        "operationId": "Connection_DeleteDeployment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Azure OpenAI Connection Deployment": {
            "$ref": "./examples/WorkspaceConnection/deleteDeployment.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Get deployments under the Azure OpenAI connection by name.",
        "operationId": "Connection_GetDeployment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure OpenAI Connection Deployment": {
            "$ref": "./examples/WorkspaceConnection/getDeployment.json"
          }
        }
      },
      "put": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Create or update Azure OpenAI connection deployment resource with the specified parameters",
        "operationId": "Connection_CreateOrUpdateDeployment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "deployment object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "201": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Azure OpenAI Connection Deployment": {
            "$ref": "./examples/WorkspaceConnection/createDeployment.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/listsecrets": {
      "post": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "List all the secrets of a machine learning workspaces connections.",
        "operationId": "WorkspaceConnections_ListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/models": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Get available models under the Azure OpenAI connection.",
        "operationId": "Connection_GetModels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointModels"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure OpenAI Connection Models": {
            "$ref": "./examples/WorkspaceConnection/getModels.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Gets the custom blocklists associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklists_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}": {
      "delete": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Deletes the specified custom blocklist associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklist_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiBlocklistParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Gets the specified custom blocklist associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklistItem_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiBlocklistParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Update the state of specified blocklist associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklist_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiBlocklistParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          },
          "201": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}/raiBlocklistItems": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Gets the custom blocklist items associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklistItems_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiBlocklistParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List RaiBlocklist Items": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}/raiBlocklistItems/{raiBlocklistItemName}": {
      "delete": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Deletes the specified custom blocklist item associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklistItem_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiBlocklistParameter"
          },
          {
            "$ref": "#/parameters/RaiBlocklistItemParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete RaiBlocklist Item": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Gets the specified custom blocklist item associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklist_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiBlocklistParameter"
          },
          {
            "$ref": "#/parameters/RaiBlocklistItemParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai RaiBlocklist Item": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Update the state of specified blocklist item associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiBlocklistItem_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiBlocklistParameter"
          },
          {
            "$ref": "#/parameters/RaiBlocklistItemParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          },
          "201": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create RaiBlocklist Item": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiPolicies": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "List the specified Content Filters associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiPolicies_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiPolicies/{raiPolicyName}": {
      "delete": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Deletes the specified Content Filters associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiPolicy_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiPolicyNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Gets the specified Content Filters associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiPolicy_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiPolicyNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Update the state of specified Content Filters associated with the Azure OpenAI connection.",
        "operationId": "ConnectionRaiPolicy_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/RaiPolicyNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "201": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/testconnection": {
      "post": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Test machine learning workspaces connections under the specified workspace.",
        "operationId": "WorkspaceConnections_TestConnection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Workspace Connection object",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TestWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/testConnection.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/deployments": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Get all the deployments under the workspace scope",
        "operationId": "EndpointDeployment_GetInWorkspace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/EndpointTypeParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Deployments In Workspace": {
            "$ref": "./examples/Endpoint/Deployment/getInWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/diagnose": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "summary": "Diagnose workspace setup issue.",
        "operationId": "Workspaces_Diagnose",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The parameter of diagnosing workspace health",
            "schema": {
              "$ref": "#/definitions/DiagnoseWorkspaceParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/DiagnoseResponseResult"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnose Workspace": {
            "$ref": "./examples/Workspace/diagnose.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "List All the endpoints under this workspace",
        "operationId": "Endpoint_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/EndpointTypeParameter"
          },
          {
            "in": "query",
            "name": "includeInferenceEndpoints",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "description": "Whether the endpoint resource will be expand to include deployment information, e.g. $expand=deployments",
            "required": false,
            "name": "$expand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Endpoint": {
            "$ref": "./examples/Endpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Gets endpoint resource",
        "operationId": "Endpoint_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint": {
            "$ref": "./examples/Endpoint/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Create or update endpoint resource with the specified parameters",
        "operationId": "Endpoint_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Endpoint resource object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Endpoint": {
            "$ref": "./examples/Endpoint/create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Get all the deployments under the endpoint resource scope",
        "operationId": "EndpointDeployment_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Deployments": {
            "$ref": "./examples/Endpoint/Deployment/getDeployments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Delete  endpoint deployment resource by name",
        "operationId": "EndpointDeployment_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Deployment was successfully deleted or doesn't exist."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Endpoint Deployment": {
            "$ref": "./examples/Endpoint/Deployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Get deployments under endpoint resource by name",
        "operationId": "EndpointDeployment_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Deployment": {
            "$ref": "./examples/Endpoint/Deployment/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Create or update endpoint deployment resource with the specified parameters",
        "operationId": "EndpointDeployment_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "deployment object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Endpoint Deployment": {
            "$ref": "./examples/Endpoint/Deployment/create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/listKeys": {
      "post": {
        "tags": [
          "Endpoint"
        ],
        "summary": "List keys for the endpoint resource.",
        "operationId": "Endpoint_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointKeys"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Endpoint Keys": {
            "$ref": "./examples/Endpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/models": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Get available models under the endpoint resource.",
        "operationId": "Endpoint_GetModels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointModels"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Models": {
            "$ref": "./examples/Endpoint/getModels.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/raiPolicies": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "List the specified Content Filters associated with the Azure OpenAI account.",
        "operationId": "RaiPolicies_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Rai policies": {
            "$ref": "./examples/Endpoint/RaiPolicy/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/raiPolicies/{raiPolicyName}": {
      "delete": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Deletes the specified Content Filters associated with the Azure OpenAI account.",
        "operationId": "RaiPolicy_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/RaiPolicyNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Rai policy": {
            "$ref": "./examples/Endpoint/RaiPolicy/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Gets the specified Content Filters associated with the Azure OpenAI account.",
        "operationId": "RaiPolicy_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/RaiPolicyNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai policy": {
            "$ref": "./examples/Endpoint/RaiPolicy/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Update the state of specified Content Filters associated with the Azure OpenAI account.",
        "operationId": "RaiPolicy_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/RaiPolicyNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "201": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Rai policy": {
            "$ref": "./examples/Endpoint/RaiPolicy/create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/regenerateKey": {
      "post": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Regenerate account keys",
        "operationId": "Endpoint_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateServiceAccountKeyContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/AccountApiKeys"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Regenerate Endpoint Keys": {
            "$ref": "./examples/Endpoint/regenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listConnectionModels": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ListConnectionModels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "List available models from all connections.",
        "x-ms-examples": {
          "List Connection Models": {
            "$ref": "./examples/Workspace/listConnectionModels.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/EndpointModels"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "summary": "Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry.",
        "operationId": "Workspaces_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceKeysResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookAccessToken": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "summary": "Get Azure Machine Learning Workspace notebook access token",
        "operationId": "Workspaces_ListNotebookAccessToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookAccessTokenResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listNotebookAccessToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "summary": "Lists keys of Azure Machine Learning Workspaces notebook.",
        "operationId": "Workspaces_ListNotebookKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListNotebookKeysResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Notebook/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listStorageAccountKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "summary": "Lists keys of Azure Machine Learning Workspace's storage account.",
        "operationId": "Workspaces_ListStorageAccountKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListStorageAccountKeysResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listStorageAccountKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "OutboundNetworkDependenciesEndpoints"
        ],
        "summary": "Called by Client (Portal, CLI, etc) to get a list of all external outbound dependencies (FQDNs) programmatically.",
        "operationId": "Workspaces_ListOutboundNetworkDependenciesEndpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalFQDNResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListOutboundNetworkDependenciesEndpoints": {
            "$ref": "./examples/ExternalFQDN/get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules": {
      "get": {
        "tags": [
          "ManagedNetwork"
        ],
        "summary": "Lists the managed network outbound rules for a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/listRule.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules/{ruleName}": {
      "delete": {
        "tags": [
          "ManagedNetwork"
        ],
        "summary": "Deletes an outbound rule from the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/deleteRule.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ManagedNetwork"
        ],
        "summary": "Gets an outbound rule from the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/getRule.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedNetwork"
        ],
        "summary": "Creates or updates an outbound rule in the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Outbound Rule to be created or updated in the managed network of a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/createOrUpdateRule.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/prepareNotebook": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "summary": "Prepare Azure Machine Learning Workspace's notebook resource",
        "operationId": "Workspaces_PrepareNotebook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookResourceInfo"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Prepare Notebook": {
            "$ref": "./examples/Notebook/prepare.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "summary": "Called by end-users to get all PE connections.",
        "operationId": "PrivateEndpointConnections_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListPrivateEndpointConnections": {
            "$ref": "./examples/PrivateEndpointConnection/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "delete": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "summary": "Called by end-users to delete a PE connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "summary": "Called by end-users to get a PE connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspaceGetPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "summary": "Called by end-users to approve or reject a PE connection.\r\nThis method must validate and forward the call to NRP.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "PrivateEndpointConnection object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "summary": "Called by Client (Portal, CLI, etc) to get available \"private link resources\" for the workspace.\r\nEach \"private link resource\" is a connection endpoint (IP address) to the resource.\r\nPre single connection endpoint per workspace: the Data Plane IP address, returned by DNS resolution.\r\nOther RPs, such as Azure Storage, have multiple - one for Blobs, other for Queues, etc.\r\nDefined in the \"[NRP] Private Endpoint Design\" doc, topic \"GET API for GroupIds\".",
        "operationId": "PrivateLinkResources_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspaceListPrivateLinkResources": {
            "$ref": "./examples/PrivateLinkResource/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/provisionManagedNetwork": {
      "post": {
        "tags": [
          "ManagedNetwork"
        ],
        "summary": "Provisions the managed network of a machine learning workspace.",
        "operationId": "ManagedNetworkProvisions_ProvisionManagedNetwork",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Managed Network Provisioning Options for a machine learning workspace.",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionStatus"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Provision ManagedNetwork": {
            "$ref": "./examples/ManagedNetwork/provision.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "summary": "Resync all the keys associated with this workspace.This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ResyncKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resync Workspace Keys": {
            "$ref": "./examples/Workspace/resyncKeys.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "definitions": {
    "AADAuthTypeWorkspaceConnectionProperties": {
      "description": "This connection type covers the AAD auth for any applicable Azure service",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "AccessKeyAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionAccessKey"
        }
      },
      "x-ms-discriminator-value": "AccessKey"
    },
    "AccountApiKeys": {
      "type": "object",
      "properties": {
        "key1": {
          "type": "string",
          "x-ms-secret": true
        },
        "key2": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "AccountKeyAuthTypeWorkspaceConnectionProperties": {
      "description": "This connection type covers the account key connection for Azure storage",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionSharedAccessSignature"
        }
      },
      "x-ms-discriminator-value": "AccountKey"
    },
    "AccountModel": {
      "description": "Cognitive Services account Model.",
      "type": "object",
      "properties": {
        "baseModel": {
          "type": "object",
          "description": "Base Model Identifier.",
          "$ref": "#/definitions/DeploymentModel"
        },
        "isDefaultVersion": {
          "type": "boolean",
          "description": "If the model is default version."
        },
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelSku"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of Model Sku."
        },
        "maxCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "The max capacity."
        },
        "capabilities": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The capabilities."
        },
        "finetuneCapabilities": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The capabilities for finetune models."
        },
        "deprecation": {
          "type": "object",
          "$ref": "#/definitions/ModelDeprecationInfo"
        },
        "lifecycleStatus": {
          "type": "string",
          "enum": [
            "GenerallyAvailable",
            "Preview"
          ],
          "x-ms-enum": {
            "name": "ModelLifecycleStatus",
            "modelAsString": true
          },
          "description": "Model lifecycle status."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentModel"
        }
      ]
    },
    "AllowedContentLevel": {
      "description": "Level at which content is filtered.",
      "enum": [
        "Low",
        "Medium",
        "High"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AllowedContentLevel",
        "modelAsString": true
      }
    },
    "ApiKeyAuthWorkspaceConnectionProperties": {
      "description": "This connection type covers the generic ApiKey auth connection categories, for examples:\r\nAzureOpenAI:\r\n    Category:= AzureOpenAI\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {ApiKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= {ApiBase}\r\n            \r\nCognitiveService:\r\n    Category:= CognitiveService\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {SubscriptionKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= ServiceRegion={serviceRegion}\r\n            \r\nCognitiveSearch:\r\n    Category:= CognitiveSearch\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {Key} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= {Endpoint}\r\n            \r\nUse Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionApiKey"
        }
      },
      "x-ms-discriminator-value": "ApiKey"
    },
    "CallRateLimit": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "The count value of Call Rate Limit."
        },
        "renewalPeriod": {
          "type": "number",
          "description": "The renewal period in seconds of Call Rate Limit."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottlingRule"
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      },
      "description": "The call rate limit Cognitive Services account."
    },
    "CapacityConfig": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity."
        },
        "step": {
          "type": "integer",
          "format": "int32",
          "description": "The minimal incremental between allowed values for capacity."
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default capacity."
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The array of allowed values for capacity."
        }
      },
      "description": "The capacity configuration."
    },
    "CognitiveServiceEndpointDeploymentResourceProperties": {
      "required": [
        "model"
      ],
      "type": "object",
      "properties": {
        "model": {
          "description": "Model used for the endpoint deployment.",
          "$ref": "#/definitions/EndpointDeploymentModel"
        },
        "raiPolicyName": {
          "type": "string",
          "description": "The name of RAI policy."
        },
        "sku": {
          "$ref": "#/definitions/CognitiveServicesSku"
        },
        "versionUpgradeOption": {
          "description": "Deployment model version upgrade option.",
          "type": "string",
          "enum": [
            "OnceNewDefaultVersionAvailable",
            "OnceCurrentVersionExpired",
            "NoAutoUpgrade"
          ],
          "x-ms-enum": {
            "name": "DeploymentModelVersionUpgradeOption",
            "modelAsString": true
          }
        }
      }
    },
    "CognitiveServicesSku": {
      "type": "object",
      "properties": {
        "capacity": {
          "format": "int32",
          "type": "integer"
        },
        "family": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        }
      }
    },
    "ComputeRuntimeDto": {
      "type": "object",
      "properties": {
        "sparkRuntimeVersion": {
          "type": "string"
        }
      }
    },
    "ConnectionAuthType": {
      "description": "Authentication type of the connection target",
      "enum": [
        "PAT",
        "ManagedIdentity",
        "UsernamePassword",
        "None",
        "SAS",
        "AccountKey",
        "ServicePrincipal",
        "AccessKey",
        "ApiKey",
        "CustomKeys",
        "OAuth2",
        "AAD"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ConnectionAuthType",
        "modelAsString": true
      }
    },
    "ConnectionCategory": {
      "description": "Category of the connection",
      "enum": [
        "PythonFeed",
        "ContainerRegistry",
        "Git",
        "S3",
        "Snowflake",
        "AzureSqlDb",
        "AzureSynapseAnalytics",
        "AzureMySqlDb",
        "AzurePostgresDb",
        "ADLSGen2",
        "Redis",
        "ApiKey",
        "AzureOpenAI",
        "CognitiveSearch",
        "CognitiveService",
        "CustomKeys",
        "AzureBlob",
        "AzureOneLake",
        "CosmosDb",
        "CosmosDbMongoDbApi",
        "AzureDataExplorer",
        "AzureMariaDb",
        "AzureDatabricksDeltaLake",
        "AzureSqlMi",
        "AzureTableStorage",
        "AmazonRdsForOracle",
        "AmazonRdsForSqlServer",
        "AmazonRedshift",
        "Db2",
        "Drill",
        "GoogleBigQuery",
        "Greenplum",
        "Hbase",
        "Hive",
        "Impala",
        "Informix",
        "MariaDb",
        "MicrosoftAccess",
        "MySql",
        "Netezza",
        "Oracle",
        "Phoenix",
        "PostgreSql",
        "Presto",
        "SapOpenHub",
        "SapBw",
        "SapHana",
        "SapTable",
        "Spark",
        "SqlServer",
        "Sybase",
        "Teradata",
        "Vertica",
        "Cassandra",
        "Couchbase",
        "MongoDbV2",
        "MongoDbAtlas",
        "AmazonS3Compatible",
        "FileServer",
        "FtpServer",
        "GoogleCloudStorage",
        "Hdfs",
        "OracleCloudStorage",
        "Sftp",
        "GenericHttp",
        "ODataRest",
        "Odbc",
        "GenericRest",
        "AmazonMws",
        "Concur",
        "Dynamics",
        "DynamicsAx",
        "DynamicsCrm",
        "GoogleAdWords",
        "Hubspot",
        "Jira",
        "Magento",
        "Marketo",
        "Office365",
        "Eloqua",
        "Responsys",
        "OracleServiceCloud",
        "PayPal",
        "QuickBooks",
        "Salesforce",
        "SalesforceServiceCloud",
        "SalesforceMarketingCloud",
        "SapCloudForCustomer",
        "SapEcc",
        "ServiceNow",
        "SharePointOnlineList",
        "Shopify",
        "Square",
        "WebTable",
        "Xero",
        "Zoho",
        "GenericContainerRegistry",
        "OpenAI",
        "Serp",
        "BingLLMSearch",
        "Serverless"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ConnectionCategory",
        "modelAsString": true
      }
    },
    "ConnectionGroup": {
      "description": "Group based on connection category",
      "enum": [
        "Azure",
        "AzureAI",
        "Database",
        "NoSQL",
        "File",
        "GenericProtocol",
        "ServicesAndApps"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ConnectionGroup",
        "modelAsString": true
      }
    },
    "ContentSafetyEndpointDeploymentResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServiceEndpointDeploymentResourceProperties"
        },
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.ContentSafety"
    },
    "ContentSafetyEndpointResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.ContentSafety"
    },
    "CosmosDbSettings": {
      "type": "object",
      "properties": {
        "collectionsThroughput": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CustomKeys": {
      "description": "Custom Keys credential object",
      "type": "object",
      "properties": {
        "keys": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CustomKeysWorkspaceConnectionProperties": {
      "description": "Category:= CustomKeys\r\nAuthType:= CustomKeys (as type discriminator)\r\nCredentials:= {CustomKeys} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.CustomKeys\r\nTarget:= {any value}\r\nUse Metadata property bag for ApiVersion and other metadata fields",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "description": "Custom Keys credential object",
          "$ref": "#/definitions/CustomKeys"
        }
      },
      "x-ms-discriminator-value": "CustomKeys"
    },
    "DefaultResourceProvisioningState": {
      "enum": [
        "NotStarted",
        "Failed",
        "Creating",
        "Updating",
        "Succeeded",
        "Deleting",
        "Accepted",
        "Canceled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-mutability": [
        "read"
      ],
      "x-ms-enum": {
        "name": "DefaultResourceProvisioningState",
        "modelAsString": true
      }
    },
    "DeploymentModel": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "description": "Deployment model format."
        },
        "name": {
          "type": "string",
          "description": "Deployment model name."
        },
        "version": {
          "type": "string",
          "description": "Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API."
        },
        "source": {
          "type": "string",
          "description": "Optional. Deployment model source ARM resource ID."
        },
        "callRateLimit": {
          "readOnly": true,
          "$ref": "#/definitions/CallRateLimit"
        }
      },
      "description": "Properties of Cognitive Services account deployment model."
    },
    "DiagnoseRequestProperties": {
      "type": "object",
      "properties": {
        "applicationInsights": {
          "description": "Setting for diagnosing dependent application insights",
          "type": "object",
          "additionalProperties": {}
        },
        "containerRegistry": {
          "description": "Setting for diagnosing dependent container registry",
          "type": "object",
          "additionalProperties": {}
        },
        "dnsResolution": {
          "description": "Setting for diagnosing dns resolution",
          "type": "object",
          "additionalProperties": {}
        },
        "keyVault": {
          "description": "Setting for diagnosing dependent key vault",
          "type": "object",
          "additionalProperties": {}
        },
        "nsg": {
          "description": "Setting for diagnosing network security group",
          "type": "object",
          "additionalProperties": {}
        },
        "others": {
          "description": "Setting for diagnosing unclassified category of problems",
          "type": "object",
          "additionalProperties": {}
        },
        "requiredResourceProviders": {
          "description": "Setting for diagnosing the presence of required resource providers in the workspace.",
          "type": "object",
          "additionalProperties": {}
        },
        "resourceLock": {
          "description": "Setting for diagnosing resource lock",
          "type": "object",
          "additionalProperties": {}
        },
        "storageAccount": {
          "description": "Setting for diagnosing dependent storage account",
          "type": "object",
          "additionalProperties": {}
        },
        "udr": {
          "description": "Setting for diagnosing user defined routing",
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "DiagnoseResponseResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {
            "userDefinedRouteResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "networkSecurityRuleResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "resourceLockResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "dnsResolutionResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "storageAccountResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "keyVaultResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "containerRegistryResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "applicationInsightsResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "otherResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            }
          }
        }
      }
    },
    "DiagnoseResult": {
      "description": "Result of Diagnose",
      "type": "object",
      "properties": {
        "code": {
          "description": "Code for workspace setup error",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "level": {
          "description": "Level of workspace setup error",
          "$ref": "#/definitions/DiagnoseResultLevel",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "message": {
          "description": "Message of workspace setup error",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "DiagnoseResultLevel": {
      "description": "Level of workspace setup error",
      "enum": [
        "Warning",
        "Error",
        "Information"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DiagnoseResultLevel",
        "modelAsString": true
      }
    },
    "DiagnoseWorkspaceParameters": {
      "description": "Parameters to diagnose a workspace",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/DiagnoseRequestProperties"
        }
      }
    },
    "EncryptionKeyVaultUpdateProperties": {
      "required": [
        "keyIdentifier"
      ],
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      }
    },
    "EncryptionProperty": {
      "required": [
        "keyVaultProperties",
        "status"
      ],
      "type": "object",
      "properties": {
        "cosmosDbResourceId": {
          "description": "The byok cosmosdb account that customer brings to store customer's data\r\nwith encryption",
          "type": "string"
        },
        "identity": {
          "description": "Identity to be used with the keyVault",
          "$ref": "#/definitions/IdentityForCmk"
        },
        "keyVaultProperties": {
          "description": "KeyVault details to do the encryption",
          "$ref": "#/definitions/KeyVaultProperties"
        },
        "searchAccountResourceId": {
          "description": "The byok search account that customer brings to store customer's data\r\nwith encryption",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/EncryptionStatus"
        },
        "storageAccountResourceId": {
          "description": "The byok storage account that customer brings to store customer's data\r\nwith encryption",
          "type": "string"
        }
      }
    },
    "EncryptionStatus": {
      "description": "Indicates whether or not the encryption is enabled for the workspace.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EncryptionStatus",
        "modelAsString": true
      }
    },
    "EncryptionUpdateProperties": {
      "required": [
        "keyVaultProperties"
      ],
      "type": "object",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultUpdateProperties"
        }
      }
    },
    "EndpointDeploymentModel": {
      "type": "object",
      "properties": {
        "format": {
          "description": "Model format",
          "type": "string"
        },
        "name": {
          "description": "Model name.",
          "type": "string"
        },
        "source": {
          "description": "Optional. Deployment model source ARM resource ID.",
          "type": "string"
        },
        "version": {
          "description": "Model version.",
          "type": "string"
        }
      }
    },
    "EndpointDeploymentResourceProperties": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "failureReason": {
          "description": "The failure reason if the creation failed.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Read-only provision state status property.",
          "$ref": "#/definitions/DefaultResourceProvisioningState"
        },
        "type": {
          "description": "Kind of the deployment.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9._]",
          "type": "string"
        }
      },
      "discriminator": "type"
    },
    "EndpointDeploymentResourcePropertiesBasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      }
    },
    "EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
          }
        }
      }
    },
    "EndpointKeys": {
      "type": "object",
      "properties": {
        "keys": {
          "description": "Dictionary of Keys for the endpoint.",
          "$ref": "#/definitions/AccountApiKeys",
          "x-ms-secret": true
        }
      }
    },
    "EndpointModels": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "List of models.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountModel"
          }
        }
      }
    },
    "EndpointResourceProperties": {
      "required": [
        "endpointType"
      ],
      "type": "object",
      "properties": {
        "associatedResourceId": {
          "description": "Byo resource id for creating the built-in model service endpoints.",
          "type": "string",
          "format": "arm-id"
        },
        "endpointType": {
          "description": "Type of the endpoint.",
          "type": "string",
          "enum": [
            "Azure.OpenAI",
            "Azure.Speech",
            "Azure.ContentSafety",
            "Azure.Llama",
            "managedOnlineEndpoint"
          ],
          "x-ms-enum": {
            "name": "endpointType",
            "modelAsString": true
          }
        },
        "endpointUri": {
          "description": "Uri of the endpoint.",
          "type": "string",
          "format": "url"
        },
        "failureReason": {
          "description": "The failure reason if the creation failed.",
          "type": "string"
        },
        "name": {
          "description": "Name of the endpoint.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Read-only provision state status property.",
          "$ref": "#/definitions/DefaultResourceProvisioningState"
        },
        "shouldCreateAiServicesEndpoint": {
          "description": "Whether the proxy (non-byo) endpoint is a regular endpoint or a OneKeyV2 AI services account endpoint.",
          "type": "boolean"
        }
      },
      "discriminator": "endpointType"
    },
    "EndpointResourcePropertiesBasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      }
    },
    "EndpointResourcePropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
          }
        }
      }
    },
    "ExternalFQDNResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpointsPropertyBag"
          },
          "x-ms-identifiers": [
            "/properties/category"
          ]
        }
      }
    },
    "FQDNEndpoint": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "endpointDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpointDetail"
          },
          "x-ms-identifiers": [
            "port"
          ]
        }
      }
    },
    "FQDNEndpointDetail": {
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FQDNEndpoints": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpoint"
          },
          "x-ms-identifiers": [
            "domainName"
          ]
        }
      }
    },
    "FQDNEndpointsPropertyBag": {
      "description": "Property bag for FQDN endpoints result",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FQDNEndpoints"
        }
      }
    },
    "FeatureStoreSettings": {
      "type": "object",
      "properties": {
        "computeRuntime": {
          "$ref": "#/definitions/ComputeRuntimeDto"
        },
        "offlineStoreConnectionName": {
          "type": "string"
        },
        "onlineStoreConnectionName": {
          "type": "string"
        }
      }
    },
    "FqdnOutboundRule": {
      "description": "FQDN Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "FQDN"
    },
    "IdentityForCmk": {
      "description": "Identity object used for encryption.",
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "description": "UserAssignedIdentity to be used to fetch the encryption key from keyVault",
          "type": "string"
        }
      }
    },
    "IsolationMode": {
      "description": "Isolation mode for the managed network of a machine learning workspace.",
      "enum": [
        "Disabled",
        "AllowInternetOutbound",
        "AllowOnlyApprovedOutbound"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IsolationMode",
        "modelAsString": true
      }
    },
    "KeyVaultProperties": {
      "description": "Customer Key vault properties.",
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ],
      "type": "object",
      "properties": {
        "identityClientId": {
          "description": "Currently, we support only SystemAssigned MSI.\r\nWe need this when we support UserAssignedIdentities",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "KeyVault key identifier to encrypt the data",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "keyVaultArmId": {
          "description": "KeyVault Arm Id that contains the data encryption key",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      }
    },
    "ListNotebookKeysResult": {
      "type": "object",
      "properties": {
        "primaryAccessKey": {
          "description": "The primary access key of the Notebook",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "secondaryAccessKey": {
          "description": "The secondary access key of the Notebook",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ListStorageAccountKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "description": "The access key of the storage",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ListWorkspaceKeysResult": {
      "type": "object",
      "properties": {
        "appInsightsInstrumentationKey": {
          "description": "The access key of the workspace app insights",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "containerRegistryCredentials": {
          "$ref": "#/definitions/RegistryListCredentialsResult"
        },
        "notebookAccessKeys": {
          "$ref": "#/definitions/ListNotebookKeysResult"
        },
        "userStorageArmId": {
          "description": "The arm Id key of the workspace storage",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "userStorageKey": {
          "description": "The access key of the workspace storage",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ManagedIdentityAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionManagedIdentity"
        }
      },
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "ManagedNetworkProvisionOptions": {
      "description": "Managed Network Provisioning options for managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "includeSpark": {
          "type": "boolean"
        }
      }
    },
    "ManagedNetworkProvisionStatus": {
      "description": "Status of the Provisioning for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "sparkReady": {
          "type": "boolean"
        },
        "status": {
          "description": "Status for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/ManagedNetworkStatus"
        }
      }
    },
    "ManagedNetworkSettings": {
      "description": "Managed Network settings for a machine learning workspace.",
      "type": "object",
      "properties": {
        "isolationMode": {
          "description": "Isolation mode for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/IsolationMode"
        },
        "networkId": {
          "type": "string",
          "readOnly": true
        },
        "outboundRules": {
          "type": "object",
          "additionalProperties": {
            "description": "Outbound Rule for the managed network of a machine learning workspace.",
            "$ref": "#/definitions/OutboundRule"
          },
          "x-nullable": true
        },
        "status": {
          "description": "Status of the Provisioning for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/ManagedNetworkProvisionStatus"
        },
        "changeableIsolationModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IsolationMode"
          },
          "readOnly": true
        }
      }
    },
    "ManagedNetworkStatus": {
      "description": "Status for the managed network of a machine learning workspace.",
      "enum": [
        "Inactive",
        "Active"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ManagedNetworkStatus",
        "modelAsString": true
      }
    },
    "ManagedOnlineEndpointDeploymentResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "managedOnlineEndpoint"
    },
    "ManagedOnlineEndpointResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "managedOnlineEndpoint"
    },
    "ModelDeprecationInfo": {
      "description": "Cognitive Services account ModelDeprecationInfo.",
      "type": "object",
      "properties": {
        "fineTune": {
          "type": "string",
          "description": "The datetime of deprecation of the fineTune Model."
        },
        "inference": {
          "type": "string",
          "description": "The datetime of deprecation of the inference Model."
        }
      }
    },
    "ModelSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the model SKU."
        },
        "connectionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of connection ids."
        },
        "usageName": {
          "type": "string",
          "description": "The usage name of the model SKU."
        },
        "deprecationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The datetime of deprecation of the model SKU."
        },
        "capacity": {
          "type": "object",
          "description": "The capacity configuration.",
          "$ref": "#/definitions/CapacityConfig"
        },
        "rateLimits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallRateLimit"
          },
          "x-ms-identifiers": [],
          "description": "The list of rateLimit."
        }
      },
      "description": "Describes an available Cognitive Services Model SKU."
    },
    "NoneAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "NotebookAccessTokenResult": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "expiresIn": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "hostName": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "notebookResourceId": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "publicDns": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "refreshToken": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "scope": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "tokenType": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "NotebookPreparationError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NotebookResourceInfo": {
      "type": "object",
      "properties": {
        "fqdn": {
          "type": "string"
        },
        "isPrivateLinkEnabled": {
          "type": "boolean"
        },
        "notebookPreparationError": {
          "description": "The error that occurs when preparing notebook.",
          "$ref": "#/definitions/NotebookPreparationError"
        },
        "resourceId": {
          "description": "the data plane resourceId that used to initialize notebook component",
          "type": "string"
        }
      }
    },
    "OAuth2AuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionOAuth2"
        }
      },
      "x-ms-discriminator-value": "OAuth2"
    },
    "OpenAIEndpointDeploymentResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServiceEndpointDeploymentResourceProperties"
        },
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.OpenAI"
    },
    "OpenAIEndpointResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.OpenAI"
    },
    "OutboundRule": {
      "description": "Outbound Rule for the managed network of a machine learning workspace.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "category": {
          "description": "Category of a managed network Outbound Rule of a machine learning workspace.",
          "$ref": "#/definitions/RuleCategory"
        },
        "status": {
          "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
          "$ref": "#/definitions/RuleStatus"
        },
        "type": {
          "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
          "$ref": "#/definitions/RuleType"
        }
      },
      "discriminator": "type"
    },
    "OutboundRuleBasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Outbound Rule for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/OutboundRule"
        }
      }
    },
    "OutboundRuleListResult": {
      "description": "List of outbound rules for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundRuleBasicResource"
          }
        }
      }
    },
    "PATAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionPersonalAccessToken"
        }
      },
      "x-ms-discriminator-value": "PAT"
    },
    "Password": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "value": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "The Private Endpoint Connection resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "location": {
          "description": "Same as workspace location.",
          "type": "string"
        },
        "properties": {
          "description": "Private endpoint connection properties.",
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "description": "List of private endpoint connection associated with the specified workspace",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of private endpoint connections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Private endpoint connection properties.",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/WorkspacePrivateEndpointResource"
        },
        "privateLinkServiceConnectionState": {
          "description": "The connection state.",
          "$ref": "#/definitions/PrivateLinkServiceConnectionState"
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState"
        }
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateEndpointDestination": {
      "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "serviceResourceId": {
          "type": "string",
          "format": "arm-id"
        },
        "sparkEnabled": {
          "type": "boolean"
        },
        "sparkStatus": {
          "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
          "$ref": "#/definitions/RuleStatus"
        },
        "subresourceTarget": {
          "type": "string"
        }
      }
    },
    "PrivateEndpointOutboundRule": {
      "description": "Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/PrivateEndpointDestination"
        },
        "parentRuleName": {
          "description": "The dependency rule name.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "PrivateEndpoint"
    },
    "PrivateEndpointServiceConnectionStatus": {
      "description": "Connection status of the service consumer with the service provider\r\nPossible state transitions\r\nPending -> Approved (Service provider approves the connection request)\r\nPending -> Rejected (Service provider rejects the connection request)\r\nPending -> Disconnected (Service provider deletes the connection)\r\nApproved -> Rejected (Service provider rejects the approved connection)\r\nApproved -> Disconnected (Service provider deletes the connection)\r\nRejected -> Pending (Service consumer re-initiates the connection request that was rejected)\r\nRejected -> Disconnected (Service provider deletes the connection)",
      "enum": [
        "Approved",
        "Pending",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "location": {
          "description": "Same as workspace location.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of a private link resource.",
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "description": "A list of private link resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string"
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "description": "The private link resource Private link DNS zone name.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "type": "object",
      "properties": {
        "actionsRequired": {
          "description": "Some RP chose \"None\". Other RPs use this for region expansion.",
          "type": "string"
        },
        "description": {
          "description": "User-defined message that, per NRP doc, may be used for approval-related message.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus"
        }
      }
    },
    "ProvisioningState": {
      "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.",
      "enum": [
        "Unknown",
        "Updating",
        "Creating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "PublicNetworkAccessType": {
      "description": "The public network access flag.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PublicNetworkAccessType",
        "modelAsString": true
      }
    },
    "RaiBlocklistConfig": {
      "description": "Azure OpenAI blocklist config.",
      "type": "object",
      "properties": {
        "blocking": {
          "description": "If blocking would occur.",
          "type": "boolean"
        },
        "blocklistName": {
          "description": "Name of ContentFilter.",
          "type": "string"
        }
      }
    },
    "RaiBlocklistItemProperties": {
      "description": "RAI Custom Blocklist Item properties.",
      "type": "object",
      "properties": {
        "isRegex": {
          "description": "If the pattern is a regex pattern.",
          "type": "boolean"
        },
        "pattern": {
          "description": "Pattern to match against.",
          "type": "string"
        }
      }
    },
    "RaiBlocklistItemPropertiesBasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RAI Custom Blocklist Item properties.",
          "$ref": "#/definitions/RaiBlocklistItemProperties"
        }
      }
    },
    "RaiBlocklistItemPropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
          }
        }
      }
    },
    "RaiBlocklistProperties": {
      "description": "RAI Custom Blocklist properties.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the block list.",
          "type": "string"
        }
      }
    },
    "RaiBlocklistPropertiesBasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "RAI Custom Blocklist properties.",
          "$ref": "#/definitions/RaiBlocklistProperties"
        }
      }
    },
    "RaiBlocklistPropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
          }
        }
      }
    },
    "RaiPolicyContentFilter": {
      "description": "Azure OpenAI Content Filter.",
      "type": "object",
      "properties": {
        "allowedContentLevel": {
          "$ref": "#/definitions/AllowedContentLevel"
        },
        "blocking": {
          "description": "If blocking would occur.",
          "type": "boolean"
        },
        "enabled": {
          "description": "If the ContentFilter is enabled.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of ContentFilter.",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/RaiPolicyContentSource"
        }
      }
    },
    "RaiPolicyContentSource": {
      "description": "Content source to apply the Content Filters.",
      "enum": [
        "Prompt",
        "Completion"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RaiPolicyContentSource",
        "modelAsString": true
      }
    },
    "RaiPolicyMode": {
      "description": "Content Filters mode.",
      "enum": [
        "Default",
        "Deferred",
        "Blocking"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RaiPolicyMode",
        "modelAsString": true
      }
    },
    "RaiPolicyProperties": {
      "description": "Azure OpenAI Content Filters properties.",
      "type": "object",
      "properties": {
        "basePolicyName": {
          "description": "Name of the base Content Filters.",
          "type": "string"
        },
        "completionBlocklists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiBlocklistConfig"
          }
        },
        "contentFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiPolicyContentFilter"
          }
        },
        "mode": {
          "$ref": "#/definitions/RaiPolicyMode"
        },
        "type": {
          "$ref": "#/definitions/RaiPolicyType"
        },
        "promptBlocklists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiBlocklistConfig"
          }
        }
      }
    },
    "RaiPolicyPropertiesBasicResource": {
      "description": "Azure OpenAI Content Filters resource.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RaiPolicyProperties"
        }
      }
    },
    "RaiPolicyPropertiesBasicResourceArmPaginatedResult": {
      "description": "Azure OpenAI Content Filters resource list.",
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
          }
        }
      }
    },
    "RaiPolicyType": {
      "description": "Content Filters policy type.",
      "enum": [
        "UserManaged",
        "SystemManaged"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RaiPolicyType",
        "modelAsString": true
      }
    },
    "RegenerateServiceAccountKeyContent": {
      "type": "object",
      "properties": {
        "keyName": {
          "$ref": "#/definitions/ServiceAccountKeyName"
        }
      }
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "properties": {
        "location": {
          "description": "The location of the workspace ACR",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Password"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "username": {
          "description": "The username of the workspace ACR",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "RequestMatchPattern": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "method": {
          "type": "string"
        }
      }
    },
    "RuleAction": {
      "description": "The action enum for networking rule.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleAction",
        "modelAsString": true
      }
    },
    "RuleCategory": {
      "description": "Category of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "Required",
        "Recommended",
        "UserDefined",
        "Dependency"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleCategory",
        "modelAsString": true
      }
    },
    "RuleStatus": {
      "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "Inactive",
        "Active"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleStatus",
        "modelAsString": true
      }
    },
    "RuleType": {
      "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "FQDN",
        "PrivateEndpoint",
        "ServiceTag"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleType",
        "modelAsString": true
      }
    },
    "SASAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionSharedAccessSignature"
        }
      },
      "x-ms-discriminator-value": "SAS"
    },
    "ServerlessComputeSettings": {
      "type": "object",
      "properties": {
        "serverlessComputeCustomSubnet": {
          "description": "The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed",
          "type": "string",
          "format": "arm-id"
        },
        "serverlessComputeNoPublicIP": {
          "description": "The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint",
          "type": "boolean"
        }
      }
    },
    "ServiceAccountKeyName": {
      "enum": [
        "Key1",
        "Key2"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ServiceAccountKeyName",
        "modelAsString": true
      }
    },
    "ServiceManagedResourcesSettings": {
      "type": "object",
      "properties": {
        "cosmosDb": {
          "$ref": "#/definitions/CosmosDbSettings"
        }
      }
    },
    "ServicePrincipalAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionServicePrincipal"
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "ServiceTagDestination": {
      "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "action": {
          "description": "The action enum for networking rule.",
          "$ref": "#/definitions/RuleAction"
        },
        "addressPrefixes": {
          "description": "Optional, if provided, the ServiceTag property will be ignored.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "portRanges": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        }
      }
    },
    "ServiceTagOutboundRule": {
      "description": "Service Tag Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/ServiceTagDestination"
        }
      },
      "x-ms-discriminator-value": "ServiceTag"
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name of the private link",
          "type": "string"
        },
        "properties": {
          "description": "Properties of a shared private link resource.",
          "$ref": "#/definitions/SharedPrivateLinkResourceProperty",
          "x-ms-client-flatten": true
        }
      }
    },
    "SharedPrivateLinkResourceProperty": {
      "description": "Properties of a shared private link resource.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "group id of the private link",
          "type": "string"
        },
        "privateLinkResourceId": {
          "description": "the resource id that private link links to",
          "type": "string"
        },
        "requestMessage": {
          "description": "Request message",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus"
        }
      }
    },
    "SpeechEndpointDeploymentResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServiceEndpointDeploymentResourceProperties"
        },
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.Speech"
    },
    "SpeechEndpointResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.Speech"
    },
    "ThrottlingRule": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "renewalPeriod": {
          "type": "number"
        },
        "count": {
          "type": "number"
        },
        "minCount": {
          "type": "number"
        },
        "dynamicThrottlingEnabled": {
          "type": "boolean"
        },
        "matchPatterns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestMatchPattern"
          },
          "x-ms-identifiers": [
            "path",
            "method"
          ]
        }
      }
    },
    "UsernamePasswordAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionUsernamePassword"
        }
      },
      "x-ms-discriminator-value": "UsernamePassword"
    },
    "Workspace": {
      "description": "An object that represents a machine learning workspace.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/WorkspaceProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "WorkspaceConnectionAccessKey": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionApiKey": {
      "description": "Api key object for workspace connection credential.",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionManagedIdentity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionOAuth2": {
      "description": "ClientId and ClientSecret are required. Other properties are optional\r\ndepending on each OAuth2 provider's implementation.",
      "type": "object",
      "properties": {
        "authUrl": {
          "description": "Required by Concur connection category",
          "type": "string",
          "format": "url"
        },
        "clientId": {
          "type": "string",
          "description": "Client id in the format of UUID",
          "format": "uuid"
        },
        "clientSecret": {
          "type": "string",
          "x-ms-secret": true
        },
        "developerToken": {
          "description": "Required by GoogleAdWords connection category",
          "type": "string",
          "x-ms-secret": true
        },
        "password": {
          "type": "string",
          "x-ms-secret": true
        },
        "refreshToken": {
          "description": "Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho\r\nwhere user needs to get RefreshToken offline",
          "type": "string",
          "x-ms-secret": true
        },
        "tenantId": {
          "description": "Required by QuickBooks and Xero connection categories",
          "type": "string"
        },
        "username": {
          "description": "Concur, ServiceNow auth server AccessToken grant type is 'Password'\r\nwhich requires UsernamePassword",
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionPersonalAccessToken": {
      "type": "object",
      "properties": {
        "pat": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionPropertiesV2": {
      "required": [
        "authType"
      ],
      "type": "object",
      "properties": {
        "authType": {
          "description": "Authentication type of the connection target",
          "$ref": "#/definitions/ConnectionAuthType"
        },
        "category": {
          "description": "Category of the connection",
          "$ref": "#/definitions/ConnectionCategory"
        },
        "createdByWorkspaceArmId": {
          "type": "string",
          "format": "arm-id",
          "readOnly": true
        },
        "expiryTime": {
          "format": "date-time",
          "type": "string"
        },
        "group": {
          "description": "Group based on connection category",
          "$ref": "#/definitions/ConnectionGroup",
          "readOnly": true
        },
        "isSharedToAll": {
          "type": "boolean"
        },
        "metadata": {
          "description": "Store user metadata for this connection",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sharedUserList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string"
        }
      },
      "discriminator": "authType"
    },
    "WorkspaceConnectionPropertiesV2BasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      }
    },
    "WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
          }
        }
      }
    },
    "WorkspaceConnectionServicePrincipal": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionSharedAccessSignature": {
      "type": "object",
      "properties": {
        "sas": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionUpdateParameter": {
      "description": "The properties that the machine learning workspace connection will be updated with.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties that the machine learning workspace connection will be updated with.",
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      }
    },
    "WorkspaceConnectionUsernamePassword": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "securityToken": {
          "description": "Optional, required by connections like SalesForce for extra security in addition to UsernamePassword",
          "type": "string",
          "x-ms-secret": true
        },
        "username": {
          "type": "string"
        }
      }
    },
    "WorkspaceHubConfig": {
      "description": "WorkspaceHub's configuration object.",
      "type": "object",
      "properties": {
        "additionalWorkspaceStorageAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultWorkspaceResourceGroup": {
          "type": "string"
        }
      }
    },
    "WorkspaceListResult": {
      "description": "The result of a request to list machine learning workspaces.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        }
      }
    },
    "WorkspacePrivateEndpointResource": {
      "description": "The Private Endpoint resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "e.g. /subscriptions/{networkSubscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "subnetArmId": {
          "description": "The subnetId that the private endpoint is connected to.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "WorkspaceProperties": {
      "description": "The properties of a machine learning workspace.",
      "type": "object",
      "properties": {
        "allowPublicAccessWhenBehindVnet": {
          "description": "The flag to indicate whether to allow public access when behind VNet.",
          "type": "boolean"
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "associatedWorkspaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerRegistries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string"
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "discoveryUrl": {
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
          "type": "string"
        },
        "enableDataIsolation": {
          "type": "boolean"
        },
        "enableSoftwareBillOfMaterials": {
          "description": "Flag to tell if SoftwareBillOfMaterials should be enabled for this workspace",
          "type": "boolean"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty"
        },
        "existingWorkspaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featureStoreSettings": {
          "description": "Settings for feature store type workspace.",
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "hbiWorkspace": {
          "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
          "type": "boolean"
        },
        "hubResourceId": {
          "type": "string"
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "ipAllowlist": {
          "description": "The list of IPv4  addresses that are allowed to access the workspace.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyVault": {
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "keyVaults": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        },
        "mlFlowTrackingUri": {
          "description": "The URI associated with this workspace that machine learning flow must point at to set up tracking.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "notebookInfo": {
          "description": "The notebook info of Azure ML workspace.",
          "$ref": "#/definitions/NotebookResourceInfo",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "The list of private endpoint connections in the workspace.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-identifiers": [
            "name"
          ]
        },
        "privateLinkCount": {
          "format": "int32",
          "description": "Count of private connections in the workspace",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "provisioningState": {
          "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether requests from Public Network are allowed.",
          "$ref": "#/definitions/PublicNetworkAccessType"
        },
        "serverlessComputeSettings": {
          "description": "Settings for serverless compute in a workspace",
          "$ref": "#/definitions/ServerlessComputeSettings"
        },
        "serviceManagedResourcesSettings": {
          "description": "The service managed resource settings.",
          "$ref": "#/definitions/ServiceManagedResourcesSettings"
        },
        "serviceProvisionedResourceGroup": {
          "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "sharedPrivateLinkResources": {
          "description": "The list of shared private link resources in this workspace.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "softDeleteRetentionInDays": {
          "format": "int32",
          "description": "Retention time in days after workspace get soft deleted.",
          "type": "integer"
        },
        "storageAccount": {
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "storageHnsEnabled": {
          "description": "If the storage associated with the workspace has hierarchical namespace(HNS) enabled.",
          "type": "boolean",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "systemDatastoresAuthMode": {
          "description": "The auth mode used for accessing the system datastores of the workspace.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant id associated with this workspace.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "v1LegacyMode": {
          "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
          "type": "boolean"
        },
        "workspaceHubConfig": {
          "description": "WorkspaceHub's configuration object.",
          "$ref": "#/definitions/WorkspaceHubConfig"
        },
        "workspaceId": {
          "description": "The immutable id associated with this workspace.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "WorkspacePropertiesUpdateParameters": {
      "description": "The parameters for updating a machine learning workspace.",
      "type": "object",
      "properties": {
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string"
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "enableDataIsolation": {
          "type": "boolean"
        },
        "enableSoftwareBillOfMaterials": {
          "description": "Flag to tell if SoftwareBillOfMaterials should be enabled for this workspace",
          "type": "boolean"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionUpdateProperties"
        },
        "featureStoreSettings": {
          "description": "Settings for feature store type workspace.",
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "ipAllowlist": {
          "description": "The list of IPv4 addresses that are allowed to access the workspace.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "Whether requests from Public Network are allowed.",
          "$ref": "#/definitions/PublicNetworkAccessType"
        },
        "serverlessComputeSettings": {
          "description": "Settings for serverless compute in a workspace",
          "$ref": "#/definitions/ServerlessComputeSettings"
        },
        "serviceManagedResourcesSettings": {
          "description": "The service managed resource settings.",
          "$ref": "#/definitions/ServiceManagedResourcesSettings"
        },
        "softDeleteRetentionInDays": {
          "format": "int32",
          "description": "Retention time in days after workspace get soft deleted.",
          "type": "integer"
        },
        "v1LegacyMode": {
          "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
          "type": "boolean"
        }
      }
    },
    "WorkspaceUpdateParameters": {
      "description": "The parameters for updating a machine learning workspace.",
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "description": "The properties that the machine learning workspace will be updated with.",
          "$ref": "#/definitions/WorkspacePropertiesUpdateParameters",
          "x-ms-client-flatten": true
        },
        "sku": {
          "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "description": "The resource tags for the machine learning workspace.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "WorkspaceKindParameter": {
      "in": "query",
      "name": "kind",
      "description": "Kind of workspace.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skip",
      "description": "Continuation token for pagination.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "in": "path",
      "name": "workspaceName",
      "description": "Azure Machine Learning Workspace Name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
    },
    "WorkspaceForceToPurgeParameter": {
      "in": "query",
      "name": "forceToPurge",
      "description": "Flag to indicate delete is a purge request.",
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    },
    "TargetParameter": {
      "in": "query",
      "name": "target",
      "description": "Target of the workspace connection.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CategoryParameter": {
      "in": "query",
      "name": "category",
      "description": "Category of the workspace connection.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ConnectionName": {
      "in": "path",
      "name": "connectionName",
      "description": "Friendly name of the workspace connection",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
    },
    "DeploymentNameParameter": {
      "in": "path",
      "name": "deploymentName",
      "description": "Name of the deployment resource",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
    },
    "RaiPolicyNameParameter": {
      "in": "path",
      "name": "raiPolicyName",
      "description": "Name of the Rai Policy.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
    },
    "RaiBlocklistParameter": {
      "in": "path",
      "name": "raiBlocklistName",
      "description": "The name of the RaiBlocklist.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
    },
    "RaiBlocklistItemParameter": {
      "in": "path",
      "name": "raiBlocklistItemName",
      "description": "Name of the RaiBlocklist Item",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
    },
    "EndpointTypeParameter": {
      "in": "query",
      "name": "endpointType",
      "description": "Endpoint type filter",
      "type": "string",
      "enum": [
        "Azure.OpenAI",
        "Azure.Speech",
        "Azure.ContentSafety",
        "Azure.Llama",
        "managedOnlineEndpoint"
      ],
      "x-ms-enum": {
        "name": "endpointType",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "EndpointNameParameter": {
      "in": "path",
      "name": "endpointName",
      "description": "Name of the endpoint resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
    },
    "RuleName": {
      "in": "path",
      "name": "ruleName",
      "description": "Name of the workspace managed network outbound rule",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
    },
    "PrivateEndpointConnectionName": {
      "in": "path",
      "name": "privateEndpointConnectionName",
      "description": "NRP Private Endpoint Connection Name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
