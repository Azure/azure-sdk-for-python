# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Dict, Mapping, Optional, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class AzureOpenAIDeployment(_model_base.Model):
    """Azure OpenAI Deployment Information.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar name: The deployment name. Required.
    :vartype name: str
    :ivar model_name: The name of the model to deploy. Required.
    :vartype model_name: str
    :ivar model_version: The model version to deploy. Required.
    :vartype model_version: str
    :ivar connection_name: The name of the connection to deploy to. Required.
    :vartype connection_name: str
    :ivar id: The ARM resource id of the deployment. Required.
    :vartype id: str
    """

    name: str = rest_field()
    """The deployment name. Required."""
    model_name: str = rest_field()
    """The name of the model to deploy. Required."""
    model_version: str = rest_field()
    """The model version to deploy. Required."""
    connection_name: str = rest_field()
    """The name of the connection to deploy to. Required."""
    id: str = rest_field(visibility=["read"])
    """The ARM resource id of the deployment. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        model_name: str,
        model_version: str,
        connection_name: str,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ServerlessEndpoint(_model_base.Model):
    """Serverless Endpoint Definition.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar name: The deployment name. Required.
    :vartype name: str
    :ivar auth_mode: Authentication mode of the endpoint.
    :vartype auth_mode: str
    :ivar model_id: The id of the model to deploy. Required.
    :vartype model_id: str
    :ivar location: Location in which to create endpoint.
    :vartype location: str
    :ivar provisioning_state: Provisioning state of the endpoint. Required. Is either a str type or
     a int type.
    :vartype provisioning_state: str or int
    :ivar tags: Tags for the endpoint.
    :vartype tags: dict[str, str]
    :ivar properties: Properties of the endpoint.
    :vartype properties: dict[str, str]
    :ivar description: Descripton of the endpoint.
    :vartype description: str
    :ivar scoring_uri: Scoring uri of the endpoint. Required.
    :vartype scoring_uri: str
    :ivar system_data: System data of the endpoint. Required.
    :vartype system_data: ~azure.machinelearningservices.models.SystemData
    """

    name: str = rest_field(is_required=True)
    """The deployment name. Required."""
    auth_mode: Optional[str] = rest_field()
    """Authentication mode of the endpoint."""
    model_id: str = rest_field(is_required=True)
    """The id of the model to deploy. Required."""
    location: Optional[str] = rest_field()
    """Location in which to create endpoint."""
    provisioning_state: Optional[str] = rest_field(visibility=["read"])
    """Provisioning state of the endpoint. Required. Is either a str type or a int type."""
    tags: Optional[Dict[str, str]] = rest_field()
    """Tags for the endpoint."""
    properties: Optional[Dict[str, str]] = rest_field()
    """Properties of the endpoint."""
    description: Optional[str] = rest_field()
    """Descripton of the endpoint."""
    system_data: "_models.SystemData" = rest_field(visibility=["read"])
    """System data of the endpoint. Required."""
    id: str = rest_field(visibility=["read"])
    """ARM resource id of the endpoint. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        model_id: str,
        auth_mode: Optional[str] = None,
        location: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional[Dict[str, str]] = None,
        description: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class SystemData(_model_base.Model):
    """System data information.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar created_by: Required.
    :vartype created_by: str
    :ivar created_by_type: Required.
    :vartype created_by_type: str
    :ivar created_at: Required.
    :vartype created_at: str
    :ivar last_modified_by: Required.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: Required.
    :vartype last_modified_by_type: str
    :ivar last_modified_at: Required.
    :vartype last_modified_at: str
    """

    created_by: str = rest_field(visibility=["read"])
    """Required."""
    created_by_type: str = rest_field(visibility=["read"])
    """Required."""
    created_at: str = rest_field(visibility=["read"])
    """Required."""
    last_modified_by: str = rest_field(visibility=["read"])
    """Required."""
    last_modified_by_type: str = rest_field(visibility=["read"])
    """Required."""
    last_modified_at: str = rest_field(visibility=["read"])
    """Required."""
