# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=useless-super-delegation

import datetime
from typing import Any, Dict, Mapping, Optional, TYPE_CHECKING, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    from .. import models as _models


class Index(_model_base.Model):
    """Index resource Definition.

    :ivar id: Fully qualified resource Id:
     azureml://workspace/{workspaceName}/indexes/{name}/versions/{version} of the index. Required.
    :vartype id: str
    :ivar stage: Update stage to 'Archive' to archive the asset. Default is Development, which
     means the asset is under development.
    :vartype stage: str
    :ivar description: Description information of the asset.
    :vartype description: str
    :ivar system_data: Metadata containing createdBy and modifiedBy information.
    :vartype system_data: ~azure.ai.resources.autogen.models.SystemData
    :ivar tags: Asset's tags. Unlike properties, tags are fully mutable.
    :vartype tags: dict[str, str]
    :ivar properties: Asset's properties. Unlike tags, properties are add-only. Once added, a
     property cannot be removed.
    :vartype properties: dict[str, str]
    :ivar storage_uri: Default workspace blob storage Uri. Should work across storage types and
     auth scenarios. Required.
    :vartype storage_uri: str
    """

    id: str = rest_field(visibility=["read"])
    """Fully qualified resource Id:
     azureml://workspace/{workspaceName}/indexes/{name}/versions/{version} of the index. Required."""
    stage: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Update stage to 'Archive' to archive the asset. Default is Development, which means the asset
     is under development."""
    description: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Description information of the asset."""
    system_data: Optional["_models.SystemData"] = rest_field(name="systemData", visibility=["read"])
    """Metadata containing createdBy and modifiedBy information."""
    tags: Optional[Dict[str, str]] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Asset's tags. Unlike properties, tags are fully mutable."""
    properties: Optional[Dict[str, str]] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Asset's properties. Unlike tags, properties are add-only. Once added, a property cannot be
     removed."""
    storage_uri: str = rest_field(name="storageUri", visibility=["read", "create", "update", "delete", "query"])
    """Default workspace blob storage Uri. Should work across storage types and auth scenarios.
     Required."""

    @overload
    def __init__(
        self,
        *,
        storage_uri: str,
        stage: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional[Dict[str, str]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class Prompt(_model_base.Model):
    """Prompt resource definition.

    :ivar id: Fully qualified resource Id:
     azureml://workspace/{workspaceName}/indexes/{name}/versions/{version} of the index. Required.
    :vartype id: str
    :ivar stage: Update stage to 'Archive' to archive the asset. Default is Development, which
     means the asset is under development.
    :vartype stage: str
    :ivar description: Description information of the asset.
    :vartype description: str
    :ivar system_data: Metadata containing createdBy and modifiedBy information.
    :vartype system_data: ~azure.ai.resources.autogen.models.SystemData
    :ivar tags: Asset's tags. Unlike properties, tags are fully mutable.
    :vartype tags: dict[str, str]
    :ivar properties: Asset's properties. Unlike tags, properties are add-only. Once added, a
     property cannot be removed.
    :vartype properties: dict[str, str]
    :ivar data_uri: Default workspace blob storage Ui. Should work across storage types and auth
     scenarios. Required.
    :vartype data_uri: str
    :ivar template_path: Relative path of the prompt data file at the dataUri location. Required.
    :vartype template_path: str
    """

    id: str = rest_field(visibility=["read"])
    """Fully qualified resource Id:
     azureml://workspace/{workspaceName}/indexes/{name}/versions/{version} of the index. Required."""
    stage: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Update stage to 'Archive' to archive the asset. Default is Development, which means the asset
     is under development."""
    description: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Description information of the asset."""
    system_data: Optional["_models.SystemData"] = rest_field(name="systemData", visibility=["read"])
    """Metadata containing createdBy and modifiedBy information."""
    tags: Optional[Dict[str, str]] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Asset's tags. Unlike properties, tags are fully mutable."""
    properties: Optional[Dict[str, str]] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Asset's properties. Unlike tags, properties are add-only. Once added, a property cannot be
     removed."""
    data_uri: str = rest_field(name="dataUri", visibility=["read", "create", "update", "delete", "query"])
    """Default workspace blob storage Ui. Should work across storage types and auth scenarios.
     Required."""
    template_path: str = rest_field(name="templatePath", visibility=["read", "create", "update", "delete", "query"])
    """Relative path of the prompt data file at the dataUri location. Required."""

    @overload
    def __init__(
        self,
        *,
        data_uri: str,
        template_path: str,
        stage: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional[Dict[str, str]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class SystemData(_model_base.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_at: The timestamp the resource was created at.
    :vartype created_at: ~datetime.datetime
    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The identity type that created the resource.
    :vartype created_by_type: str
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    created_at: Optional[datetime.datetime] = rest_field(name="createdAt", visibility=["read"], format="rfc3339")
    """The timestamp the resource was created at."""
    created_by: Optional[str] = rest_field(name="createdBy", visibility=["read"])
    """The identity that created the resource."""
    created_by_type: Optional[str] = rest_field(name="createdByType", visibility=["read"])
    """The identity type that created the resource."""
    last_modified_at: Optional[datetime.datetime] = rest_field(
        name="lastModifiedAt", visibility=["read"], format="rfc3339"
    )
    """The timestamp of resource last modification (UTC)."""


class VersionInfo(_model_base.Model):
    """Next version definition.

    :ivar next_version: Next version as defined by the server. The server keeps track of all
     versions that are string-representations of integers. If one exists, the nextVersion will be a
     string representation of the highest integer value + 1. Otherwise, the nextVersion will default
     to '1'.
    :vartype next_version: int
    :ivar latest_version: Current latest version of the resource. Required.
    :vartype latest_version: str
    """

    next_version: Optional[int] = rest_field(
        name="nextVersion", visibility=["read", "create", "update", "delete", "query"]
    )
    """Next version as defined by the server. The server keeps track of all versions that are
     string-representations of integers. If one exists, the nextVersion will be a string
     representation of the highest integer value + 1. Otherwise, the nextVersion will default to
     '1'."""
    latest_version: str = rest_field(name="latestVersion", visibility=["read", "create", "update", "delete", "query"])
    """Current latest version of the resource. Required."""

    @overload
    def __init__(
        self,
        *,
        latest_version: str,
        next_version: Optional[int] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
