# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, TYPE_CHECKING

from azure.core.rest import HttpRequest, HttpResponse
from azure.mgmt.core import ARMPipelineClient

from . import models as _models
from .._serialization import Deserializer, Serializer
from ._configuration import AzureMachineLearningWorkspacesConfiguration
from .operations import (
    DeleteOperations,
    EventsOperations,
    ExperimentsOperations,
    MetricOperations,
    RunArtifactsOperations,
    RunOperations,
    RunsOperations,
    SpansOperations,
)

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials import TokenCredential


class AzureMachineLearningWorkspaces:  # pylint: disable=client-accepts-api-version-keyword,too-many-instance-attributes
    """AzureMachineLearningWorkspaces.

    :ivar delete: DeleteOperations operations
    :vartype delete: azure.mgmt.machinelearningservices.operations.DeleteOperations
    :ivar events: EventsOperations operations
    :vartype events: azure.mgmt.machinelearningservices.operations.EventsOperations
    :ivar experiments: ExperimentsOperations operations
    :vartype experiments: azure.mgmt.machinelearningservices.operations.ExperimentsOperations
    :ivar metric: MetricOperations operations
    :vartype metric: azure.mgmt.machinelearningservices.operations.MetricOperations
    :ivar runs: RunsOperations operations
    :vartype runs: azure.mgmt.machinelearningservices.operations.RunsOperations
    :ivar run_artifacts: RunArtifactsOperations operations
    :vartype run_artifacts: azure.mgmt.machinelearningservices.operations.RunArtifactsOperations
    :ivar run: RunOperations operations
    :vartype run: azure.mgmt.machinelearningservices.operations.RunOperations
    :ivar spans: SpansOperations operations
    :vartype spans: azure.mgmt.machinelearningservices.operations.SpansOperations
    :param credential: Credential needed for the client to connect to Azure. Required.
    :type credential: ~azure.core.credentials.TokenCredential
    :param base_url: Service URL. Required. Default value is "".
    :type base_url: str
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no
     Retry-After header is present.
    """

    def __init__(self, credential: "TokenCredential", base_url: str = "", **kwargs: Any) -> None:
        self._config = AzureMachineLearningWorkspacesConfiguration(credential=credential, **kwargs)
        self._client: ARMPipelineClient = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in _models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self._serialize.client_side_validation = False
        self.delete = DeleteOperations(self._client, self._config, self._serialize, self._deserialize)
        self.events = EventsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.experiments = ExperimentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.metric = MetricOperations(self._client, self._config, self._serialize, self._deserialize)
        self.runs = RunsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.run_artifacts = RunArtifactsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.run = RunOperations(self._client, self._config, self._serialize, self._deserialize)
        self.spans = SpansOperations(self._client, self._config, self._serialize, self._deserialize)

    def _send_request(self, request: HttpRequest, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client._send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, **kwargs)

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> "AzureMachineLearningWorkspaces":
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)
