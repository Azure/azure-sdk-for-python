# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AKSProperties(Model):
    """AKS properties.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param cluster_fqdn: Cluster full qualified domain name
    :type cluster_fqdn: str
    :ivar system_services: System services
    :vartype system_services:
     list[~azure.mgmt.machinelearningservices.models.SystemService]
    :param agent_count: Number of agents
    :type agent_count: int
    :param agent_vm_size: Agent virtual machine size
    :type agent_vm_size: str
    :param ssl_configuration: SSL configuration
    :type ssl_configuration:
     ~azure.mgmt.machinelearningservices.models.SslConfiguration
    :param aks_networking_configuration: AKS networking configuration for vnet
    :type aks_networking_configuration:
     ~azure.mgmt.machinelearningservices.models.AksNetworkingConfiguration
    """

    _validation = {
        'system_services': {'readonly': True},
        'agent_count': {'minimum': 1},
    }

    _attribute_map = {
        'cluster_fqdn': {'key': 'clusterFqdn', 'type': 'str'},
        'system_services': {'key': 'systemServices', 'type': '[SystemService]'},
        'agent_count': {'key': 'agentCount', 'type': 'int'},
        'agent_vm_size': {'key': 'agentVMSize', 'type': 'str'},
        'ssl_configuration': {'key': 'sslConfiguration', 'type': 'SslConfiguration'},
        'aks_networking_configuration': {'key': 'aksNetworkingConfiguration', 'type': 'AksNetworkingConfiguration'},
    }

    def __init__(self, **kwargs):
        super(AKSProperties, self).__init__(**kwargs)
        self.cluster_fqdn = kwargs.get('cluster_fqdn', None)
        self.system_services = None
        self.agent_count = kwargs.get('agent_count', None)
        self.agent_vm_size = kwargs.get('agent_vm_size', None)
        self.ssl_configuration = kwargs.get('ssl_configuration', None)
        self.aks_networking_configuration = kwargs.get('aks_networking_configuration', None)
