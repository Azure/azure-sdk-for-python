# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import ProviderOperationsOperations  # type: ignore
from ._operations import LabsOperations  # type: ignore
from ._operations import GlobalSchedulesOperations  # type: ignore
from ._operations import SchedulesOperations  # type: ignore
from ._operations import ServiceFabricSchedulesOperations  # type: ignore
from ._operations import VirtualMachineSchedulesOperations  # type: ignore
from ._operations import ArtifactSourcesOperations  # type: ignore
from ._operations import ArmTemplatesOperations  # type: ignore
from ._operations import ArtifactsOperations  # type: ignore
from ._operations import CostsOperations  # type: ignore
from ._operations import CustomImagesOperations  # type: ignore
from ._operations import FormulasOperations  # type: ignore
from ._operations import GalleryImagesOperations  # type: ignore
from ._operations import NotificationChannelsOperations  # type: ignore
from ._operations import PoliciesOperations  # type: ignore
from ._operations import PolicySetsOperations  # type: ignore
from ._operations import ServiceRunnersOperations  # type: ignore
from ._operations import UsersOperations  # type: ignore
from ._operations import DisksOperations  # type: ignore
from ._operations import EnvironmentsOperations  # type: ignore
from ._operations import SecretsOperations  # type: ignore
from ._operations import ServiceFabricsOperations  # type: ignore
from ._operations import VirtualMachinesOperations  # type: ignore
from ._operations import VirtualNetworksOperations  # type: ignore
from ._operations import Operations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ProviderOperationsOperations",
    "LabsOperations",
    "GlobalSchedulesOperations",
    "SchedulesOperations",
    "ServiceFabricSchedulesOperations",
    "VirtualMachineSchedulesOperations",
    "ArtifactSourcesOperations",
    "ArmTemplatesOperations",
    "ArtifactsOperations",
    "CostsOperations",
    "CustomImagesOperations",
    "FormulasOperations",
    "GalleryImagesOperations",
    "NotificationChannelsOperations",
    "PoliciesOperations",
    "PolicySetsOperations",
    "ServiceRunnersOperations",
    "UsersOperations",
    "DisksOperations",
    "EnvironmentsOperations",
    "SecretsOperations",
    "ServiceFabricsOperations",
    "VirtualMachinesOperations",
    "VirtualNetworksOperations",
    "Operations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
