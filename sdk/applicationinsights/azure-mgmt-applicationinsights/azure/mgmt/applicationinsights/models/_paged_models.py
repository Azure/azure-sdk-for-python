# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.paging import Paged


class OperationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`Operation <azure.mgmt.applicationinsights.models.Operation>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Operation]'}
    }

    def __init__(self, *args, **kwargs):

        super(OperationPaged, self).__init__(*args, **kwargs)
class AnnotationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`Annotation <azure.mgmt.applicationinsights.models.Annotation>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Annotation]'}
    }

    def __init__(self, *args, **kwargs):

        super(AnnotationPaged, self).__init__(*args, **kwargs)
class ApplicationInsightsComponentAPIKeyPaged(Paged):
    """
    A paging container for iterating over a list of :class:`ApplicationInsightsComponentAPIKey <azure.mgmt.applicationinsights.models.ApplicationInsightsComponentAPIKey>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[ApplicationInsightsComponentAPIKey]'}
    }

    def __init__(self, *args, **kwargs):

        super(ApplicationInsightsComponentAPIKeyPaged, self).__init__(*args, **kwargs)
class ApplicationInsightsComponentPaged(Paged):
    """
    A paging container for iterating over a list of :class:`ApplicationInsightsComponent <azure.mgmt.applicationinsights.models.ApplicationInsightsComponent>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[ApplicationInsightsComponent]'}
    }

    def __init__(self, *args, **kwargs):

        super(ApplicationInsightsComponentPaged, self).__init__(*args, **kwargs)
class WorkItemConfigurationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`WorkItemConfiguration <azure.mgmt.applicationinsights.models.WorkItemConfiguration>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[WorkItemConfiguration]'}
    }

    def __init__(self, *args, **kwargs):

        super(WorkItemConfigurationPaged, self).__init__(*args, **kwargs)
class ApplicationInsightsComponentWebTestLocationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`ApplicationInsightsComponentWebTestLocation <azure.mgmt.applicationinsights.models.ApplicationInsightsComponentWebTestLocation>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[ApplicationInsightsComponentWebTestLocation]'}
    }

    def __init__(self, *args, **kwargs):

        super(ApplicationInsightsComponentWebTestLocationPaged, self).__init__(*args, **kwargs)
class WebTestPaged(Paged):
    """
    A paging container for iterating over a list of :class:`WebTest <azure.mgmt.applicationinsights.models.WebTest>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[WebTest]'}
    }

    def __init__(self, *args, **kwargs):

        super(WebTestPaged, self).__init__(*args, **kwargs)
class WorkbookPaged(Paged):
    """
    A paging container for iterating over a list of :class:`Workbook <azure.mgmt.applicationinsights.models.Workbook>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Workbook]'}
    }

    def __init__(self, *args, **kwargs):

        super(WorkbookPaged, self).__init__(*args, **kwargs)
