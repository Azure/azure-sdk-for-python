# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.paging import Paged


class PolicyTrackedResourcePaged(Paged):
    """
    A paging container for iterating over a list of :class:`PolicyTrackedResource <azure.mgmt.policyinsights.models.PolicyTrackedResource>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[PolicyTrackedResource]'}
    }

    def __init__(self, *args, **kwargs):

        super(PolicyTrackedResourcePaged, self).__init__(*args, **kwargs)
class RemediationDeploymentPaged(Paged):
    """
    A paging container for iterating over a list of :class:`RemediationDeployment <azure.mgmt.policyinsights.models.RemediationDeployment>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[RemediationDeployment]'}
    }

    def __init__(self, *args, **kwargs):

        super(RemediationDeploymentPaged, self).__init__(*args, **kwargs)
class RemediationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`Remediation <azure.mgmt.policyinsights.models.Remediation>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Remediation]'}
    }

    def __init__(self, *args, **kwargs):

        super(RemediationPaged, self).__init__(*args, **kwargs)
class SlimPolicyMetadataPaged(Paged):
    """
    A paging container for iterating over a list of :class:`SlimPolicyMetadata <azure.mgmt.policyinsights.models.SlimPolicyMetadata>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[SlimPolicyMetadata]'}
    }

    def __init__(self, *args, **kwargs):

        super(SlimPolicyMetadataPaged, self).__init__(*args, **kwargs)
