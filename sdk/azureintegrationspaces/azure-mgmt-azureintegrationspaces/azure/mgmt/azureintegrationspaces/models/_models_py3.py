# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class Application(TrackedResource):
    """An integration application under space.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.azureintegrationspaces.models.ProvisioningState
    :ivar description: The description of the resource.
    :vartype description: str
    :ivar tracking_data_stores: The tracking data stores.
    :vartype tracking_data_stores: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.TrackingDataStore]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "tracking_data_stores": {"key": "properties.trackingDataStores", "type": "{TrackingDataStore}"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        description: Optional[str] = None,
        tracking_data_stores: Optional[Dict[str, "_models.TrackingDataStore"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword description: The description of the resource.
        :paramtype description: str
        :keyword tracking_data_stores: The tracking data stores.
        :paramtype tracking_data_stores: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.TrackingDataStore]
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.provisioning_state = None
        self.description = description
        self.tracking_data_stores = tracking_data_stores


class ApplicationListResult(_serialization.Model):
    """The response of a Application list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Application items on this page. Required.
    :vartype value: list[~azure.mgmt.azureintegrationspaces.models.Application]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Application]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Application"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Application items on this page. Required.
        :paramtype value: list[~azure.mgmt.azureintegrationspaces.models.Application]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class ApplicationResource(ProxyResource):
    """A resource under application.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.azureintegrationspaces.models.ProvisioningState
    :ivar resource_type: The type of the application resource.
    :vartype resource_type: str
    :ivar resource_id: The Arm id of the application resource.
    :vartype resource_id: str
    :ivar resource_kind: The kind of the application resource.
    :vartype resource_kind: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "resource_type": {"key": "properties.resourceType", "type": "str"},
        "resource_id": {"key": "properties.resourceId", "type": "str"},
        "resource_kind": {"key": "properties.resourceKind", "type": "str"},
    }

    def __init__(
        self,
        *,
        resource_type: Optional[str] = None,
        resource_id: Optional[str] = None,
        resource_kind: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword resource_type: The type of the application resource.
        :paramtype resource_type: str
        :keyword resource_id: The Arm id of the application resource.
        :paramtype resource_id: str
        :keyword resource_kind: The kind of the application resource.
        :paramtype resource_kind: str
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.resource_type = resource_type
        self.resource_id = resource_id
        self.resource_kind = resource_kind


class ApplicationResourceListResult(_serialization.Model):
    """The response of a ApplicationResource list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The ApplicationResource items on this page. Required.
    :vartype value: list[~azure.mgmt.azureintegrationspaces.models.ApplicationResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ApplicationResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.ApplicationResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The ApplicationResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.azureintegrationspaces.models.ApplicationResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ApplicationResourceUpdate(_serialization.Model):
    """The type used for update operations of the ApplicationResource.

    :ivar resource_type: The type of the application resource.
    :vartype resource_type: str
    :ivar resource_id: The Arm id of the application resource.
    :vartype resource_id: str
    :ivar resource_kind: The kind of the application resource.
    :vartype resource_kind: str
    """

    _attribute_map = {
        "resource_type": {"key": "properties.resourceType", "type": "str"},
        "resource_id": {"key": "properties.resourceId", "type": "str"},
        "resource_kind": {"key": "properties.resourceKind", "type": "str"},
    }

    def __init__(
        self,
        *,
        resource_type: Optional[str] = None,
        resource_id: Optional[str] = None,
        resource_kind: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword resource_type: The type of the application resource.
        :paramtype resource_type: str
        :keyword resource_id: The Arm id of the application resource.
        :paramtype resource_id: str
        :keyword resource_kind: The kind of the application resource.
        :paramtype resource_kind: str
        """
        super().__init__(**kwargs)
        self.resource_type = resource_type
        self.resource_id = resource_id
        self.resource_kind = resource_kind


class ApplicationUpdate(_serialization.Model):
    """The type used for update operations of the Application.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar description: The description of the resource.
    :vartype description: str
    :ivar tracking_data_stores: The tracking data stores.
    :vartype tracking_data_stores: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.TrackingDataStore]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "description": {"key": "properties.description", "type": "str"},
        "tracking_data_stores": {"key": "properties.trackingDataStores", "type": "{TrackingDataStore}"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        description: Optional[str] = None,
        tracking_data_stores: Optional[Dict[str, "_models.TrackingDataStore"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword description: The description of the resource.
        :paramtype description: str
        :keyword tracking_data_stores: The tracking data stores.
        :paramtype tracking_data_stores: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.TrackingDataStore]
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.description = description
        self.tracking_data_stores = tracking_data_stores


class BusinessProcess(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """A business process under application.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.azureintegrationspaces.models.ProvisioningState
    :ivar version: The version of the business process.
    :vartype version: str
    :ivar description: The description of the business process.
    :vartype description: str
    :ivar table_name: The table name of the business process.
    :vartype table_name: str
    :ivar tracking_data_store_reference_name: The tracking data store reference name.
    :vartype tracking_data_store_reference_name: str
    :ivar identifier: The business process identifier.
    :vartype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
    :ivar business_process_stages: The business process stages.
    :vartype business_process_stages: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
    :ivar business_process_mapping: The business process mapping.
    :vartype business_process_mapping: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "version": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "table_name": {"key": "properties.tableName", "type": "str"},
        "tracking_data_store_reference_name": {"key": "properties.trackingDataStoreReferenceName", "type": "str"},
        "identifier": {"key": "properties.identifier", "type": "BusinessProcessIdentifier"},
        "business_process_stages": {"key": "properties.businessProcessStages", "type": "{BusinessProcessStage}"},
        "business_process_mapping": {
            "key": "properties.businessProcessMapping",
            "type": "{BusinessProcessMappingItem}",
        },
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        table_name: Optional[str] = None,
        tracking_data_store_reference_name: Optional[str] = None,
        identifier: Optional["_models.BusinessProcessIdentifier"] = None,
        business_process_stages: Optional[Dict[str, "_models.BusinessProcessStage"]] = None,
        business_process_mapping: Optional[Dict[str, "_models.BusinessProcessMappingItem"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the business process.
        :paramtype description: str
        :keyword table_name: The table name of the business process.
        :paramtype table_name: str
        :keyword tracking_data_store_reference_name: The tracking data store reference name.
        :paramtype tracking_data_store_reference_name: str
        :keyword identifier: The business process identifier.
        :paramtype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
        :keyword business_process_stages: The business process stages.
        :paramtype business_process_stages: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
        :keyword business_process_mapping: The business process mapping.
        :paramtype business_process_mapping: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.version = None
        self.description = description
        self.table_name = table_name
        self.tracking_data_store_reference_name = tracking_data_store_reference_name
        self.identifier = identifier
        self.business_process_stages = business_process_stages
        self.business_process_mapping = business_process_mapping


class BusinessProcessDevelopmentArtifactProperties(_serialization.Model):
    """The properties of business process development artifact.

    :ivar description: The description of the business process.
    :vartype description: str
    :ivar identifier: The business process identifier.
    :vartype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
    :ivar business_process_stages: The business process stages.
    :vartype business_process_stages: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
    :ivar business_process_mapping: The business process mapping.
    :vartype business_process_mapping: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
    :ivar tracking_profiles: The tracking profile for the business process.
    :vartype tracking_profiles: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.TrackingProfileDefinition]
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "identifier": {"key": "identifier", "type": "BusinessProcessIdentifier"},
        "business_process_stages": {"key": "businessProcessStages", "type": "{BusinessProcessStage}"},
        "business_process_mapping": {"key": "businessProcessMapping", "type": "{BusinessProcessMappingItem}"},
        "tracking_profiles": {"key": "trackingProfiles", "type": "{TrackingProfileDefinition}"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        identifier: Optional["_models.BusinessProcessIdentifier"] = None,
        business_process_stages: Optional[Dict[str, "_models.BusinessProcessStage"]] = None,
        business_process_mapping: Optional[Dict[str, "_models.BusinessProcessMappingItem"]] = None,
        tracking_profiles: Optional[Dict[str, "_models.TrackingProfileDefinition"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the business process.
        :paramtype description: str
        :keyword identifier: The business process identifier.
        :paramtype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
        :keyword business_process_stages: The business process stages.
        :paramtype business_process_stages: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
        :keyword business_process_mapping: The business process mapping.
        :paramtype business_process_mapping: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
        :keyword tracking_profiles: The tracking profile for the business process.
        :paramtype tracking_profiles: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.TrackingProfileDefinition]
        """
        super().__init__(**kwargs)
        self.description = description
        self.identifier = identifier
        self.business_process_stages = business_process_stages
        self.business_process_mapping = business_process_mapping
        self.tracking_profiles = tracking_profiles


class BusinessProcessIdentifier(_serialization.Model):
    """The properties of business process identifier.

    :ivar property_name: The property name of the business process identifier.
    :vartype property_name: str
    :ivar property_type: The property type of the business process identifier.
    :vartype property_type: str
    """

    _attribute_map = {
        "property_name": {"key": "propertyName", "type": "str"},
        "property_type": {"key": "propertyType", "type": "str"},
    }

    def __init__(
        self, *, property_name: Optional[str] = None, property_type: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword property_name: The property name of the business process identifier.
        :paramtype property_name: str
        :keyword property_type: The property type of the business process identifier.
        :paramtype property_type: str
        """
        super().__init__(**kwargs)
        self.property_name = property_name
        self.property_type = property_type


class BusinessProcessListResult(_serialization.Model):
    """The response of a BusinessProcess list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The BusinessProcess items on this page. Required.
    :vartype value: list[~azure.mgmt.azureintegrationspaces.models.BusinessProcess]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[BusinessProcess]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.BusinessProcess"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The BusinessProcess items on this page. Required.
        :paramtype value: list[~azure.mgmt.azureintegrationspaces.models.BusinessProcess]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class BusinessProcessMappingItem(_serialization.Model):
    """The properties of business process mapping.

    :ivar logic_app_resource_id: The logic app resource id.
    :vartype logic_app_resource_id: str
    :ivar workflow_name: The workflow name within the logic app.
    :vartype workflow_name: str
    :ivar operation_name: The operation name.
    :vartype operation_name: str
    :ivar operation_type: The mapping item operation type of the business process.
    :vartype operation_type: str
    """

    _attribute_map = {
        "logic_app_resource_id": {"key": "logicAppResourceId", "type": "str"},
        "workflow_name": {"key": "workflowName", "type": "str"},
        "operation_name": {"key": "operationName", "type": "str"},
        "operation_type": {"key": "operationType", "type": "str"},
    }

    def __init__(
        self,
        *,
        logic_app_resource_id: Optional[str] = None,
        workflow_name: Optional[str] = None,
        operation_name: Optional[str] = None,
        operation_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword logic_app_resource_id: The logic app resource id.
        :paramtype logic_app_resource_id: str
        :keyword workflow_name: The workflow name within the logic app.
        :paramtype workflow_name: str
        :keyword operation_name: The operation name.
        :paramtype operation_name: str
        :keyword operation_type: The mapping item operation type of the business process.
        :paramtype operation_type: str
        """
        super().__init__(**kwargs)
        self.logic_app_resource_id = logic_app_resource_id
        self.workflow_name = workflow_name
        self.operation_name = operation_name
        self.operation_type = operation_type


class BusinessProcessReference(_serialization.Model):
    """The business process reference.

    :ivar name: The business process name.
    :vartype name: str
    :ivar version: The business process version.
    :vartype version: str
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "version": {"key": "version", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, version: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: The business process name.
        :paramtype name: str
        :keyword version: The business process version.
        :paramtype version: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.version = version


class BusinessProcessStage(_serialization.Model):
    """The properties of business process stage.

    :ivar description: The description of the business stage.
    :vartype description: str
    :ivar properties: The properties within the properties of the business process stage.
    :vartype properties: dict[str, str]
    :ivar stages_before: The property to keep track of stages before current in the business
     process stage.
    :vartype stages_before: list[str]
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "properties": {"key": "properties", "type": "{str}"},
        "stages_before": {"key": "stagesBefore", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        properties: Optional[Dict[str, str]] = None,
        stages_before: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the business stage.
        :paramtype description: str
        :keyword properties: The properties within the properties of the business process stage.
        :paramtype properties: dict[str, str]
        :keyword stages_before: The property to keep track of stages before current in the business
         process stage.
        :paramtype stages_before: list[str]
        """
        super().__init__(**kwargs)
        self.description = description
        self.properties = properties
        self.stages_before = stages_before


class BusinessProcessUpdate(_serialization.Model):
    """The type used for update operations of the BusinessProcess.

    :ivar description: The description of the business process.
    :vartype description: str
    :ivar table_name: The table name of the business process.
    :vartype table_name: str
    :ivar tracking_data_store_reference_name: The tracking data store reference name.
    :vartype tracking_data_store_reference_name: str
    :ivar identifier: The business process identifier.
    :vartype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
    :ivar business_process_stages: The business process stages.
    :vartype business_process_stages: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
    :ivar business_process_mapping: The business process mapping.
    :vartype business_process_mapping: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
    """

    _attribute_map = {
        "description": {"key": "properties.description", "type": "str"},
        "table_name": {"key": "properties.tableName", "type": "str"},
        "tracking_data_store_reference_name": {"key": "properties.trackingDataStoreReferenceName", "type": "str"},
        "identifier": {"key": "properties.identifier", "type": "BusinessProcessIdentifier"},
        "business_process_stages": {"key": "properties.businessProcessStages", "type": "{BusinessProcessStage}"},
        "business_process_mapping": {
            "key": "properties.businessProcessMapping",
            "type": "{BusinessProcessMappingItem}",
        },
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        table_name: Optional[str] = None,
        tracking_data_store_reference_name: Optional[str] = None,
        identifier: Optional["_models.BusinessProcessIdentifier"] = None,
        business_process_stages: Optional[Dict[str, "_models.BusinessProcessStage"]] = None,
        business_process_mapping: Optional[Dict[str, "_models.BusinessProcessMappingItem"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the business process.
        :paramtype description: str
        :keyword table_name: The table name of the business process.
        :paramtype table_name: str
        :keyword tracking_data_store_reference_name: The tracking data store reference name.
        :paramtype tracking_data_store_reference_name: str
        :keyword identifier: The business process identifier.
        :paramtype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
        :keyword business_process_stages: The business process stages.
        :paramtype business_process_stages: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
        :keyword business_process_mapping: The business process mapping.
        :paramtype business_process_mapping: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
        """
        super().__init__(**kwargs)
        self.description = description
        self.table_name = table_name
        self.tracking_data_store_reference_name = tracking_data_store_reference_name
        self.identifier = identifier
        self.business_process_stages = business_process_stages
        self.business_process_mapping = business_process_mapping


class BusinessProcessVersion(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """A business process version.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.azureintegrationspaces.models.ProvisioningState
    :ivar version: The version of the business process.
    :vartype version: str
    :ivar description: The description of the business process.
    :vartype description: str
    :ivar table_name: The table name of the business process.
    :vartype table_name: str
    :ivar tracking_data_store_reference_name: The tracking data store reference name.
    :vartype tracking_data_store_reference_name: str
    :ivar identifier: The business process identifier.
    :vartype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
    :ivar business_process_stages: The business process stages.
    :vartype business_process_stages: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
    :ivar business_process_mapping: The business process mapping.
    :vartype business_process_mapping: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "version": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "table_name": {"key": "properties.tableName", "type": "str"},
        "tracking_data_store_reference_name": {"key": "properties.trackingDataStoreReferenceName", "type": "str"},
        "identifier": {"key": "properties.identifier", "type": "BusinessProcessIdentifier"},
        "business_process_stages": {"key": "properties.businessProcessStages", "type": "{BusinessProcessStage}"},
        "business_process_mapping": {
            "key": "properties.businessProcessMapping",
            "type": "{BusinessProcessMappingItem}",
        },
    }

    def __init__(
        self,
        *,
        description: Optional[str] = None,
        table_name: Optional[str] = None,
        tracking_data_store_reference_name: Optional[str] = None,
        identifier: Optional["_models.BusinessProcessIdentifier"] = None,
        business_process_stages: Optional[Dict[str, "_models.BusinessProcessStage"]] = None,
        business_process_mapping: Optional[Dict[str, "_models.BusinessProcessMappingItem"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: The description of the business process.
        :paramtype description: str
        :keyword table_name: The table name of the business process.
        :paramtype table_name: str
        :keyword tracking_data_store_reference_name: The tracking data store reference name.
        :paramtype tracking_data_store_reference_name: str
        :keyword identifier: The business process identifier.
        :paramtype identifier: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessIdentifier
        :keyword business_process_stages: The business process stages.
        :paramtype business_process_stages: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessStage]
        :keyword business_process_mapping: The business process mapping.
        :paramtype business_process_mapping: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessMappingItem]
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.version = None
        self.description = description
        self.table_name = table_name
        self.tracking_data_store_reference_name = tracking_data_store_reference_name
        self.identifier = identifier
        self.business_process_stages = business_process_stages
        self.business_process_mapping = business_process_mapping


class BusinessProcessVersionListResult(_serialization.Model):
    """The response of a BusinessProcessVersion list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The BusinessProcessVersion items on this page. Required.
    :vartype value: list[~azure.mgmt.azureintegrationspaces.models.BusinessProcessVersion]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[BusinessProcessVersion]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.BusinessProcessVersion"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The BusinessProcessVersion items on this page. Required.
        :paramtype value: list[~azure.mgmt.azureintegrationspaces.models.BusinessProcessVersion]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.azureintegrationspaces.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.azureintegrationspaces.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.azureintegrationspaces.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.azureintegrationspaces.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class FlowTrackingDefinition(_serialization.Model):
    """The workflow tracking definition.

    :ivar correlation_context: The tracking correlation context.
    :vartype correlation_context:
     ~azure.mgmt.azureintegrationspaces.models.TrackingCorrelationContext
    :ivar events: The tracking events.
    :vartype events: dict[str, ~azure.mgmt.azureintegrationspaces.models.TrackingEventDefinition]
    """

    _attribute_map = {
        "correlation_context": {"key": "correlationContext", "type": "TrackingCorrelationContext"},
        "events": {"key": "events", "type": "{TrackingEventDefinition}"},
    }

    def __init__(
        self,
        *,
        correlation_context: Optional["_models.TrackingCorrelationContext"] = None,
        events: Optional[Dict[str, "_models.TrackingEventDefinition"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword correlation_context: The tracking correlation context.
        :paramtype correlation_context:
         ~azure.mgmt.azureintegrationspaces.models.TrackingCorrelationContext
        :keyword events: The tracking events.
        :paramtype events: dict[str, ~azure.mgmt.azureintegrationspaces.models.TrackingEventDefinition]
        """
        super().__init__(**kwargs)
        self.correlation_context = correlation_context
        self.events = events


class GetOrDeleteBusinessProcessDevelopmentArtifactRequest(_serialization.Model):
    """The business process development artifact get or delete request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: The name of the business process development artifact. Required.
    :vartype name: str
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: str, **kwargs: Any) -> None:
        """
        :keyword name: The name of the business process development artifact. Required.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.name = name


class InfrastructureResource(ProxyResource):
    """An infrastructure resource under Space.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.azureintegrationspaces.models.ProvisioningState
    :ivar resource_type: The type of the infrastructure resource.
    :vartype resource_type: str
    :ivar resource_id: The id of the infrastructure resource.
    :vartype resource_id: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "resource_type": {"key": "properties.resourceType", "type": "str"},
        "resource_id": {"key": "properties.resourceId", "type": "str"},
    }

    def __init__(
        self, *, resource_type: Optional[str] = None, resource_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword resource_type: The type of the infrastructure resource.
        :paramtype resource_type: str
        :keyword resource_id: The id of the infrastructure resource.
        :paramtype resource_id: str
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.resource_type = resource_type
        self.resource_id = resource_id


class InfrastructureResourceListResult(_serialization.Model):
    """The response of a InfrastructureResource list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The InfrastructureResource items on this page. Required.
    :vartype value: list[~azure.mgmt.azureintegrationspaces.models.InfrastructureResource]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[InfrastructureResource]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.InfrastructureResource"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The InfrastructureResource items on this page. Required.
        :paramtype value: list[~azure.mgmt.azureintegrationspaces.models.InfrastructureResource]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class InfrastructureResourceUpdate(_serialization.Model):
    """The type used for update operations of the InfrastructureResource.

    :ivar resource_type: The type of the infrastructure resource.
    :vartype resource_type: str
    :ivar resource_id: The id of the infrastructure resource.
    :vartype resource_id: str
    """

    _attribute_map = {
        "resource_type": {"key": "properties.resourceType", "type": "str"},
        "resource_id": {"key": "properties.resourceId", "type": "str"},
    }

    def __init__(
        self, *, resource_type: Optional[str] = None, resource_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword resource_type: The type of the infrastructure resource.
        :paramtype resource_type: str
        :keyword resource_id: The id of the infrastructure resource.
        :paramtype resource_id: str
        """
        super().__init__(**kwargs)
        self.resource_type = resource_type
        self.resource_id = resource_id


class ListBusinessProcessDevelopmentArtifactsResponse(_serialization.Model):
    """The business process development artifact get collection response.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The list of the business process development artifact. Required.
    :vartype value:
     list[~azure.mgmt.azureintegrationspaces.models.SaveOrGetBusinessProcessDevelopmentArtifactResponse]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SaveOrGetBusinessProcessDevelopmentArtifactResponse]"},
    }

    def __init__(
        self, *, value: List["_models.SaveOrGetBusinessProcessDevelopmentArtifactResponse"], **kwargs: Any
    ) -> None:
        """
        :keyword value: The list of the business process development artifact. Required.
        :paramtype value:
         list[~azure.mgmt.azureintegrationspaces.models.SaveOrGetBusinessProcessDevelopmentArtifactResponse]
        """
        super().__init__(**kwargs)
        self.value = value


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.azureintegrationspaces.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.azureintegrationspaces.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.azureintegrationspaces.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.azureintegrationspaces.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.azureintegrationspaces.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class SaveOrGetBusinessProcessDevelopmentArtifactResponse(_serialization.Model):
    """The business process development artifact save or get response.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: The name of the business process development artifact. Required.
    :vartype name: str
    :ivar system_data: The system data of the business process development artifact.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar properties: The properties of the business process development artifact.
    :vartype properties:
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessDevelopmentArtifactProperties
    """

    _validation = {
        "name": {"required": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "BusinessProcessDevelopmentArtifactProperties"},
    }

    def __init__(
        self,
        *,
        name: str,
        properties: Optional["_models.BusinessProcessDevelopmentArtifactProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of the business process development artifact. Required.
        :paramtype name: str
        :keyword properties: The properties of the business process development artifact.
        :paramtype properties:
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessDevelopmentArtifactProperties
        """
        super().__init__(**kwargs)
        self.name = name
        self.system_data = None
        self.properties = properties


class SaveOrValidateBusinessProcessDevelopmentArtifactRequest(_serialization.Model):
    """The business process development artifact save or validate request.

    All required parameters must be populated in order to send to Azure.

    :ivar name: The name of the business process development artifact. Required.
    :vartype name: str
    :ivar properties: The properties of the business process development artifact.
    :vartype properties:
     ~azure.mgmt.azureintegrationspaces.models.BusinessProcessDevelopmentArtifactProperties
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "properties": {"key": "properties", "type": "BusinessProcessDevelopmentArtifactProperties"},
    }

    def __init__(
        self,
        *,
        name: str,
        properties: Optional["_models.BusinessProcessDevelopmentArtifactProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of the business process development artifact. Required.
        :paramtype name: str
        :keyword properties: The properties of the business process development artifact.
        :paramtype properties:
         ~azure.mgmt.azureintegrationspaces.models.BusinessProcessDevelopmentArtifactProperties
        """
        super().__init__(**kwargs)
        self.name = name
        self.properties = properties


class Space(TrackedResource):
    """An integration space.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azureintegrationspaces.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", "Canceled", "Provisioning", "Updating", "Deleting", and "Accepted".
    :vartype provisioning_state: str or ~azure.mgmt.azureintegrationspaces.models.ProvisioningState
    :ivar description: The description of the resource.
    :vartype description: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
    }

    def __init__(
        self, *, location: str, tags: Optional[Dict[str, str]] = None, description: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword description: The description of the resource.
        :paramtype description: str
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.provisioning_state = None
        self.description = description


class SpaceListResult(_serialization.Model):
    """The response of a Space list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Space items on this page. Required.
    :vartype value: list[~azure.mgmt.azureintegrationspaces.models.Space]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Space]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Space"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Space items on this page. Required.
        :paramtype value: list[~azure.mgmt.azureintegrationspaces.models.Space]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SpaceUpdate(_serialization.Model):
    """The type used for update operations of the Space.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar description: The description of the resource.
    :vartype description: str
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "description": {"key": "properties.description", "type": "str"},
    }

    def __init__(
        self, *, tags: Optional[Dict[str, str]] = None, description: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword description: The description of the resource.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.description = description


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.azureintegrationspaces.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.azureintegrationspaces.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.azureintegrationspaces.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or
         ~azure.mgmt.azureintegrationspaces.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TrackingCorrelationContext(_serialization.Model):
    """The tracking correlation context.

    :ivar operation_type: The operation type for correlation context.
    :vartype operation_type: str
    :ivar operation_name: The operation name for correlation context.
    :vartype operation_name: str
    :ivar property_name: The name of the correlation property.
    :vartype property_name: str
    :ivar value: The template expression for correlation context property value.
    :vartype value: str
    """

    _attribute_map = {
        "operation_type": {"key": "operationType", "type": "str"},
        "operation_name": {"key": "operationName", "type": "str"},
        "property_name": {"key": "propertyName", "type": "str"},
        "value": {"key": "value", "type": "str"},
    }

    def __init__(
        self,
        *,
        operation_type: Optional[str] = None,
        operation_name: Optional[str] = None,
        property_name: Optional[str] = None,
        value: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword operation_type: The operation type for correlation context.
        :paramtype operation_type: str
        :keyword operation_name: The operation name for correlation context.
        :paramtype operation_name: str
        :keyword property_name: The name of the correlation property.
        :paramtype property_name: str
        :keyword value: The template expression for correlation context property value.
        :paramtype value: str
        """
        super().__init__(**kwargs)
        self.operation_type = operation_type
        self.operation_name = operation_name
        self.property_name = property_name
        self.value = value


class TrackingDataStore(_serialization.Model):
    """The properties of tracking data store.

    All required parameters must be populated in order to send to Azure.

    :ivar database_name: The database name. Required.
    :vartype database_name: str
    :ivar data_store_resource_id: The data store resource id. Required.
    :vartype data_store_resource_id: str
    :ivar data_store_uri: The data store URI. Required.
    :vartype data_store_uri: str
    :ivar data_store_ingestion_uri: The data store ingestion URI. Required.
    :vartype data_store_ingestion_uri: str
    """

    _validation = {
        "database_name": {"required": True},
        "data_store_resource_id": {"required": True},
        "data_store_uri": {"required": True},
        "data_store_ingestion_uri": {"required": True},
    }

    _attribute_map = {
        "database_name": {"key": "databaseName", "type": "str"},
        "data_store_resource_id": {"key": "dataStoreResourceId", "type": "str"},
        "data_store_uri": {"key": "dataStoreUri", "type": "str"},
        "data_store_ingestion_uri": {"key": "dataStoreIngestionUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        database_name: str,
        data_store_resource_id: str,
        data_store_uri: str,
        data_store_ingestion_uri: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword database_name: The database name. Required.
        :paramtype database_name: str
        :keyword data_store_resource_id: The data store resource id. Required.
        :paramtype data_store_resource_id: str
        :keyword data_store_uri: The data store URI. Required.
        :paramtype data_store_uri: str
        :keyword data_store_ingestion_uri: The data store ingestion URI. Required.
        :paramtype data_store_ingestion_uri: str
        """
        super().__init__(**kwargs)
        self.database_name = database_name
        self.data_store_resource_id = data_store_resource_id
        self.data_store_uri = data_store_uri
        self.data_store_ingestion_uri = data_store_ingestion_uri


class TrackingEventDefinition(_serialization.Model):
    """The tracking event definition.

    :ivar operation_type: The operation type.
    :vartype operation_type: str
    :ivar operation_name: The operation name.
    :vartype operation_name: str
    :ivar properties: The properties to be collected for event.
    :vartype properties: dict[str, JSON]
    """

    _attribute_map = {
        "operation_type": {"key": "operationType", "type": "str"},
        "operation_name": {"key": "operationName", "type": "str"},
        "properties": {"key": "properties", "type": "{object}"},
    }

    def __init__(
        self,
        *,
        operation_type: Optional[str] = None,
        operation_name: Optional[str] = None,
        properties: Optional[Dict[str, JSON]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword operation_type: The operation type.
        :paramtype operation_type: str
        :keyword operation_name: The operation name.
        :paramtype operation_name: str
        :keyword properties: The properties to be collected for event.
        :paramtype properties: dict[str, JSON]
        """
        super().__init__(**kwargs)
        self.operation_type = operation_type
        self.operation_name = operation_name
        self.properties = properties


class TrackingProfileDefinition(_serialization.Model):
    """The tracking profile for the business process.

    :ivar schema: The tracking definition schema uri.
    :vartype schema: str
    :ivar business_process: The business process reference.
    :vartype business_process: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessReference
    :ivar tracking_definitions: The tracking definitions.
    :vartype tracking_definitions: dict[str,
     ~azure.mgmt.azureintegrationspaces.models.FlowTrackingDefinition]
    """

    _attribute_map = {
        "schema": {"key": "$schema", "type": "str"},
        "business_process": {"key": "businessProcess", "type": "BusinessProcessReference"},
        "tracking_definitions": {"key": "trackingDefinitions", "type": "{FlowTrackingDefinition}"},
    }

    def __init__(
        self,
        *,
        schema: Optional[str] = None,
        business_process: Optional["_models.BusinessProcessReference"] = None,
        tracking_definitions: Optional[Dict[str, "_models.FlowTrackingDefinition"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword schema: The tracking definition schema uri.
        :paramtype schema: str
        :keyword business_process: The business process reference.
        :paramtype business_process: ~azure.mgmt.azureintegrationspaces.models.BusinessProcessReference
        :keyword tracking_definitions: The tracking definitions.
        :paramtype tracking_definitions: dict[str,
         ~azure.mgmt.azureintegrationspaces.models.FlowTrackingDefinition]
        """
        super().__init__(**kwargs)
        self.schema = schema
        self.business_process = business_process
        self.tracking_definitions = tracking_definitions
