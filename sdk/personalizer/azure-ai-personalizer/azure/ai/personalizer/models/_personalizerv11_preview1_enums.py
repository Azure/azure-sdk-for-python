# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.1.3, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class EvaluationJobStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The status of the job processing the evaluation.
    """

    COMPLETED = "completed"
    PENDING = "pending"
    FAILED = "failed"
    NOT_SUBMITTED = "notSubmitted"
    TIMEOUT = "timeout"
    OPTIMAL_POLICY_APPLIED = "optimalPolicyApplied"
    ONLINE_POLICY_RETAINED = "onlinePolicyRetained"

class EvaluationType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """Evaluation type (manual or through Automatic Optimization).
    """

    MANUAL = "Manual"
    AUTO = "Auto"

class LearningMode(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """Learning Modes for Personalizer
    """

    ONLINE = "Online"
    APPRENTICE = "Apprentice"
    LOGGING_ONLY = "LoggingOnly"

class PersonalizerErrorCode(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """Error Codes returned by Personalizer
    """

    #: Request could not be understood by the server.
    BAD_REQUEST = "BadRequest"
    #: Invalid service configuration.
    INVALID_SERVICE_CONFIGURATION = "InvalidServiceConfiguration"
    #: Updating defaultReward, rewardWaitTime and rewardAggregation when changing learning mode from
    #: Online to Apprentice mode and vice versa is not allowed. Make the mode change and then change
    #: the additional settings with an additional API call.
    INVALID_LEARNING_MODE_SERVICE_CONFIGURATION = "InvalidLearningModeServiceConfiguration"
    #: Invalid policy configuration.
    INVALID_POLICY_CONFIGURATION = "InvalidPolicyConfiguration"
    #: Invalid policy contract.
    INVALID_POLICY_CONTRACT = "InvalidPolicyContract"
    #: Invalid evaluation contract.
    INVALID_EVALUATION_CONTRACT = "InvalidEvaluationContract"
    #: Custom policy names should be unique.
    DUPLICATE_CUSTOM_POLICY_NAMES = "DuplicateCustomPolicyNames"
    #: No logs exist in date range.
    NO_LOGS_EXIST_IN_DATE_RANGE = "NoLogsExistInDateRange"
    #: Total size of logs exceed allowed limit.
    LOGS_SIZE_EXCEED_ALLOWED_LIMIT = "LogsSizeExceedAllowedLimit"
    #: Invalid reward request.
    INVALID_REWARD_REQUEST = "InvalidRewardRequest"
    #: Invalid activate event request.
    INVALID_EVENT_ID_TO_ACTIVATE = "InvalidEventIdToActivate"
    #: Invalid request.
    INVALID_RANK_REQUEST = "InvalidRankRequest"
    #: Invalid request.
    INVALID_EXPORT_LOGS_REQUEST = "InvalidExportLogsRequest"
    #: SAS Uri must be the Uri to a container that has write permissions.
    INVALID_CONTAINER = "InvalidContainer"
    #: Invalid model metadata.
    INVALID_MODEL_METADATA = "InvalidModelMetadata"
    #: Apprentice mode never turned on.
    APPRENTICE_MODE_NEVER_TURNED_ON = "ApprenticeModeNeverTurnedOn"
    #: AppId is missing in the header.
    MISSING_APP_ID = "MissingAppId"
    #: Reward wait time should be between 5 seconds and 2 days.
    INVALID_REWARD_WAIT_TIME = "InvalidRewardWaitTime"
    #: Multi-slot feature is currently disabled. Please follow multi-slot Personalizer documentation
    #: to update your loop settings to enable multi-slot functionality.
    INVALID_MULTI_SLOT_API_ACCESS = "InvalidMultiSlotApiAccess"
    #: Key vault Key used for customer managed key cannot be accessed.
    MODEL_FILE_ACCESS_DENIED = "ModelFileAccessDenied"
    #: Auto-optimization is not compatible with multi-slot personalization.
    PROBLEM_TYPE_INCOMPATIBLE_WITH_AUTO_OPTIMIZATION = "ProblemTypeIncompatibleWithAutoOptimization"
    #: Requested resource does not exist on the server.
    RESOURCE_NOT_FOUND = "ResourceNotFound"
    #: Front end not found.
    FRONT_END_NOT_FOUND = "FrontEndNotFound"
    #: Offline Evaluation not found.
    EVALUATION_NOT_FOUND = "EvaluationNotFound"
    #: Learning Settings not found in evaluation.
    LEARNING_SETTINGS_NOT_FOUND = "LearningSettingsNotFound"
    #: Model not found in evaluation.
    EVALUATION_MODEL_NOT_FOUND = "EvaluationModelNotFound"
    #: Log properties not found.
    LOGS_PROPERTIES_NOT_FOUND = "LogsPropertiesNotFound"
    #: Error while ranking actions using model. Please verify the learning settings are valid.
    MODEL_RANKING_ERROR = "ModelRankingError"
    #: A generic error has occurred on the server.
    INTERNAL_SERVER_ERROR = "InternalServerError"
    #: Rank call returned null response.
    RANK_NULL_RESPONSE = "RankNullResponse"
    #: Failed to update configuration.
    UPDATE_CONFIGURATION_FAILED = "UpdateConfigurationFailed"
    #: Model reset failed.
    MODEL_RESET_FAILED = "ModelResetFailed"
    #: Model publish failed.
    MODEL_PUBLISH_FAILED = "ModelPublishFailed"
    #: Model metadata update failed.
    MODEL_METADATA_UPDATE_FAILED = "ModelMetadataUpdateFailed"
    #: This operation is not allowed at this time.
    OPERATION_NOT_ALLOWED = "OperationNotAllowed"

class PolicySource(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):
    """The source of the Learning Settings.
    """

    ONLINE = "Online"
    BASELINE = "Baseline"
    RANDOM = "Random"
    CUSTOM = "Custom"
    OFFLINE_EXPERIMENTATION = "OfflineExperimentation"
