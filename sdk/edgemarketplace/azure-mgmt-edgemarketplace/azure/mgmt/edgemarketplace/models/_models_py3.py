# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class AccessTokenReadRequest(_serialization.Model):
    """Access token request object.

    All required parameters must be populated in order to send to Azure.

    :ivar request_id: The name of the publisher. Required.
    :vartype request_id: str
    """

    _validation = {
        "request_id": {"required": True},
    }

    _attribute_map = {
        "request_id": {"key": "requestId", "type": "str"},
    }

    def __init__(self, *, request_id: str, **kwargs: Any) -> None:
        """
        :keyword request_id: The name of the publisher. Required.
        :paramtype request_id: str
        """
        super().__init__(**kwargs)
        self.request_id = request_id


class AccessTokenRequest(_serialization.Model):
    """Access token request object.

    All required parameters must be populated in order to send to Azure.

    :ivar publisher_name: The name of the publisher.
    :vartype publisher_name: str
    :ivar edge_market_place_region: The region where the disk will be created. Required.
    :vartype edge_market_place_region: str
    :ivar ege_market_place_resource_id: The region where the disk will be created.
    :vartype ege_market_place_resource_id: str
    :ivar hyperv_generation: The hyperv version.
    :vartype hyperv_generation: str
    :ivar market_place_sku: The marketplace sku.
    :vartype market_place_sku: str
    :ivar market_place_sku_version: The marketplace sku version.
    :vartype market_place_sku_version: str
    :ivar device_sku: The device sku.
    :vartype device_sku: str
    :ivar device_version: The device sku version.
    :vartype device_version: str
    """

    _validation = {
        "edge_market_place_region": {"required": True},
    }

    _attribute_map = {
        "publisher_name": {"key": "publisherName", "type": "str"},
        "edge_market_place_region": {"key": "edgeMarketPlaceRegion", "type": "str"},
        "ege_market_place_resource_id": {"key": "egeMarketPlaceResourceId", "type": "str"},
        "hyperv_generation": {"key": "hypervGeneration", "type": "str"},
        "market_place_sku": {"key": "marketPlaceSku", "type": "str"},
        "market_place_sku_version": {"key": "marketPlaceSkuVersion", "type": "str"},
        "device_sku": {"key": "deviceSku", "type": "str"},
        "device_version": {"key": "deviceVersion", "type": "str"},
    }

    def __init__(
        self,
        *,
        edge_market_place_region: str,
        publisher_name: Optional[str] = None,
        ege_market_place_resource_id: Optional[str] = None,
        hyperv_generation: Optional[str] = None,
        market_place_sku: Optional[str] = None,
        market_place_sku_version: Optional[str] = None,
        device_sku: Optional[str] = None,
        device_version: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword publisher_name: The name of the publisher.
        :paramtype publisher_name: str
        :keyword edge_market_place_region: The region where the disk will be created. Required.
        :paramtype edge_market_place_region: str
        :keyword ege_market_place_resource_id: The region where the disk will be created.
        :paramtype ege_market_place_resource_id: str
        :keyword hyperv_generation: The hyperv version.
        :paramtype hyperv_generation: str
        :keyword market_place_sku: The marketplace sku.
        :paramtype market_place_sku: str
        :keyword market_place_sku_version: The marketplace sku version.
        :paramtype market_place_sku_version: str
        :keyword device_sku: The device sku.
        :paramtype device_sku: str
        :keyword device_version: The device sku version.
        :paramtype device_version: str
        """
        super().__init__(**kwargs)
        self.publisher_name = publisher_name
        self.edge_market_place_region = edge_market_place_region
        self.ege_market_place_resource_id = ege_market_place_resource_id
        self.hyperv_generation = hyperv_generation
        self.market_place_sku = market_place_sku
        self.market_place_sku_version = market_place_sku_version
        self.device_sku = device_sku
        self.device_version = device_version


class DiskAccessToken(_serialization.Model):
    """The disk access token.

    All required parameters must be populated in order to send to Azure.

    :ivar disk_id: The disk id.
    :vartype disk_id: str
    :ivar status: The access token creation status.
    :vartype status: str
    :ivar access_token: The access token. Required.
    :vartype access_token: str
    """

    _validation = {
        "access_token": {"required": True},
    }

    _attribute_map = {
        "disk_id": {"key": "diskId", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "access_token": {"key": "accessToken", "type": "str"},
    }

    def __init__(
        self, *, access_token: str, disk_id: Optional[str] = None, status: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword disk_id: The disk id.
        :paramtype disk_id: str
        :keyword status: The access token creation status.
        :paramtype status: str
        :keyword access_token: The access token. Required.
        :paramtype access_token: str
        """
        super().__init__(**kwargs)
        self.disk_id = disk_id
        self.status = status
        self.access_token = access_token


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.edgemarketplace.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.edgemarketplace.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.edgemarketplace.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.edgemarketplace.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class IconFileUris(_serialization.Model):
    """Icon files.

    :ivar small: uri of small icon.
    :vartype small: str
    :ivar medium: uri of medium icon.
    :vartype medium: str
    :ivar wide: uri of wide icon.
    :vartype wide: str
    :ivar large: uri of large icon.
    :vartype large: str
    """

    _attribute_map = {
        "small": {"key": "small", "type": "str"},
        "medium": {"key": "medium", "type": "str"},
        "wide": {"key": "wide", "type": "str"},
        "large": {"key": "large", "type": "str"},
    }

    def __init__(
        self,
        *,
        small: Optional[str] = None,
        medium: Optional[str] = None,
        wide: Optional[str] = None,
        large: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword small: uri of small icon.
        :paramtype small: str
        :keyword medium: uri of medium icon.
        :paramtype medium: str
        :keyword wide: uri of wide icon.
        :paramtype wide: str
        :keyword large: uri of large icon.
        :paramtype large: str
        """
        super().__init__(**kwargs)
        self.small = small
        self.medium = medium
        self.wide = wide
        self.large = large


class MarketplaceSku(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The marketplace sku.

    All required parameters must be populated in order to send to Azure.

    :ivar catalog_plan_id: The catalog plan id. Required.
    :vartype catalog_plan_id: str
    :ivar marketplace_sku_id: The marketplace sku id. Required.
    :vartype marketplace_sku_id: str
    :ivar type: The type of marketplace sku.
    :vartype type: str
    :ivar display_name: The display name of marketplace sku.
    :vartype display_name: str
    :ivar summary: The summary.
    :vartype summary: str
    :ivar long_summary: The long summary.
    :vartype long_summary: str
    :ivar description: The description.
    :vartype description: str
    :ivar generation: The generation.
    :vartype generation: str
    :ivar display_rank: The display rank of the sku.
    :vartype display_rank: int
    :ivar operating_system: The operating system supported.
    :vartype operating_system: ~azure.mgmt.edgemarketplace.models.SkuOperatingSystem
    :ivar marketplace_sku_versions: The marketplace sku version.
    :vartype marketplace_sku_versions:
     list[~azure.mgmt.edgemarketplace.models.MarketplaceSkuVersion]
    """

    _validation = {
        "catalog_plan_id": {"required": True},
        "marketplace_sku_id": {"required": True},
    }

    _attribute_map = {
        "catalog_plan_id": {"key": "catalogPlanId", "type": "str"},
        "marketplace_sku_id": {"key": "marketplaceSkuId", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "summary": {"key": "summary", "type": "str"},
        "long_summary": {"key": "longSummary", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "generation": {"key": "generation", "type": "str"},
        "display_rank": {"key": "displayRank", "type": "int"},
        "operating_system": {"key": "operatingSystem", "type": "SkuOperatingSystem"},
        "marketplace_sku_versions": {"key": "marketplaceSkuVersions", "type": "[MarketplaceSkuVersion]"},
    }

    def __init__(
        self,
        *,
        catalog_plan_id: str,
        marketplace_sku_id: str,
        type: Optional[str] = None,
        display_name: Optional[str] = None,
        summary: Optional[str] = None,
        long_summary: Optional[str] = None,
        description: Optional[str] = None,
        generation: Optional[str] = None,
        display_rank: Optional[int] = None,
        operating_system: Optional["_models.SkuOperatingSystem"] = None,
        marketplace_sku_versions: Optional[List["_models.MarketplaceSkuVersion"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword catalog_plan_id: The catalog plan id. Required.
        :paramtype catalog_plan_id: str
        :keyword marketplace_sku_id: The marketplace sku id. Required.
        :paramtype marketplace_sku_id: str
        :keyword type: The type of marketplace sku.
        :paramtype type: str
        :keyword display_name: The display name of marketplace sku.
        :paramtype display_name: str
        :keyword summary: The summary.
        :paramtype summary: str
        :keyword long_summary: The long summary.
        :paramtype long_summary: str
        :keyword description: The description.
        :paramtype description: str
        :keyword generation: The generation.
        :paramtype generation: str
        :keyword display_rank: The display rank of the sku.
        :paramtype display_rank: int
        :keyword operating_system: The operating system supported.
        :paramtype operating_system: ~azure.mgmt.edgemarketplace.models.SkuOperatingSystem
        :keyword marketplace_sku_versions: The marketplace sku version.
        :paramtype marketplace_sku_versions:
         list[~azure.mgmt.edgemarketplace.models.MarketplaceSkuVersion]
        """
        super().__init__(**kwargs)
        self.catalog_plan_id = catalog_plan_id
        self.marketplace_sku_id = marketplace_sku_id
        self.type = type
        self.display_name = display_name
        self.summary = summary
        self.long_summary = long_summary
        self.description = description
        self.generation = generation
        self.display_rank = display_rank
        self.operating_system = operating_system
        self.marketplace_sku_versions = marketplace_sku_versions


class MarketplaceSkuVersion(_serialization.Model):
    """The marketplace sku version.

    All required parameters must be populated in order to send to Azure.

    :ivar name: The name of sku version. Required.
    :vartype name: str
    :ivar size_on_disk_in_mb: The size of the image.
    :vartype size_on_disk_in_mb: int
    :ivar minimum_download_size_in_mb: The size of the download.
    :vartype minimum_download_size_in_mb: int
    :ivar stage_name: The stage name.
    :vartype stage_name: str
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "size_on_disk_in_mb": {"key": "sizeOnDiskInMb", "type": "int"},
        "minimum_download_size_in_mb": {"key": "minimumDownloadSizeInMb", "type": "int"},
        "stage_name": {"key": "stageName", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: str,
        size_on_disk_in_mb: Optional[int] = None,
        minimum_download_size_in_mb: Optional[int] = None,
        stage_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of sku version. Required.
        :paramtype name: str
        :keyword size_on_disk_in_mb: The size of the image.
        :paramtype size_on_disk_in_mb: int
        :keyword minimum_download_size_in_mb: The size of the download.
        :paramtype minimum_download_size_in_mb: int
        :keyword stage_name: The stage name.
        :paramtype stage_name: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.size_on_disk_in_mb = size_on_disk_in_mb
        self.minimum_download_size_in_mb = minimum_download_size_in_mb
        self.stage_name = stage_name


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.edgemarketplace.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.edgemarketplace.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class Offer(ProxyResource):
    """An offer.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.edgemarketplace.models.SystemData
    :ivar content_version: The content version.
    :vartype content_version: str
    :ivar content_url: The content url.
    :vartype content_url: str
    :ivar offer_content: The offer content.
    :vartype offer_content: ~azure.mgmt.edgemarketplace.models.OfferContent
    :ivar provisioning_state: The resource provisioning state. Known values are: "Succeeded",
     "Failed", and "Canceled".
    :vartype provisioning_state: str or
     ~azure.mgmt.edgemarketplace.models.ResourceProvisioningState
    :ivar marketplace_skus: The marketplace skus.
    :vartype marketplace_skus: list[~azure.mgmt.edgemarketplace.models.MarketplaceSku]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "content_version": {"key": "properties.contentVersion", "type": "str"},
        "content_url": {"key": "properties.contentUrl", "type": "str"},
        "offer_content": {"key": "properties.offerContent", "type": "OfferContent"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "marketplace_skus": {"key": "properties.marketplaceSkus", "type": "[MarketplaceSku]"},
    }

    def __init__(
        self,
        *,
        content_version: Optional[str] = None,
        content_url: Optional[str] = None,
        offer_content: Optional["_models.OfferContent"] = None,
        provisioning_state: Optional[Union[str, "_models.ResourceProvisioningState"]] = None,
        marketplace_skus: Optional[List["_models.MarketplaceSku"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword content_version: The content version.
        :paramtype content_version: str
        :keyword content_url: The content url.
        :paramtype content_url: str
        :keyword offer_content: The offer content.
        :paramtype offer_content: ~azure.mgmt.edgemarketplace.models.OfferContent
        :keyword provisioning_state: The resource provisioning state. Known values are: "Succeeded",
         "Failed", and "Canceled".
        :paramtype provisioning_state: str or
         ~azure.mgmt.edgemarketplace.models.ResourceProvisioningState
        :keyword marketplace_skus: The marketplace skus.
        :paramtype marketplace_skus: list[~azure.mgmt.edgemarketplace.models.MarketplaceSku]
        """
        super().__init__(**kwargs)
        self.content_version = content_version
        self.content_url = content_url
        self.offer_content = offer_content
        self.provisioning_state = provisioning_state
        self.marketplace_skus = marketplace_skus


class OfferContent(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """The offer content.

    All required parameters must be populated in order to send to Azure.

    :ivar display_name: The display name of the offer. Required.
    :vartype display_name: str
    :ivar summary: The summary.
    :vartype summary: str
    :ivar long_summary: The long summary.
    :vartype long_summary: str
    :ivar description: The description.
    :vartype description: str
    :ivar offer_id: The offer id. Required.
    :vartype offer_id: str
    :ivar offer_type: The offer type.
    :vartype offer_type: str
    :ivar support_uri: The support uri.
    :vartype support_uri: str
    :ivar popularity: The popularity of the offer.
    :vartype popularity: int
    :ivar offer_publisher: The publisher of the offer.
    :vartype offer_publisher: ~azure.mgmt.edgemarketplace.models.OfferPublisher
    :ivar availability: The availability of the offer. Known values are: "Private" and "Public".
    :vartype availability: str or ~azure.mgmt.edgemarketplace.models.OfferAvailability
    :ivar release_type: The release type of the offer. Known values are: "Preview" and "GA".
    :vartype release_type: str or ~azure.mgmt.edgemarketplace.models.OfferReleaseType
    :ivar icon_file_uris: The icon files.
    :vartype icon_file_uris: ~azure.mgmt.edgemarketplace.models.IconFileUris
    :ivar terms_and_conditions: The terms and conditions.
    :vartype terms_and_conditions: ~azure.mgmt.edgemarketplace.models.TermsAndConditions
    :ivar category_ids: The category ids.
    :vartype category_ids: list[str]
    :ivar operating_systems: The operating systems.
    :vartype operating_systems: list[str]
    """

    _validation = {
        "display_name": {"required": True},
        "offer_id": {"required": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "summary": {"key": "summary", "type": "str"},
        "long_summary": {"key": "longSummary", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "offer_id": {"key": "offerId", "type": "str"},
        "offer_type": {"key": "offerType", "type": "str"},
        "support_uri": {"key": "supportUri", "type": "str"},
        "popularity": {"key": "popularity", "type": "int"},
        "offer_publisher": {"key": "offerPublisher", "type": "OfferPublisher"},
        "availability": {"key": "availability", "type": "str"},
        "release_type": {"key": "releaseType", "type": "str"},
        "icon_file_uris": {"key": "iconFileUris", "type": "IconFileUris"},
        "terms_and_conditions": {"key": "termsAndConditions", "type": "TermsAndConditions"},
        "category_ids": {"key": "categoryIds", "type": "[str]"},
        "operating_systems": {"key": "operatingSystems", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        display_name: str,
        offer_id: str,
        summary: Optional[str] = None,
        long_summary: Optional[str] = None,
        description: Optional[str] = None,
        offer_type: Optional[str] = None,
        support_uri: Optional[str] = None,
        popularity: Optional[int] = None,
        offer_publisher: Optional["_models.OfferPublisher"] = None,
        availability: Optional[Union[str, "_models.OfferAvailability"]] = None,
        release_type: Optional[Union[str, "_models.OfferReleaseType"]] = None,
        icon_file_uris: Optional["_models.IconFileUris"] = None,
        terms_and_conditions: Optional["_models.TermsAndConditions"] = None,
        category_ids: Optional[List[str]] = None,
        operating_systems: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The display name of the offer. Required.
        :paramtype display_name: str
        :keyword summary: The summary.
        :paramtype summary: str
        :keyword long_summary: The long summary.
        :paramtype long_summary: str
        :keyword description: The description.
        :paramtype description: str
        :keyword offer_id: The offer id. Required.
        :paramtype offer_id: str
        :keyword offer_type: The offer type.
        :paramtype offer_type: str
        :keyword support_uri: The support uri.
        :paramtype support_uri: str
        :keyword popularity: The popularity of the offer.
        :paramtype popularity: int
        :keyword offer_publisher: The publisher of the offer.
        :paramtype offer_publisher: ~azure.mgmt.edgemarketplace.models.OfferPublisher
        :keyword availability: The availability of the offer. Known values are: "Private" and "Public".
        :paramtype availability: str or ~azure.mgmt.edgemarketplace.models.OfferAvailability
        :keyword release_type: The release type of the offer. Known values are: "Preview" and "GA".
        :paramtype release_type: str or ~azure.mgmt.edgemarketplace.models.OfferReleaseType
        :keyword icon_file_uris: The icon files.
        :paramtype icon_file_uris: ~azure.mgmt.edgemarketplace.models.IconFileUris
        :keyword terms_and_conditions: The terms and conditions.
        :paramtype terms_and_conditions: ~azure.mgmt.edgemarketplace.models.TermsAndConditions
        :keyword category_ids: The category ids.
        :paramtype category_ids: list[str]
        :keyword operating_systems: The operating systems.
        :paramtype operating_systems: list[str]
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.summary = summary
        self.long_summary = long_summary
        self.description = description
        self.offer_id = offer_id
        self.offer_type = offer_type
        self.support_uri = support_uri
        self.popularity = popularity
        self.offer_publisher = offer_publisher
        self.availability = availability
        self.release_type = release_type
        self.icon_file_uris = icon_file_uris
        self.terms_and_conditions = terms_and_conditions
        self.category_ids = category_ids
        self.operating_systems = operating_systems


class OfferListResult(_serialization.Model):
    """The response of a Offer list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Offer items on this page. Required.
    :vartype value: list[~azure.mgmt.edgemarketplace.models.Offer]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Offer]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Offer"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Offer items on this page. Required.
        :paramtype value: list[~azure.mgmt.edgemarketplace.models.Offer]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class OfferPublisher(_serialization.Model):
    """The offer publisher.

    All required parameters must be populated in order to send to Azure.

    :ivar publisher_id: The publisher Id. Required.
    :vartype publisher_id: str
    :ivar publisher_display_name: The publisher name. Required.
    :vartype publisher_display_name: str
    """

    _validation = {
        "publisher_id": {"required": True},
        "publisher_display_name": {"required": True},
    }

    _attribute_map = {
        "publisher_id": {"key": "publisherId", "type": "str"},
        "publisher_display_name": {"key": "publisherDisplayName", "type": "str"},
    }

    def __init__(self, *, publisher_id: str, publisher_display_name: str, **kwargs: Any) -> None:
        """
        :keyword publisher_id: The publisher Id. Required.
        :paramtype publisher_id: str
        :keyword publisher_display_name: The publisher name. Required.
        :paramtype publisher_display_name: str
        """
        super().__init__(**kwargs)
        self.publisher_id = publisher_id
        self.publisher_display_name = publisher_display_name


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.edgemarketplace.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.edgemarketplace.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.edgemarketplace.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.edgemarketplace.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.edgemarketplace.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class Publisher(ProxyResource):
    """A publisher who provides offers.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.edgemarketplace.models.SystemData
    :ivar provisioning_state: The resource provisioning state. Known values are: "Succeeded",
     "Failed", and "Canceled".
    :vartype provisioning_state: str or
     ~azure.mgmt.edgemarketplace.models.ResourceProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self, *, provisioning_state: Optional[Union[str, "_models.ResourceProvisioningState"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword provisioning_state: The resource provisioning state. Known values are: "Succeeded",
         "Failed", and "Canceled".
        :paramtype provisioning_state: str or
         ~azure.mgmt.edgemarketplace.models.ResourceProvisioningState
        """
        super().__init__(**kwargs)
        self.provisioning_state = provisioning_state


class PublisherListResult(_serialization.Model):
    """The response of a Publisher list operation.

    All required parameters must be populated in order to send to Azure.

    :ivar value: The Publisher items on this page. Required.
    :vartype value: list[~azure.mgmt.edgemarketplace.models.Publisher]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Publisher]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Publisher"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Publisher items on this page. Required.
        :paramtype value: list[~azure.mgmt.edgemarketplace.models.Publisher]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SkuOperatingSystem(_serialization.Model):
    """The sku operating system.

    All required parameters must be populated in order to send to Azure.

    :ivar family: The family of the operating system.
    :vartype family: str
    :ivar type: The type of the operating system.
    :vartype type: str
    :ivar name: The name of the operating system. Required.
    :vartype name: str
    """

    _validation = {
        "name": {"required": True},
    }

    _attribute_map = {
        "family": {"key": "family", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, *, name: str, family: Optional[str] = None, type: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword family: The family of the operating system.
        :paramtype family: str
        :keyword type: The type of the operating system.
        :paramtype type: str
        :keyword name: The name of the operating system. Required.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.family = family
        self.type = type
        self.name = name


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.edgemarketplace.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.edgemarketplace.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.edgemarketplace.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.edgemarketplace.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TermsAndConditions(_serialization.Model):
    """Terms and conditions.

    :ivar legal_terms_uri: The legal terms and conditions uri.
    :vartype legal_terms_uri: str
    :ivar legal_terms_type: The type of legal terms.
    :vartype legal_terms_type: str
    :ivar privacy_policy_uri: The privacy policy uri.
    :vartype privacy_policy_uri: str
    """

    _attribute_map = {
        "legal_terms_uri": {"key": "legalTermsUri", "type": "str"},
        "legal_terms_type": {"key": "legalTermsType", "type": "str"},
        "privacy_policy_uri": {"key": "privacyPolicyUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        legal_terms_uri: Optional[str] = None,
        legal_terms_type: Optional[str] = None,
        privacy_policy_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword legal_terms_uri: The legal terms and conditions uri.
        :paramtype legal_terms_uri: str
        :keyword legal_terms_type: The type of legal terms.
        :paramtype legal_terms_type: str
        :keyword privacy_policy_uri: The privacy policy uri.
        :paramtype privacy_policy_uri: str
        """
        super().__init__(**kwargs)
        self.legal_terms_uri = legal_terms_uri
        self.legal_terms_type = legal_terms_type
        self.privacy_policy_uri = privacy_policy_uri
