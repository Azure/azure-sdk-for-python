# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import AddonStatusProfile
from ._models_py3 import AgentPool
from ._models_py3 import AgentPoolListResult
from ._models_py3 import AgentPoolName
from ._models_py3 import AgentPoolPatch
from ._models_py3 import AgentPoolProfile
from ._models_py3 import AgentPoolProperties
from ._models_py3 import AgentPoolProvisioningStatus
from ._models_py3 import AgentPoolProvisioningStatusOperationStatus
from ._models_py3 import AgentPoolProvisioningStatusOperationStatusError
from ._models_py3 import AgentPoolProvisioningStatusStatus
from ._models_py3 import AgentPoolUpdateProfile
from ._models_py3 import CloudProviderProfile
from ._models_py3 import CloudProviderProfileInfraNetworkProfile
from ._models_py3 import ControlPlaneEndpointProfile
from ._models_py3 import ControlPlaneEndpointProfileControlPlaneEndpoint
from ._models_py3 import ControlPlaneProfile
from ._models_py3 import CredentialResult
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import ErrorDetail
from ._models_py3 import ErrorResponse
from ._models_py3 import ExtendedLocation
from ._models_py3 import HybridIdentityMetadata
from ._models_py3 import HybridIdentityMetadataList
from ._models_py3 import KubernetesPatchVersions
from ._models_py3 import KubernetesVersionCapabilities
from ._models_py3 import KubernetesVersionProfile
from ._models_py3 import KubernetesVersionProfileList
from ._models_py3 import KubernetesVersionProfileProperties
from ._models_py3 import KubernetesVersionProperties
from ._models_py3 import KubernetesVersionReadiness
from ._models_py3 import LinuxProfile
from ._models_py3 import LinuxProfileProperties
from ._models_py3 import LinuxProfilePropertiesSsh
from ._models_py3 import LinuxProfilePropertiesSshPublicKeysItem
from ._models_py3 import ListCredentialResponse
from ._models_py3 import ListCredentialResponseError
from ._models_py3 import ListCredentialResponseProperties
from ._models_py3 import NamedAgentPoolProfile
from ._models_py3 import NetworkProfile
from ._models_py3 import NetworkProfileLoadBalancerProfile
from ._models_py3 import Operation
from ._models_py3 import OperationDisplay
from ._models_py3 import OperationListResult
from ._models_py3 import ProvisionedClusterLicenseProfile
from ._models_py3 import ProvisionedClusterPoolUpgradeProfile
from ._models_py3 import ProvisionedClusterPoolUpgradeProfileProperties
from ._models_py3 import ProvisionedClusterProperties
from ._models_py3 import ProvisionedClusterPropertiesStatus
from ._models_py3 import ProvisionedClusterPropertiesStatusOperationStatus
from ._models_py3 import ProvisionedClusterPropertiesStatusOperationStatusError
from ._models_py3 import ProvisionedClusterUpgradeProfile
from ._models_py3 import ProvisionedClusters
from ._models_py3 import ProvisionedClustersListResult
from ._models_py3 import ProxyResource
from ._models_py3 import Resource
from ._models_py3 import SystemData
from ._models_py3 import TrackedResource
from ._models_py3 import VirtualNetwork
from ._models_py3 import VirtualNetworkExtendedLocation
from ._models_py3 import VirtualNetworkProperties
from ._models_py3 import VirtualNetworkPropertiesInfraVnetProfile
from ._models_py3 import VirtualNetworkPropertiesInfraVnetProfileHci
from ._models_py3 import VirtualNetworkPropertiesInfraVnetProfileVmware
from ._models_py3 import VirtualNetworkPropertiesStatus
from ._models_py3 import VirtualNetworkPropertiesStatusOperationStatus
from ._models_py3 import VirtualNetworkPropertiesStatusOperationStatusError
from ._models_py3 import VirtualNetworkPropertiesVipPoolItem
from ._models_py3 import VirtualNetworkPropertiesVmipPoolItem
from ._models_py3 import VirtualNetworksListResult
from ._models_py3 import VirtualNetworksPatch
from ._models_py3 import VmSkuCapabilities
from ._models_py3 import VmSkuProfile
from ._models_py3 import VmSkuProfileList
from ._models_py3 import VmSkuProfileProperties
from ._models_py3 import VmSkuProperties

from ._hybrid_container_service_mgmt_client_enums import ActionType
from ._hybrid_container_service_mgmt_client_enums import AddonPhase
from ._hybrid_container_service_mgmt_client_enums import AzureHybridBenefit
from ._hybrid_container_service_mgmt_client_enums import CreatedByType
from ._hybrid_container_service_mgmt_client_enums import ExtendedLocationTypes
from ._hybrid_container_service_mgmt_client_enums import NetworkPolicy
from ._hybrid_container_service_mgmt_client_enums import OSSKU
from ._hybrid_container_service_mgmt_client_enums import Origin
from ._hybrid_container_service_mgmt_client_enums import OsType
from ._hybrid_container_service_mgmt_client_enums import ProvisioningState
from ._hybrid_container_service_mgmt_client_enums import ResourceProvisioningState
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AddonStatusProfile",
    "AgentPool",
    "AgentPoolListResult",
    "AgentPoolName",
    "AgentPoolPatch",
    "AgentPoolProfile",
    "AgentPoolProperties",
    "AgentPoolProvisioningStatus",
    "AgentPoolProvisioningStatusOperationStatus",
    "AgentPoolProvisioningStatusOperationStatusError",
    "AgentPoolProvisioningStatusStatus",
    "AgentPoolUpdateProfile",
    "CloudProviderProfile",
    "CloudProviderProfileInfraNetworkProfile",
    "ControlPlaneEndpointProfile",
    "ControlPlaneEndpointProfileControlPlaneEndpoint",
    "ControlPlaneProfile",
    "CredentialResult",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "ExtendedLocation",
    "HybridIdentityMetadata",
    "HybridIdentityMetadataList",
    "KubernetesPatchVersions",
    "KubernetesVersionCapabilities",
    "KubernetesVersionProfile",
    "KubernetesVersionProfileList",
    "KubernetesVersionProfileProperties",
    "KubernetesVersionProperties",
    "KubernetesVersionReadiness",
    "LinuxProfile",
    "LinuxProfileProperties",
    "LinuxProfilePropertiesSsh",
    "LinuxProfilePropertiesSshPublicKeysItem",
    "ListCredentialResponse",
    "ListCredentialResponseError",
    "ListCredentialResponseProperties",
    "NamedAgentPoolProfile",
    "NetworkProfile",
    "NetworkProfileLoadBalancerProfile",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "ProvisionedClusterLicenseProfile",
    "ProvisionedClusterPoolUpgradeProfile",
    "ProvisionedClusterPoolUpgradeProfileProperties",
    "ProvisionedClusterProperties",
    "ProvisionedClusterPropertiesStatus",
    "ProvisionedClusterPropertiesStatusOperationStatus",
    "ProvisionedClusterPropertiesStatusOperationStatusError",
    "ProvisionedClusterUpgradeProfile",
    "ProvisionedClusters",
    "ProvisionedClustersListResult",
    "ProxyResource",
    "Resource",
    "SystemData",
    "TrackedResource",
    "VirtualNetwork",
    "VirtualNetworkExtendedLocation",
    "VirtualNetworkProperties",
    "VirtualNetworkPropertiesInfraVnetProfile",
    "VirtualNetworkPropertiesInfraVnetProfileHci",
    "VirtualNetworkPropertiesInfraVnetProfileVmware",
    "VirtualNetworkPropertiesStatus",
    "VirtualNetworkPropertiesStatusOperationStatus",
    "VirtualNetworkPropertiesStatusOperationStatusError",
    "VirtualNetworkPropertiesVipPoolItem",
    "VirtualNetworkPropertiesVmipPoolItem",
    "VirtualNetworksListResult",
    "VirtualNetworksPatch",
    "VmSkuCapabilities",
    "VmSkuProfile",
    "VmSkuProfileList",
    "VmSkuProfileProperties",
    "VmSkuProperties",
    "ActionType",
    "AddonPhase",
    "AzureHybridBenefit",
    "CreatedByType",
    "ExtendedLocationTypes",
    "NetworkPolicy",
    "OSSKU",
    "Origin",
    "OsType",
    "ProvisioningState",
    "ResourceProvisioningState",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
