# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._arc_settings_operations import ArcSettingsOperations
from ._clusters_operations import ClustersOperations
from ._extensions_operations import ExtensionsOperations
from ._galleryimages_operations import GalleryimagesOperations
from ._marketplacegalleryimages_operations import MarketplacegalleryimagesOperations
from ._networkinterfaces_operations import NetworkinterfacesOperations
from ._operations import Operations
from ._storagecontainers_operations import StoragecontainersOperations
from ._virtualharddisks_operations import VirtualharddisksOperations
from ._virtualmachines_operations import VirtualmachinesOperations
from ._hybrid_identity_metadata_operations import HybridIdentityMetadataOperations
from ._machine_extensions_operations import MachineExtensionsOperations
from ._guest_agent_operations import GuestAgentOperations
from ._guest_agents_operations import GuestAgentsOperations
from ._virtualnetworks_operations import VirtualnetworksOperations

from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ArcSettingsOperations",
    "ClustersOperations",
    "ExtensionsOperations",
    "GalleryimagesOperations",
    "MarketplacegalleryimagesOperations",
    "NetworkinterfacesOperations",
    "Operations",
    "StoragecontainersOperations",
    "VirtualharddisksOperations",
    "VirtualmachinesOperations",
    "HybridIdentityMetadataOperations",
    "MachineExtensionsOperations",
    "GuestAgentOperations",
    "GuestAgentsOperations",
    "VirtualnetworksOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
