# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class ArcConnectivityProperties(_serialization.Model):
    """Connectivity related configuration required by arc server.

    :ivar enabled: True indicates ARC connectivity is enabled.
    :vartype enabled: bool
    """

    _attribute_map = {
        "enabled": {"key": "enabled", "type": "bool"},
    }

    def __init__(self, *, enabled: Optional[bool] = None, **kwargs):
        """
        :keyword enabled: True indicates ARC connectivity is enabled.
        :paramtype enabled: bool
        """
        super().__init__(**kwargs)
        self.enabled = enabled


class ArcIdentityResponse(_serialization.Model):
    """ArcIdentity details.

    :ivar arc_application_client_id:
    :vartype arc_application_client_id: str
    :ivar arc_application_tenant_id:
    :vartype arc_application_tenant_id: str
    :ivar arc_service_principal_object_id:
    :vartype arc_service_principal_object_id: str
    :ivar arc_application_object_id:
    :vartype arc_application_object_id: str
    """

    _attribute_map = {
        "arc_application_client_id": {"key": "properties.arcApplicationClientId", "type": "str"},
        "arc_application_tenant_id": {"key": "properties.arcApplicationTenantId", "type": "str"},
        "arc_service_principal_object_id": {"key": "properties.arcServicePrincipalObjectId", "type": "str"},
        "arc_application_object_id": {"key": "properties.arcApplicationObjectId", "type": "str"},
    }

    def __init__(
        self,
        *,
        arc_application_client_id: Optional[str] = None,
        arc_application_tenant_id: Optional[str] = None,
        arc_service_principal_object_id: Optional[str] = None,
        arc_application_object_id: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword arc_application_client_id:
        :paramtype arc_application_client_id: str
        :keyword arc_application_tenant_id:
        :paramtype arc_application_tenant_id: str
        :keyword arc_service_principal_object_id:
        :paramtype arc_service_principal_object_id: str
        :keyword arc_application_object_id:
        :paramtype arc_application_object_id: str
        """
        super().__init__(**kwargs)
        self.arc_application_client_id = arc_application_client_id
        self.arc_application_tenant_id = arc_application_tenant_id
        self.arc_service_principal_object_id = arc_service_principal_object_id
        self.arc_application_object_id = arc_application_object_id


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)


class ArcSetting(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """ArcSetting details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar provisioning_state: Provisioning state of the ArcSetting proxy resource. Known values
     are: "Succeeded", "Failed", "Canceled", "Accepted", and "Provisioning".
    :vartype provisioning_state: str or ~azure.mgmt.azurestackhci.models.ProvisioningState
    :ivar arc_instance_resource_group: The resource group that hosts the Arc agents, ie. Hybrid
     Compute Machine resources.
    :vartype arc_instance_resource_group: str
    :ivar arc_application_client_id: App id of arc AAD identity.
    :vartype arc_application_client_id: str
    :ivar arc_application_tenant_id: Tenant id of arc AAD identity.
    :vartype arc_application_tenant_id: str
    :ivar arc_service_principal_object_id: Object id of arc AAD service principal.
    :vartype arc_service_principal_object_id: str
    :ivar arc_application_object_id: Object id of arc AAD identity.
    :vartype arc_application_object_id: str
    :ivar aggregate_state: Aggregate state of Arc agent across the nodes in this HCI cluster. Known
     values are: "NotSpecified", "Error", "Succeeded", "Canceled", "Failed", "Connected",
     "Disconnected", "Deleted", "Creating", "Updating", "Deleting", "Moving", "PartiallySucceeded",
     "PartiallyConnected", and "InProgress".
    :vartype aggregate_state: str or ~azure.mgmt.azurestackhci.models.ArcSettingAggregateState
    :ivar per_node_details: State of Arc agent in each of the nodes.
    :vartype per_node_details: list[~azure.mgmt.azurestackhci.models.PerNodeState]
    :ivar connectivity_properties: contains connectivity related configuration for ARC resources.
    :vartype connectivity_properties: JSON
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "aggregate_state": {"readonly": True},
        "per_node_details": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "arc_instance_resource_group": {"key": "properties.arcInstanceResourceGroup", "type": "str"},
        "arc_application_client_id": {"key": "properties.arcApplicationClientId", "type": "str"},
        "arc_application_tenant_id": {"key": "properties.arcApplicationTenantId", "type": "str"},
        "arc_service_principal_object_id": {"key": "properties.arcServicePrincipalObjectId", "type": "str"},
        "arc_application_object_id": {"key": "properties.arcApplicationObjectId", "type": "str"},
        "aggregate_state": {"key": "properties.aggregateState", "type": "str"},
        "per_node_details": {"key": "properties.perNodeDetails", "type": "[PerNodeState]"},
        "connectivity_properties": {"key": "properties.connectivityProperties", "type": "object"},
    }

    def __init__(
        self,
        *,
        arc_instance_resource_group: Optional[str] = None,
        arc_application_client_id: Optional[str] = None,
        arc_application_tenant_id: Optional[str] = None,
        arc_service_principal_object_id: Optional[str] = None,
        arc_application_object_id: Optional[str] = None,
        connectivity_properties: Optional[JSON] = None,
        **kwargs
    ):
        """
        :keyword arc_instance_resource_group: The resource group that hosts the Arc agents, ie. Hybrid
         Compute Machine resources.
        :paramtype arc_instance_resource_group: str
        :keyword arc_application_client_id: App id of arc AAD identity.
        :paramtype arc_application_client_id: str
        :keyword arc_application_tenant_id: Tenant id of arc AAD identity.
        :paramtype arc_application_tenant_id: str
        :keyword arc_service_principal_object_id: Object id of arc AAD service principal.
        :paramtype arc_service_principal_object_id: str
        :keyword arc_application_object_id: Object id of arc AAD identity.
        :paramtype arc_application_object_id: str
        :keyword connectivity_properties: contains connectivity related configuration for ARC
         resources.
        :paramtype connectivity_properties: JSON
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.arc_instance_resource_group = arc_instance_resource_group
        self.arc_application_client_id = arc_application_client_id
        self.arc_application_tenant_id = arc_application_tenant_id
        self.arc_service_principal_object_id = arc_service_principal_object_id
        self.arc_application_object_id = arc_application_object_id
        self.aggregate_state = None
        self.per_node_details = None
        self.connectivity_properties = connectivity_properties


class ArcSettingList(_serialization.Model):
    """List of ArcSetting proxy resources for the HCI cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of ArcSetting proxy resources.
    :vartype value: list[~azure.mgmt.azurestackhci.models.ArcSetting]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[ArcSetting]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class ArcSettingsPatch(_serialization.Model):
    """ArcSetting details to update.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar connectivity_properties: contains connectivity related configuration for ARC resources.
    :vartype connectivity_properties: JSON
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "connectivity_properties": {"key": "properties.connectivityProperties", "type": "object"},
    }

    def __init__(
        self, *, tags: Optional[Dict[str, str]] = None, connectivity_properties: Optional[JSON] = None, **kwargs
    ):
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword connectivity_properties: contains connectivity related configuration for ARC
         resources.
        :paramtype connectivity_properties: JSON
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.connectivity_properties = connectivity_properties


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs):
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class Cluster(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """Cluster details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar provisioning_state: Provisioning state. Known values are: "Succeeded", "Failed",
     "Canceled", "Accepted", and "Provisioning".
    :vartype provisioning_state: str or ~azure.mgmt.azurestackhci.models.ProvisioningState
    :ivar status: Status of the cluster agent. Known values are: "NotYetRegistered",
     "ConnectedRecently", "NotConnectedRecently", "Disconnected", and "Error".
    :vartype status: str or ~azure.mgmt.azurestackhci.models.Status
    :ivar cloud_id: Unique, immutable resource id.
    :vartype cloud_id: str
    :ivar cloud_management_endpoint: Endpoint configured for management from the Azure portal.
    :vartype cloud_management_endpoint: str
    :ivar aad_client_id: App id of cluster AAD identity.
    :vartype aad_client_id: str
    :ivar aad_tenant_id: Tenant id of cluster AAD identity.
    :vartype aad_tenant_id: str
    :ivar aad_application_object_id: Object id of cluster AAD identity.
    :vartype aad_application_object_id: str
    :ivar aad_service_principal_object_id: Id of cluster identity service principal.
    :vartype aad_service_principal_object_id: str
    :ivar software_assurance_properties: Software Assurance properties of the cluster.
    :vartype software_assurance_properties:
     ~azure.mgmt.azurestackhci.models.SoftwareAssuranceProperties
    :ivar desired_properties: Desired properties of the cluster.
    :vartype desired_properties: ~azure.mgmt.azurestackhci.models.ClusterDesiredProperties
    :ivar reported_properties: Properties reported by cluster agent.
    :vartype reported_properties: ~azure.mgmt.azurestackhci.models.ClusterReportedProperties
    :ivar trial_days_remaining: Number of days remaining in the trial period.
    :vartype trial_days_remaining: float
    :ivar billing_model: Type of billing applied to the resource.
    :vartype billing_model: str
    :ivar registration_timestamp: First cluster sync timestamp.
    :vartype registration_timestamp: ~datetime.datetime
    :ivar last_sync_timestamp: Most recent cluster sync timestamp.
    :vartype last_sync_timestamp: ~datetime.datetime
    :ivar last_billing_timestamp: Most recent billing meter timestamp.
    :vartype last_billing_timestamp: ~datetime.datetime
    :ivar service_endpoint: Region specific DataPath Endpoint of the cluster.
    :vartype service_endpoint: str
    :ivar principal_id: The service principal ID of the system assigned identity. This property
     will only be provided for a system assigned identity.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of the system assigned identity. This property will only be
     provided for a system assigned identity.
    :vartype tenant_id: str
    :ivar type_identity_type: Type of managed service identity (where both SystemAssigned and
     UserAssigned types are allowed). Known values are: "None", "SystemAssigned", "UserAssigned",
     and "SystemAssigned, UserAssigned".
    :vartype type_identity_type: str or ~azure.mgmt.azurestackhci.models.ManagedServiceIdentityType
    :ivar user_assigned_identities: The set of user assigned identities associated with the
     resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
     The dictionary values can be empty objects ({}) in requests.
    :vartype user_assigned_identities: dict[str,
     ~azure.mgmt.azurestackhci.models.UserAssignedIdentity]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
        "cloud_id": {"readonly": True},
        "reported_properties": {"readonly": True},
        "trial_days_remaining": {"readonly": True},
        "billing_model": {"readonly": True},
        "registration_timestamp": {"readonly": True},
        "last_sync_timestamp": {"readonly": True},
        "last_billing_timestamp": {"readonly": True},
        "service_endpoint": {"readonly": True},
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "status": {"key": "properties.status", "type": "str"},
        "cloud_id": {"key": "properties.cloudId", "type": "str"},
        "cloud_management_endpoint": {"key": "properties.cloudManagementEndpoint", "type": "str"},
        "aad_client_id": {"key": "properties.aadClientId", "type": "str"},
        "aad_tenant_id": {"key": "properties.aadTenantId", "type": "str"},
        "aad_application_object_id": {"key": "properties.aadApplicationObjectId", "type": "str"},
        "aad_service_principal_object_id": {"key": "properties.aadServicePrincipalObjectId", "type": "str"},
        "software_assurance_properties": {
            "key": "properties.softwareAssuranceProperties",
            "type": "SoftwareAssuranceProperties",
        },
        "desired_properties": {"key": "properties.desiredProperties", "type": "ClusterDesiredProperties"},
        "reported_properties": {"key": "properties.reportedProperties", "type": "ClusterReportedProperties"},
        "trial_days_remaining": {"key": "properties.trialDaysRemaining", "type": "float"},
        "billing_model": {"key": "properties.billingModel", "type": "str"},
        "registration_timestamp": {"key": "properties.registrationTimestamp", "type": "iso-8601"},
        "last_sync_timestamp": {"key": "properties.lastSyncTimestamp", "type": "iso-8601"},
        "last_billing_timestamp": {"key": "properties.lastBillingTimestamp", "type": "iso-8601"},
        "service_endpoint": {"key": "properties.serviceEndpoint", "type": "str"},
        "principal_id": {"key": "identity.principalId", "type": "str"},
        "tenant_id": {"key": "identity.tenantId", "type": "str"},
        "type_identity_type": {"key": "identity.type", "type": "str"},
        "user_assigned_identities": {"key": "identity.userAssignedIdentities", "type": "{UserAssignedIdentity}"},
    }

    def __init__(  # pylint: disable=too-many-locals
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        cloud_management_endpoint: Optional[str] = None,
        aad_client_id: Optional[str] = None,
        aad_tenant_id: Optional[str] = None,
        aad_application_object_id: Optional[str] = None,
        aad_service_principal_object_id: Optional[str] = None,
        software_assurance_properties: Optional["_models.SoftwareAssuranceProperties"] = None,
        desired_properties: Optional["_models.ClusterDesiredProperties"] = None,
        type_identity_type: Optional[Union[str, "_models.ManagedServiceIdentityType"]] = None,
        user_assigned_identities: Optional[Dict[str, "_models.UserAssignedIdentity"]] = None,
        **kwargs
    ):
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword cloud_management_endpoint: Endpoint configured for management from the Azure portal.
        :paramtype cloud_management_endpoint: str
        :keyword aad_client_id: App id of cluster AAD identity.
        :paramtype aad_client_id: str
        :keyword aad_tenant_id: Tenant id of cluster AAD identity.
        :paramtype aad_tenant_id: str
        :keyword aad_application_object_id: Object id of cluster AAD identity.
        :paramtype aad_application_object_id: str
        :keyword aad_service_principal_object_id: Id of cluster identity service principal.
        :paramtype aad_service_principal_object_id: str
        :keyword software_assurance_properties: Software Assurance properties of the cluster.
        :paramtype software_assurance_properties:
         ~azure.mgmt.azurestackhci.models.SoftwareAssuranceProperties
        :keyword desired_properties: Desired properties of the cluster.
        :paramtype desired_properties: ~azure.mgmt.azurestackhci.models.ClusterDesiredProperties
        :keyword type_identity_type: Type of managed service identity (where both SystemAssigned and
         UserAssigned types are allowed). Known values are: "None", "SystemAssigned", "UserAssigned",
         and "SystemAssigned, UserAssigned".
        :paramtype type_identity_type: str or
         ~azure.mgmt.azurestackhci.models.ManagedServiceIdentityType
        :keyword user_assigned_identities: The set of user assigned identities associated with the
         resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
         '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
         The dictionary values can be empty objects ({}) in requests.
        :paramtype user_assigned_identities: dict[str,
         ~azure.mgmt.azurestackhci.models.UserAssignedIdentity]
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.provisioning_state = None
        self.status = None
        self.cloud_id = None
        self.cloud_management_endpoint = cloud_management_endpoint
        self.aad_client_id = aad_client_id
        self.aad_tenant_id = aad_tenant_id
        self.aad_application_object_id = aad_application_object_id
        self.aad_service_principal_object_id = aad_service_principal_object_id
        self.software_assurance_properties = software_assurance_properties
        self.desired_properties = desired_properties
        self.reported_properties = None
        self.trial_days_remaining = None
        self.billing_model = None
        self.registration_timestamp = None
        self.last_sync_timestamp = None
        self.last_billing_timestamp = None
        self.service_endpoint = None
        self.principal_id = None
        self.tenant_id = None
        self.type_identity_type = type_identity_type
        self.user_assigned_identities = user_assigned_identities


class ClusterDesiredProperties(_serialization.Model):
    """Desired properties of the cluster.

    :ivar windows_server_subscription: Desired state of Windows Server Subscription. Known values
     are: "Disabled" and "Enabled".
    :vartype windows_server_subscription: str or
     ~azure.mgmt.azurestackhci.models.WindowsServerSubscription
    :ivar diagnostic_level: Desired level of diagnostic data emitted by the cluster. Known values
     are: "Off", "Basic", and "Enhanced".
    :vartype diagnostic_level: str or ~azure.mgmt.azurestackhci.models.DiagnosticLevel
    """

    _attribute_map = {
        "windows_server_subscription": {"key": "windowsServerSubscription", "type": "str"},
        "diagnostic_level": {"key": "diagnosticLevel", "type": "str"},
    }

    def __init__(
        self,
        *,
        windows_server_subscription: Optional[Union[str, "_models.WindowsServerSubscription"]] = None,
        diagnostic_level: Optional[Union[str, "_models.DiagnosticLevel"]] = None,
        **kwargs
    ):
        """
        :keyword windows_server_subscription: Desired state of Windows Server Subscription. Known
         values are: "Disabled" and "Enabled".
        :paramtype windows_server_subscription: str or
         ~azure.mgmt.azurestackhci.models.WindowsServerSubscription
        :keyword diagnostic_level: Desired level of diagnostic data emitted by the cluster. Known
         values are: "Off", "Basic", and "Enhanced".
        :paramtype diagnostic_level: str or ~azure.mgmt.azurestackhci.models.DiagnosticLevel
        """
        super().__init__(**kwargs)
        self.windows_server_subscription = windows_server_subscription
        self.diagnostic_level = diagnostic_level


class ClusterIdentityResponse(_serialization.Model):
    """Cluster Identity details.

    :ivar aad_client_id:
    :vartype aad_client_id: str
    :ivar aad_tenant_id:
    :vartype aad_tenant_id: str
    :ivar aad_service_principal_object_id:
    :vartype aad_service_principal_object_id: str
    :ivar aad_application_object_id:
    :vartype aad_application_object_id: str
    """

    _attribute_map = {
        "aad_client_id": {"key": "properties.aadClientId", "type": "str"},
        "aad_tenant_id": {"key": "properties.aadTenantId", "type": "str"},
        "aad_service_principal_object_id": {"key": "properties.aadServicePrincipalObjectId", "type": "str"},
        "aad_application_object_id": {"key": "properties.aadApplicationObjectId", "type": "str"},
    }

    def __init__(
        self,
        *,
        aad_client_id: Optional[str] = None,
        aad_tenant_id: Optional[str] = None,
        aad_service_principal_object_id: Optional[str] = None,
        aad_application_object_id: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword aad_client_id:
        :paramtype aad_client_id: str
        :keyword aad_tenant_id:
        :paramtype aad_tenant_id: str
        :keyword aad_service_principal_object_id:
        :paramtype aad_service_principal_object_id: str
        :keyword aad_application_object_id:
        :paramtype aad_application_object_id: str
        """
        super().__init__(**kwargs)
        self.aad_client_id = aad_client_id
        self.aad_tenant_id = aad_tenant_id
        self.aad_service_principal_object_id = aad_service_principal_object_id
        self.aad_application_object_id = aad_application_object_id


class ClusterList(_serialization.Model):
    """List of clusters.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of clusters.
    :vartype value: list[~azure.mgmt.azurestackhci.models.Cluster]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Cluster]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.Cluster"]] = None, **kwargs):
        """
        :keyword value: List of clusters.
        :paramtype value: list[~azure.mgmt.azurestackhci.models.Cluster]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class ClusterNode(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Cluster node details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the cluster node.
    :vartype name: str
    :ivar id: Id of the node in the cluster.
    :vartype id: float
    :ivar windows_server_subscription: State of Windows Server Subscription. Known values are:
     "Disabled" and "Enabled".
    :vartype windows_server_subscription: str or
     ~azure.mgmt.azurestackhci.models.WindowsServerSubscription
    :ivar node_type: Type of the cluster node hardware. Known values are: "FirstParty" and
     "ThirdParty".
    :vartype node_type: str or ~azure.mgmt.azurestackhci.models.ClusterNodeType
    :ivar manufacturer: Manufacturer of the cluster node hardware.
    :vartype manufacturer: str
    :ivar model: Model name of the cluster node hardware.
    :vartype model: str
    :ivar os_name: Operating system running on the cluster node.
    :vartype os_name: str
    :ivar os_version: Version of the operating system running on the cluster node.
    :vartype os_version: str
    :ivar os_display_version: Display version of the operating system running on the cluster node.
    :vartype os_display_version: str
    :ivar serial_number: Immutable id of the cluster node.
    :vartype serial_number: str
    :ivar core_count: Number of physical cores on the cluster node.
    :vartype core_count: float
    :ivar memory_in_gi_b: Total available memory on the cluster node (in GiB).
    :vartype memory_in_gi_b: float
    """

    _validation = {
        "name": {"readonly": True},
        "id": {"readonly": True},
        "windows_server_subscription": {"readonly": True},
        "node_type": {"readonly": True},
        "manufacturer": {"readonly": True},
        "model": {"readonly": True},
        "os_name": {"readonly": True},
        "os_version": {"readonly": True},
        "os_display_version": {"readonly": True},
        "serial_number": {"readonly": True},
        "core_count": {"readonly": True},
        "memory_in_gi_b": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "id": {"key": "id", "type": "float"},
        "windows_server_subscription": {"key": "windowsServerSubscription", "type": "str"},
        "node_type": {"key": "nodeType", "type": "str"},
        "manufacturer": {"key": "manufacturer", "type": "str"},
        "model": {"key": "model", "type": "str"},
        "os_name": {"key": "osName", "type": "str"},
        "os_version": {"key": "osVersion", "type": "str"},
        "os_display_version": {"key": "osDisplayVersion", "type": "str"},
        "serial_number": {"key": "serialNumber", "type": "str"},
        "core_count": {"key": "coreCount", "type": "float"},
        "memory_in_gi_b": {"key": "memoryInGiB", "type": "float"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.id = None
        self.windows_server_subscription = None
        self.node_type = None
        self.manufacturer = None
        self.model = None
        self.os_name = None
        self.os_version = None
        self.os_display_version = None
        self.serial_number = None
        self.core_count = None
        self.memory_in_gi_b = None


class ClusterPatch(_serialization.Model):
    """Cluster details to update.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar cloud_management_endpoint: Endpoint configured for management from the Azure portal.
    :vartype cloud_management_endpoint: str
    :ivar aad_client_id: App id of cluster AAD identity.
    :vartype aad_client_id: str
    :ivar aad_tenant_id: Tenant id of cluster AAD identity.
    :vartype aad_tenant_id: str
    :ivar desired_properties: Desired properties of the cluster.
    :vartype desired_properties: ~azure.mgmt.azurestackhci.models.ClusterDesiredProperties
    :ivar principal_id: The service principal ID of the system assigned identity. This property
     will only be provided for a system assigned identity.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of the system assigned identity. This property will only be
     provided for a system assigned identity.
    :vartype tenant_id: str
    :ivar type: Type of managed service identity (where both SystemAssigned and UserAssigned types
     are allowed). Known values are: "None", "SystemAssigned", "UserAssigned", and "SystemAssigned,
     UserAssigned".
    :vartype type: str or ~azure.mgmt.azurestackhci.models.ManagedServiceIdentityType
    :ivar user_assigned_identities: The set of user assigned identities associated with the
     resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
     The dictionary values can be empty objects ({}) in requests.
    :vartype user_assigned_identities: dict[str,
     ~azure.mgmt.azurestackhci.models.UserAssignedIdentity]
    """

    _validation = {
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
        "cloud_management_endpoint": {"key": "properties.cloudManagementEndpoint", "type": "str"},
        "aad_client_id": {"key": "properties.aadClientId", "type": "str"},
        "aad_tenant_id": {"key": "properties.aadTenantId", "type": "str"},
        "desired_properties": {"key": "properties.desiredProperties", "type": "ClusterDesiredProperties"},
        "principal_id": {"key": "identity.principalId", "type": "str"},
        "tenant_id": {"key": "identity.tenantId", "type": "str"},
        "type": {"key": "identity.type", "type": "str"},
        "user_assigned_identities": {"key": "identity.userAssignedIdentities", "type": "{UserAssignedIdentity}"},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        cloud_management_endpoint: Optional[str] = None,
        aad_client_id: Optional[str] = None,
        aad_tenant_id: Optional[str] = None,
        desired_properties: Optional["_models.ClusterDesiredProperties"] = None,
        type: Optional[Union[str, "_models.ManagedServiceIdentityType"]] = None,
        user_assigned_identities: Optional[Dict[str, "_models.UserAssignedIdentity"]] = None,
        **kwargs
    ):
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword cloud_management_endpoint: Endpoint configured for management from the Azure portal.
        :paramtype cloud_management_endpoint: str
        :keyword aad_client_id: App id of cluster AAD identity.
        :paramtype aad_client_id: str
        :keyword aad_tenant_id: Tenant id of cluster AAD identity.
        :paramtype aad_tenant_id: str
        :keyword desired_properties: Desired properties of the cluster.
        :paramtype desired_properties: ~azure.mgmt.azurestackhci.models.ClusterDesiredProperties
        :keyword type: Type of managed service identity (where both SystemAssigned and UserAssigned
         types are allowed). Known values are: "None", "SystemAssigned", "UserAssigned", and
         "SystemAssigned, UserAssigned".
        :paramtype type: str or ~azure.mgmt.azurestackhci.models.ManagedServiceIdentityType
        :keyword user_assigned_identities: The set of user assigned identities associated with the
         resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
         '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
         The dictionary values can be empty objects ({}) in requests.
        :paramtype user_assigned_identities: dict[str,
         ~azure.mgmt.azurestackhci.models.UserAssignedIdentity]
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.cloud_management_endpoint = cloud_management_endpoint
        self.aad_client_id = aad_client_id
        self.aad_tenant_id = aad_tenant_id
        self.desired_properties = desired_properties
        self.principal_id = None
        self.tenant_id = None
        self.type = type
        self.user_assigned_identities = user_assigned_identities


class ClusterReportedProperties(_serialization.Model):
    """Properties reported by cluster agent.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar cluster_name: Name of the on-prem cluster connected to this resource.
    :vartype cluster_name: str
    :ivar cluster_id: Unique id generated by the on-prem cluster.
    :vartype cluster_id: str
    :ivar cluster_version: Version of the cluster software.
    :vartype cluster_version: str
    :ivar nodes: List of nodes reported by the cluster.
    :vartype nodes: list[~azure.mgmt.azurestackhci.models.ClusterNode]
    :ivar last_updated: Last time the cluster reported the data.
    :vartype last_updated: ~datetime.datetime
    :ivar imds_attestation: IMDS attestation status of the cluster. Known values are: "Disabled"
     and "Enabled".
    :vartype imds_attestation: str or ~azure.mgmt.azurestackhci.models.ImdsAttestation
    :ivar diagnostic_level: Level of diagnostic data emitted by the cluster. Known values are:
     "Off", "Basic", and "Enhanced".
    :vartype diagnostic_level: str or ~azure.mgmt.azurestackhci.models.DiagnosticLevel
    """

    _validation = {
        "cluster_name": {"readonly": True},
        "cluster_id": {"readonly": True},
        "cluster_version": {"readonly": True},
        "nodes": {"readonly": True},
        "last_updated": {"readonly": True},
        "imds_attestation": {"readonly": True},
    }

    _attribute_map = {
        "cluster_name": {"key": "clusterName", "type": "str"},
        "cluster_id": {"key": "clusterId", "type": "str"},
        "cluster_version": {"key": "clusterVersion", "type": "str"},
        "nodes": {"key": "nodes", "type": "[ClusterNode]"},
        "last_updated": {"key": "lastUpdated", "type": "iso-8601"},
        "imds_attestation": {"key": "imdsAttestation", "type": "str"},
        "diagnostic_level": {"key": "diagnosticLevel", "type": "str"},
    }

    def __init__(self, *, diagnostic_level: Optional[Union[str, "_models.DiagnosticLevel"]] = None, **kwargs):
        """
        :keyword diagnostic_level: Level of diagnostic data emitted by the cluster. Known values are:
         "Off", "Basic", and "Enhanced".
        :paramtype diagnostic_level: str or ~azure.mgmt.azurestackhci.models.DiagnosticLevel
        """
        super().__init__(**kwargs)
        self.cluster_name = None
        self.cluster_id = None
        self.cluster_version = None
        self.nodes = None
        self.last_updated = None
        self.imds_attestation = None
        self.diagnostic_level = diagnostic_level


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.azurestackhci.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.azurestackhci.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.azurestackhci.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs):
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.azurestackhci.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class Extension(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Details of a particular extension in HCI Cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar provisioning_state: Provisioning state of the Extension proxy resource. Known values are:
     "Succeeded", "Failed", "Canceled", "Accepted", and "Provisioning".
    :vartype provisioning_state: str or ~azure.mgmt.azurestackhci.models.ProvisioningState
    :ivar aggregate_state: Aggregate state of Arc Extensions across the nodes in this HCI cluster.
     Known values are: "NotSpecified", "Error", "Succeeded", "Canceled", "Failed", "Connected",
     "Disconnected", "Deleted", "Creating", "Updating", "Deleting", "Moving", "PartiallySucceeded",
     "PartiallyConnected", and "InProgress".
    :vartype aggregate_state: str or ~azure.mgmt.azurestackhci.models.ExtensionAggregateState
    :ivar per_node_extension_details: State of Arc Extension in each of the nodes.
    :vartype per_node_extension_details:
     list[~azure.mgmt.azurestackhci.models.PerNodeExtensionState]
    :ivar force_update_tag: How the extension handler should be forced to update even if the
     extension configuration has not changed.
    :vartype force_update_tag: str
    :ivar publisher: The name of the extension handler publisher.
    :vartype publisher: str
    :ivar type_properties_extension_parameters_type: Specifies the type of the extension; an
     example is "CustomScriptExtension".
    :vartype type_properties_extension_parameters_type: str
    :ivar type_handler_version: Specifies the version of the script handler.
    :vartype type_handler_version: str
    :ivar auto_upgrade_minor_version: Indicates whether the extension should use a newer minor
     version if one is available at deployment time. Once deployed, however, the extension will not
     upgrade minor versions unless redeployed, even with this property set to true.
    :vartype auto_upgrade_minor_version: bool
    :ivar settings: Json formatted public settings for the extension.
    :vartype settings: JSON
    :ivar protected_settings: Protected settings (may contain secrets).
    :vartype protected_settings: JSON
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "aggregate_state": {"readonly": True},
        "per_node_extension_details": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "aggregate_state": {"key": "properties.aggregateState", "type": "str"},
        "per_node_extension_details": {"key": "properties.perNodeExtensionDetails", "type": "[PerNodeExtensionState]"},
        "force_update_tag": {"key": "properties.extensionParameters.forceUpdateTag", "type": "str"},
        "publisher": {"key": "properties.extensionParameters.publisher", "type": "str"},
        "type_properties_extension_parameters_type": {"key": "properties.extensionParameters.type", "type": "str"},
        "type_handler_version": {"key": "properties.extensionParameters.typeHandlerVersion", "type": "str"},
        "auto_upgrade_minor_version": {"key": "properties.extensionParameters.autoUpgradeMinorVersion", "type": "bool"},
        "settings": {"key": "properties.extensionParameters.settings", "type": "object"},
        "protected_settings": {"key": "properties.extensionParameters.protectedSettings", "type": "object"},
    }

    def __init__(
        self,
        *,
        force_update_tag: Optional[str] = None,
        publisher: Optional[str] = None,
        type_properties_extension_parameters_type: Optional[str] = None,
        type_handler_version: Optional[str] = None,
        auto_upgrade_minor_version: Optional[bool] = None,
        settings: Optional[JSON] = None,
        protected_settings: Optional[JSON] = None,
        **kwargs
    ):
        """
        :keyword force_update_tag: How the extension handler should be forced to update even if the
         extension configuration has not changed.
        :paramtype force_update_tag: str
        :keyword publisher: The name of the extension handler publisher.
        :paramtype publisher: str
        :keyword type_properties_extension_parameters_type: Specifies the type of the extension; an
         example is "CustomScriptExtension".
        :paramtype type_properties_extension_parameters_type: str
        :keyword type_handler_version: Specifies the version of the script handler.
        :paramtype type_handler_version: str
        :keyword auto_upgrade_minor_version: Indicates whether the extension should use a newer minor
         version if one is available at deployment time. Once deployed, however, the extension will not
         upgrade minor versions unless redeployed, even with this property set to true.
        :paramtype auto_upgrade_minor_version: bool
        :keyword settings: Json formatted public settings for the extension.
        :paramtype settings: JSON
        :keyword protected_settings: Protected settings (may contain secrets).
        :paramtype protected_settings: JSON
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.aggregate_state = None
        self.per_node_extension_details = None
        self.force_update_tag = force_update_tag
        self.publisher = publisher
        self.type_properties_extension_parameters_type = type_properties_extension_parameters_type
        self.type_handler_version = type_handler_version
        self.auto_upgrade_minor_version = auto_upgrade_minor_version
        self.settings = settings
        self.protected_settings = protected_settings


class ExtensionList(_serialization.Model):
    """List of Extensions in HCI cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of Extensions in HCI cluster.
    :vartype value: list[~azure.mgmt.azurestackhci.models.Extension]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Extension]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class Offer(ProxyResource):
    """Offer details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar provisioning_state: Provisioning State.
    :vartype provisioning_state: str
    :ivar publisher_id: Identifier of the Publisher for the offer.
    :vartype publisher_id: str
    :ivar content: JSON serialized catalog content of the offer.
    :vartype content: str
    :ivar content_version: The API version of the catalog service used to serve the catalog
     content.
    :vartype content_version: str
    :ivar sku_mappings: Array of SKU mappings.
    :vartype sku_mappings: list[~azure.mgmt.azurestackhci.models.SkuMappings]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "publisher_id": {"key": "properties.publisherId", "type": "str"},
        "content": {"key": "properties.content", "type": "str"},
        "content_version": {"key": "properties.contentVersion", "type": "str"},
        "sku_mappings": {"key": "properties.skuMappings", "type": "[SkuMappings]"},
    }

    def __init__(
        self,
        *,
        publisher_id: Optional[str] = None,
        content: Optional[str] = None,
        content_version: Optional[str] = None,
        sku_mappings: Optional[List["_models.SkuMappings"]] = None,
        **kwargs
    ):
        """
        :keyword publisher_id: Identifier of the Publisher for the offer.
        :paramtype publisher_id: str
        :keyword content: JSON serialized catalog content of the offer.
        :paramtype content: str
        :keyword content_version: The API version of the catalog service used to serve the catalog
         content.
        :paramtype content_version: str
        :keyword sku_mappings: Array of SKU mappings.
        :paramtype sku_mappings: list[~azure.mgmt.azurestackhci.models.SkuMappings]
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.publisher_id = publisher_id
        self.content = content
        self.content_version = content_version
        self.sku_mappings = sku_mappings


class OfferList(_serialization.Model):
    """List of Offer proxy resources for the HCI cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of Offer proxy resources.
    :vartype value: list[~azure.mgmt.azurestackhci.models.Offer]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Offer]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.azurestackhci.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.azurestackhci.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.azurestackhci.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs):
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.azurestackhci.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.azurestackhci.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class PackageVersionInfo(_serialization.Model):
    """Current version of each updatable component.

    :ivar package_type: Package type.
    :vartype package_type: str
    :ivar version: Package version.
    :vartype version: str
    :ivar last_updated: Last time this component was updated.
    :vartype last_updated: ~datetime.datetime
    """

    _attribute_map = {
        "package_type": {"key": "packageType", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "last_updated": {"key": "lastUpdated", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        package_type: Optional[str] = None,
        version: Optional[str] = None,
        last_updated: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword package_type: Package type.
        :paramtype package_type: str
        :keyword version: Package version.
        :paramtype version: str
        :keyword last_updated: Last time this component was updated.
        :paramtype last_updated: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.package_type = package_type
        self.version = version
        self.last_updated = last_updated


class PasswordCredential(_serialization.Model):
    """PasswordCredential.

    :ivar secret_text:
    :vartype secret_text: str
    :ivar key_id:
    :vartype key_id: str
    :ivar start_date_time:
    :vartype start_date_time: ~datetime.datetime
    :ivar end_date_time:
    :vartype end_date_time: ~datetime.datetime
    """

    _attribute_map = {
        "secret_text": {"key": "secretText", "type": "str"},
        "key_id": {"key": "keyId", "type": "str"},
        "start_date_time": {"key": "startDateTime", "type": "iso-8601"},
        "end_date_time": {"key": "endDateTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        secret_text: Optional[str] = None,
        key_id: Optional[str] = None,
        start_date_time: Optional[datetime.datetime] = None,
        end_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword secret_text:
        :paramtype secret_text: str
        :keyword key_id:
        :paramtype key_id: str
        :keyword start_date_time:
        :paramtype start_date_time: ~datetime.datetime
        :keyword end_date_time:
        :paramtype end_date_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.secret_text = secret_text
        self.key_id = key_id
        self.start_date_time = start_date_time
        self.end_date_time = end_date_time


class PerNodeExtensionState(_serialization.Model):
    """Status of Arc Extension for a particular node in HCI Cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the node in HCI Cluster.
    :vartype name: str
    :ivar extension: Fully qualified resource ID for the particular Arc Extension on this node.
    :vartype extension: str
    :ivar state: State of Arc Extension in this node. Known values are: "NotSpecified", "Error",
     "Succeeded", "Canceled", "Failed", "Connected", "Disconnected", "Deleted", "Creating",
     "Updating", "Deleting", and "Moving".
    :vartype state: str or ~azure.mgmt.azurestackhci.models.NodeExtensionState
    """

    _validation = {
        "name": {"readonly": True},
        "extension": {"readonly": True},
        "state": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "extension": {"key": "extension", "type": "str"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.extension = None
        self.state = None


class PerNodeState(_serialization.Model):
    """Status of Arc agent for a particular node in HCI Cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: Name of the Node in HCI Cluster.
    :vartype name: str
    :ivar arc_instance: Fully qualified resource ID for the Arc agent of this node.
    :vartype arc_instance: str
    :ivar state: State of Arc agent in this node. Known values are: "NotSpecified", "Error",
     "Succeeded", "Canceled", "Failed", "Connected", "Disconnected", "Deleted", "Creating",
     "Updating", "Deleting", and "Moving".
    :vartype state: str or ~azure.mgmt.azurestackhci.models.NodeArcState
    """

    _validation = {
        "name": {"readonly": True},
        "arc_instance": {"readonly": True},
        "state": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "arc_instance": {"key": "arcInstance", "type": "str"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.name = None
        self.arc_instance = None
        self.state = None


class Publisher(ProxyResource):
    """Publisher details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar provisioning_state: Provisioning State.
    :vartype provisioning_state: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.provisioning_state = None


class PublisherList(_serialization.Model):
    """List of Publisher proxy resources for the HCI cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of Publisher proxy resources.
    :vartype value: list[~azure.mgmt.azurestackhci.models.Publisher]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Publisher]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class RawCertificateData(_serialization.Model):
    """RawCertificateData.

    :ivar certificates:
    :vartype certificates: list[str]
    """

    _attribute_map = {
        "certificates": {"key": "certificates", "type": "[str]"},
    }

    def __init__(self, *, certificates: Optional[List[str]] = None, **kwargs):
        """
        :keyword certificates:
        :paramtype certificates: list[str]
        """
        super().__init__(**kwargs)
        self.certificates = certificates


class Sku(ProxyResource):
    """Sku details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar provisioning_state: Provisioning State.
    :vartype provisioning_state: str
    :ivar publisher_id: Identifier of the Publisher for the offer.
    :vartype publisher_id: str
    :ivar offer_id: Identifier of the Offer for the sku.
    :vartype offer_id: str
    :ivar content: JSON serialized catalog content of the sku offer.
    :vartype content: str
    :ivar content_version: The API version of the catalog service used to serve the catalog
     content.
    :vartype content_version: str
    :ivar sku_mappings: Array of SKU mappings.
    :vartype sku_mappings: list[~azure.mgmt.azurestackhci.models.SkuMappings]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "publisher_id": {"key": "properties.publisherId", "type": "str"},
        "offer_id": {"key": "properties.offerId", "type": "str"},
        "content": {"key": "properties.content", "type": "str"},
        "content_version": {"key": "properties.contentVersion", "type": "str"},
        "sku_mappings": {"key": "properties.skuMappings", "type": "[SkuMappings]"},
    }

    def __init__(
        self,
        *,
        publisher_id: Optional[str] = None,
        offer_id: Optional[str] = None,
        content: Optional[str] = None,
        content_version: Optional[str] = None,
        sku_mappings: Optional[List["_models.SkuMappings"]] = None,
        **kwargs
    ):
        """
        :keyword publisher_id: Identifier of the Publisher for the offer.
        :paramtype publisher_id: str
        :keyword offer_id: Identifier of the Offer for the sku.
        :paramtype offer_id: str
        :keyword content: JSON serialized catalog content of the sku offer.
        :paramtype content: str
        :keyword content_version: The API version of the catalog service used to serve the catalog
         content.
        :paramtype content_version: str
        :keyword sku_mappings: Array of SKU mappings.
        :paramtype sku_mappings: list[~azure.mgmt.azurestackhci.models.SkuMappings]
        """
        super().__init__(**kwargs)
        self.provisioning_state = None
        self.publisher_id = publisher_id
        self.offer_id = offer_id
        self.content = content
        self.content_version = content_version
        self.sku_mappings = sku_mappings


class SkuList(_serialization.Model):
    """List of SKU proxy resources for the HCI cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of SKU proxy resources.
    :vartype value: list[~azure.mgmt.azurestackhci.models.Sku]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Sku]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.value = None
        self.next_link = None


class SkuMappings(_serialization.Model):
    """SKU Mapping details.

    :ivar catalog_plan_id: Identifier of the CatalogPlan for the sku.
    :vartype catalog_plan_id: str
    :ivar marketplace_sku_id: Identifier for the sku.
    :vartype marketplace_sku_id: str
    :ivar marketplace_sku_versions: Array of SKU versions available.
    :vartype marketplace_sku_versions: list[str]
    """

    _attribute_map = {
        "catalog_plan_id": {"key": "catalogPlanId", "type": "str"},
        "marketplace_sku_id": {"key": "marketplaceSkuId", "type": "str"},
        "marketplace_sku_versions": {"key": "marketplaceSkuVersions", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        catalog_plan_id: Optional[str] = None,
        marketplace_sku_id: Optional[str] = None,
        marketplace_sku_versions: Optional[List[str]] = None,
        **kwargs
    ):
        """
        :keyword catalog_plan_id: Identifier of the CatalogPlan for the sku.
        :paramtype catalog_plan_id: str
        :keyword marketplace_sku_id: Identifier for the sku.
        :paramtype marketplace_sku_id: str
        :keyword marketplace_sku_versions: Array of SKU versions available.
        :paramtype marketplace_sku_versions: list[str]
        """
        super().__init__(**kwargs)
        self.catalog_plan_id = catalog_plan_id
        self.marketplace_sku_id = marketplace_sku_id
        self.marketplace_sku_versions = marketplace_sku_versions


class SoftwareAssuranceChangeRequest(_serialization.Model):
    """SoftwareAssuranceChangeRequest.

    :ivar properties:
    :vartype properties: ~azure.mgmt.azurestackhci.models.SoftwareAssuranceChangeRequestProperties
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "SoftwareAssuranceChangeRequestProperties"},
    }

    def __init__(self, *, properties: Optional["_models.SoftwareAssuranceChangeRequestProperties"] = None, **kwargs):
        """
        :keyword properties:
        :paramtype properties:
         ~azure.mgmt.azurestackhci.models.SoftwareAssuranceChangeRequestProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class SoftwareAssuranceChangeRequestProperties(_serialization.Model):
    """SoftwareAssuranceChangeRequestProperties.

    :ivar software_assurance_intent: Customer Intent for Software Assurance Benefit. Known values
     are: "Enable" and "Disable".
    :vartype software_assurance_intent: str or
     ~azure.mgmt.azurestackhci.models.SoftwareAssuranceIntent
    """

    _attribute_map = {
        "software_assurance_intent": {"key": "softwareAssuranceIntent", "type": "str"},
    }

    def __init__(
        self, *, software_assurance_intent: Optional[Union[str, "_models.SoftwareAssuranceIntent"]] = None, **kwargs
    ):
        """
        :keyword software_assurance_intent: Customer Intent for Software Assurance Benefit. Known
         values are: "Enable" and "Disable".
        :paramtype software_assurance_intent: str or
         ~azure.mgmt.azurestackhci.models.SoftwareAssuranceIntent
        """
        super().__init__(**kwargs)
        self.software_assurance_intent = software_assurance_intent


class SoftwareAssuranceProperties(_serialization.Model):
    """Software Assurance properties of the cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar software_assurance_status: Status of the Software Assurance for the cluster. Known values
     are: "Enabled" and "Disabled".
    :vartype software_assurance_status: str or
     ~azure.mgmt.azurestackhci.models.SoftwareAssuranceStatus
    :ivar software_assurance_intent: Customer Intent for Software Assurance Benefit. Known values
     are: "Enable" and "Disable".
    :vartype software_assurance_intent: str or
     ~azure.mgmt.azurestackhci.models.SoftwareAssuranceIntent
    :ivar last_updated: TimeStamp denoting the latest SA benefit applicability is validated.
    :vartype last_updated: ~datetime.datetime
    """

    _validation = {
        "last_updated": {"readonly": True},
    }

    _attribute_map = {
        "software_assurance_status": {"key": "softwareAssuranceStatus", "type": "str"},
        "software_assurance_intent": {"key": "softwareAssuranceIntent", "type": "str"},
        "last_updated": {"key": "lastUpdated", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        software_assurance_status: Optional[Union[str, "_models.SoftwareAssuranceStatus"]] = None,
        software_assurance_intent: Optional[Union[str, "_models.SoftwareAssuranceIntent"]] = None,
        **kwargs
    ):
        """
        :keyword software_assurance_status: Status of the Software Assurance for the cluster. Known
         values are: "Enabled" and "Disabled".
        :paramtype software_assurance_status: str or
         ~azure.mgmt.azurestackhci.models.SoftwareAssuranceStatus
        :keyword software_assurance_intent: Customer Intent for Software Assurance Benefit. Known
         values are: "Enable" and "Disable".
        :paramtype software_assurance_intent: str or
         ~azure.mgmt.azurestackhci.models.SoftwareAssuranceIntent
        """
        super().__init__(**kwargs)
        self.software_assurance_status = software_assurance_status
        self.software_assurance_intent = software_assurance_intent
        self.last_updated = None


class Step(_serialization.Model):
    """Progress representation of the update run steps.

    :ivar name: Name of the step.
    :vartype name: str
    :ivar description: More detailed description of the step.
    :vartype description: str
    :ivar error_message: Error message, specified if the step is in a failed state.
    :vartype error_message: str
    :ivar status: Status of the step, bubbled up from the ECE action plan for installation
     attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
    :vartype status: str
    :ivar start_time_utc: When the step started, or empty if it has not started executing.
    :vartype start_time_utc: ~datetime.datetime
    :ivar end_time_utc: When the step reached a terminal state.
    :vartype end_time_utc: ~datetime.datetime
    :ivar last_updated_time_utc: Completion time of this step or the last completed sub-step.
    :vartype last_updated_time_utc: ~datetime.datetime
    :ivar steps: Recursive model for child steps of this step.
    :vartype steps: list[~azure.mgmt.azurestackhci.models.Step]
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "start_time_utc": {"key": "startTimeUtc", "type": "iso-8601"},
        "end_time_utc": {"key": "endTimeUtc", "type": "iso-8601"},
        "last_updated_time_utc": {"key": "lastUpdatedTimeUtc", "type": "iso-8601"},
        "steps": {"key": "steps", "type": "[Step]"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        description: Optional[str] = None,
        error_message: Optional[str] = None,
        status: Optional[str] = None,
        start_time_utc: Optional[datetime.datetime] = None,
        end_time_utc: Optional[datetime.datetime] = None,
        last_updated_time_utc: Optional[datetime.datetime] = None,
        steps: Optional[List["_models.Step"]] = None,
        **kwargs
    ):
        """
        :keyword name: Name of the step.
        :paramtype name: str
        :keyword description: More detailed description of the step.
        :paramtype description: str
        :keyword error_message: Error message, specified if the step is in a failed state.
        :paramtype error_message: str
        :keyword status: Status of the step, bubbled up from the ECE action plan for installation
         attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
        :paramtype status: str
        :keyword start_time_utc: When the step started, or empty if it has not started executing.
        :paramtype start_time_utc: ~datetime.datetime
        :keyword end_time_utc: When the step reached a terminal state.
        :paramtype end_time_utc: ~datetime.datetime
        :keyword last_updated_time_utc: Completion time of this step or the last completed sub-step.
        :paramtype last_updated_time_utc: ~datetime.datetime
        :keyword steps: Recursive model for child steps of this step.
        :paramtype steps: list[~azure.mgmt.azurestackhci.models.Step]
        """
        super().__init__(**kwargs)
        self.name = name
        self.description = description
        self.error_message = error_message
        self.status = status
        self.start_time_utc = start_time_utc
        self.end_time_utc = end_time_utc
        self.last_updated_time_utc = last_updated_time_utc
        self.steps = steps


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.azurestackhci.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.azurestackhci.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.azurestackhci.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.azurestackhci.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class Update(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Update details.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar location: The geo-location where the resource lives.
    :vartype location: str
    :ivar provisioning_state: Provisioning state of the Updates proxy resource. Known values are:
     "Succeeded", "Failed", "Canceled", "Accepted", and "Provisioning".
    :vartype provisioning_state: str or ~azure.mgmt.azurestackhci.models.ProvisioningState
    :ivar installed_date: Date that the update was installed.
    :vartype installed_date: ~datetime.datetime
    :ivar description: Description of the update.
    :vartype description: str
    :ivar state: State of the update as it relates to this stamp. Known values are:
     "HasPrerequisite", "Obsolete", "Ready", "NotApplicableBecauseAnotherUpdateIsInProgress",
     "Preparing", "Installing", "Installed", "PreparationFailed", "InstallationFailed", "Invalid",
     "Recalled", "Downloading", "DownloadFailed", "HealthChecking", "HealthCheckFailed",
     "ReadyToInstall", "ScanInProgress", and "ScanFailed".
    :vartype state: str or ~azure.mgmt.azurestackhci.models.State
    :ivar prerequisites: If update State is HasPrerequisite, this property contains an array of
     objects describing prerequisite updates before installing this update. Otherwise, it is empty.
    :vartype prerequisites: list[~azure.mgmt.azurestackhci.models.UpdatePrerequisite]
    :ivar package_path: Path where the update package is available.
    :vartype package_path: str
    :ivar package_size_in_mb: Size of the package. This value is a combination of the size from
     update metadata and size of the payload that results from the live scan operation for OS update
     content.
    :vartype package_size_in_mb: float
    :ivar display_name: Display name of the Update.
    :vartype display_name: str
    :ivar version: Version of the update.
    :vartype version: str
    :ivar publisher: Publisher of the update package.
    :vartype publisher: str
    :ivar release_link: Link to release notes for the update.
    :vartype release_link: str
    :ivar availability_type: Indicates the way the update content can be downloaded. Known values
     are: "Local", "Online", and "Notify".
    :vartype availability_type: str or ~azure.mgmt.azurestackhci.models.AvailabilityType
    :ivar package_type: Customer-visible type of the update.
    :vartype package_type: str
    :ivar additional_properties: Extensible KV pairs serialized as a string. This is currently used
     to report the stamp OEM family and hardware model information when an update is flagged as
     Invalid for the stamp based on OEM type.
    :vartype additional_properties: str
    :ivar progress_percentage: Progress percentage of ongoing operation. Currently this property is
     only valid when the update is in the Downloading state, where it maps to how much of the update
     content has been downloaded.
    :vartype progress_percentage: float
    :ivar notify_message: Brief message with instructions for updates of AvailabilityType Notify.
    :vartype notify_message: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "location": {"key": "location", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "installed_date": {"key": "properties.installedDate", "type": "iso-8601"},
        "description": {"key": "properties.description", "type": "str"},
        "state": {"key": "properties.state", "type": "str"},
        "prerequisites": {"key": "properties.prerequisites", "type": "[UpdatePrerequisite]"},
        "package_path": {"key": "properties.packagePath", "type": "str"},
        "package_size_in_mb": {"key": "properties.packageSizeInMb", "type": "float"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "version": {"key": "properties.version", "type": "str"},
        "publisher": {"key": "properties.publisher", "type": "str"},
        "release_link": {"key": "properties.releaseLink", "type": "str"},
        "availability_type": {"key": "properties.availabilityType", "type": "str"},
        "package_type": {"key": "properties.packageType", "type": "str"},
        "additional_properties": {"key": "properties.additionalProperties", "type": "str"},
        "progress_percentage": {"key": "properties.updateStateProperties.progressPercentage", "type": "float"},
        "notify_message": {"key": "properties.updateStateProperties.notifyMessage", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        installed_date: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        state: Optional[Union[str, "_models.State"]] = None,
        prerequisites: Optional[List["_models.UpdatePrerequisite"]] = None,
        package_path: Optional[str] = None,
        package_size_in_mb: Optional[float] = None,
        display_name: Optional[str] = None,
        version: Optional[str] = None,
        publisher: Optional[str] = None,
        release_link: Optional[str] = None,
        availability_type: Optional[Union[str, "_models.AvailabilityType"]] = None,
        package_type: Optional[str] = None,
        additional_properties: Optional[str] = None,
        progress_percentage: Optional[float] = None,
        notify_message: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword location: The geo-location where the resource lives.
        :paramtype location: str
        :keyword installed_date: Date that the update was installed.
        :paramtype installed_date: ~datetime.datetime
        :keyword description: Description of the update.
        :paramtype description: str
        :keyword state: State of the update as it relates to this stamp. Known values are:
         "HasPrerequisite", "Obsolete", "Ready", "NotApplicableBecauseAnotherUpdateIsInProgress",
         "Preparing", "Installing", "Installed", "PreparationFailed", "InstallationFailed", "Invalid",
         "Recalled", "Downloading", "DownloadFailed", "HealthChecking", "HealthCheckFailed",
         "ReadyToInstall", "ScanInProgress", and "ScanFailed".
        :paramtype state: str or ~azure.mgmt.azurestackhci.models.State
        :keyword prerequisites: If update State is HasPrerequisite, this property contains an array of
         objects describing prerequisite updates before installing this update. Otherwise, it is empty.
        :paramtype prerequisites: list[~azure.mgmt.azurestackhci.models.UpdatePrerequisite]
        :keyword package_path: Path where the update package is available.
        :paramtype package_path: str
        :keyword package_size_in_mb: Size of the package. This value is a combination of the size from
         update metadata and size of the payload that results from the live scan operation for OS update
         content.
        :paramtype package_size_in_mb: float
        :keyword display_name: Display name of the Update.
        :paramtype display_name: str
        :keyword version: Version of the update.
        :paramtype version: str
        :keyword publisher: Publisher of the update package.
        :paramtype publisher: str
        :keyword release_link: Link to release notes for the update.
        :paramtype release_link: str
        :keyword availability_type: Indicates the way the update content can be downloaded. Known
         values are: "Local", "Online", and "Notify".
        :paramtype availability_type: str or ~azure.mgmt.azurestackhci.models.AvailabilityType
        :keyword package_type: Customer-visible type of the update.
        :paramtype package_type: str
        :keyword additional_properties: Extensible KV pairs serialized as a string. This is currently
         used to report the stamp OEM family and hardware model information when an update is flagged as
         Invalid for the stamp based on OEM type.
        :paramtype additional_properties: str
        :keyword progress_percentage: Progress percentage of ongoing operation. Currently this property
         is only valid when the update is in the Downloading state, where it maps to how much of the
         update content has been downloaded.
        :paramtype progress_percentage: float
        :keyword notify_message: Brief message with instructions for updates of AvailabilityType
         Notify.
        :paramtype notify_message: str
        """
        super().__init__(**kwargs)
        self.location = location
        self.provisioning_state = None
        self.installed_date = installed_date
        self.description = description
        self.state = state
        self.prerequisites = prerequisites
        self.package_path = package_path
        self.package_size_in_mb = package_size_in_mb
        self.display_name = display_name
        self.version = version
        self.publisher = publisher
        self.release_link = release_link
        self.availability_type = availability_type
        self.package_type = package_type
        self.additional_properties = additional_properties
        self.progress_percentage = progress_percentage
        self.notify_message = notify_message


class UpdateList(_serialization.Model):
    """List of Updates.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of Updates.
    :vartype value: list[~azure.mgmt.azurestackhci.models.Update]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Update]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.Update"]] = None, **kwargs):
        """
        :keyword value: List of Updates.
        :paramtype value: list[~azure.mgmt.azurestackhci.models.Update]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class UpdatePrerequisite(_serialization.Model):
    """If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.

    :ivar update_type: Updatable component type.
    :vartype update_type: str
    :ivar version: Version of the prerequisite.
    :vartype version: str
    :ivar package_name: Friendly name of the prerequisite.
    :vartype package_name: str
    """

    _attribute_map = {
        "update_type": {"key": "updateType", "type": "str"},
        "version": {"key": "version", "type": "str"},
        "package_name": {"key": "packageName", "type": "str"},
    }

    def __init__(
        self,
        *,
        update_type: Optional[str] = None,
        version: Optional[str] = None,
        package_name: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword update_type: Updatable component type.
        :paramtype update_type: str
        :keyword version: Version of the prerequisite.
        :paramtype version: str
        :keyword package_name: Friendly name of the prerequisite.
        :paramtype package_name: str
        """
        super().__init__(**kwargs)
        self.update_type = update_type
        self.version = version
        self.package_name = package_name


class UpdateRun(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Details of an Update run.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar location: The geo-location where the resource lives.
    :vartype location: str
    :ivar provisioning_state: Provisioning state of the UpdateRuns proxy resource. Known values
     are: "Succeeded", "Failed", "Canceled", "Accepted", and "Provisioning".
    :vartype provisioning_state: str or ~azure.mgmt.azurestackhci.models.ProvisioningState
    :ivar duration: Duration of the update run.
    :vartype duration: str
    :ivar state: State of the update run. Known values are: "Unknown", "Succeeded", "InProgress",
     and "Failed".
    :vartype state: str or ~azure.mgmt.azurestackhci.models.UpdateRunPropertiesState
    :ivar name_properties_progress_name: Name of the step.
    :vartype name_properties_progress_name: str
    :ivar description: More detailed description of the step.
    :vartype description: str
    :ivar error_message: Error message, specified if the step is in a failed state.
    :vartype error_message: str
    :ivar status: Status of the step, bubbled up from the ECE action plan for installation
     attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
    :vartype status: str
    :ivar start_time_utc: When the step started, or empty if it has not started executing.
    :vartype start_time_utc: ~datetime.datetime
    :ivar end_time_utc: When the step reached a terminal state.
    :vartype end_time_utc: ~datetime.datetime
    :ivar last_updated_time_utc: Completion time of this step or the last completed sub-step.
    :vartype last_updated_time_utc: ~datetime.datetime
    :ivar steps: Recursive model for child steps of this step.
    :vartype steps: list[~azure.mgmt.azurestackhci.models.Step]
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "location": {"key": "location", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "duration": {"key": "properties.duration", "type": "str"},
        "state": {"key": "properties.state", "type": "str"},
        "name_properties_progress_name": {"key": "properties.progress.name", "type": "str"},
        "description": {"key": "properties.progress.description", "type": "str"},
        "error_message": {"key": "properties.progress.errorMessage", "type": "str"},
        "status": {"key": "properties.progress.status", "type": "str"},
        "start_time_utc": {"key": "properties.progress.startTimeUtc", "type": "iso-8601"},
        "end_time_utc": {"key": "properties.progress.endTimeUtc", "type": "iso-8601"},
        "last_updated_time_utc": {"key": "properties.progress.lastUpdatedTimeUtc", "type": "iso-8601"},
        "steps": {"key": "properties.progress.steps", "type": "[Step]"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        duration: Optional[str] = None,
        state: Optional[Union[str, "_models.UpdateRunPropertiesState"]] = None,
        name_properties_progress_name: Optional[str] = None,
        description: Optional[str] = None,
        error_message: Optional[str] = None,
        status: Optional[str] = None,
        start_time_utc: Optional[datetime.datetime] = None,
        end_time_utc: Optional[datetime.datetime] = None,
        last_updated_time_utc: Optional[datetime.datetime] = None,
        steps: Optional[List["_models.Step"]] = None,
        **kwargs
    ):
        """
        :keyword location: The geo-location where the resource lives.
        :paramtype location: str
        :keyword duration: Duration of the update run.
        :paramtype duration: str
        :keyword state: State of the update run. Known values are: "Unknown", "Succeeded",
         "InProgress", and "Failed".
        :paramtype state: str or ~azure.mgmt.azurestackhci.models.UpdateRunPropertiesState
        :keyword name_properties_progress_name: Name of the step.
        :paramtype name_properties_progress_name: str
        :keyword description: More detailed description of the step.
        :paramtype description: str
        :keyword error_message: Error message, specified if the step is in a failed state.
        :paramtype error_message: str
        :keyword status: Status of the step, bubbled up from the ECE action plan for installation
         attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
        :paramtype status: str
        :keyword start_time_utc: When the step started, or empty if it has not started executing.
        :paramtype start_time_utc: ~datetime.datetime
        :keyword end_time_utc: When the step reached a terminal state.
        :paramtype end_time_utc: ~datetime.datetime
        :keyword last_updated_time_utc: Completion time of this step or the last completed sub-step.
        :paramtype last_updated_time_utc: ~datetime.datetime
        :keyword steps: Recursive model for child steps of this step.
        :paramtype steps: list[~azure.mgmt.azurestackhci.models.Step]
        """
        super().__init__(**kwargs)
        self.location = location
        self.provisioning_state = None
        self.duration = duration
        self.state = state
        self.name_properties_progress_name = name_properties_progress_name
        self.description = description
        self.error_message = error_message
        self.status = status
        self.start_time_utc = start_time_utc
        self.end_time_utc = end_time_utc
        self.last_updated_time_utc = last_updated_time_utc
        self.steps = steps


class UpdateRunList(_serialization.Model):
    """List of Update runs.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of Update runs.
    :vartype value: list[~azure.mgmt.azurestackhci.models.UpdateRun]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[UpdateRun]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.UpdateRun"]] = None, **kwargs):
        """
        :keyword value: List of Update runs.
        :paramtype value: list[~azure.mgmt.azurestackhci.models.UpdateRun]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class UpdateSummaries(ProxyResource):  # pylint: disable=too-many-instance-attributes
    """Get the update summaries for the cluster.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.azurestackhci.models.SystemData
    :ivar location: The geo-location where the resource lives.
    :vartype location: str
    :ivar provisioning_state: Provisioning state of the UpdateSummaries proxy resource. Known
     values are: "Succeeded", "Failed", "Canceled", "Accepted", and "Provisioning".
    :vartype provisioning_state: str or ~azure.mgmt.azurestackhci.models.ProvisioningState
    :ivar oem_family: OEM family name.
    :vartype oem_family: str
    :ivar hardware_model: Name of the hardware model.
    :vartype hardware_model: str
    :ivar package_versions: Current version of each updatable component.
    :vartype package_versions: list[~azure.mgmt.azurestackhci.models.PackageVersionInfo]
    :ivar current_version: Current Solution Bundle version of the stamp.
    :vartype current_version: str
    :ivar state: Overall update state of the stamp. Known values are: "Unknown",
     "AppliedSuccessfully", "UpdateAvailable", "UpdateInProgress", "UpdateFailed", "NeedsAttention",
     "PreparationInProgress", and "PreparationFailed".
    :vartype state: str or ~azure.mgmt.azurestackhci.models.UpdateSummariesPropertiesState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "location": {"key": "location", "type": "str"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
        "oem_family": {"key": "properties.oemFamily", "type": "str"},
        "hardware_model": {"key": "properties.hardwareModel", "type": "str"},
        "package_versions": {"key": "properties.packageVersions", "type": "[PackageVersionInfo]"},
        "current_version": {"key": "properties.currentVersion", "type": "str"},
        "state": {"key": "properties.state", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: Optional[str] = None,
        oem_family: Optional[str] = None,
        hardware_model: Optional[str] = None,
        package_versions: Optional[List["_models.PackageVersionInfo"]] = None,
        current_version: Optional[str] = None,
        state: Optional[Union[str, "_models.UpdateSummariesPropertiesState"]] = None,
        **kwargs
    ):
        """
        :keyword location: The geo-location where the resource lives.
        :paramtype location: str
        :keyword oem_family: OEM family name.
        :paramtype oem_family: str
        :keyword hardware_model: Name of the hardware model.
        :paramtype hardware_model: str
        :keyword package_versions: Current version of each updatable component.
        :paramtype package_versions: list[~azure.mgmt.azurestackhci.models.PackageVersionInfo]
        :keyword current_version: Current Solution Bundle version of the stamp.
        :paramtype current_version: str
        :keyword state: Overall update state of the stamp. Known values are: "Unknown",
         "AppliedSuccessfully", "UpdateAvailable", "UpdateInProgress", "UpdateFailed", "NeedsAttention",
         "PreparationInProgress", and "PreparationFailed".
        :paramtype state: str or ~azure.mgmt.azurestackhci.models.UpdateSummariesPropertiesState
        """
        super().__init__(**kwargs)
        self.location = location
        self.provisioning_state = None
        self.oem_family = oem_family
        self.hardware_model = hardware_model
        self.package_versions = package_versions
        self.current_version = current_version
        self.state = state


class UpdateSummariesList(_serialization.Model):
    """List of Update Summaries.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of Update Summaries.
    :vartype value: list[~azure.mgmt.azurestackhci.models.UpdateSummaries]
    :ivar next_link: Link to the next set of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[UpdateSummaries]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.UpdateSummaries"]] = None, **kwargs):
        """
        :keyword value: List of Update Summaries.
        :paramtype value: list[~azure.mgmt.azurestackhci.models.UpdateSummaries]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class UploadCertificateRequest(_serialization.Model):
    """UploadCertificateRequest.

    :ivar properties:
    :vartype properties: ~azure.mgmt.azurestackhci.models.RawCertificateData
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "RawCertificateData"},
    }

    def __init__(self, *, properties: Optional["_models.RawCertificateData"] = None, **kwargs):
        """
        :keyword properties:
        :paramtype properties: ~azure.mgmt.azurestackhci.models.RawCertificateData
        """
        super().__init__(**kwargs)
        self.properties = properties


class UserAssignedIdentity(_serialization.Model):
    """User assigned identity properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal ID of the assigned identity.
    :vartype principal_id: str
    :ivar client_id: The client ID of the assigned identity.
    :vartype client_id: str
    """

    _validation = {
        "principal_id": {"readonly": True},
        "client_id": {"readonly": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
    }

    def __init__(self, **kwargs):
        """ """
        super().__init__(**kwargs)
        self.principal_id = None
        self.client_id = None
