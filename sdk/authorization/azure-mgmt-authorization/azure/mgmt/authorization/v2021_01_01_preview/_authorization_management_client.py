# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer

from ._configuration import AuthorizationManagementClientConfiguration
from .operations import Operations
from .operations import RoleAssignmentApprovalOperations
from .operations import RoleAssignmentApprovalStepsOperations
from .operations import RoleAssignmentApprovalStepOperations
from .operations import ScopeRoleAssignmentApprovalOperations
from .operations import ScopeRoleAssignmentApprovalStepsOperations
from .operations import ScopeRoleAssignmentApprovalStepOperations
from . import models


class AuthorizationManagementClient(SDKClient):
    """Request Approvals service provides the workflow for running request approvals on different kind of resources.

    :ivar config: Configuration for client.
    :vartype config: AuthorizationManagementClientConfiguration

    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.authorization.v2021_01_01_preview.operations.Operations
    :ivar role_assignment_approval: RoleAssignmentApproval operations
    :vartype role_assignment_approval: azure.mgmt.authorization.v2021_01_01_preview.operations.RoleAssignmentApprovalOperations
    :ivar role_assignment_approval_steps: RoleAssignmentApprovalSteps operations
    :vartype role_assignment_approval_steps: azure.mgmt.authorization.v2021_01_01_preview.operations.RoleAssignmentApprovalStepsOperations
    :ivar role_assignment_approval_step: RoleAssignmentApprovalStep operations
    :vartype role_assignment_approval_step: azure.mgmt.authorization.v2021_01_01_preview.operations.RoleAssignmentApprovalStepOperations
    :ivar scope_role_assignment_approval: ScopeRoleAssignmentApproval operations
    :vartype scope_role_assignment_approval: azure.mgmt.authorization.v2021_01_01_preview.operations.ScopeRoleAssignmentApprovalOperations
    :ivar scope_role_assignment_approval_steps: ScopeRoleAssignmentApprovalSteps operations
    :vartype scope_role_assignment_approval_steps: azure.mgmt.authorization.v2021_01_01_preview.operations.ScopeRoleAssignmentApprovalStepsOperations
    :ivar scope_role_assignment_approval_step: ScopeRoleAssignmentApprovalStep operations
    :vartype scope_role_assignment_approval_step: azure.mgmt.authorization.v2021_01_01_preview.operations.ScopeRoleAssignmentApprovalStepOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The ID of the target subscription.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = AuthorizationManagementClientConfiguration(credentials, subscription_id, base_url)
        super(AuthorizationManagementClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2021-01-01-preview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.operations = Operations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_assignment_approval = RoleAssignmentApprovalOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_assignment_approval_steps = RoleAssignmentApprovalStepsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_assignment_approval_step = RoleAssignmentApprovalStepOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.scope_role_assignment_approval = ScopeRoleAssignmentApprovalOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.scope_role_assignment_approval_steps = ScopeRoleAssignmentApprovalStepsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.scope_role_assignment_approval_step = ScopeRoleAssignmentApprovalStepOperations(
            self._client, self.config, self._serialize, self._deserialize)
