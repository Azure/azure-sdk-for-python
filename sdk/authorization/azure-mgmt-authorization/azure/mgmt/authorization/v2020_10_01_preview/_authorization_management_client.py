# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer

from ._configuration import AuthorizationManagementClientConfiguration
from .operations import RoleAssignmentSchedulesOperations
from .operations import RoleAssignmentScheduleInstancesOperations
from .operations import RoleAssignmentScheduleRequestsOperations
from .operations import RoleEligibilitySchedulesOperations
from .operations import RoleEligibilityScheduleInstancesOperations
from .operations import RoleEligibilityScheduleRequestsOperations
from .operations import RoleManagementPoliciesOperations
from .operations import RoleManagementPolicyAssignmentsOperations
from .operations import EligibleChildResourcesOperations
from .operations import RoleAssignmentsOperations
from . import models


class AuthorizationManagementClient(SDKClient):
    """AuthorizationManagementClient

    :ivar config: Configuration for client.
    :vartype config: AuthorizationManagementClientConfiguration

    :ivar role_assignment_schedules: RoleAssignmentSchedules operations
    :vartype role_assignment_schedules: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleAssignmentSchedulesOperations
    :ivar role_assignment_schedule_instances: RoleAssignmentScheduleInstances operations
    :vartype role_assignment_schedule_instances: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleAssignmentScheduleInstancesOperations
    :ivar role_assignment_schedule_requests: RoleAssignmentScheduleRequests operations
    :vartype role_assignment_schedule_requests: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleAssignmentScheduleRequestsOperations
    :ivar role_eligibility_schedules: RoleEligibilitySchedules operations
    :vartype role_eligibility_schedules: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleEligibilitySchedulesOperations
    :ivar role_eligibility_schedule_instances: RoleEligibilityScheduleInstances operations
    :vartype role_eligibility_schedule_instances: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleEligibilityScheduleInstancesOperations
    :ivar role_eligibility_schedule_requests: RoleEligibilityScheduleRequests operations
    :vartype role_eligibility_schedule_requests: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleEligibilityScheduleRequestsOperations
    :ivar role_management_policies: RoleManagementPolicies operations
    :vartype role_management_policies: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleManagementPoliciesOperations
    :ivar role_management_policy_assignments: RoleManagementPolicyAssignments operations
    :vartype role_management_policy_assignments: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleManagementPolicyAssignmentsOperations
    :ivar eligible_child_resources: EligibleChildResources operations
    :vartype eligible_child_resources: azure.mgmt.authorization.v2020_10_01_preview.operations.EligibleChildResourcesOperations
    :ivar role_assignments: RoleAssignments operations
    :vartype role_assignments: azure.mgmt.authorization.v2020_10_01_preview.operations.RoleAssignmentsOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The ID of the target subscription.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = AuthorizationManagementClientConfiguration(credentials, subscription_id, base_url)
        super(AuthorizationManagementClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2020-10-01-preview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.role_assignment_schedules = RoleAssignmentSchedulesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_assignment_schedule_instances = RoleAssignmentScheduleInstancesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_assignment_schedule_requests = RoleAssignmentScheduleRequestsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_eligibility_schedules = RoleEligibilitySchedulesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_eligibility_schedule_instances = RoleEligibilityScheduleInstancesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_eligibility_schedule_requests = RoleEligibilityScheduleRequestsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_management_policies = RoleManagementPoliciesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_management_policy_assignments = RoleManagementPolicyAssignmentsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.eligible_child_resources = EligibleChildResourcesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.role_assignments = RoleAssignmentsOperations(
            self._client, self.config, self._serialize, self._deserialize)
