# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential
from azure.mgmt.videoanalyzer import VideoAnalyzerManagementClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-videoanalyzer
# USAGE
    python accesspolicypatch.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = VideoAnalyzerManagementClient(
        credential=DefaultAzureCredential(),
        subscription_id="591e76c3-3e97-44db-879c-3e2b12961b62",
    )

    response = client.access_policies.update(
        resource_group_name="testrg",
        account_name="testaccount2",
        access_policy_name="accessPolicyName1",
        parameters={
            "properties": {
                "authentication": {
                    "@type": "#Microsoft.VideoAnalyzer.JwtAuthentication",
                    "audiences": ["audience1"],
                    "claims": [
                        {"name": "claimname1", "value": "claimvalue1"},
                        {"name": "claimname2", "value": "claimvalue2"},
                    ],
                    "issuers": ["issuer1", "issuer2"],
                    "keys": [
                        {
                            "@type": "#Microsoft.VideoAnalyzer.RsaTokenKey",
                            "alg": "RS256",
                            "e": "ZLFzZTY0IQ==",
                            "kid": "123",
                            "n": "YmFzZTY0IQ==",
                        },
                        {
                            "@type": "#Microsoft.VideoAnalyzer.EccTokenKey",
                            "alg": "ES256",
                            "kid": "124",
                            "x": "XX==",
                            "y": "YY==",
                        },
                    ],
                }
            }
        },
    )
    print(response)


# x-ms-original-file: specification/videoanalyzer/resource-manager/Microsoft.Media/preview/2021-11-01-preview/examples/access-policy-patch.json
if __name__ == "__main__":
    main()
