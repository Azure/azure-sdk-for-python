# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.network import NetworkManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestNetworkManagementCustomIPPrefixesOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(NetworkManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_custom_ip_prefixes_begin_delete(self, resource_group):
        response = self.client.custom_ip_prefixes.begin_delete(
            resource_group_name=resource_group.name,
            custom_ip_prefix_name="str",
            api_version="2024-05-01",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_custom_ip_prefixes_get(self, resource_group):
        response = self.client.custom_ip_prefixes.get(
            resource_group_name=resource_group.name,
            custom_ip_prefix_name="str",
            api_version="2024-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_custom_ip_prefixes_begin_create_or_update(self, resource_group):
        response = self.client.custom_ip_prefixes.begin_create_or_update(
            resource_group_name=resource_group.name,
            custom_ip_prefix_name="str",
            parameters={
                "asn": "str",
                "authorizationMessage": "str",
                "childCustomIpPrefixes": [{"id": "str"}],
                "cidr": "str",
                "commissionedState": "str",
                "customIpPrefixParent": {"id": "str"},
                "etag": "str",
                "expressRouteAdvertise": bool,
                "extendedLocation": {"name": "str", "type": "str"},
                "failedReason": "str",
                "geo": "str",
                "id": "str",
                "location": "str",
                "name": "str",
                "noInternetAdvertise": bool,
                "prefixType": "str",
                "provisioningState": "str",
                "publicIpPrefixes": [{"id": "str"}],
                "resourceGuid": "str",
                "signedMessage": "str",
                "tags": {"str": "str"},
                "type": "str",
                "zones": ["str"],
            },
            api_version="2024-05-01",
        ).result()  # call '.result()' to poll until service return final result

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_custom_ip_prefixes_update_tags(self, resource_group):
        response = self.client.custom_ip_prefixes.update_tags(
            resource_group_name=resource_group.name,
            custom_ip_prefix_name="str",
            parameters={"tags": {"str": "str"}},
            api_version="2024-05-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_custom_ip_prefixes_list_all(self, resource_group):
        response = self.client.custom_ip_prefixes.list_all(
            api_version="2024-05-01",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_custom_ip_prefixes_list(self, resource_group):
        response = self.client.custom_ip_prefixes.list(
            resource_group_name=resource_group.name,
            api_version="2024-05-01",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...
