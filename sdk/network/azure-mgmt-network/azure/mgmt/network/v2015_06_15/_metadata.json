{
    "chosen_version": "2015-06-15",
    "total_api_version_list": ["2015-06-15"],
    "client": {
        "name": "NetworkManagementClient",
        "filename": "_network_management_client",
        "description": "Network Client.",
        "base_url": "\u0027https://management.azure.com\u0027",
        "custom_base_url": null,
        "azure_arm": true,
        "has_lro_operations": true
    },
    "global_parameters": {
        "sync_method": {
            "credential": {
                "method_signature": "credential,  # type: \"TokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials.TokenCredential",
                "required": true
            },
            "subscription_id": {
                "method_signature": "subscription_id,  # type: str",
                "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                "docstring_type": "str",
                "required": true
            }
        },
        "async_method": {
            "credential": {
                "method_signature": "credential,  # type: \"AsyncTokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials_async.AsyncTokenCredential",
                "required": true
            },
            "subscription_id": {
                "method_signature": "subscription_id,  # type: str",
                "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                "docstring_type": "str",
                "required": true
            }
        },
        "constant": {
        },
        "call": "credential, subscription_id"
    },
    "config": {
        "credential": true,
        "credential_scopes": ["https://management.azure.com/.default"],
        "credential_default_policy_type": "BearerTokenCredentialPolicy",
        "credential_default_policy_type_has_async_version": true,
        "credential_key_header_name": null
    },
    "operation_groups": {
        "application_gateways": "ApplicationGatewaysOperations",
        "express_route_circuit_authorizations": "ExpressRouteCircuitAuthorizationsOperations",
        "express_route_circuit_peerings": "ExpressRouteCircuitPeeringsOperations",
        "express_route_circuits": "ExpressRouteCircuitsOperations",
        "express_route_service_providers": "ExpressRouteServiceProvidersOperations",
        "load_balancers": "LoadBalancersOperations",
        "network_interfaces": "NetworkInterfacesOperations",
        "network_security_groups": "NetworkSecurityGroupsOperations",
        "security_rules": "SecurityRulesOperations",
        "public_ip_addresses": "PublicIPAddressesOperations",
        "route_tables": "RouteTablesOperations",
        "routes": "RoutesOperations",
        "usages": "UsagesOperations",
        "virtual_networks": "VirtualNetworksOperations",
        "subnets": "SubnetsOperations",
        "virtual_network_gateways": "VirtualNetworkGatewaysOperations",
        "virtual_network_gateway_connections": "VirtualNetworkGatewayConnectionsOperations",
        "local_network_gateways": "LocalNetworkGatewaysOperations"
    },
    "operation_mixins": {
        "check_dns_name_availability" : {
            "sync": {
                "signature": "def check_dns_name_availability(\n    self,\n    location,  # type: str\n    domain_name_label=None,  # type: Optional[str]\n    **kwargs  # type: Any\n):\n",
                "doc": "\"\"\"Checks whether a domain name in the cloudapp.net zone is available for use.\n\n:param location: The location of the domain name.\n:type location: str\n:param domain_name_label: The domain name to be verified. It must conform to the following\n regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$.\n:type domain_name_label: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: DnsNameAvailabilityResult, or the result of cls(response)\n:rtype: ~azure.mgmt.network.v2015_06_15.models.DnsNameAvailabilityResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
            },
            "async": {
                "coroutine": true,
                "signature": "async def check_dns_name_availability(\n    self,\n    location: str,\n    domain_name_label: Optional[str] = None,\n    **kwargs\n) -\u003e \"models.DnsNameAvailabilityResult\":\n",
                "doc": "\"\"\"Checks whether a domain name in the cloudapp.net zone is available for use.\n\n:param location: The location of the domain name.\n:type location: str\n:param domain_name_label: The domain name to be verified. It must conform to the following\n regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$.\n:type domain_name_label: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: DnsNameAvailabilityResult, or the result of cls(response)\n:rtype: ~azure.mgmt.network.v2015_06_15.models.DnsNameAvailabilityResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
            },
            "call": "location, domain_name_label"
        }
    },
    "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.mgmt.core.exceptions\": [\"ARMErrorFormat\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\"]}}}",
    "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.mgmt.core.exceptions\": [\"ARMErrorFormat\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\"]}}}"
}