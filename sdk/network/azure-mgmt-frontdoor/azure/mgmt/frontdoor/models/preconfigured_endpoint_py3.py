# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_py3 import Resource


class PreconfiguredEndpoint(Resource):
    """Defines the properties of a preconfigured endpoint.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource ID.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :param location: Resource location.
    :type location: str
    :param tags: Resource tags.
    :type tags: dict[str, str]
    :param description: The description of the endpoint
    :type description: str
    :param endpoint: The endpoint that is preconfigured
    :type endpoint: str
    :param endpoint_type: The type of endpoint. Possible values include:
     'AFD', 'AzureRegion', 'CDN', 'ATM'
    :type endpoint_type: str or ~azure.mgmt.frontdoor.models.EndpointType
    :param backend: The preconfigured endpoint backend
    :type backend: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'endpoint': {'key': 'properties.endpoint', 'type': 'str'},
        'endpoint_type': {'key': 'properties.endpointType', 'type': 'str'},
        'backend': {'key': 'properties.backend', 'type': 'str'},
    }

    def __init__(self, *, location: str=None, tags=None, description: str=None, endpoint: str=None, endpoint_type=None, backend: str=None, **kwargs) -> None:
        super(PreconfiguredEndpoint, self).__init__(location=location, tags=tags, **kwargs)
        self.description = description
        self.endpoint = endpoint
        self.endpoint_type = endpoint_type
        self.backend = backend
