# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional, TYPE_CHECKING

from azure.core.pipeline.transport import AsyncHttpResponse, HttpRequest
from azure.mgmt.core import AsyncARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials_async import AsyncTokenCredential

from ._configuration import BlueprintManagementClientConfiguration
from .operations import BlueprintsOperations
from .operations import ArtifactsOperations
from .operations import PublishedBlueprintsOperations
from .operations import PublishedArtifactsOperations
from .operations import AssignmentsOperations
from .operations import AssignmentOperationsOperations
from .. import models


class BlueprintManagementClient(object):
    """Blueprint Client.

    :ivar blueprints: BlueprintsOperations operations
    :vartype blueprints: blueprint_management_client.aio.operations.BlueprintsOperations
    :ivar artifacts: ArtifactsOperations operations
    :vartype artifacts: blueprint_management_client.aio.operations.ArtifactsOperations
    :ivar published_blueprints: PublishedBlueprintsOperations operations
    :vartype published_blueprints: blueprint_management_client.aio.operations.PublishedBlueprintsOperations
    :ivar published_artifacts: PublishedArtifactsOperations operations
    :vartype published_artifacts: blueprint_management_client.aio.operations.PublishedArtifactsOperations
    :ivar assignments: AssignmentsOperations operations
    :vartype assignments: blueprint_management_client.aio.operations.AssignmentsOperations
    :ivar assignment_operations: AssignmentOperationsOperations operations
    :vartype assignment_operations: blueprint_management_client.aio.operations.AssignmentOperationsOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = BlueprintManagementClientConfiguration(credential, **kwargs)
        self._client = AsyncARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.blueprints = BlueprintsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.artifacts = ArtifactsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.published_blueprints = PublishedBlueprintsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.published_artifacts = PublishedArtifactsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.assignments = AssignmentsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.assignment_operations = AssignmentOperationsOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def _send_request(self, http_request: HttpRequest, **kwargs: Any) -> AsyncHttpResponse:
        """Runs the network request through the client's chained policies.

        :param http_request: The network request you want to make. Required.
        :type http_request: ~azure.core.pipeline.transport.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to True.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.pipeline.transport.AsyncHttpResponse
        """
        http_request.url = self._client.format_url(http_request.url)
        stream = kwargs.pop("stream", True)
        pipeline_response = await self._client._pipeline.run(http_request, stream=stream, **kwargs)
        return pipeline_response.http_response

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "BlueprintManagementClient":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
