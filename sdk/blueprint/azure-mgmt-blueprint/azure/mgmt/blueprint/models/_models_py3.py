# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import sys
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class AzureResourceBase(_serialization.Model):
    """Common properties for all Azure resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.type = None
        self.name = None


class Artifact(AzureResourceBase):
    """Represents a blueprint artifact.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    PolicyAssignmentArtifact, RoleAssignmentArtifact, TemplateArtifact

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar kind: Specifies the kind of blueprint artifact. Required. Known values are: "template",
     "roleAssignment", and "policyAssignment".
    :vartype kind: str or ~azure.mgmt.blueprint.models.ArtifactKind
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "kind": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
    }

    _subtype_map = {
        "kind": {
            "policyAssignment": "PolicyAssignmentArtifact",
            "roleAssignment": "RoleAssignmentArtifact",
            "template": "TemplateArtifact",
        }
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.kind: Optional[str] = None


class ArtifactList(_serialization.Model):
    """List of blueprint artifacts.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of blueprint artifacts.
    :vartype value: list[~azure.mgmt.blueprint.models.Artifact]
    :ivar next_link: Link to the next page of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Artifact]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.Artifact"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of blueprint artifacts.
        :paramtype value: list[~azure.mgmt.blueprint.models.Artifact]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class ArtifactPropertiesBase(_serialization.Model):
    """Common properties shared by different artifacts.

    :ivar depends_on: Artifacts which need to be deployed before the specified artifact.
    :vartype depends_on: list[str]
    """

    _attribute_map = {
        "depends_on": {"key": "dependsOn", "type": "[str]"},
    }

    def __init__(self, *, depends_on: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword depends_on: Artifacts which need to be deployed before the specified artifact.
        :paramtype depends_on: list[str]
        """
        super().__init__(**kwargs)
        self.depends_on = depends_on


class TrackedResource(AzureResourceBase):
    """Common properties for all Azure tracked resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar location: The location of this blueprint assignment. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, **kwargs: Any) -> None:
        """
        :keyword location: The location of this blueprint assignment. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.location = location


class Assignment(TrackedResource):  # pylint: disable=too-many-instance-attributes
    """Represents a blueprint assignment.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar location: The location of this blueprint assignment. Required.
    :vartype location: str
    :ivar identity: Managed identity for this blueprint assignment. Required.
    :vartype identity: ~azure.mgmt.blueprint.models.ManagedServiceIdentity
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar blueprint_id: ID of the published version of a blueprint definition.
    :vartype blueprint_id: str
    :ivar scope: The target subscription scope of the blueprint assignment (format:
     '/subscriptions/{subscriptionId}'). For management group level assignments, the property is
     required.
    :vartype scope: str
    :ivar parameters: Blueprint assignment parameter values. Required.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
    :ivar resource_groups: Names and locations of resource group placeholders. Required.
    :vartype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupValue]
    :ivar status: Status of blueprint assignment. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.AssignmentStatus
    :ivar locks: Defines how resources deployed by a blueprint assignment are locked.
    :vartype locks: ~azure.mgmt.blueprint.models.AssignmentLockSettings
    :ivar provisioning_state: State of the blueprint assignment. Known values are: "creating",
     "validating", "waiting", "deploying", "cancelling", "locking", "succeeded", "failed",
     "canceled", and "deleting".
    :vartype provisioning_state: str or ~azure.mgmt.blueprint.models.AssignmentProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "location": {"required": True},
        "identity": {"required": True},
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "parameters": {"required": True},
        "resource_groups": {"required": True},
        "status": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "identity": {"key": "identity", "type": "ManagedServiceIdentity"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "blueprint_id": {"key": "properties.blueprintId", "type": "str"},
        "scope": {"key": "properties.scope", "type": "str"},
        "parameters": {"key": "properties.parameters", "type": "{ParameterValue}"},
        "resource_groups": {"key": "properties.resourceGroups", "type": "{ResourceGroupValue}"},
        "status": {"key": "properties.status", "type": "AssignmentStatus"},
        "locks": {"key": "properties.locks", "type": "AssignmentLockSettings"},
        "provisioning_state": {"key": "properties.provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        identity: "_models.ManagedServiceIdentity",
        parameters: Dict[str, "_models.ParameterValue"],
        resource_groups: Dict[str, "_models.ResourceGroupValue"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        blueprint_id: Optional[str] = None,
        scope: Optional[str] = None,
        locks: Optional["_models.AssignmentLockSettings"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword location: The location of this blueprint assignment. Required.
        :paramtype location: str
        :keyword identity: Managed identity for this blueprint assignment. Required.
        :paramtype identity: ~azure.mgmt.blueprint.models.ManagedServiceIdentity
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword blueprint_id: ID of the published version of a blueprint definition.
        :paramtype blueprint_id: str
        :keyword scope: The target subscription scope of the blueprint assignment (format:
         '/subscriptions/{subscriptionId}'). For management group level assignments, the property is
         required.
        :paramtype scope: str
        :keyword parameters: Blueprint assignment parameter values. Required.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
        :keyword resource_groups: Names and locations of resource group placeholders. Required.
        :paramtype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupValue]
        :keyword locks: Defines how resources deployed by a blueprint assignment are locked.
        :paramtype locks: ~azure.mgmt.blueprint.models.AssignmentLockSettings
        """
        super().__init__(location=location, **kwargs)
        self.identity = identity
        self.display_name = display_name
        self.description = description
        self.blueprint_id = blueprint_id
        self.scope = scope
        self.parameters = parameters
        self.resource_groups = resource_groups
        self.status = None
        self.locks = locks
        self.provisioning_state = None


class AssignmentDeploymentJob(_serialization.Model):
    """Represents individual job in given blueprint assignment operation.

    :ivar kind: Kind of job.
    :vartype kind: str
    :ivar action: Name of the action performed in this job.
    :vartype action: str
    :ivar job_id: Id of this job.
    :vartype job_id: str
    :ivar job_state: State of this job.
    :vartype job_state: str
    :ivar result: Deployment job result.
    :vartype result: ~azure.mgmt.blueprint.models.AssignmentDeploymentJobResult
    :ivar history: Result of this deployment job for each retry.
    :vartype history: list[~azure.mgmt.blueprint.models.AssignmentDeploymentJobResult]
    :ivar request_uri: Reference to deployment job resource id.
    :vartype request_uri: str
    """

    _attribute_map = {
        "kind": {"key": "kind", "type": "str"},
        "action": {"key": "action", "type": "str"},
        "job_id": {"key": "jobId", "type": "str"},
        "job_state": {"key": "jobState", "type": "str"},
        "result": {"key": "result", "type": "AssignmentDeploymentJobResult"},
        "history": {"key": "history", "type": "[AssignmentDeploymentJobResult]"},
        "request_uri": {"key": "requestUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        kind: Optional[str] = None,
        action: Optional[str] = None,
        job_id: Optional[str] = None,
        job_state: Optional[str] = None,
        result: Optional["_models.AssignmentDeploymentJobResult"] = None,
        history: Optional[List["_models.AssignmentDeploymentJobResult"]] = None,
        request_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword kind: Kind of job.
        :paramtype kind: str
        :keyword action: Name of the action performed in this job.
        :paramtype action: str
        :keyword job_id: Id of this job.
        :paramtype job_id: str
        :keyword job_state: State of this job.
        :paramtype job_state: str
        :keyword result: Deployment job result.
        :paramtype result: ~azure.mgmt.blueprint.models.AssignmentDeploymentJobResult
        :keyword history: Result of this deployment job for each retry.
        :paramtype history: list[~azure.mgmt.blueprint.models.AssignmentDeploymentJobResult]
        :keyword request_uri: Reference to deployment job resource id.
        :paramtype request_uri: str
        """
        super().__init__(**kwargs)
        self.kind = kind
        self.action = action
        self.job_id = job_id
        self.job_state = job_state
        self.result = result
        self.history = history
        self.request_uri = request_uri


class AssignmentDeploymentJobResult(_serialization.Model):
    """Result of each individual deployment in a blueprint assignment.

    :ivar error: Contains error details if deployment job failed.
    :vartype error: ~azure.mgmt.blueprint.models.AzureResourceManagerError
    :ivar resources: Resources created as result of the deployment job.
    :vartype resources: list[~azure.mgmt.blueprint.models.AssignmentJobCreatedResource]
    """

    _attribute_map = {
        "error": {"key": "error", "type": "AzureResourceManagerError"},
        "resources": {"key": "resources", "type": "[AssignmentJobCreatedResource]"},
    }

    def __init__(
        self,
        *,
        error: Optional["_models.AzureResourceManagerError"] = None,
        resources: Optional[List["_models.AssignmentJobCreatedResource"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error: Contains error details if deployment job failed.
        :paramtype error: ~azure.mgmt.blueprint.models.AzureResourceManagerError
        :keyword resources: Resources created as result of the deployment job.
        :paramtype resources: list[~azure.mgmt.blueprint.models.AssignmentJobCreatedResource]
        """
        super().__init__(**kwargs)
        self.error = error
        self.resources = resources


class AssignmentJobCreatedResource(AzureResourceBase):
    """Azure resource created from deployment job.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar properties: Additional properties in a dictionary.
    :vartype properties: dict[str, str]
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "properties": {"key": "properties", "type": "{str}"},
    }

    def __init__(self, *, properties: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Additional properties in a dictionary.
        :paramtype properties: dict[str, str]
        """
        super().__init__(**kwargs)
        self.properties = properties


class AssignmentList(_serialization.Model):
    """List of blueprint assignments.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of blueprint assignments.
    :vartype value: list[~azure.mgmt.blueprint.models.Assignment]
    :ivar next_link: Link to the next page of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Assignment]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.Assignment"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of blueprint assignments.
        :paramtype value: list[~azure.mgmt.blueprint.models.Assignment]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class AssignmentLockSettings(_serialization.Model):
    """Defines how resources deployed by a blueprint assignment are locked.

    :ivar mode: Lock mode. Known values are: "None", "AllResourcesReadOnly", and
     "AllResourcesDoNotDelete".
    :vartype mode: str or ~azure.mgmt.blueprint.models.AssignmentLockMode
    :ivar excluded_principals: List of AAD principals excluded from blueprint locks. Up to 5
     principals are permitted.
    :vartype excluded_principals: list[str]
    :ivar excluded_actions:
     List of management operations that are excluded from blueprint locks. Up to 200 actions are permitted.
     If the lock mode is set to 'AllResourcesReadOnly', then the following actions are automatically
     appended to 'excludedActions': '*/read',
     'Microsoft.Network/virtualNetworks/subnets/join/action' and
     'Microsoft.Authorization/locks/delete'. If the lock mode is set to 'AllResourcesDoNotDelete',
     then the following actions are automatically appended to 'excludedActions':
     'Microsoft.Authorization/locks/delete'. Duplicate actions will get removed.
    :vartype excluded_actions: list[str]
    """

    _attribute_map = {
        "mode": {"key": "mode", "type": "str"},
        "excluded_principals": {"key": "excludedPrincipals", "type": "[str]"},
        "excluded_actions": {"key": "excludedActions", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        mode: Optional[Union[str, "_models.AssignmentLockMode"]] = None,
        excluded_principals: Optional[List[str]] = None,
        excluded_actions: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword mode: Lock mode. Known values are: "None", "AllResourcesReadOnly", and
         "AllResourcesDoNotDelete".
        :paramtype mode: str or ~azure.mgmt.blueprint.models.AssignmentLockMode
        :keyword excluded_principals: List of AAD principals excluded from blueprint locks. Up to 5
         principals are permitted.
        :paramtype excluded_principals: list[str]
        :keyword excluded_actions:
         List of management operations that are excluded from blueprint locks. Up to 200 actions are permitted.
         If the lock mode is set to 'AllResourcesReadOnly', then the following actions are automatically
         appended to 'excludedActions': '*/read',
         'Microsoft.Network/virtualNetworks/subnets/join/action' and
         'Microsoft.Authorization/locks/delete'. If the lock mode is set to 'AllResourcesDoNotDelete',
         then the following actions are automatically appended to 'excludedActions':
         'Microsoft.Authorization/locks/delete'. Duplicate actions will get removed.
        :paramtype excluded_actions: list[str]
        """
        super().__init__(**kwargs)
        self.mode = mode
        self.excluded_principals = excluded_principals
        self.excluded_actions = excluded_actions


class AssignmentOperation(AzureResourceBase):
    """Represents underlying deployment detail for each update to the blueprint assignment.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar blueprint_version: The published version of the blueprint definition used for the
     blueprint assignment operation.
    :vartype blueprint_version: str
    :ivar assignment_state: State of this blueprint assignment operation.
    :vartype assignment_state: str
    :ivar time_created: Create time of this blueprint assignment operation.
    :vartype time_created: str
    :ivar time_started: Start time of the underlying deployment.
    :vartype time_started: str
    :ivar time_finished: Finish time of the overall underlying deployments.
    :vartype time_finished: str
    :ivar deployments: List of jobs in this blueprint assignment operation.
    :vartype deployments: list[~azure.mgmt.blueprint.models.AssignmentDeploymentJob]
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "blueprint_version": {"key": "properties.blueprintVersion", "type": "str"},
        "assignment_state": {"key": "properties.assignmentState", "type": "str"},
        "time_created": {"key": "properties.timeCreated", "type": "str"},
        "time_started": {"key": "properties.timeStarted", "type": "str"},
        "time_finished": {"key": "properties.timeFinished", "type": "str"},
        "deployments": {"key": "properties.deployments", "type": "[AssignmentDeploymentJob]"},
    }

    def __init__(
        self,
        *,
        blueprint_version: Optional[str] = None,
        assignment_state: Optional[str] = None,
        time_created: Optional[str] = None,
        time_started: Optional[str] = None,
        time_finished: Optional[str] = None,
        deployments: Optional[List["_models.AssignmentDeploymentJob"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword blueprint_version: The published version of the blueprint definition used for the
         blueprint assignment operation.
        :paramtype blueprint_version: str
        :keyword assignment_state: State of this blueprint assignment operation.
        :paramtype assignment_state: str
        :keyword time_created: Create time of this blueprint assignment operation.
        :paramtype time_created: str
        :keyword time_started: Start time of the underlying deployment.
        :paramtype time_started: str
        :keyword time_finished: Finish time of the overall underlying deployments.
        :paramtype time_finished: str
        :keyword deployments: List of jobs in this blueprint assignment operation.
        :paramtype deployments: list[~azure.mgmt.blueprint.models.AssignmentDeploymentJob]
        """
        super().__init__(**kwargs)
        self.blueprint_version = blueprint_version
        self.assignment_state = assignment_state
        self.time_created = time_created
        self.time_started = time_started
        self.time_finished = time_finished
        self.deployments = deployments


class AssignmentOperationList(_serialization.Model):
    """List of AssignmentOperation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of AssignmentOperation.
    :vartype value: list[~azure.mgmt.blueprint.models.AssignmentOperation]
    :ivar next_link: Link to the next page of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[AssignmentOperation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.AssignmentOperation"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of AssignmentOperation.
        :paramtype value: list[~azure.mgmt.blueprint.models.AssignmentOperation]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class BlueprintResourcePropertiesBase(_serialization.Model):
    """Shared properties between all blueprint resources.

    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, display_name: Optional[str] = None, description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description


class AssignmentProperties(BlueprintResourcePropertiesBase):
    """Detailed properties for a blueprint assignment.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar blueprint_id: ID of the published version of a blueprint definition.
    :vartype blueprint_id: str
    :ivar scope: The target subscription scope of the blueprint assignment (format:
     '/subscriptions/{subscriptionId}'). For management group level assignments, the property is
     required.
    :vartype scope: str
    :ivar parameters: Blueprint assignment parameter values. Required.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
    :ivar resource_groups: Names and locations of resource group placeholders. Required.
    :vartype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupValue]
    :ivar status: Status of blueprint assignment. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.AssignmentStatus
    :ivar locks: Defines how resources deployed by a blueprint assignment are locked.
    :vartype locks: ~azure.mgmt.blueprint.models.AssignmentLockSettings
    :ivar provisioning_state: State of the blueprint assignment. Known values are: "creating",
     "validating", "waiting", "deploying", "cancelling", "locking", "succeeded", "failed",
     "canceled", and "deleting".
    :vartype provisioning_state: str or ~azure.mgmt.blueprint.models.AssignmentProvisioningState
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "parameters": {"required": True},
        "resource_groups": {"required": True},
        "status": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "blueprint_id": {"key": "blueprintId", "type": "str"},
        "scope": {"key": "scope", "type": "str"},
        "parameters": {"key": "parameters", "type": "{ParameterValue}"},
        "resource_groups": {"key": "resourceGroups", "type": "{ResourceGroupValue}"},
        "status": {"key": "status", "type": "AssignmentStatus"},
        "locks": {"key": "locks", "type": "AssignmentLockSettings"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        parameters: Dict[str, "_models.ParameterValue"],
        resource_groups: Dict[str, "_models.ResourceGroupValue"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        blueprint_id: Optional[str] = None,
        scope: Optional[str] = None,
        locks: Optional["_models.AssignmentLockSettings"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword blueprint_id: ID of the published version of a blueprint definition.
        :paramtype blueprint_id: str
        :keyword scope: The target subscription scope of the blueprint assignment (format:
         '/subscriptions/{subscriptionId}'). For management group level assignments, the property is
         required.
        :paramtype scope: str
        :keyword parameters: Blueprint assignment parameter values. Required.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
        :keyword resource_groups: Names and locations of resource group placeholders. Required.
        :paramtype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupValue]
        :keyword locks: Defines how resources deployed by a blueprint assignment are locked.
        :paramtype locks: ~azure.mgmt.blueprint.models.AssignmentLockSettings
        """
        super().__init__(display_name=display_name, description=description, **kwargs)
        self.blueprint_id = blueprint_id
        self.scope = scope
        self.parameters = parameters
        self.resource_groups = resource_groups
        self.status = None
        self.locks = locks
        self.provisioning_state = None


class BlueprintResourceStatusBase(_serialization.Model):
    """Shared status properties between all blueprint resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar time_created: Creation time of this blueprint definition.
    :vartype time_created: ~datetime.datetime
    :ivar last_modified: Last modified time of this blueprint definition.
    :vartype last_modified: ~datetime.datetime
    """

    _validation = {
        "time_created": {"readonly": True},
        "last_modified": {"readonly": True},
    }

    _attribute_map = {
        "time_created": {"key": "timeCreated", "type": "iso-8601"},
        "last_modified": {"key": "lastModified", "type": "iso-8601"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.time_created = None
        self.last_modified = None


class AssignmentStatus(BlueprintResourceStatusBase):
    """The status of a blueprint assignment. This field is readonly.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar time_created: Creation time of this blueprint definition.
    :vartype time_created: ~datetime.datetime
    :ivar last_modified: Last modified time of this blueprint definition.
    :vartype last_modified: ~datetime.datetime
    :ivar managed_resources: List of resources that were created by the blueprint assignment.
    :vartype managed_resources: list[str]
    """

    _validation = {
        "time_created": {"readonly": True},
        "last_modified": {"readonly": True},
        "managed_resources": {"readonly": True},
    }

    _attribute_map = {
        "time_created": {"key": "timeCreated", "type": "iso-8601"},
        "last_modified": {"key": "lastModified", "type": "iso-8601"},
        "managed_resources": {"key": "managedResources", "type": "[str]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.managed_resources = None


class AzureResourceManagerError(_serialization.Model):
    """Error code and message.

    :ivar code: Error code.
    :vartype code: str
    :ivar message: Error message.
    :vartype message: str
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
    }

    def __init__(self, *, code: Optional[str] = None, message: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword code: Error code.
        :paramtype code: str
        :keyword message: Error message.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message


class Blueprint(AzureResourceBase):  # pylint: disable=too-many-instance-attributes
    """Represents a Blueprint definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar status: Status of the blueprint. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.BlueprintStatus
    :ivar target_scope: The scope where this blueprint definition can be assigned. Known values
     are: "subscription" and "managementGroup".
    :vartype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
    :ivar parameters: Parameters required by this blueprint definition.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
    :ivar resource_groups: Resource group placeholders defined by this blueprint definition.
    :vartype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
    :ivar versions: Published versions of this blueprint definition.
    :vartype versions: JSON
    :ivar layout: Layout view of the blueprint definition for UI reference.
    :vartype layout: JSON
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "status": {"readonly": True},
        "layout": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "status": {"key": "properties.status", "type": "BlueprintStatus"},
        "target_scope": {"key": "properties.targetScope", "type": "str"},
        "parameters": {"key": "properties.parameters", "type": "{ParameterDefinition}"},
        "resource_groups": {"key": "properties.resourceGroups", "type": "{ResourceGroupDefinition}"},
        "versions": {"key": "properties.versions", "type": "object"},
        "layout": {"key": "properties.layout", "type": "object"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        target_scope: Optional[Union[str, "_models.BlueprintTargetScope"]] = None,
        parameters: Optional[Dict[str, "_models.ParameterDefinition"]] = None,
        resource_groups: Optional[Dict[str, "_models.ResourceGroupDefinition"]] = None,
        versions: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword target_scope: The scope where this blueprint definition can be assigned. Known values
         are: "subscription" and "managementGroup".
        :paramtype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
        :keyword parameters: Parameters required by this blueprint definition.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
        :keyword resource_groups: Resource group placeholders defined by this blueprint definition.
        :paramtype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
        :keyword versions: Published versions of this blueprint definition.
        :paramtype versions: JSON
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
        self.status = None
        self.target_scope = target_scope
        self.parameters = parameters
        self.resource_groups = resource_groups
        self.versions = versions
        self.layout = None


class BlueprintList(_serialization.Model):
    """List of blueprint definitions.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of blueprint definitions.
    :vartype value: list[~azure.mgmt.blueprint.models.Blueprint]
    :ivar next_link: Link to the next page of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Blueprint]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.Blueprint"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of blueprint definitions.
        :paramtype value: list[~azure.mgmt.blueprint.models.Blueprint]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class SharedBlueprintProperties(BlueprintResourcePropertiesBase):
    """Shared Schema for both blueprintProperties and publishedBlueprintProperties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar status: Status of the blueprint. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.BlueprintStatus
    :ivar target_scope: The scope where this blueprint definition can be assigned. Known values
     are: "subscription" and "managementGroup".
    :vartype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
    :ivar parameters: Parameters required by this blueprint definition.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
    :ivar resource_groups: Resource group placeholders defined by this blueprint definition.
    :vartype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "status": {"key": "status", "type": "BlueprintStatus"},
        "target_scope": {"key": "targetScope", "type": "str"},
        "parameters": {"key": "parameters", "type": "{ParameterDefinition}"},
        "resource_groups": {"key": "resourceGroups", "type": "{ResourceGroupDefinition}"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        target_scope: Optional[Union[str, "_models.BlueprintTargetScope"]] = None,
        parameters: Optional[Dict[str, "_models.ParameterDefinition"]] = None,
        resource_groups: Optional[Dict[str, "_models.ResourceGroupDefinition"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword target_scope: The scope where this blueprint definition can be assigned. Known values
         are: "subscription" and "managementGroup".
        :paramtype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
        :keyword parameters: Parameters required by this blueprint definition.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
        :keyword resource_groups: Resource group placeholders defined by this blueprint definition.
        :paramtype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
        """
        super().__init__(display_name=display_name, description=description, **kwargs)
        self.status = None
        self.target_scope = target_scope
        self.parameters = parameters
        self.resource_groups = resource_groups


class BlueprintProperties(SharedBlueprintProperties):
    """Schema for blueprint definition properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar status: Status of the blueprint. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.BlueprintStatus
    :ivar target_scope: The scope where this blueprint definition can be assigned. Known values
     are: "subscription" and "managementGroup".
    :vartype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
    :ivar parameters: Parameters required by this blueprint definition.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
    :ivar resource_groups: Resource group placeholders defined by this blueprint definition.
    :vartype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
    :ivar versions: Published versions of this blueprint definition.
    :vartype versions: JSON
    :ivar layout: Layout view of the blueprint definition for UI reference.
    :vartype layout: JSON
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "status": {"readonly": True},
        "layout": {"readonly": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "status": {"key": "status", "type": "BlueprintStatus"},
        "target_scope": {"key": "targetScope", "type": "str"},
        "parameters": {"key": "parameters", "type": "{ParameterDefinition}"},
        "resource_groups": {"key": "resourceGroups", "type": "{ResourceGroupDefinition}"},
        "versions": {"key": "versions", "type": "object"},
        "layout": {"key": "layout", "type": "object"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        target_scope: Optional[Union[str, "_models.BlueprintTargetScope"]] = None,
        parameters: Optional[Dict[str, "_models.ParameterDefinition"]] = None,
        resource_groups: Optional[Dict[str, "_models.ResourceGroupDefinition"]] = None,
        versions: Optional[JSON] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword target_scope: The scope where this blueprint definition can be assigned. Known values
         are: "subscription" and "managementGroup".
        :paramtype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
        :keyword parameters: Parameters required by this blueprint definition.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
        :keyword resource_groups: Resource group placeholders defined by this blueprint definition.
        :paramtype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
        :keyword versions: Published versions of this blueprint definition.
        :paramtype versions: JSON
        """
        super().__init__(
            display_name=display_name,
            description=description,
            target_scope=target_scope,
            parameters=parameters,
            resource_groups=resource_groups,
            **kwargs
        )
        self.versions = versions
        self.layout = None


class BlueprintStatus(BlueprintResourceStatusBase):
    """The status of the blueprint. This field is readonly.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar time_created: Creation time of this blueprint definition.
    :vartype time_created: ~datetime.datetime
    :ivar last_modified: Last modified time of this blueprint definition.
    :vartype last_modified: ~datetime.datetime
    """

    _validation = {
        "time_created": {"readonly": True},
        "last_modified": {"readonly": True},
    }

    _attribute_map = {
        "time_created": {"key": "timeCreated", "type": "iso-8601"},
        "last_modified": {"key": "lastModified", "type": "iso-8601"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.blueprint.models.ErrorResponse]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.blueprint.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorResponse]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class KeyVaultReference(_serialization.Model):
    """Specifies the link to a Key Vault.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Azure resource ID of the Key Vault. Required.
    :vartype id: str
    """

    _validation = {
        "id": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: str, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: Azure resource ID of the Key Vault. Required.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class ManagedServiceIdentity(_serialization.Model):
    """Managed identity generic object.

    All required parameters must be populated in order to send to Azure.

    :ivar type: Type of the managed identity. Required. Known values are: "None", "SystemAssigned",
     and "UserAssigned".
    :vartype type: str or ~azure.mgmt.blueprint.models.ManagedServiceIdentityType
    :ivar principal_id: Azure Active Directory principal ID associated with this Identity.
    :vartype principal_id: str
    :ivar tenant_id: ID of the Azure Active Directory.
    :vartype tenant_id: str
    :ivar user_assigned_identities: The list of user-assigned managed identities associated with
     the resource. Key is the Azure resource Id of the managed identity.
    :vartype user_assigned_identities: dict[str, ~azure.mgmt.blueprint.models.UserAssignedIdentity]
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "user_assigned_identities": {"key": "userAssignedIdentities", "type": "{UserAssignedIdentity}"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ManagedServiceIdentityType"],
        principal_id: Optional[str] = None,
        tenant_id: Optional[str] = None,
        user_assigned_identities: Optional[Dict[str, "_models.UserAssignedIdentity"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Type of the managed identity. Required. Known values are: "None",
         "SystemAssigned", and "UserAssigned".
        :paramtype type: str or ~azure.mgmt.blueprint.models.ManagedServiceIdentityType
        :keyword principal_id: Azure Active Directory principal ID associated with this Identity.
        :paramtype principal_id: str
        :keyword tenant_id: ID of the Azure Active Directory.
        :paramtype tenant_id: str
        :keyword user_assigned_identities: The list of user-assigned managed identities associated with
         the resource. Key is the Azure resource Id of the managed identity.
        :paramtype user_assigned_identities: dict[str,
         ~azure.mgmt.blueprint.models.UserAssignedIdentity]
        """
        super().__init__(**kwargs)
        self.type = type
        self.principal_id = principal_id
        self.tenant_id = tenant_id
        self.user_assigned_identities = user_assigned_identities


class ParameterDefinition(_serialization.Model):
    """Represent a parameter with constrains and metadata.

    All required parameters must be populated in order to send to Azure.

    :ivar type: Allowed data types for Resource Manager template parameters. Required. Known values
     are: "string", "array", "bool", "int", "object", "secureObject", and "secureString".
    :vartype type: str or ~azure.mgmt.blueprint.models.TemplateParameterType
    :ivar default_value: Default Value for this parameter.
    :vartype default_value: any
    :ivar allowed_values: Array of allowed values for this parameter.
    :vartype allowed_values: list[any]
    :ivar display_name: DisplayName of this parameter/resourceGroup.
    :vartype display_name: str
    :ivar description: Description of this parameter/resourceGroup.
    :vartype description: str
    :ivar strong_type: StrongType for UI to render rich experience during blueprint assignment.
     Supported strong types are resourceType, principalId and location.
    :vartype strong_type: str
    """

    _validation = {
        "type": {"required": True},
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "strong_type": {"max_length": 64},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "default_value": {"key": "defaultValue", "type": "object"},
        "allowed_values": {"key": "allowedValues", "type": "[object]"},
        "display_name": {"key": "metadata.displayName", "type": "str"},
        "description": {"key": "metadata.description", "type": "str"},
        "strong_type": {"key": "metadata.strongType", "type": "str"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.TemplateParameterType"],
        default_value: Optional[Any] = None,
        allowed_values: Optional[List[Any]] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        strong_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Allowed data types for Resource Manager template parameters. Required. Known
         values are: "string", "array", "bool", "int", "object", "secureObject", and "secureString".
        :paramtype type: str or ~azure.mgmt.blueprint.models.TemplateParameterType
        :keyword default_value: Default Value for this parameter.
        :paramtype default_value: any
        :keyword allowed_values: Array of allowed values for this parameter.
        :paramtype allowed_values: list[any]
        :keyword display_name: DisplayName of this parameter/resourceGroup.
        :paramtype display_name: str
        :keyword description: Description of this parameter/resourceGroup.
        :paramtype description: str
        :keyword strong_type: StrongType for UI to render rich experience during blueprint assignment.
         Supported strong types are resourceType, principalId and location.
        :paramtype strong_type: str
        """
        super().__init__(**kwargs)
        self.type = type
        self.default_value = default_value
        self.allowed_values = allowed_values
        self.display_name = display_name
        self.description = description
        self.strong_type = strong_type


class ParameterValue(_serialization.Model):
    """Value for the specified parameter. Can be either 'value' or 'reference' but not both.

    :ivar value: Parameter value. Any valid JSON value is allowed including objects, arrays,
     strings, numbers and booleans.
    :vartype value: JSON
    :ivar reference: Parameter value as reference type.
    :vartype reference: ~azure.mgmt.blueprint.models.SecretValueReference
    """

    _attribute_map = {
        "value": {"key": "value", "type": "object"},
        "reference": {"key": "reference", "type": "SecretValueReference"},
    }

    def __init__(
        self, *, value: Optional[JSON] = None, reference: Optional["_models.SecretValueReference"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: Parameter value. Any valid JSON value is allowed including objects, arrays,
         strings, numbers and booleans.
        :paramtype value: JSON
        :keyword reference: Parameter value as reference type.
        :paramtype reference: ~azure.mgmt.blueprint.models.SecretValueReference
        """
        super().__init__(**kwargs)
        self.value = value
        self.reference = reference


class PolicyAssignmentArtifact(Artifact):
    """Blueprint artifact that applies a Policy assignment.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar kind: Specifies the kind of blueprint artifact. Required. Known values are: "template",
     "roleAssignment", and "policyAssignment".
    :vartype kind: str or ~azure.mgmt.blueprint.models.ArtifactKind
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar depends_on: Artifacts which need to be deployed before the specified artifact.
    :vartype depends_on: list[str]
    :ivar policy_definition_id: Azure resource ID of the policy definition. Required.
    :vartype policy_definition_id: str
    :ivar parameters: Parameter values for the policy definition. Required.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
    :ivar resource_group: Name of the resource group placeholder to which the policy will be
     assigned.
    :vartype resource_group: str
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "kind": {"required": True},
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "policy_definition_id": {"required": True},
        "parameters": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "depends_on": {"key": "properties.dependsOn", "type": "[str]"},
        "policy_definition_id": {"key": "properties.policyDefinitionId", "type": "str"},
        "parameters": {"key": "properties.parameters", "type": "{ParameterValue}"},
        "resource_group": {"key": "properties.resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        policy_definition_id: str,
        parameters: Dict[str, "_models.ParameterValue"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        depends_on: Optional[List[str]] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword depends_on: Artifacts which need to be deployed before the specified artifact.
        :paramtype depends_on: list[str]
        :keyword policy_definition_id: Azure resource ID of the policy definition. Required.
        :paramtype policy_definition_id: str
        :keyword parameters: Parameter values for the policy definition. Required.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
        :keyword resource_group: Name of the resource group placeholder to which the policy will be
         assigned.
        :paramtype resource_group: str
        """
        super().__init__(**kwargs)
        self.kind: str = "policyAssignment"
        self.display_name = display_name
        self.description = description
        self.depends_on = depends_on
        self.policy_definition_id = policy_definition_id
        self.parameters = parameters
        self.resource_group = resource_group


class PolicyAssignmentArtifactProperties(BlueprintResourcePropertiesBase, ArtifactPropertiesBase):
    """Properties of a Policy assignment blueprint artifact.

    All required parameters must be populated in order to send to Azure.

    :ivar depends_on: Artifacts which need to be deployed before the specified artifact.
    :vartype depends_on: list[str]
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar policy_definition_id: Azure resource ID of the policy definition. Required.
    :vartype policy_definition_id: str
    :ivar parameters: Parameter values for the policy definition. Required.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
    :ivar resource_group: Name of the resource group placeholder to which the policy will be
     assigned.
    :vartype resource_group: str
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "policy_definition_id": {"required": True},
        "parameters": {"required": True},
    }

    _attribute_map = {
        "depends_on": {"key": "dependsOn", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "policy_definition_id": {"key": "policyDefinitionId", "type": "str"},
        "parameters": {"key": "parameters", "type": "{ParameterValue}"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        policy_definition_id: str,
        parameters: Dict[str, "_models.ParameterValue"],
        depends_on: Optional[List[str]] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword depends_on: Artifacts which need to be deployed before the specified artifact.
        :paramtype depends_on: list[str]
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword policy_definition_id: Azure resource ID of the policy definition. Required.
        :paramtype policy_definition_id: str
        :keyword parameters: Parameter values for the policy definition. Required.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
        :keyword resource_group: Name of the resource group placeholder to which the policy will be
         assigned.
        :paramtype resource_group: str
        """
        super().__init__(display_name=display_name, description=description, depends_on=depends_on, **kwargs)
        self.depends_on = depends_on
        self.policy_definition_id = policy_definition_id
        self.parameters = parameters
        self.resource_group = resource_group
        self.display_name = display_name
        self.description = description


class PublishedBlueprint(AzureResourceBase):  # pylint: disable=too-many-instance-attributes
    """Represents a published blueprint.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar status: Status of the blueprint. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.BlueprintStatus
    :ivar target_scope: The scope where this blueprint definition can be assigned. Known values
     are: "subscription" and "managementGroup".
    :vartype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
    :ivar parameters: Parameters required by this blueprint definition.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
    :ivar resource_groups: Resource group placeholders defined by this blueprint definition.
    :vartype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
    :ivar blueprint_name: Name of the published blueprint definition.
    :vartype blueprint_name: str
    :ivar change_notes: Version-specific change notes.
    :vartype change_notes: str
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "status": {"readonly": True},
        "change_notes": {"max_length": 500},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "status": {"key": "properties.status", "type": "BlueprintStatus"},
        "target_scope": {"key": "properties.targetScope", "type": "str"},
        "parameters": {"key": "properties.parameters", "type": "{ParameterDefinition}"},
        "resource_groups": {"key": "properties.resourceGroups", "type": "{ResourceGroupDefinition}"},
        "blueprint_name": {"key": "properties.blueprintName", "type": "str"},
        "change_notes": {"key": "properties.changeNotes", "type": "str"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        target_scope: Optional[Union[str, "_models.BlueprintTargetScope"]] = None,
        parameters: Optional[Dict[str, "_models.ParameterDefinition"]] = None,
        resource_groups: Optional[Dict[str, "_models.ResourceGroupDefinition"]] = None,
        blueprint_name: Optional[str] = None,
        change_notes: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword target_scope: The scope where this blueprint definition can be assigned. Known values
         are: "subscription" and "managementGroup".
        :paramtype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
        :keyword parameters: Parameters required by this blueprint definition.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
        :keyword resource_groups: Resource group placeholders defined by this blueprint definition.
        :paramtype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
        :keyword blueprint_name: Name of the published blueprint definition.
        :paramtype blueprint_name: str
        :keyword change_notes: Version-specific change notes.
        :paramtype change_notes: str
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
        self.status = None
        self.target_scope = target_scope
        self.parameters = parameters
        self.resource_groups = resource_groups
        self.blueprint_name = blueprint_name
        self.change_notes = change_notes


class PublishedBlueprintList(_serialization.Model):
    """List of published blueprint definitions.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of published blueprint definitions.
    :vartype value: list[~azure.mgmt.blueprint.models.PublishedBlueprint]
    :ivar next_link: Link to the next page of results.
    :vartype next_link: str
    """

    _validation = {
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[PublishedBlueprint]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: Optional[List["_models.PublishedBlueprint"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of published blueprint definitions.
        :paramtype value: list[~azure.mgmt.blueprint.models.PublishedBlueprint]
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = None


class PublishedBlueprintProperties(SharedBlueprintProperties):
    """Schema for published blueprint definition properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar status: Status of the blueprint. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.BlueprintStatus
    :ivar target_scope: The scope where this blueprint definition can be assigned. Known values
     are: "subscription" and "managementGroup".
    :vartype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
    :ivar parameters: Parameters required by this blueprint definition.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
    :ivar resource_groups: Resource group placeholders defined by this blueprint definition.
    :vartype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
    :ivar blueprint_name: Name of the published blueprint definition.
    :vartype blueprint_name: str
    :ivar change_notes: Version-specific change notes.
    :vartype change_notes: str
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "status": {"readonly": True},
        "change_notes": {"max_length": 500},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "status": {"key": "status", "type": "BlueprintStatus"},
        "target_scope": {"key": "targetScope", "type": "str"},
        "parameters": {"key": "parameters", "type": "{ParameterDefinition}"},
        "resource_groups": {"key": "resourceGroups", "type": "{ResourceGroupDefinition}"},
        "blueprint_name": {"key": "blueprintName", "type": "str"},
        "change_notes": {"key": "changeNotes", "type": "str"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        target_scope: Optional[Union[str, "_models.BlueprintTargetScope"]] = None,
        parameters: Optional[Dict[str, "_models.ParameterDefinition"]] = None,
        resource_groups: Optional[Dict[str, "_models.ResourceGroupDefinition"]] = None,
        blueprint_name: Optional[str] = None,
        change_notes: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword target_scope: The scope where this blueprint definition can be assigned. Known values
         are: "subscription" and "managementGroup".
        :paramtype target_scope: str or ~azure.mgmt.blueprint.models.BlueprintTargetScope
        :keyword parameters: Parameters required by this blueprint definition.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterDefinition]
        :keyword resource_groups: Resource group placeholders defined by this blueprint definition.
        :paramtype resource_groups: dict[str, ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
        :keyword blueprint_name: Name of the published blueprint definition.
        :paramtype blueprint_name: str
        :keyword change_notes: Version-specific change notes.
        :paramtype change_notes: str
        """
        super().__init__(
            display_name=display_name,
            description=description,
            target_scope=target_scope,
            parameters=parameters,
            resource_groups=resource_groups,
            **kwargs
        )
        self.blueprint_name = blueprint_name
        self.change_notes = change_notes


class ResourceGroupDefinition(_serialization.Model):
    """Represents an Azure resource group in a blueprint definition.

    :ivar name: Name of this resourceGroup. Leave empty if the resource group name will be
     specified during the blueprint assignment.
    :vartype name: str
    :ivar location: Location of this resourceGroup. Leave empty if the resource group location will
     be specified during the blueprint assignment.
    :vartype location: str
    :ivar depends_on: Artifacts which need to be deployed before this resource group.
    :vartype depends_on: list[str]
    :ivar tags: Tags to be assigned to this resource group.
    :vartype tags: dict[str, str]
    :ivar display_name: DisplayName of this parameter/resourceGroup.
    :vartype display_name: str
    :ivar description: Description of this parameter/resourceGroup.
    :vartype description: str
    :ivar strong_type: StrongType for UI to render rich experience during blueprint assignment.
     Supported strong types are resourceType, principalId and location.
    :vartype strong_type: str
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "strong_type": {"max_length": 64},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "location": {"key": "location", "type": "str"},
        "depends_on": {"key": "dependsOn", "type": "[str]"},
        "tags": {"key": "tags", "type": "{str}"},
        "display_name": {"key": "metadata.displayName", "type": "str"},
        "description": {"key": "metadata.description", "type": "str"},
        "strong_type": {"key": "metadata.strongType", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        location: Optional[str] = None,
        depends_on: Optional[List[str]] = None,
        tags: Optional[Dict[str, str]] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        strong_type: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Name of this resourceGroup. Leave empty if the resource group name will be
         specified during the blueprint assignment.
        :paramtype name: str
        :keyword location: Location of this resourceGroup. Leave empty if the resource group location
         will be specified during the blueprint assignment.
        :paramtype location: str
        :keyword depends_on: Artifacts which need to be deployed before this resource group.
        :paramtype depends_on: list[str]
        :keyword tags: Tags to be assigned to this resource group.
        :paramtype tags: dict[str, str]
        :keyword display_name: DisplayName of this parameter/resourceGroup.
        :paramtype display_name: str
        :keyword description: Description of this parameter/resourceGroup.
        :paramtype description: str
        :keyword strong_type: StrongType for UI to render rich experience during blueprint assignment.
         Supported strong types are resourceType, principalId and location.
        :paramtype strong_type: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.location = location
        self.depends_on = depends_on
        self.tags = tags
        self.display_name = display_name
        self.description = description
        self.strong_type = strong_type


class ResourceGroupValue(_serialization.Model):
    """Represents an Azure resource group.

    :ivar name: Name of the resource group.
    :vartype name: str
    :ivar location: Location of the resource group.
    :vartype location: str
    """

    _validation = {
        "name": {"max_length": 90, "min_length": 1},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, name: Optional[str] = None, location: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword name: Name of the resource group.
        :paramtype name: str
        :keyword location: Location of the resource group.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.name = name
        self.location = location


class ResourceProviderOperation(_serialization.Model):
    """Supported operations of this resource provider.

    :ivar name: Operation name, in format of {provider}/{resource}/{operation}.
    :vartype name: str
    :ivar display: Display metadata associated with the operation.
    :vartype display: ~azure.mgmt.blueprint.models.ResourceProviderOperationDisplay
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "display": {"key": "display", "type": "ResourceProviderOperationDisplay"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        display: Optional["_models.ResourceProviderOperationDisplay"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Operation name, in format of {provider}/{resource}/{operation}.
        :paramtype name: str
        :keyword display: Display metadata associated with the operation.
        :paramtype display: ~azure.mgmt.blueprint.models.ResourceProviderOperationDisplay
        """
        super().__init__(**kwargs)
        self.name = name
        self.display = display


class ResourceProviderOperationDisplay(_serialization.Model):
    """Display metadata associated with the operation.

    :ivar provider: Resource provider: Microsoft Blueprint.
    :vartype provider: str
    :ivar resource: Resource on which the operation is performed.
    :vartype resource: str
    :ivar operation: Type of operation: get, read, delete, etc.
    :vartype operation: str
    :ivar description: Description of this operation.
    :vartype description: str
    """

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(
        self,
        *,
        provider: Optional[str] = None,
        resource: Optional[str] = None,
        operation: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provider: Resource provider: Microsoft Blueprint.
        :paramtype provider: str
        :keyword resource: Resource on which the operation is performed.
        :paramtype resource: str
        :keyword operation: Type of operation: get, read, delete, etc.
        :paramtype operation: str
        :keyword description: Description of this operation.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description


class ResourceProviderOperationList(_serialization.Model):
    """Results of the request to list operations.

    :ivar value: List of operations supported by this resource provider.
    :vartype value: list[~azure.mgmt.blueprint.models.ResourceProviderOperation]
    """

    _attribute_map = {
        "value": {"key": "value", "type": "[ResourceProviderOperation]"},
    }

    def __init__(self, *, value: Optional[List["_models.ResourceProviderOperation"]] = None, **kwargs: Any) -> None:
        """
        :keyword value: List of operations supported by this resource provider.
        :paramtype value: list[~azure.mgmt.blueprint.models.ResourceProviderOperation]
        """
        super().__init__(**kwargs)
        self.value = value


class RoleAssignmentArtifact(Artifact):
    """Blueprint artifact that applies a Role assignment.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar kind: Specifies the kind of blueprint artifact. Required. Known values are: "template",
     "roleAssignment", and "policyAssignment".
    :vartype kind: str or ~azure.mgmt.blueprint.models.ArtifactKind
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar depends_on: Artifacts which need to be deployed before the specified artifact.
    :vartype depends_on: list[str]
    :ivar role_definition_id: Azure resource ID of the RoleDefinition. Required.
    :vartype role_definition_id: str
    :ivar principal_ids: Array of user or group identities in Azure Active Directory. The
     roleDefinition will apply to each identity. Required.
    :vartype principal_ids: any
    :ivar resource_group: RoleAssignment will be scope to this resourceGroup. If empty, it scopes
     to the subscription.
    :vartype resource_group: str
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "kind": {"required": True},
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "role_definition_id": {"required": True},
        "principal_ids": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "depends_on": {"key": "properties.dependsOn", "type": "[str]"},
        "role_definition_id": {"key": "properties.roleDefinitionId", "type": "str"},
        "principal_ids": {"key": "properties.principalIds", "type": "object"},
        "resource_group": {"key": "properties.resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        role_definition_id: str,
        principal_ids: Any,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        depends_on: Optional[List[str]] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword depends_on: Artifacts which need to be deployed before the specified artifact.
        :paramtype depends_on: list[str]
        :keyword role_definition_id: Azure resource ID of the RoleDefinition. Required.
        :paramtype role_definition_id: str
        :keyword principal_ids: Array of user or group identities in Azure Active Directory. The
         roleDefinition will apply to each identity. Required.
        :paramtype principal_ids: any
        :keyword resource_group: RoleAssignment will be scope to this resourceGroup. If empty, it
         scopes to the subscription.
        :paramtype resource_group: str
        """
        super().__init__(**kwargs)
        self.kind: str = "roleAssignment"
        self.display_name = display_name
        self.description = description
        self.depends_on = depends_on
        self.role_definition_id = role_definition_id
        self.principal_ids = principal_ids
        self.resource_group = resource_group


class RoleAssignmentArtifactProperties(BlueprintResourcePropertiesBase, ArtifactPropertiesBase):
    """Properties of a Role assignment blueprint artifact.

    All required parameters must be populated in order to send to Azure.

    :ivar depends_on: Artifacts which need to be deployed before the specified artifact.
    :vartype depends_on: list[str]
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar role_definition_id: Azure resource ID of the RoleDefinition. Required.
    :vartype role_definition_id: str
    :ivar principal_ids: Array of user or group identities in Azure Active Directory. The
     roleDefinition will apply to each identity. Required.
    :vartype principal_ids: any
    :ivar resource_group: RoleAssignment will be scope to this resourceGroup. If empty, it scopes
     to the subscription.
    :vartype resource_group: str
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "role_definition_id": {"required": True},
        "principal_ids": {"required": True},
    }

    _attribute_map = {
        "depends_on": {"key": "dependsOn", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "role_definition_id": {"key": "roleDefinitionId", "type": "str"},
        "principal_ids": {"key": "principalIds", "type": "object"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
    }

    def __init__(
        self,
        *,
        role_definition_id: str,
        principal_ids: Any,
        depends_on: Optional[List[str]] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword depends_on: Artifacts which need to be deployed before the specified artifact.
        :paramtype depends_on: list[str]
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword role_definition_id: Azure resource ID of the RoleDefinition. Required.
        :paramtype role_definition_id: str
        :keyword principal_ids: Array of user or group identities in Azure Active Directory. The
         roleDefinition will apply to each identity. Required.
        :paramtype principal_ids: any
        :keyword resource_group: RoleAssignment will be scope to this resourceGroup. If empty, it
         scopes to the subscription.
        :paramtype resource_group: str
        """
        super().__init__(display_name=display_name, description=description, depends_on=depends_on, **kwargs)
        self.depends_on = depends_on
        self.role_definition_id = role_definition_id
        self.principal_ids = principal_ids
        self.resource_group = resource_group
        self.display_name = display_name
        self.description = description


class SecretValueReference(_serialization.Model):
    """Reference to a Key Vault secret.

    All required parameters must be populated in order to send to Azure.

    :ivar key_vault: Specifies the reference to a given Azure Key Vault. Required.
    :vartype key_vault: ~azure.mgmt.blueprint.models.KeyVaultReference
    :ivar secret_name: Name of the secret. Required.
    :vartype secret_name: str
    :ivar secret_version: The version of the secret to use. If left blank, the latest version of
     the secret is used.
    :vartype secret_version: str
    """

    _validation = {
        "key_vault": {"required": True},
        "secret_name": {"required": True},
    }

    _attribute_map = {
        "key_vault": {"key": "keyVault", "type": "KeyVaultReference"},
        "secret_name": {"key": "secretName", "type": "str"},
        "secret_version": {"key": "secretVersion", "type": "str"},
    }

    def __init__(
        self,
        *,
        key_vault: "_models.KeyVaultReference",
        secret_name: str,
        secret_version: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword key_vault: Specifies the reference to a given Azure Key Vault. Required.
        :paramtype key_vault: ~azure.mgmt.blueprint.models.KeyVaultReference
        :keyword secret_name: Name of the secret. Required.
        :paramtype secret_name: str
        :keyword secret_version: The version of the secret to use. If left blank, the latest version of
         the secret is used.
        :paramtype secret_version: str
        """
        super().__init__(**kwargs)
        self.key_vault = key_vault
        self.secret_name = secret_name
        self.secret_version = secret_version


class TemplateArtifact(Artifact):
    """Blueprint artifact that deploys a Resource Manager template.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :ivar kind: Specifies the kind of blueprint artifact. Required. Known values are: "template",
     "roleAssignment", and "policyAssignment".
    :vartype kind: str or ~azure.mgmt.blueprint.models.ArtifactKind
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar depends_on: Artifacts which need to be deployed before the specified artifact.
    :vartype depends_on: list[str]
    :ivar template: The Resource Manager template blueprint artifact body. Required.
    :vartype template: JSON
    :ivar resource_group: If applicable, the name of the resource group placeholder to which the
     Resource Manager template blueprint artifact will be deployed.
    :vartype resource_group: str
    :ivar parameters: Resource Manager template blueprint artifact parameter values. Required.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"readonly": True},
        "name": {"readonly": True},
        "kind": {"required": True},
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "template": {"required": True},
        "parameters": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "kind": {"key": "kind", "type": "str"},
        "display_name": {"key": "properties.displayName", "type": "str"},
        "description": {"key": "properties.description", "type": "str"},
        "depends_on": {"key": "properties.dependsOn", "type": "[str]"},
        "template": {"key": "properties.template", "type": "object"},
        "resource_group": {"key": "properties.resourceGroup", "type": "str"},
        "parameters": {"key": "properties.parameters", "type": "{ParameterValue}"},
    }

    def __init__(
        self,
        *,
        template: JSON,
        parameters: Dict[str, "_models.ParameterValue"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        depends_on: Optional[List[str]] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword depends_on: Artifacts which need to be deployed before the specified artifact.
        :paramtype depends_on: list[str]
        :keyword template: The Resource Manager template blueprint artifact body. Required.
        :paramtype template: JSON
        :keyword resource_group: If applicable, the name of the resource group placeholder to which the
         Resource Manager template blueprint artifact will be deployed.
        :paramtype resource_group: str
        :keyword parameters: Resource Manager template blueprint artifact parameter values. Required.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
        """
        super().__init__(**kwargs)
        self.kind: str = "template"
        self.display_name = display_name
        self.description = description
        self.depends_on = depends_on
        self.template = template
        self.resource_group = resource_group
        self.parameters = parameters


class TemplateArtifactProperties(BlueprintResourcePropertiesBase, ArtifactPropertiesBase):
    """Properties of a Resource Manager template blueprint artifact.

    All required parameters must be populated in order to send to Azure.

    :ivar depends_on: Artifacts which need to be deployed before the specified artifact.
    :vartype depends_on: list[str]
    :ivar display_name: One-liner string explain this resource.
    :vartype display_name: str
    :ivar description: Multi-line explain this resource.
    :vartype description: str
    :ivar template: The Resource Manager template blueprint artifact body. Required.
    :vartype template: JSON
    :ivar resource_group: If applicable, the name of the resource group placeholder to which the
     Resource Manager template blueprint artifact will be deployed.
    :vartype resource_group: str
    :ivar parameters: Resource Manager template blueprint artifact parameter values. Required.
    :vartype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
    """

    _validation = {
        "display_name": {"max_length": 256},
        "description": {"max_length": 500},
        "template": {"required": True},
        "parameters": {"required": True},
    }

    _attribute_map = {
        "depends_on": {"key": "dependsOn", "type": "[str]"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "template": {"key": "template", "type": "object"},
        "resource_group": {"key": "resourceGroup", "type": "str"},
        "parameters": {"key": "parameters", "type": "{ParameterValue}"},
    }

    def __init__(
        self,
        *,
        template: JSON,
        parameters: Dict[str, "_models.ParameterValue"],
        depends_on: Optional[List[str]] = None,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        resource_group: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword depends_on: Artifacts which need to be deployed before the specified artifact.
        :paramtype depends_on: list[str]
        :keyword display_name: One-liner string explain this resource.
        :paramtype display_name: str
        :keyword description: Multi-line explain this resource.
        :paramtype description: str
        :keyword template: The Resource Manager template blueprint artifact body. Required.
        :paramtype template: JSON
        :keyword resource_group: If applicable, the name of the resource group placeholder to which the
         Resource Manager template blueprint artifact will be deployed.
        :paramtype resource_group: str
        :keyword parameters: Resource Manager template blueprint artifact parameter values. Required.
        :paramtype parameters: dict[str, ~azure.mgmt.blueprint.models.ParameterValue]
        """
        super().__init__(display_name=display_name, description=description, depends_on=depends_on, **kwargs)
        self.depends_on = depends_on
        self.template = template
        self.resource_group = resource_group
        self.parameters = parameters
        self.display_name = display_name
        self.description = description


class UserAssignedIdentity(_serialization.Model):
    """User-assigned managed identity.

    :ivar principal_id: Azure Active Directory principal ID associated with this Identity.
    :vartype principal_id: str
    :ivar client_id: Client App Id associated with this identity.
    :vartype client_id: str
    """

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
    }

    def __init__(self, *, principal_id: Optional[str] = None, client_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword principal_id: Azure Active Directory principal ID associated with this Identity.
        :paramtype principal_id: str
        :keyword client_id: Client App Id associated with this identity.
        :paramtype client_id: str
        """
        super().__init__(**kwargs)
        self.principal_id = principal_id
        self.client_id = client_id


class WhoIsBlueprintContract(_serialization.Model):
    """Response schema for querying the Azure Blueprints service principal in the tenant.

    :ivar object_id: AAD object Id of the Azure Blueprints service principal in the tenant.
    :vartype object_id: str
    """

    _attribute_map = {
        "object_id": {"key": "objectId", "type": "str"},
    }

    def __init__(self, *, object_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword object_id: AAD object Id of the Azure Blueprints service principal in the tenant.
        :paramtype object_id: str
        """
        super().__init__(**kwargs)
        self.object_id = object_id
