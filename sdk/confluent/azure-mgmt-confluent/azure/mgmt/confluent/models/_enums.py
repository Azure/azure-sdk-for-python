# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AuthType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Kafka Connector Auth Type."""

    SERVICE_ACCOUNT = "SERVICE_ACCOUNT"
    KAFKA_API_KEY = "KAFKA_API_KEY"


class ConnectorClass(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Connector Class."""

    AZUREBLOBSOURCE = "AZUREBLOBSOURCE"
    AZUREBLOBSINK = "AZUREBLOBSINK"


class ConnectorServiceType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The connector service type."""

    AZURE_BLOB_STORAGE_SINK_CONNECTOR = "AzureBlobStorageSinkConnector"
    AZURE_BLOB_STORAGE_SOURCE_CONNECTOR = "AzureBlobStorageSourceConnector"
    AZURE_COSMOS_DB_SINK_CONNECTOR = "AzureCosmosDBSinkConnector"
    AZURE_COSMOS_DB_SOURCE_CONNECTOR = "AzureCosmosDBSourceConnector"
    AZURE_SYNAPSE_ANALYTICS_SINK_CONNECTOR = "AzureSynapseAnalyticsSinkConnector"


class ConnectorStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Connector Status."""

    PROVISIONING = "PROVISIONING"
    RUNNING = "RUNNING"
    PAUSED = "PAUSED"
    FAILED = "FAILED"


class ConnectorType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Connector Type."""

    SINK = "SINK"
    SOURCE = "SOURCE"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The kind of entity that created the resource."""

    USER = "User"
    """The entity was created by a user."""
    APPLICATION = "Application"
    """The entity was created by an application."""
    MANAGED_IDENTITY = "ManagedIdentity"
    """The entity was created by a managed identity."""
    KEY = "Key"
    """The entity was created by a key."""


class DataFormatType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Data Format Type."""

    AVRO = "AVRO"
    JSON = "JSON"
    STRING = "STRING"
    BYTES = "BYTES"
    PROTOBUF = "PROTOBUF"


class Package(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Stream Governance Package. Supported values are ESSENTIALS and ADVANCED."""

    ESSENTIALS = "ESSENTIALS"
    ADVANCED = "ADVANCED"


class PartnerConnectorType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Partner Connector type."""

    KAFKA_AZURE_BLOB_STORAGE_SOURCE = "KafkaAzureBlobStorageSource"
    KAFKA_AZURE_BLOB_STORAGE_SINK = "KafkaAzureBlobStorageSink"
    KAFKA_AZURE_COSMOS_DB_SOURCE = "KafkaAzureCosmosDBSource"
    KAFKA_AZURE_COSMOS_DB_SINK = "KafkaAzureCosmosDBSink"
    KAFKA_AZURE_SYNAPSE_ANALYTICS_SINK = "KafkaAzureSynapseAnalyticsSink"


class ProvisionState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Provision states for confluent RP."""

    ACCEPTED = "Accepted"
    CREATING = "Creating"
    UPDATING = "Updating"
    DELETING = "Deleting"
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    CANCELED = "Canceled"
    DELETED = "Deleted"
    NOT_SPECIFIED = "NotSpecified"


class SaaSOfferStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """SaaS Offer Status for confluent RP."""

    STARTED = "Started"
    PENDING_FULFILLMENT_START = "PendingFulfillmentStart"
    IN_PROGRESS = "InProgress"
    SUBSCRIBED = "Subscribed"
    SUSPENDED = "Suspended"
    REINSTATED = "Reinstated"
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    UNSUBSCRIBED = "Unsubscribed"
    UPDATING = "Updating"
