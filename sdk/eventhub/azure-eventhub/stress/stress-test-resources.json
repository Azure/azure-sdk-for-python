{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "17376553753676401800"
    }
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "testApplicationOid": {
      "type": "string",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resources. By default, this is the same as the resource group."
      }
    },
    "storageEndpointSuffix": {
      "type": "string",
      "defaultValue": "core.windows.net",
      "metadata": {
        "description": "The url suffix to use when creating storage connection strings."
      }
    }
  },
  "variables": {
    "ehVersion": "2017-04-01",
    "contributorRoleId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "eventHubsDataOwnerRoleId": "f526a384-b230-433a-b45c-95f59c4a2dec",
    "eventHubsNamespace_var": "[format('eh-{0}', parameters('baseName'))]",
    "eventHubName": "[format('eh-{0}-hub', parameters('baseName'))]",
    "eventHubAuthRuleName": "[format('eh-{0}-hub-auth-rule', parameters('baseName'))]",
    "storageAccount_var": "[replace(format('blb{0}', parameters('baseName')), '-', '')]",
    "containerName": "your-blob-container-name",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "eventHubsAuthRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubsNamespace_var'), variables('defaultSASKeyName'))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount_var'))]"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('eventHubsNamespace_var')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[format('{0}/{1}', variables('eventHubsNamespace_var'), variables('eventHubName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 32
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubsNamespace_var'))]"
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[format('{0}/{1}/{2}', variables('eventHubsNamespace_var'), variables('eventHubName'), variables('eventHubAuthRuleName'))]",
      "properties": {
        "rights": [
          "Manage",
          "Send",
          "Listen"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', split(format('{0}/{1}', variables('eventHubsNamespace_var'), variables('eventHubName')), '/')[0], split(format('{0}/{1}', variables('eventHubsNamespace_var'), variables('eventHubName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccount_var')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/default/{1}', variables('storageAccount_var'), variables('containerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount_var'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, deployment().name, parameters('baseName'), variables('eventHubsDataOwnerRoleId'), parameters('testApplicationOid'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('eventHubsDataOwnerRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, deployment().name, parameters('baseName'), variables('contributorRoleId'), parameters('testApplicationOid'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    }
  ],
  "outputs": {
    "EVENT_HUB_NAMESPACE": {
      "type": "string",
      "value": "[variables('eventHubsNamespace_var')]"
    },
    "EVENT_HUB_HOSTNAME": {
      "type": "string",
      "value": "[format('{0}.servicebus.windows.net', variables('eventHubsNamespace_var'))]"
    },
    "EVENT_HUB_CONN_STR": {
      "type": "string",
      "value": "[listkeys(variables('eventHubAuthRuleName'), variables('ehVersion')).primaryConnectionString]"
    },
    "EVENT_HUB_NAME": {
      "type": "string",
      "value": "[variables('eventHubName')]"
    },
    "EVENT_HUB_SAS_POLICY": {
      "type": "string",
      "value": "[variables('eventHubAuthRuleName')]"
    },
    "EVENT_HUB_SAS_KEY": {
      "type": "string",
      "value": "[listkeys(variables('eventHubAuthRuleName'), variables('ehVersion')).primaryKey]"
    },
    "AZURE_STORAGE_CONN_STR": {
      "type": "string",
      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', variables('storageAccount_var'), listKeys(variables('storageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, parameters('storageEndpointSuffix'))]"
    },
    "AZURE_STORAGE_ACCOUNT": {
      "type": "string",
      "value": "[variables('storageAccount_var')]"
    },
    "AZURE_STORAGE_ACCESS_KEY": {
      "type": "string",
      "value": "[listKeys(variables('storageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
    }
  }
}