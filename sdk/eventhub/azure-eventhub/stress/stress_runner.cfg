# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------

# Configurations for running stress test

[BASIC_CONFIG]
# running duration
duration=864000
# output to console
print_console=False
auth_timeout=60
# log output per output_interval messages
output_interval=1000
# By default every stress test will create a new eventhub, if set to no, the specific eventhub name should be provided
create_new_eventhub=yes
partition_cnt_to_create=32
message_retention_in_days=7
run_generated_commands=yes


[EVENTHUB_RECEIVE_CONFIG]
link_credit=3000
# If not set, "$default" will be used, the command line can not recognize "$" sign
consumer_group=
starting_offset=-1
starting_sequence_number=
starting_datetime=
partitions=0
load_balancing_interval=10
# 0 for amqp, 1 for amqp over websocket
transport_type=0
track_last_enqueued_event_properties=False
# output uamqp log
uamqp_logging_enable=False
use_http_proxy=False
# if set, multiple EventHubConsumerClient will be started
parallel_recv_cnt=
# if set, then will only receive events from the specific partition
recv_partition_id=

[EVENTHUB_SEND_CONFIG]
# if set, parallel sending will be running
parallel_send_cnt=
# This configuration is only useful when parallel_send_cnt is set, if True, new EventHubProducerClient would be created for each parallel sending task. Otherwise one single producer would be reused.
parallel_create_new_client=
partitions=0
# bytes per message
payload=1024
# output uamqp log
uamqp_logging_enable=True
use_http_proxy=False
# 0 for amqp, 1 for amqp over websocket
transport_type=0


[RUN_METHODS]
send_sync=no
send_async=no
# receive alone require manual eventhub connection string input -- the eventhub resource must exist
receive_sync=no
# receive alone require manual eventhub connection string input -- the eventhub resource must exist
receive_async=no
# receive alone require manual eventhub connection string input -- the eventhub and blob resource must exist
receive_with_checkpointstore_sync=no
# receive alone require manual eventhub connection string input -- the eventhub and blob resource must exist
receive_with_checkpointstore_async=no
send_and_receive_sync=no
send_and_receive_async=yes
send_and_receive_with_checkpointstore_sync=no
send_and_receive_with_checkpointstore_async=no
# large partitions stress test requires manual eventhub connection string input -- the eventhub resource must exist
send_and_receive_large_partitions_sync=no
send_and_receive_large_partitions_async=no
# large partitions stress test requires manual eventhub connection string input -- the eventhub resource must exist
send_and_receive_with_checkpointstore_large_partitions_sync=no
# large partitions stress test requires manual eventhub connection string input -- the eventhub resource must exist
send_and_receive_with_checkpointstore_large_partitions_async=no


[PROXY]
proxy_hostname=
proxy_port=
proxy_username=
proxy_password=


[CREDENTIALS]
# In most case, configure EVENT_HUB_CONN_STR and AZURE_STORAGE_CONN_STR to get the test run
EVENT_HUB_CONN_STR=
EVENT_HUB_HOSTNAME=
EVENT_HUB_NAME=
EVENT_HUB_NAMESPACE=
EVENT_HUB_SAS_POLICY=
EVENT_HUB_SAS_KEY=
AZURE_CLIENT_SECRET=
AZURE_CLIENT_ID=
AZURE_TENANT_ID=
AZURE_STORAGE_ACCESS_KEY=
AZURE_STORAGE_ACCOUNT=
AZURE_STORAGE_CONN_STR=
AZURE_STORAGE_BLOB_CONTAINER_NAME=
