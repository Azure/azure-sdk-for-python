{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The subscription ID to which the application and resources belong."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant ID to which the application and resources belong."
      }
    },
    "testApplicationOid": {
      "type": "string",
      "metadata": {
        "description": "The client OID to grant access to test resources."
      }
    },
    "testApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The application client ID used to run tests."
      }
    },
    "testApplicationSecret": {
      "type": "string",
      "metadata": {
        "description": "The application client secret used to run tests."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resources. By default, this is the same as the resource group."
      }
    },
    "storageEndpointSuffix": {
      "type": "string",
      "defaultValue": "core.windows.net",
      "metadata": {
        "description": "The url suffix to use when creating storage connection strings."
      }
    },
    "perTestExecutionLimitMinutes": {
      "type": "string",
      "defaultValue": "10",
      "metadata": {
        "description": "The maximum duration, in minutes, that a single test is permitted to run before it is considered at-risk for being hung."
      }
    },
    "iotSkuName": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The SKU to use for the IoT Hub."
      }
    },
    "iotSkuUnits": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "The number of IoT Hub units."
      }
    },
    "iotEHd2cPartitions": {
      "type": "string",
      "defaultValue": "4",
      "metadata": {
        "description": "Partitions used for the event stream."
      }
    }
  },
  "variables": {
    "ehVersion": "2017-04-01",
    "contributorRoleId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "eventHubsDataOwnerRoleId": "f526a384-b230-433a-b45c-95f59c4a2dec",
    "eventHubsNamespace": "[concat('eh-', parameters('baseName'))]",
    "eventHubName": "[concat('eh-', parameters('baseName'), '-hub')]",
    "eventHubAuthRuleName": "[concat('eh-', parameters('baseName'), '-hub-auth-rule')]",
    "storageAccount": "[concat('blb', parameters('baseName'))]",
    "containerName": "your-blob-container-name",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "eventHubsAuthRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubsNamespace'), variables('defaultSASKeyName'))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount'))]",
    "iotHubName": "[concat('eh-', parameters('baseName'), '-iot-hub')]",
    "iotHubDeviceName": "[concat('eh-', parameters('baseName'), '-device-iot-hub')]"
  },
  "resources": [
    {
      "apiVersion": "[variables('ehVersion')]",
      "name": "[variables('eventHubsNamespace')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "resources": [
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "[variables('ehVersion')]",
            "name": "[concat(variables('eventHubsNamespace'), '/', variables('eventHubName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubsNamespace'))]"
            ],
            "properties": {
                "messageRetentionInDays": 7,
                "partitionCount": 1
            },
        "resources": [
            {
              "apiVersion": "[variables('ehVersion')]",
              "name": "[variables('eventHubAuthRuleName')]",
              "type": "authorizationRules",
              "dependsOn": [
                  "[variables('eventHubName')]"
              ],
              "properties": {
                  "Rights": ["Manage", "Send", "Listen"]
              }
            }
          ]
        }
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccount')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat('default/', variables('containerName'))]",
          "dependsOn": [
            "[variables('storageAccount')]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, deployment().name, parameters('baseName'), variables('eventHubsDataOwnerRoleId'), parameters('testApplicationOid'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('eventHubsDataOwnerRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2019-04-01-preview",
      "name": "[guid(resourceGroup().id, deployment().name, parameters('baseName'), variables('contributorRoleId'), parameters('testApplicationOid'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('contributorRoleId'))]",
        "principalId": "[parameters('testApplicationOid')]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "name": "[variables('iotHubName')]",
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2020-08-01",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "authorizationPolicies": [
          {
            "keyName": "string",
            "primaryKey": "string",
            "secondaryKey": "string",
            "rights": "string"
          }
        ],
        "publicNetworkAccess": "string",
        "ipFilterRules": [
          {
            "filterName": "string",
            "action": "string",
            "ipMask": "string"
          }
        ],
        "minTlsVersion": "string",
        "privateEndpointConnections": [
          {
            "properties": {
              "privateEndpoint": {},
              "privateLinkServiceConnectionState": {
                "status": "string",
                "description": "string",
                "actionsRequired": "string"
              }
            }
          }
        ],
        "eventHubEndpoints": {},
        "routing": {
          "endpoints": {
            "serviceBusQueues": [
              {
                "id": "string",
                "connectionString": "string",
                "endpointUri": "string",
                "entityPath": "string",
                "authenticationType": "string",
                "name": "string",
                "subscriptionId": "string",
                "resourceGroup": "string"
              }
            ],
            "serviceBusTopics": [
              {
                "id": "string",
                "connectionString": "string",
                "endpointUri": "string",
                "entityPath": "string",
                "authenticationType": "string",
                "name": "string",
                "subscriptionId": "string",
                "resourceGroup": "string"
              }
            ],
            "eventHubs": [
              {
                "id": "string",
                "connectionString": "string",
                "endpointUri": "string",
                "entityPath": "string",
                "authenticationType": "string",
                "name": "string",
                "subscriptionId": "string",
                "resourceGroup": "string"
              }
            ],
            "storageContainers": [
              {
                "id": "string",
                "connectionString": "string",
                "endpointUri": "string",
                "authenticationType": "string",
                "name": "string",
                "subscriptionId": "string",
                "resourceGroup": "string",
                "containerName": "string",
                "fileNameFormat": "string",
                "batchFrequencyInSeconds": "integer",
                "maxChunkSizeInBytes": "integer",
                "encoding": "string"
              }
            ]
          },
          "routes": [
            {
              "name": "string",
              "source": "string",
              "condition": "string",
              "endpointNames": [
                "string"
              ],
              "isEnabled": "boolean"
            }
          ],
          "fallbackRoute": {
            "name": "string",
            "source": "DeviceMessages",
            "condition": "string",
            "endpointNames": [
              "string"
            ],
            "isEnabled": "boolean"
          },
          "enrichments": [
            {
              "key": "string",
              "value": "string",
              "endpointNames": [
                "string"
              ]
            }
          ]
        },
        "storageEndpoints": {},
        "messagingEndpoints": {},
        "enableFileUploadNotifications": "boolean",
        "cloudToDevice": {
          "maxDeliveryCount": "integer",
          "defaultTtlAsIso8601": "string",
          "feedback": {
            "lockDurationAsIso8601": "string",
            "ttlAsIso8601": "string",
            "maxDeliveryCount": "integer"
          }
        },
        "comments": "string",
        "features": "string"
      },
      "sku": {
        "name": "S1",
        "capacity": 1
      },
      "resources": []
    }
  ],
  "outputs": {
    "EVENT_HUB_NAMESPACE": {
        "type": "string",
        "value": "[variables('eventHubsNamespace')]"
    },
    "EVENT_HUB_HOSTNAME": {
        "type": "string",
        "value": "[concat(variables('eventHubsNamespace'), '.servicebus.windows.net')]"
    },
    "EVENT_HUB_CONN_STR": {
        "type": "string",
        "value": "[listkeys(variables('eventHubAuthRuleName'), variables('ehVersion')).primaryConnectionString]"
    },
    "EVENT_HUB_NAME": {
        "type": "string",
        "value": "[variables('eventHubName')]"
    },
    "EVENT_HUB_SAS_POLICY":{
      "type": "string",
      "value": "[variables('eventHubAuthRuleName')]"
    },
    "EVENT_HUB_SAS_KEY":{
      "type": "string",
      "value": "[listkeys(variables('eventHubAuthRuleName'), variables('ehVersion')).primaryKey]"
    },
    "AZURE_STORAGE_CONN_STR": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccount'), ';AccountKey=', listKeys(variables('storageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=', parameters('storageEndpointSuffix'))]"
    },
    "AZURE_STORAGE_ACCOUNT": {
      "type": "string",
      "value": "[variables('storageAccount')]"
    },
    "AZURE_STORAGE_ACCESS_KEY":{
      "type": "string",
      "value": "[listKeys(variables('storageAccountId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
    }
  }
}
