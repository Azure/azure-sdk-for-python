# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Union, Any, List
from azure.core.credentials import AzureKeyCredential, TokenCredential
from azure.core.pipeline.policies import AzureKeyCredentialPolicy
from azure.core.tracing.decorator import distributed_trace
from .models import LatLon
from ._generated import TimezoneClient as _MapsTimezoneClient
from ._generated.models import (
    IanaId,
    TimezoneIanaVersionResult,
    TimezoneResult,
    TimezoneWindows
)
from ._version import VERSION


# To check the credential is either AzureKeyCredential or TokenCredential
def _authentication_policy(credential):
    authentication_policy = None
    if credential is None:
        raise ValueError("Parameter 'credential' must not be None.")
    if isinstance(credential, AzureKeyCredential):
        authentication_policy = AzureKeyCredentialPolicy(
            name="subscription-key", credential=credential
        )
    elif credential is not None and not hasattr(credential, "get_token"):
        raise TypeError(
            f"Unsupported credential type: {type(credential)}. "
            "Use an instance of AzureKeyCredential or a token credential from azure.identity"
        )
    return authentication_policy


class MapsTimezoneClient:  # pylint: disable=client-accepts-api-version-keyword
    """Azure Maps Time Zone REST APIs.

    :param credential: Credential needed for the client to connect to Azure. Required.
    :type credential: ~azure.core.credentials.AzureKeyCredential or ~azure.core.credentials.TokenCredential
    :keyword client_id: Specifies which account is intended for usage in conjunction with the Azure
     AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved
     from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see
     the following `articles <https://aka.ms/amauthdetails>` for guidance. Default value is None.
    :type client_id: str
    :keyword endpoint: Service URL. Default value is "https://atlas.microsoft.com".
    :type endpoint: str
    :keyword api_version: Api Version. Default value is "1.0". Note that overriding this default
     value may result in unsupported behavior.
    :paramtype api_version: str

    .. admonition:: Example:

        .. literalinclude:: ../samples/sample_authentication.py
            :start-after: [START create_maps_timezone_service_client_with_key]
            :end-before: [END create_maps_timezone_service_client_with_key]
            :language: python
            :dedent: 4
            :caption: Creating the MapsTimezoneClient with an subscription key.

        .. literalinclude:: ../samples/sample_authentication.py
            :start-after: [START create_maps_timezone_service_client_with_aad]
            :end-before: [END create_maps_timezone_service_client_with_aad]
            :language: python
            :dedent: 4
            :caption: Creating the MapsTimezoneClient with a token credential.
    """

    def __init__(
        self,
        credential: Union[AzureKeyCredential, TokenCredential],
        **kwargs: Any
    )-> None:

        self._maps_client = _MapsTimezoneClient(
            credential=credential,
            api_version=kwargs.pop("api_version", VERSION),
            authentication_policy=kwargs.pop(
                "authentication_policy", _authentication_policy(credential)),
            **kwargs
        )
        self._timezone_client = self._maps_client.timezone

    def close(self)-> None:
        self._maps_client.close()

    def __enter__(self):
        self._maps_client.__enter__()
        return self

    def __exit__(self, *args):
        return self._maps_client.__exit__(*args)

    @distributed_trace
    def get_timezone_by_id(
        self,
        timezone_id: str,
        ** kwargs: Any
    )-> TimezoneResult:
        """Returns current, historical, and future time zone information for the specified IANA
        time zone ID.

        :param timezone_id: The IANA time zone ID. Required. For example: "Europe/Berlin".
        :type timezone_id: str
        :keyword accept_language: Specifies the language code in which the timezone names should be
         returned. If no language code is provided, the response will be in "EN". Please refer to
         `Supported Languages <https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages>`
         for details. Default value is None.
        :type accept_language: str
        :keyword options: Alternatively, use alias "o". Options available for types of information
         returned in the result. Known values are: "none", "zoneInfo", "transitions", and "all". Default
         value is None.
        :type options: str or ~azure.maps.timezone.models.TimezoneOptions
        :keyword time_stamp: Alternatively, use alias "stamp", or "s". Reference time, if omitted, the
         API will use the machine time serving the request. Default value is None.
        :type time_stamp: ~datetime.datetime
        :keyword daylight_savings_time_from: Alternatively, use alias "tf". The start date from which
         daylight savings time (DST) transitions are requested, only applies when "options" = all or
         "options" = transitions. Default value is None.
        :type daylight_savings_time_from: ~datetime.datetime
        :keyword daylight_savings_time_lasting_years: Alternatively, use alias "ty". The number of years
         from "transitionsFrom" for which DST transitions are requested, only applies when "options" =
         all or "options" = transitions. Default value is None.
        :type daylight_savings_time_lasting_years: int
        :rtype: ~azure.maps.timezone.models.TimezoneResult
        :raises ~azure.core.exceptions.HttpResponseError:

        .. admonition:: Example:

            .. literalinclude:: ../samples/sample_get_timezone_by_id.py
                :start-after: [START get_timezone_by_id]
                :end-before: [END get_timezone_by_id]
                :language: python
                :dedent: 4
                :caption: Get time zone information for the specified IANA time zone ID.
        """

        return self._timezone_client.get_timezone_by_id(
            timezone_id=timezone_id,
            **kwargs
        )

    @distributed_trace
    def get_timezone_by_coordinates(
        self,
        coordinates: LatLon,
        **kwargs: Any
    )-> TimezoneResult:
        """Returns current, historical, and future time zone information for a specified
        latitude-longitude pair. In addition, the API provides sunset and sunrise times for a given
        location.

        :param coordinates: Coordinates of the point for which time zone information is requested. This
         parameter is a list of coordinates, containing a pair of coordinate(lat, long). When this
         endpoint is called directly, coordinates are passed in as a single string containing
         coordinates, separated by commas. Required.
        :type coordinates: LatLon
        :param accept_language: Specifies the language code in which the timezone names should be
         returned. If no language code is provided, the response will be in "EN". Please refer to
         `Supported Languages <https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages>`
         for details. Default value is None.
        :type accept_language: str
        :param options: Options available for types of information returned in the result.
         Known values are: "none", "zoneInfo", "transitions", and "all". Default value is None.
        :type options: str or ~azure.maps.timezone.models.TimezoneOptions
        :param time_stamp: Alternatively, use alias "stamp", or "s". Reference time, if omitted, the
         API will use the machine time serving the request. Default value is None.
        :type time_stamp: ~datetime.datetime
        :param daylight_savings_time_from: Alternatively, use alias "tf". The start date from which
         daylight savings time (DST) transitions are requested, only applies when "options" = all or
         "options" = transitions. Default value is None.
        :type daylight_savings_time_from: ~datetime.datetime
        :param daylight_savings_time_lasting_years: Alternatively, use alias "ty". The number of years
         from "transitionsFrom" for which DST transitions are requested, only applies when "options" =
         all or "options" = transitions. Default value is None.
        :type daylight_savings_time_lasting_years: int
        :rtype: ~azure.maps.timezone.models.TimezoneResult
        :raises ~azure.core.exceptions.HttpResponseError:

        .. admonition:: Example:

            .. literalinclude:: ../samples/sample_get_timezone_by_coordinates.py
                :start-after: [START get_timezone_by_coordinates]
                :end-before: [END get_timezone_by_coordinates]
                :language: python
                :dedent: 4
                :caption: Get time zone information for the specified coordinate.
        """
        return self._timezone_client.get_timezone_by_coordinates(
            coordinates=coordinates,
            **kwargs
        )

    @distributed_trace
    def get_windows_timezone_ids(
        self,
        **kwargs: Any
    )-> List[TimezoneWindows]:
        """Returns a full list of Windows Time Zone IDs.

        :rtype: list[~azure.maps.timezone.models.TimezoneWindows]
        :raises ~azure.core.exceptions.HttpResponseError:

        .. admonition:: Example:

            .. literalinclude:: ../samples/sample_get_windows_timezone_ids.py
                :start-after: [START get_windows_timezone_ids]
                :end-before: [END get_windows_timezone_ids]
                :language: python
                :dedent: 4
                :caption: Get the full list of Windows Time Zone IDs.
        """
        return self._timezone_client.get_windows_timezone_ids(**kwargs)

    @distributed_trace
    def get_iana_timezone_ids(
        self,
        **kwargs: Any
    )-> List[IanaId]:
        """This API returns a full list of IANA time zone IDs. Updates to the IANA service will be
        reflected in the system within one day.

        :rtype: list[~azure.maps.timezone.models.IanaId]
        :raises ~azure.core.exceptions.HttpResponseError:

        .. admonition:: Example:

            .. literalinclude:: ../samples/sample_get_iana_timezone_ids.py
                :start-after: [START get_iana_timezone_ids]
                :end-before: [END get_iana_timezone_ids]
                :language: python
                :dedent: 4
                :caption: Get the full list of IANA Time Zone IDs.
        """
        return self._timezone_client.get_iana_timezone_ids(**kwargs)

    @distributed_trace
    def get_iana_version(
        self,
        **kwargs: Any
    )-> TimezoneIanaVersionResult:
        """This API returns the current IANA version number as Metadata.

        :rtype: ~azure.maps.timezone.models.TimezoneIanaVersionResult
        :raises ~azure.core.exceptions.HttpResponseError:

        .. admonition:: Example:

            .. literalinclude:: ../samples/sample_get_iana_version.py
                :start-after: [START get_iana_version]
                :end-before: [END get_iana_version]
                :language: python
                :dedent: 4
                :caption: Get current IANA version number.
        """
        return self._timezone_client.get_iana_version(**kwargs)

    @distributed_trace
    def convert_windows_timezone_to_iana(
        self,
        windows_timezone_id: str,
        **kwargs: Any
    )-> List[IanaId]:
        """Returns a corresponding IANA ID, given a valid Windows Time Zone ID. Multiple IANA IDs
        may be returned for a single Windows ID. It is possible to narrow these results by adding an
        optional territory parameter.

        :param windows_timezone_id: The Windows time zone ID. Required. For example: "pacific standard time".
        :type windows_timezone_id: str
        :keyword windows_territory_code: Windows Time Zone territory code. Default value is None.
        :type windows_territory_code: str
        :rtype: list[~azure.maps.timezone.models.IanaId]
        :raises ~azure.core.exceptions.HttpResponseError:

        .. admonition:: Example:

            .. literalinclude:: ../samples/sample_convert_windows_timezone_to_iana.py
                :start-after: [START convert_windows_timezone_to_iana]
                :end-before: [END convert_windows_timezone_to_iana]
                :language: python
                :dedent: 4
                :caption: Returns a corresponding IANA ID, given a valid Windows Time Zone ID.
        """
        return self._timezone_client.convert_windows_timezone_to_iana(windows_timezone_id=windows_timezone_id, **kwargs)
