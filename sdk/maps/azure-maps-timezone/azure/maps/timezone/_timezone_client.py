# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Union, Any, List, TYPE_CHECKING
from azure.core.credentials import AzureKeyCredential
from azure.core.exceptions import HttpResponseError
from azure.core.tracing.decorator import distributed_trace
from ._generated import TimezoneClient as _MapsTimezoneClient
from ._version import VERSION

if TYPE_CHECKING:
    # pylint: disable=ungrouped-imports
    from azure.core.credentials import TokenCredential
    from ._generated.models import (
        IanaId,
        TimezoneIanaVersionResult,
        TimezoneResult,
        TimezoneWindows
    )


class MapsTimezoneClient:  # pylint: disable=client-accepts-api-version-keyword
    """Azure Maps Time Zone REST APIs.

    :param credential: Credential needed for the client to connect to Azure. Required.
    :type credential: ~azure.core.credentials.AzureKeyCredential or ~azure.core.credentials.TokenCredential
    :keyword client_id: Specifies which account is intended for usage in conjunction with the Azure
     AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved
     from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see
     the following `articles <https://aka.ms/amauthdetails>`_ for guidance. Default value is None.
    :type client_id: str
    :keyword base_url: Service URL. Default value is "https://atlas.microsoft.com".
    :type base_url: str
    :keyword api_version: Api Version. Default value is "1.0". Note that overriding this default
     value may result in unsupported behavior.
    :paramtype api_version: str
    """

    def __init__(
        self,
        credential,  # type: Union[AzureKeyCredential, TokenCredential]
        **kwargs  # type Any
    ):
        # type: (...) -> None

        self._maps_client = _MapsTimezoneClient(
            credential=credential,  # type: ignore
            api_version=kwargs.pop("api_version", VERSION),
            authentication_policy=kwargs.pop(
                "authentication_policy", _authentication_policy(credential)),
            **kwargs
        )
        self._timezone_client = self._maps_client.timezone

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> MapsTimezoneClient
        self._client.__enter__()
        return self

    def __exit__(self, *args):
        # type: (Any) -> None
        self._client.__exit__(*args)

    @distributed_trace
    def get_timezone_by_id(
        self,
        timezone_id,  # type: str
        ** kwargs  # type: Any
    ):
        # type: (...) -> "TimezoneResult"
        """Returns current, historical, and future time zone information for the specified IANA
        time zone ID.

        :param timezone_id: The IANA time zone ID. Required. For example: "Europe/Berlin".
        :type timezone_id: str
        :keyword accept_language: Specifies the language code in which the timezone names should be
         returned. If no language code is provided, the response will be in "EN". Please refer to
         `Supported Languages <https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages>`_
         for details. Default value is None.
        :type accept_language: str
        :keyword options: Alternatively, use alias "o". Options available for types of information
         returned in the result. Known values are: "none", "zoneInfo", "transitions", and "all". Default
         value is None.
        :type options: str or ~azure.maps.timezone.models.TimezoneOptions
        :keyword time_stamp: Alternatively, use alias "stamp", or "s". Reference time, if omitted, the
         API will use the machine time serving the request. Default value is None.
        :type time_stamp: ~datetime.datetime
        :keyword daylight_savings_time_from: Alternatively, use alias "tf". The start date from which
         daylight savings time (DST) transitions are requested, only applies when "options" = all or
         "options" = transitions. Default value is None.
        :type daylight_savings_time_from: ~datetime.datetime
        :keyword daylight_savings_time_lasting_years: Alternatively, use alias "ty". The number of years
         from "transitionsFrom" for which DST transitions are requested, only applies when "options" =
         all or "options" = transitions. Default value is None.
        :type daylight_savings_time_lasting_years: int
        :keyword format: Desired format of the response. Only ``json`` format is supported. "json"
         Default value is "json".
        :type format: str or ~azure.maps.timezone.models.JsonFormat
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: TimezoneResult or the result of cls(response)
        :rtype: ~azure.maps.timezone.models.TimezoneResult
        :raises ~azure.core.exceptions.HttpResponseError:
        """

        return self._timezone_client.get_timezone_by_id(
            timezone_id=timezone_id,
            **kwargs
        )

    @distributed_trace
    def get_timezone_by_coordinates(
        self,
        coordinates,  # type: List[float]
        **kwargs: Any
    ):
        # type: (...) -> "TimezoneResult"
        """Returns current, historical, and future time zone information for a specified
        latitude-longitude pair. In addition, the API provides sunset and sunrise times for a given
        location.

        :param coordinates: Coordinates of the point for which time zone information is requested. This
         parameter is a list of coordinates, containing a pair of coordinate(lat, long). When this
         endpoint is called directly, coordinates are passed in as a single string containing
         coordinates, separated by commas. Required.
        :type coordinates: list[float]
        :param accept_language: Specifies the language code in which the timezone names should be
         returned. If no language code is provided, the response will be in "EN". Please refer to
         `Supported Languages <https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages>`_
         for details. Default value is None.
        :type accept_language: str
        :param options: Alternatively, use alias "o". Options available for types of information
         returned in the result. Known values are: "none", "zoneInfo", "transitions", and "all". Default
         value is None.
        :type options: str or ~azure.maps.timezone.models.TimezoneOptions
        :param time_stamp: Alternatively, use alias "stamp", or "s". Reference time, if omitted, the
         API will use the machine time serving the request. Default value is None.
        :type time_stamp: ~datetime.datetime
        :param daylight_savings_time_from: Alternatively, use alias "tf". The start date from which
         daylight savings time (DST) transitions are requested, only applies when "options" = all or
         "options" = transitions. Default value is None.
        :type daylight_savings_time_from: ~datetime.datetime
        :param daylight_savings_time_lasting_years: Alternatively, use alias "ty". The number of years
         from "transitionsFrom" for which DST transitions are requested, only applies when "options" =
         all or "options" = transitions. Default value is None.
        :type daylight_savings_time_lasting_years: int
        :param format: Desired format of the response. Only ``json`` format is supported. "json"
         Default value is "json".
        :type format: str or ~azure.maps.timezone.models.JsonFormat
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: TimezoneResult or the result of cls(response)
        :rtype: ~azure.maps.timezone.models.TimezoneResult
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        # TODO: convert float to LatLon
        return self._timezone_client.get_timezone_by_coordinates(
            coordinates=coordinates,
            **kwargs
        )

    @distributed_trace
    def get_windows_timezone_ids(
        self,
        **kwargs  # type: Any
    ):
        # type: (...) -> List["TimezoneWindows"]
        """Returns a full list of Windows Time Zone IDs.

        :keyword format: Desired format of the response. Only ``json`` format is supported. "json"
         Default value is "json".
        :type format: str or ~azure.maps.timezone.models.JsonFormat
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: list of TimezoneWindows or the result of cls(response)
        :rtype: list[~azure.maps.timezone.models.TimezoneWindows]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        return self._timezone_client.get_windows_timezone_ids(**kwargs)

    @distributed_trace
    def get_iana_timezone_ids(
        self,
        **kwargs  # type: Any
    ):
        # type: (...) -> List["IanaId"]
        """This API returns a full list of IANA time zone IDs. Updates to the IANA service will be
        reflected in the system within one day.

        :keyword format: Desired format of the response. Only ``json`` format is supported.
        Default value is "json".
        :type format: str or ~azure.maps.timezone.models.JsonFormat
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: list of IanaId or the result of cls(response)
        :rtype: list[~azure.maps.timezone.models.IanaId]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        return self._timezone_client.get_windows_timezone_ids(**kwargs)

    @distributed_trace
    def get_iana_version(
        self,
        **kwargs  # type: Any
    ):
        # type: (...) -> "TimezoneIanaVersionResult"
        """This API returns the current IANA version number as Metadata.

        :keyword format: Desired format of the response. Only ``json`` format is supported.
        Default value is "json".
        :type format: str or ~azure.maps.timezone.models.JsonFormat
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: TimezoneIanaVersionResult or the result of cls(response)
        :rtype: ~azure.maps.timezone.models.TimezoneIanaVersionResult
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        return self._timezone_client.get_iana_version(**kwargs)

    @distributed_trace
    def convert_windows_timezone_to_iana(
        self,
        windows_timezone_id,  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> List["IanaId"]
        """Returns a corresponding IANA ID, given a valid Windows Time Zone ID. Multiple IANA IDs
        may be returned for a single Windows ID. It is possible to narrow these results by adding an
        optional territory parameter.

        :param windows_timezone_id: The Windows time zone ID. Required. For example: "pacific standard time".
        :type windows_timezone_id: str
        :keyword format: Desired format of the response. Only ``json`` format is supported.
        Default value is "json".
        :type format: str or ~azure.maps.timezone.models.JsonFormat
        :keyword windows_territory_code: Windows Time Zone territory code. Default value is None.
        :type windows_territory_code: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: list of IanaId or the result of cls(response)
        :rtype: list[~azure.maps.timezone.models.IanaId]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        return self._timezone_client.convert_windows_timezone_to_iana(windows_timezone_id, **kwargs)
