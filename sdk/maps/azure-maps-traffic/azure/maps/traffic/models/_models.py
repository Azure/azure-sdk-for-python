# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class ErrorAdditionalInfo(msrest.serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: object
    """

    _validation = {
        'type': {'readonly': True},
        'info': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'info': {'key': 'info', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorAdditionalInfo, self).__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.maps.traffic.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.maps.traffic.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetail]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorDetail, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :param error: The error object.
    :type error: ~azure.maps.traffic.models.ErrorDetail
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = kwargs.get('error', None)


class LatLongPair(msrest.serialization.Model):
    """A location represented as a latitude and longitude.

    :param latitude: Latitude property.
    :type latitude: float
    :param longitude: Longitude property.
    :type longitude: float
    """

    _attribute_map = {
        'latitude': {'key': 'latitude', 'type': 'float'},
        'longitude': {'key': 'longitude', 'type': 'float'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(LatLongPair, self).__init__(**kwargs)
        self.latitude = kwargs.get('latitude', None)
        self.longitude = kwargs.get('longitude', None)


class Point(msrest.serialization.Model):
    """Generic representation of a point with coordinates (x, y) in the Cartesian plane.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar x: x coordinate.
    :vartype x: float
    :ivar y: y coordinate.
    :vartype y: float
    """

    _validation = {
        'x': {'readonly': True},
        'y': {'readonly': True},
    }

    _attribute_map = {
        'x': {'key': 'x', 'type': 'float'},
        'y': {'key': 'y', 'type': 'float'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Point, self).__init__(**kwargs)
        self.x = None
        self.y = None


class TileIndex(msrest.serialization.Model):
    """Parameter group.

    All required parameters must be populated in order to send to Azure.

    :param x: Required. X coordinate of the tile on zoom grid. Value must be in the range [0,
     2:code:`<sup>`zoom`</sup>` -1].
    
     Please see `Zoom Levels and Tile Grid <https://docs.microsoft.com/azure/location-based-
     services/zoom-levels-and-tile-grid>`_ for details.
    :type x: int
    :param y: Required. Y coordinate of the tile on zoom grid. Value must be in the range [0,
     2:code:`<sup>`zoom`</sup>` -1].
    
     Please see `Zoom Levels and Tile Grid <https://docs.microsoft.com/azure/location-based-
     services/zoom-levels-and-tile-grid>`_ for details.
    :type y: int
    """

    _validation = {
        'x': {'required': True},
        'y': {'required': True},
    }

    _attribute_map = {
        'x': {'key': 'x', 'type': 'int'},
        'y': {'key': 'y', 'type': 'int'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TileIndex, self).__init__(**kwargs)
        self.x = kwargs['x']
        self.y = kwargs['y']


class TrafficFlowSegmentData(msrest.serialization.Model):
    """This object is returned from a successful Traffic Flow Segment call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar flow_segment_data: Flow Segment Data property.
    :vartype flow_segment_data: ~azure.maps.traffic.models.TrafficFlowSegmentDataFlowSegmentData
    """

    _validation = {
        'flow_segment_data': {'readonly': True},
    }

    _attribute_map = {
        'flow_segment_data': {'key': 'flowSegmentData', 'type': 'TrafficFlowSegmentDataFlowSegmentData'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficFlowSegmentData, self).__init__(**kwargs)
        self.flow_segment_data = None


class TrafficFlowSegmentDataFlowSegmentData(msrest.serialization.Model):
    """Flow Segment Data property.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar functional_road_class: Functional Road Class. This indicates the road type:
       0: Motorway, freeway or other major road.
       1: Major road, less important than a motorway.
       2: Other major road.
       3: Secondary road.
       4: Local connecting road.
       5: Local road of high importance.
       6: Local road.
    :vartype functional_road_class: str
    :ivar current_speed: The current average speed at the selected point, in the units requested.
     This is calculated from the currentTravelTime and the length of the selected segment.
    :vartype current_speed: int
    :ivar free_flow_speed: The free flow speed expected under ideal conditions, expressed in the
     units requested. This is related to the freeFlowTravelTime.
    :vartype free_flow_speed: int
    :ivar current_travel_time: Current travel time in seconds, across this traffic segment, based
     on fused real-time measurements between the defined locations in the specified direction.
    :vartype current_travel_time: int
    :ivar free_flow_travel_time: The travel time in seconds, across this traffic segment, which
     would be expected under ideal free flow conditions.
    :vartype free_flow_travel_time: int
    :ivar confidence: The confidence is a measure of the quality of the provided travel time and
     speed. A value of 1 means full confidence, that the response contains the highest quality data.
     Lower values indicate the degree that the response may vary from the actual conditions on the
     road. Any value greater than 0.6 means the information was based on real-time probe input. A
     value of 0.5 means the reported speed is based on historical info.   A value between 0.5 and
     0.6 has a calculated weighted average between historical and live speeds.
    :vartype confidence: float
    :param coordinates: Includes the coordinates describing the shape of the segment. Coordinates
     are shifted from the road depending on the zoom level to support high quality visualization in
     every scale.
    :type coordinates: ~azure.maps.traffic.models.TrafficFlowSegmentDataFlowSegmentDataCoordinates
    :ivar version: This indicates the software version that generated the response.
    :vartype version: str
    :ivar open_lr_code: OpenLR code for segment. See `OpenLR
     <https://en.wikipedia.org/wiki/OpenLR>`_ for more information on the use of Open LR codes.
    :vartype open_lr_code: str
    """

    _validation = {
        'functional_road_class': {'readonly': True},
        'current_speed': {'readonly': True},
        'free_flow_speed': {'readonly': True},
        'current_travel_time': {'readonly': True},
        'free_flow_travel_time': {'readonly': True},
        'confidence': {'readonly': True},
        'version': {'readonly': True},
        'open_lr_code': {'readonly': True},
    }

    _attribute_map = {
        'functional_road_class': {'key': 'frc', 'type': 'str'},
        'current_speed': {'key': 'currentSpeed', 'type': 'int'},
        'free_flow_speed': {'key': 'freeFlowSpeed', 'type': 'int'},
        'current_travel_time': {'key': 'currentTravelTime', 'type': 'int'},
        'free_flow_travel_time': {'key': 'freeFlowTravelTime', 'type': 'int'},
        'confidence': {'key': 'confidence', 'type': 'float'},
        'coordinates': {'key': 'coordinates', 'type': 'TrafficFlowSegmentDataFlowSegmentDataCoordinates'},
        'version': {'key': '@version', 'type': 'str'},
        'open_lr_code': {'key': 'openlr', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficFlowSegmentDataFlowSegmentData, self).__init__(**kwargs)
        self.functional_road_class = None
        self.current_speed = None
        self.free_flow_speed = None
        self.current_travel_time = None
        self.free_flow_travel_time = None
        self.confidence = None
        self.coordinates = kwargs.get('coordinates', None)
        self.version = None
        self.open_lr_code = None


class TrafficFlowSegmentDataFlowSegmentDataCoordinates(msrest.serialization.Model):
    """Includes the coordinates describing the shape of the segment. Coordinates are shifted from the road depending on the zoom level to support high quality visualization in every scale.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar coordinates: Coordinate array.
    :vartype coordinates: list[~azure.maps.traffic.models.LatLongPair]
    """

    _validation = {
        'coordinates': {'readonly': True},
    }

    _attribute_map = {
        'coordinates': {'key': 'coordinate', 'type': '[LatLongPair]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficFlowSegmentDataFlowSegmentDataCoordinates, self).__init__(**kwargs)
        self.coordinates = None


class TrafficIncidentDetail(msrest.serialization.Model):
    """This object is returned from a successful Traffic incident Detail call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar tm: Main response element.
    :vartype tm: ~azure.maps.traffic.models.TrafficIncidentDetailTm
    """

    _validation = {
        'tm': {'readonly': True},
    }

    _attribute_map = {
        'tm': {'key': 'tm', 'type': 'TrafficIncidentDetailTm'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficIncidentDetail, self).__init__(**kwargs)
        self.tm = None


class TrafficIncidentDetailTm(msrest.serialization.Model):
    """Main response element.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: ID of the traffic model for this incident.
    :vartype id: str
    :ivar points_of_interest: A single traffic incident, or a cluster of traffic incidents.
    :vartype points_of_interest: list[~azure.maps.traffic.models.TrafficIncidentPointOfInterest]
    """

    _validation = {
        'id': {'readonly': True},
        'points_of_interest': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': '@id', 'type': 'str'},
        'points_of_interest': {'key': 'poi', 'type': '[TrafficIncidentPointOfInterest]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficIncidentDetailTm, self).__init__(**kwargs)
        self.id = None
        self.points_of_interest = None


class TrafficIncidentPointOfInterest(msrest.serialization.Model):
    """TrafficIncidentPointOfInterest.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: ID of the traffic incident.
    :vartype id: str
    :ivar point: The point where an icon of the cluster or raw incident should be drawn, expressed
     in the requested projection. This is affected by traffic style, zoom level and road type.
    :vartype point: ~azure.maps.traffic.models.Point
    :ivar icon_category: The icon category associated with this incident. Values are numbers in the
     range 0-13, with the following meanings -- 0: Unknown, 1: Accident, 2: Fog, 3: Dangerous
     Conditions, 4: Rain, 5: Ice, 6: Jam, 7: Lane Closed, 8: Road Closed, 9: Road Works, 10: Wind,
     11: Flooding, 12: Detour, 13: Cluster. Possible values include: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
     10, 11, 12, 13, 14.
    :vartype icon_category: str or ~azure.maps.traffic.models.IconCategory
    :ivar magnitude_of_delay: The magnitude of delay associated with incident. These values
     correspond to incident colors in the traffic tiles. Possible values include: 0, 1, 2, 3, 4.
    :vartype magnitude_of_delay: str or ~azure.maps.traffic.models.DelayMagnitude
    :ivar bottom_left_coordinate: Bottom left coordinate of the cluster in the projection of the
     request.
    :vartype bottom_left_coordinate: ~azure.maps.traffic.models.Point
    :ivar top_left_coordinate: Top right coordinate of the cluster in the projection of the
     request.
    :vartype top_left_coordinate: ~azure.maps.traffic.models.Point
    :ivar cluster_size: Cluster size: the number of incidents in the cluster.
    :vartype cluster_size: int
    :ivar length_in_meters: Length of the incident in meters.
    :vartype length_in_meters: int
    :ivar road_numbers: The road number(s) affected by the incident. Multiple road numbers will
     delimited by slashes.
    :vartype road_numbers: str
    :ivar start_date: Start date of the incident, if available. The date is described in the
     ISO8601 format.
    :vartype start_date: ~datetime.datetime
    :ivar end_date: Estimated end date of the incident, if available. The date is described in the
     ISO8601 format.
    :vartype end_date: ~datetime.datetime
    :ivar delay_in_seconds: Delay caused by the incident in seconds (except in road closures).
    :vartype delay_in_seconds: int
    :ivar traffic_end_location: To: the name of the intersection or location where the traffic due
     to the incident ends.
    :vartype traffic_end_location: str
    :ivar traffic_start_location: From: the name of the intersection or location where the traffic
     due to the incident starts.
    :vartype traffic_start_location: str
    :ivar description: Description of the incident in the language requested.
    :vartype description: str
    :ivar cause: Cause of the incident, where available, in the language requested.
    :vartype cause: str
    """

    _validation = {
        'id': {'readonly': True},
        'point': {'readonly': True},
        'icon_category': {'readonly': True},
        'magnitude_of_delay': {'readonly': True},
        'bottom_left_coordinate': {'readonly': True},
        'top_left_coordinate': {'readonly': True},
        'cluster_size': {'readonly': True},
        'length_in_meters': {'readonly': True},
        'road_numbers': {'readonly': True},
        'start_date': {'readonly': True},
        'end_date': {'readonly': True},
        'delay_in_seconds': {'readonly': True},
        'traffic_end_location': {'readonly': True},
        'traffic_start_location': {'readonly': True},
        'description': {'readonly': True},
        'cause': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'point': {'key': 'p', 'type': 'Point'},
        'icon_category': {'key': 'ic', 'type': 'int'},
        'magnitude_of_delay': {'key': 'ty', 'type': 'int'},
        'bottom_left_coordinate': {'key': 'cbl', 'type': 'Point'},
        'top_left_coordinate': {'key': 'ctr', 'type': 'Point'},
        'cluster_size': {'key': 'cs', 'type': 'int'},
        'length_in_meters': {'key': 'l', 'type': 'int'},
        'road_numbers': {'key': 'r', 'type': 'str'},
        'start_date': {'key': 'sd', 'type': 'iso-8601'},
        'end_date': {'key': 'ed', 'type': 'iso-8601'},
        'delay_in_seconds': {'key': 'dl', 'type': 'int'},
        'traffic_end_location': {'key': 't', 'type': 'str'},
        'traffic_start_location': {'key': 'f', 'type': 'str'},
        'description': {'key': 'd', 'type': 'str'},
        'cause': {'key': 'c', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficIncidentPointOfInterest, self).__init__(**kwargs)
        self.id = None
        self.point = None
        self.icon_category = None
        self.magnitude_of_delay = None
        self.bottom_left_coordinate = None
        self.top_left_coordinate = None
        self.cluster_size = None
        self.length_in_meters = None
        self.road_numbers = None
        self.start_date = None
        self.end_date = None
        self.delay_in_seconds = None
        self.traffic_end_location = None
        self.traffic_start_location = None
        self.description = None
        self.cause = None


class TrafficIncidentViewport(msrest.serialization.Model):
    """This object is returned from a successful Traffic Incident Viewport call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar viewp_resp: Viewport Response object.
    :vartype viewp_resp: ~azure.maps.traffic.models.TrafficIncidentViewportViewpResp
    """

    _validation = {
        'viewp_resp': {'readonly': True},
    }

    _attribute_map = {
        'viewp_resp': {'key': 'viewpResp', 'type': 'TrafficIncidentViewportViewpResp'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficIncidentViewport, self).__init__(**kwargs)
        self.viewp_resp = None


class TrafficIncidentViewportViewpResp(msrest.serialization.Model):
    """Viewport Response object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar traffic_state: Traffic State information.
    :vartype traffic_state: ~azure.maps.traffic.models.TrafficState
    :ivar copyright_information: When the copyright parameter value is true, this contains the full
     text of the copyright information that must be displayed with the tiles in the viewport.
    :vartype copyright_information: str
    :ivar version: Indicates the software version used to generate the information. For use with
     support queries.
    :vartype version: str
    :ivar maps: Indicates the data provider's internal names for the map data used in the viewport.
     For use with support queries.
    :vartype maps: str
    """

    _validation = {
        'traffic_state': {'readonly': True},
        'copyright_information': {'readonly': True},
        'version': {'readonly': True},
        'maps': {'readonly': True},
    }

    _attribute_map = {
        'traffic_state': {'key': 'trafficState', 'type': 'TrafficState'},
        'copyright_information': {'key': 'copyrightIds', 'type': 'str'},
        'version': {'key': '@version', 'type': 'str'},
        'maps': {'key': '@maps', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficIncidentViewportViewpResp, self).__init__(**kwargs)
        self.traffic_state = None
        self.copyright_information = None
        self.version = None
        self.maps = None


class TrafficState(msrest.serialization.Model):
    """Traffic State information.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar traffic_age: The elapsed time (in seconds) from the Traffic Model ID creation.
    :vartype traffic_age: int
    :ivar traffic_model_id: The unique ID called Traffic Model ID is used in calls to Traffic
     Incident services. It allows to obtain information from particular traffic updates. Traffic
     Model ID is updated every minute, and is valid for two minutes before it times out.
    :vartype traffic_model_id: str
    """

    _validation = {
        'traffic_age': {'readonly': True},
        'traffic_model_id': {'readonly': True},
    }

    _attribute_map = {
        'traffic_age': {'key': '@trafficAge', 'type': 'int'},
        'traffic_model_id': {'key': '@trafficModelId', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(TrafficState, self).__init__(**kwargs)
        self.traffic_age = None
        self.traffic_model_id = None
