# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer

from ._configuration import MapsManagementClientConfiguration
from .operations import AccountsOperations
from .operations import MapsOperationsOperations
from .operations import PrivateAtlasesOperations
from .operations import CreatorsOperations
from . import models


class MapsManagementClient(SDKClient):
    """Resource Provider

    :ivar config: Configuration for client.
    :vartype config: MapsManagementClientConfiguration

    :ivar accounts: Accounts operations
    :vartype accounts: azure.mgmt.maps.operations.AccountsOperations
    :ivar maps: Maps operations
    :vartype maps: azure.mgmt.maps.operations.MapsOperationsOperations
    :ivar private_atlases: PrivateAtlases operations
    :vartype private_atlases: azure.mgmt.maps.operations.PrivateAtlasesOperations
    :ivar creators: Creators operations
    :vartype creators: azure.mgmt.maps.operations.CreatorsOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The ID of the target subscription.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = MapsManagementClientConfiguration(credentials, subscription_id, base_url)
        super(MapsManagementClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2020-02-01-preview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.accounts = AccountsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.maps = MapsOperationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.private_atlases = PrivateAtlasesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.creators = CreatorsOperations(
            self._client, self.config, self._serialize, self._deserialize)
