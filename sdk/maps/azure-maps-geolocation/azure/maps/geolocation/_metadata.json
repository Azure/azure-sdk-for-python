{
    "chosen_version": "1.0",
    "total_api_version_list": ["1.0"],
    "client": {
        "name": "GeolocationClient",
        "filename": "_geolocation_client",
        "description": "Azure Maps Geolocation REST APIs.",
        "base_url": "\u0027https://atlas.microsoft.com\u0027",
        "custom_base_url": null,
        "azure_arm": false,
        "has_lro_operations": false,
        "client_side_validation": false
    },
    "global_parameters": {
        "sync": {
            "credential": {
                "signature": "credential,  # type: \"TokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials.TokenCredential",
                "required": true
            },
            "client_id": {
                "signature": "client_id=None,  # type: Optional[str]",
                "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following `articles \u003chttps://aka.ms/amauthdetails\u003e`_ for guidance.",
                "docstring_type": "str",
                "required": false
            }
        },
        "async": {
            "credential": {
                "signature": "credential,  # type: \"AsyncTokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials_async.AsyncTokenCredential",
                "required": true
            },
            "client_id": {
                "signature": "client_id=None,  # type: Optional[str]",
                "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from the Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following `articles \u003chttps://aka.ms/amauthdetails\u003e`_ for guidance.",
                "docstring_type": "str",
                "required": false
            }
        },
        "constant": {
        },
        "call": "credential, client_id"
    },
    "config": {
        "credential": true,
        "credential_scopes": ["https://atlas.microsoft.com/.default"],
        "credential_default_policy_type": "BearerTokenCredentialPolicy",
        "credential_default_policy_type_has_async_version": true,
        "credential_key_header_name": null
    },
    "operation_groups": {
    },
    "operation_mixins": {
        "get_location" : {
            "sync": {
                "signature": "def get_location(\n    self,\n    ip_address,  # type: str\n    format=\"json\",  # type: Union[str, \"models.JsonFormat\"]\n    **kwargs  # type: Any\n):\n",
                "doc": "\"\"\"**Applies to**\\ : S0 and S1 pricing tiers.\n\nThis service will return the ISO country code for the provided IP address. Developers can use\nthis information  to block or alter certain content based on geographical locations where the\napplication is being viewed from.\n\n:param ip_address: The IP address. Both IPv4 and IPv6 are allowed.\n:type ip_address: str\n:param format: Desired format of the response. Only ``json`` format is supported.\n:type format: str or ~azure.maps.geolocation.models.JsonFormat\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: IpAddressToLocationResult, or the result of cls(response)\n:rtype: ~azure.maps.geolocation.models.IpAddressToLocationResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
            },
            "async": {
                "coroutine": true,
                "signature": "async def get_location(\n    self,\n    ip_address: str,\n    format: Union[str, \"models.JsonFormat\"] = \"json\",\n    **kwargs\n) -\u003e \"models.IpAddressToLocationResult\":\n",
                "doc": "\"\"\"**Applies to**\\ : S0 and S1 pricing tiers.\n\nThis service will return the ISO country code for the provided IP address. Developers can use\nthis information  to block or alter certain content based on geographical locations where the\napplication is being viewed from.\n\n:param ip_address: The IP address. Both IPv4 and IPv6 are allowed.\n:type ip_address: str\n:param format: Desired format of the response. Only ``json`` format is supported.\n:type format: str or ~azure.maps.geolocation.models.JsonFormat\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: IpAddressToLocationResult, or the result of cls(response)\n:rtype: ~azure.maps.geolocation.models.IpAddressToLocationResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
            },
            "call": "ip_address, format"
        }
    },
    "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\", \"Union\"]}}}",
    "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\", \"Union\"]}}}"
}