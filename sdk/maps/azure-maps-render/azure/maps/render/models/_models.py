# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class ErrorAdditionalInfo(msrest.serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    _validation = {
        'type': {'readonly': True},
        'info': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'info': {'key': 'info', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorAdditionalInfo, self).__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.maps.render.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.maps.render.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetail]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorDetail, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :param error: The error object.
    :type error: ~azure.maps.render.models.ErrorDetail
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = kwargs.get('error', None)


class GetCopyrightCaptionResult(msrest.serialization.Model):
    """This object is returned from a successful Get Copyright Caption call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar format_version: Format Version property.
    :vartype format_version: str
    :ivar copyrights_caption: Copyrights Caption property.
    :vartype copyrights_caption: str
    """

    _validation = {
        'format_version': {'readonly': True},
        'copyrights_caption': {'readonly': True},
    }

    _attribute_map = {
        'format_version': {'key': 'formatVersion', 'type': 'str'},
        'copyrights_caption': {'key': 'copyrightsCaption', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(GetCopyrightCaptionResult, self).__init__(**kwargs)
        self.format_version = None
        self.copyrights_caption = None


class GetCopyrightForTileResult(msrest.serialization.Model):
    """This object is returned from a successful Get Copyright For Tile call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar format_version: Format Version property.
    :vartype format_version: str
    :ivar general_copyrights: General Copyrights array.
    :vartype general_copyrights: list[str]
    :ivar regions: Regions array.
    :vartype regions: list[~azure.maps.render.models.RegionCopyrights]
    """

    _validation = {
        'format_version': {'readonly': True},
        'general_copyrights': {'readonly': True},
        'regions': {'readonly': True},
    }

    _attribute_map = {
        'format_version': {'key': 'formatVersion', 'type': 'str'},
        'general_copyrights': {'key': 'generalCopyrights', 'type': '[str]'},
        'regions': {'key': 'regions', 'type': '[RegionCopyrights]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(GetCopyrightForTileResult, self).__init__(**kwargs)
        self.format_version = None
        self.general_copyrights = None
        self.regions = None


class GetCopyrightForWorldResult(msrest.serialization.Model):
    """This object is returned from a successful Get Copyright For World call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar format_version: Format Version property.
    :vartype format_version: str
    :ivar general_copyrights: General Copyrights array.
    :vartype general_copyrights: list[str]
    :ivar regions: Regions array.
    :vartype regions: list[~azure.maps.render.models.RegionCopyrights]
    """

    _validation = {
        'format_version': {'readonly': True},
        'general_copyrights': {'readonly': True},
        'regions': {'readonly': True},
    }

    _attribute_map = {
        'format_version': {'key': 'formatVersion', 'type': 'str'},
        'general_copyrights': {'key': 'generalCopyrights', 'type': '[str]'},
        'regions': {'key': 'regions', 'type': '[RegionCopyrights]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(GetCopyrightForWorldResult, self).__init__(**kwargs)
        self.format_version = None
        self.general_copyrights = None
        self.regions = None


class GetCopyrightFromBoundingBoxResult(msrest.serialization.Model):
    """This object is returned from a successful Get Copyright From Bounding Box call.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar format_version: Format Version property.
    :vartype format_version: str
    :ivar general_copyrights: General Copyrights array.
    :vartype general_copyrights: list[str]
    :ivar regions: Regions array.
    :vartype regions: list[~azure.maps.render.models.RegionCopyrights]
    """

    _validation = {
        'format_version': {'readonly': True},
        'general_copyrights': {'readonly': True},
        'regions': {'readonly': True},
    }

    _attribute_map = {
        'format_version': {'key': 'formatVersion', 'type': 'str'},
        'general_copyrights': {'key': 'generalCopyrights', 'type': '[str]'},
        'regions': {'key': 'regions', 'type': '[RegionCopyrights]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(GetCopyrightFromBoundingBoxResult, self).__init__(**kwargs)
        self.format_version = None
        self.general_copyrights = None
        self.regions = None


class RegionCopyrights(msrest.serialization.Model):
    """RegionCopyrights.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar copyrights: Copyrights array.
    :vartype copyrights: list[str]
    :ivar country: Country property.
    :vartype country: ~azure.maps.render.models.RegionCopyrightsCountry
    """

    _validation = {
        'copyrights': {'readonly': True},
        'country': {'readonly': True},
    }

    _attribute_map = {
        'copyrights': {'key': 'copyrights', 'type': '[str]'},
        'country': {'key': 'country', 'type': 'RegionCopyrightsCountry'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(RegionCopyrights, self).__init__(**kwargs)
        self.copyrights = None
        self.country = None


class RegionCopyrightsCountry(msrest.serialization.Model):
    """Country property.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar iso3: ISO3 property.
    :vartype iso3: str
    :ivar label: Label property.
    :vartype label: str
    """

    _validation = {
        'iso3': {'readonly': True},
        'label': {'readonly': True},
    }

    _attribute_map = {
        'iso3': {'key': 'ISO3', 'type': 'str'},
        'label': {'key': 'label', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(RegionCopyrightsCountry, self).__init__(**kwargs)
        self.iso3 = None
        self.label = None
