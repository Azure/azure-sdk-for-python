# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import Appliance
from ._models_py3 import ApplianceCredentialKubeconfig
from ._models_py3 import ApplianceGetTelemetryConfigResult
from ._models_py3 import ApplianceListCredentialResults
from ._models_py3 import ApplianceListKeysResults
from ._models_py3 import ApplianceListResult
from ._models_py3 import ApplianceOperation
from ._models_py3 import ApplianceOperationsList
from ._models_py3 import AppliancePropertiesInfrastructureConfig
from ._models_py3 import ArtifactProfile
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import ErrorDetail
from ._models_py3 import ErrorResponse
from ._models_py3 import HybridConnectionConfig
from ._models_py3 import Identity
from ._models_py3 import PatchableAppliance
from ._models_py3 import Resource
from ._models_py3 import SSHKey
from ._models_py3 import SupportedVersion
from ._models_py3 import SupportedVersionCatalogVersion
from ._models_py3 import SupportedVersionCatalogVersionData
from ._models_py3 import SupportedVersionMetadata
from ._models_py3 import SystemData
from ._models_py3 import TrackedResource
from ._models_py3 import UpgradeGraph
from ._models_py3 import UpgradeGraphProperties

from ._appliances_enums import AccessProfileType
from ._appliances_enums import ArtifactType
from ._appliances_enums import CreatedByType
from ._appliances_enums import Distro
from ._appliances_enums import Provider
from ._appliances_enums import ResourceIdentityType
from ._appliances_enums import SSHKeyType
from ._appliances_enums import Status
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Appliance",
    "ApplianceCredentialKubeconfig",
    "ApplianceGetTelemetryConfigResult",
    "ApplianceListCredentialResults",
    "ApplianceListKeysResults",
    "ApplianceListResult",
    "ApplianceOperation",
    "ApplianceOperationsList",
    "AppliancePropertiesInfrastructureConfig",
    "ArtifactProfile",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "HybridConnectionConfig",
    "Identity",
    "PatchableAppliance",
    "Resource",
    "SSHKey",
    "SupportedVersion",
    "SupportedVersionCatalogVersion",
    "SupportedVersionCatalogVersionData",
    "SupportedVersionMetadata",
    "SystemData",
    "TrackedResource",
    "UpgradeGraph",
    "UpgradeGraphProperties",
    "AccessProfileType",
    "ArtifactType",
    "CreatedByType",
    "Distro",
    "Provider",
    "ResourceIdentityType",
    "SSHKeyType",
    "Status",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
