# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.datafactory import DataFactoryManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestDataFactoryManagementIntegrationRuntimeNodesOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(DataFactoryManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get(self, resource_group):
        response = self.client.integration_runtime_nodes.get(
            resource_group_name=resource_group.name,
            factory_name="str",
            integration_runtime_name="str",
            node_name="str",
            api_version="2018-06-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_delete(self, resource_group):
        response = self.client.integration_runtime_nodes.delete(
            resource_group_name=resource_group.name,
            factory_name="str",
            integration_runtime_name="str",
            node_name="str",
            api_version="2018-06-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_update(self, resource_group):
        response = self.client.integration_runtime_nodes.update(
            resource_group_name=resource_group.name,
            factory_name="str",
            integration_runtime_name="str",
            node_name="str",
            update_integration_runtime_node_request={"concurrentJobsLimit": 0},
            api_version="2018-06-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_get_ip_address(self, resource_group):
        response = self.client.integration_runtime_nodes.get_ip_address(
            resource_group_name=resource_group.name,
            factory_name="str",
            integration_runtime_name="str",
            node_name="str",
            api_version="2018-06-01",
        )

        # please add some check logic here by yourself
        # ...
