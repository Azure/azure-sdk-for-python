# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import uuid
from msrest.pipeline import ClientRawResponse

from .. import models


class ReservationRecommendationDetailsOperations(object):
    """ReservationRecommendationDetailsOperations operations.

    You should not instantiate directly this class, but create a Client instance that will create it for you and attach it as attribute.

    :param client: Client for service requests.
    :param config: Configuration of service client.
    :param serializer: An object model serializer.
    :param deserializer: An object model deserializer.
    :ivar api_version: Version of the API to be used with the client request. The current version is 2019-10-01. Constant value: "2019-10-01".
    """

    models = models

    def __init__(self, client, config, serializer, deserializer):

        self._client = client
        self._serialize = serializer
        self._deserialize = deserializer
        self.api_version = "2019-10-01"

        self.config = config

    def get(
            self, billing_scope, scope, region, term, look_back_period, product, custom_headers=None, raw=False, **operation_config):
        """Details of a reservation recommendation for what-if analysis of
        reserved instances.

        :param billing_scope: The scope associated with reservation
         recommendation details operations. This includes
         '/subscriptions/{subscriptionId}/' for subscription scope,
         '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
         for resource group scope,
         /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for
         BillingAccount scope, and
         '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
         for billingProfile scope
        :type billing_scope: str
        :param scope: Scope of the reservation. Possible values include:
         'Single', 'Shared'
        :type scope: str or ~azure.mgmt.consumption.models.Scope11
        :param region: Used to select the region the recommendation should be
         generated for.
        :type region: str
        :param term: Specify length of reservation recommendation term.
         Possible values include: 'P1Y', 'P3Y'
        :type term: str or ~azure.mgmt.consumption.models.Term
        :param look_back_period: Filter the time period on which reservation
         recommendation results are based. Possible values include:
         'Last07Days', 'Last30Days', 'Last60Days'
        :type look_back_period: str or
         ~azure.mgmt.consumption.models.LookBackPeriod
        :param product: Filter the products for which reservation
         recommendation results are generated. Examples: Standard_DS1_v2 (for
         VM), Premium_SSD_Managed_Disks_P30 (for Managed Disks)
        :type product: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: ReservationRecommendationDetailsModel or ClientRawResponse if
         raw=true
        :rtype:
         ~azure.mgmt.consumption.models.ReservationRecommendationDetailsModel
         or ~msrest.pipeline.ClientRawResponse
        :raises:
         :class:`ErrorResponseException<azure.mgmt.consumption.models.ErrorResponseException>`
        """
        # Construct URL
        url = self.get.metadata['url']
        path_format_arguments = {
            'billingScope': self._serialize.url("billing_scope", billing_scope, 'str', skip_quote=True)
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}
        query_parameters['api-version'] = self._serialize.query("self.api_version", self.api_version, 'str')
        query_parameters['scope'] = self._serialize.query("scope", scope, 'str')
        query_parameters['region'] = self._serialize.query("region", region, 'str')
        query_parameters['term'] = self._serialize.query("term", term, 'str')
        query_parameters['lookBackPeriod'] = self._serialize.query("look_back_period", look_back_period, 'str')
        query_parameters['product'] = self._serialize.query("product", product, 'str')

        # Construct headers
        header_parameters = {}
        header_parameters['Accept'] = 'application/json'
        if self.config.generate_client_request_id:
            header_parameters['x-ms-client-request-id'] = str(uuid.uuid1())
        if custom_headers:
            header_parameters.update(custom_headers)
        if self.config.accept_language is not None:
            header_parameters['accept-language'] = self._serialize.header("self.config.accept_language", self.config.accept_language, 'str')

        # Construct and send request
        request = self._client.get(url, query_parameters, header_parameters)
        response = self._client.send(request, stream=False, **operation_config)

        if response.status_code not in [200, 204]:
            raise models.ErrorResponseException(self._deserialize, response)

        deserialized = None
        if response.status_code == 200:
            deserialized = self._deserialize('ReservationRecommendationDetailsModel', response)

        if raw:
            client_raw_response = ClientRawResponse(deserialized, response)
            return client_raw_response

        return deserialized
    get.metadata = {'url': '/{billingScope}/providers/Microsoft.Consumption/reservationRecommendationDetails'}
