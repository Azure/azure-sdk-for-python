# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from msrest import Serializer, Deserializer
from typing import TYPE_CHECKING
import warnings

from azure.core.exceptions import ClientAuthenticationError, HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import HttpRequest, HttpResponse
from azure.mgmt.core.exceptions import ARMErrorFormat

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Callable, Dict, Generic, Optional, TypeVar


class DataBoxManagementClientOperationsMixin(object):

    def mitigate(
        self,
        job_name,  # type: str
        resource_group_name,  # type: str
        mitigate_job_request,  # type: "_models.MitigateJobRequest"
        **kwargs  # type: Any
    ):
        """Request to mitigate for a given job.

        :param job_name: The name of the job Resource within the specified resource group. job names
         must be between 3 and 24 characters in length and use any alphanumeric and underscore only.
        :type job_name: str
        :param resource_group_name: The Resource Group Name.
        :type resource_group_name: str
        :param mitigate_job_request: Mitigation Request.
        :type mitigate_job_request: ~azure.mgmt.databox.v2021_03_01.models.MitigateJobRequest
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        api_version = self._get_api_version('mitigate')
        if api_version == '2021-03-01':
            from .v2021_03_01.operations import DataBoxManagementClientOperationsMixin as OperationClass
        else:
            raise ValueError("API version {} does not have operation 'mitigate'".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance._config = self._config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._serialize.client_side_validation = False
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        return mixin_instance.mitigate(job_name, resource_group_name, mitigate_job_request, **kwargs)
