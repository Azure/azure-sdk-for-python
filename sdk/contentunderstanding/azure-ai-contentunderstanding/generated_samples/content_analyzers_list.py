# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from contentunderstanding import ContentUnderstandingClient
from azure.identity import DefaultAzureCredential
import json
import os
from dotenv import load_dotenv

"""
# PREREQUISITES
    pip install azure-ai-contentunderstanding python-dotenv
    
    # Option 1: Set environment variable
    export CONTENT_UNDERSTANDING_ENDPOINT="https://your-resource-name.services.ai.azure.com/"
    
    # Option 2: Use .env file (recommended)
    # Copy env.sample to .env and update with your endpoint
    cp env.sample .env
    # Edit .env file with your actual endpoint
    
# USAGE
    python content_analyzers_list.py
"""

# Load environment variables from .env file
load_dotenv()


def main():
    # Get endpoint from environment variable
    my_endpoint = os.getenv("CONTENT_UNDERSTANDING_ENDPOINT")
    if not my_endpoint:
        raise ValueError(
            "CONTENT_UNDERSTANDING_ENDPOINT environment variable is not set. "
            "Please set it or create a .env file with your endpoint."
        )
    
    client = ContentUnderstandingClient(
        endpoint=my_endpoint,
        credential=DefaultAzureCredential(),
    )

    print("Listing all analyzers...")
    print("=" * 60)
    
    try:
        response = client.content_analyzers.list()
        
        print("✅ Analyzers retrieved successfully!")
        print("Available analyzers:")
        
        # Print analyzer IDs
        for analyzer in response:
            print(f"- {analyzer.analyzer_id}")
        
        print("\nDetailed analyzer information:")
        print("-" * 40)
        
        # Print detailed information for each analyzer
        for analyzer in response:
            print(f"\nAnalyzer: {analyzer.analyzer_id}")
            print(json.dumps(analyzer.as_dict(), indent=2))
            print("-" * 40)
        
    except Exception as e:
        print(f"❌ Error listing analyzers: {e}")


# x-ms-original-file: 2025-05-01-preview/ContentAnalyzers_List.json
if __name__ == "__main__":
    main()
