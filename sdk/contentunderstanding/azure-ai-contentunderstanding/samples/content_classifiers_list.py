# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import asyncio
import os

from azure.ai.contentunderstanding.aio import ContentUnderstandingClient

from azure.core.credentials import AzureKeyCredential
from azure.identity.aio import DefaultAzureCredential

from dotenv import load_dotenv

load_dotenv()

"""
Prerequisites:
    pip install azure-ai-contentunderstanding python-dotenv
    az login  # Used for DefaultAzureCredential(). Alternatively, set the AZURE_CONTENT_UNDERSTANDING_KEY environment variable

Environment variables:
    AZURE_CONTENT_UNDERSTANDING_ENDPOINT   (required)
    AZURE_CONTENT_UNDERSTANDING_KEY        (optional - DefaultAzureCredential() will be used if not set)
    These variables can be set in a .env file in the samples directory for repeated use. Please see env.sample for an example.

Run:
    python content_classifiers_list.py
"""


async def main():
    """
    List all available classifiers using list API.

    High-level steps:
    1. Connect to Azure AI Content Understanding
    2. List all available classifiers
    3. Display detailed information about each classifier
    4. Show summary statistics
    """
    endpoint = os.getenv("AZURE_CONTENT_UNDERSTANDING_ENDPOINT") or ""
    # Return AzureKeyCredential if AZURE_CONTENT_UNDERSTANDING_KEY is set, otherwise DefaultAzureCredential
    key = os.getenv("AZURE_CONTENT_UNDERSTANDING_KEY")
    credential = AzureKeyCredential(key) if key else DefaultAzureCredential()

    async with ContentUnderstandingClient(endpoint=endpoint, credential=credential) as client:
        print(f"üìã Listing all available classifiers...")

        # List all classifiers
        response = client.content_classifiers.list()
        classifiers = [classifier async for classifier in response]

        print(f"‚úÖ Found {len(classifiers)} classifiers")
        print()

        # Display detailed information about each classifier
        for i, classifier in enumerate(classifiers, 1):
            print(f"üîç Classifier {i}:")
            print(f"   ID: {getattr(classifier, 'classifier_id', 'N/A')}")
            print(f"   Description: {getattr(classifier, 'description', 'N/A')}")
            print(f"   Status: {getattr(classifier, 'status', 'N/A')}")
            print(f"   Created at: {getattr(classifier, 'created_at', 'N/A')}")

            # All classifiers are custom classifiers
            print(f"   Type: Custom classifier")

            # Show tags if available
            tags = getattr(classifier, "tags", None)
            if tags:
                print(f"   Tags: {tags}")

            # Show categories if available
            categories = getattr(classifier, "categories", None)
            if categories:
                print(f"   Categories: {len(categories)} categories")
                for category_name, category in categories.items():
                    description = getattr(category, "description", "No description")
                    print(f"     - {category_name}: {description}")

            print()

        # Show summary statistics
        print(f"üìä Summary:")
        print(f"   Total classifiers: {len(classifiers)}")
        print(f"   All classifiers are custom classifiers")

    # x-ms-original-file: 2025-05-01-preview/ContentClassifiers_List.json
    # Manually close DefaultAzureCredential if it was used
    if isinstance(credential, DefaultAzureCredential):
        await credential.close()


if __name__ == "__main__":
    asyncio.run(main())
