# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    AwsCloudProfile,
    AwsCloudProfileUpdate,
    AzureResourceManagerCommonTypesTrackedResourceUpdate,
    EndpointAccessResource,
    EndpointProperties,
    EndpointResource,
    EndpointsList,
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    GenerateAwsTemplateRequest,
    IngressGatewayResource,
    InventoryProperties,
    InventoryResource,
    InventoryResourceListResult,
    ListCredentialsRequest,
    ListIngressGatewayCredentialsRequest,
    ManagedProxyRequest,
    ManagedProxyResource,
    Operation,
    OperationDisplay,
    OperationListResult,
    OperationStatusResult,
    ProxyResource,
    PublicCloudConnector,
    PublicCloudConnectorListResult,
    PublicCloudConnectorProperties,
    PublicCloudConnectorPropertiesUpdate,
    PublicCloudConnectorUpdate,
    Resource,
    ServiceConfigurationList,
    ServiceConfigurationResource,
    ServiceConfigurationResourcePatch,
    SolutionConfiguration,
    SolutionConfigurationListResult,
    SolutionConfigurationProperties,
    SolutionConfigurationPropertiesUpdate,
    SolutionConfigurationUpdate,
    SolutionTypePermissions,
    SolutionTypeProperties,
    SolutionTypeResource,
    SolutionTypeResourceListResult,
    SolutionTypeSettings,
    SolutionTypeSettingsProperties,
    SystemData,
    TestPermissionResult,
    TrackedResource,
)

from ._hybrid_connectivity_mgmt_client_enums import (  # type: ignore
    ActionType,
    CloudNativeType,
    CreatedByType,
    HostType,
    Origin,
    ProvisioningState,
    ResourceProvisioningState,
    ServiceName,
    SolutionConfigurationStatus,
    SolutionTypeEnum,
    Status,
    Type,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AwsCloudProfile",
    "AwsCloudProfileUpdate",
    "AzureResourceManagerCommonTypesTrackedResourceUpdate",
    "EndpointAccessResource",
    "EndpointProperties",
    "EndpointResource",
    "EndpointsList",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "GenerateAwsTemplateRequest",
    "IngressGatewayResource",
    "InventoryProperties",
    "InventoryResource",
    "InventoryResourceListResult",
    "ListCredentialsRequest",
    "ListIngressGatewayCredentialsRequest",
    "ManagedProxyRequest",
    "ManagedProxyResource",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "OperationStatusResult",
    "ProxyResource",
    "PublicCloudConnector",
    "PublicCloudConnectorListResult",
    "PublicCloudConnectorProperties",
    "PublicCloudConnectorPropertiesUpdate",
    "PublicCloudConnectorUpdate",
    "Resource",
    "ServiceConfigurationList",
    "ServiceConfigurationResource",
    "ServiceConfigurationResourcePatch",
    "SolutionConfiguration",
    "SolutionConfigurationListResult",
    "SolutionConfigurationProperties",
    "SolutionConfigurationPropertiesUpdate",
    "SolutionConfigurationUpdate",
    "SolutionTypePermissions",
    "SolutionTypeProperties",
    "SolutionTypeResource",
    "SolutionTypeResourceListResult",
    "SolutionTypeSettings",
    "SolutionTypeSettingsProperties",
    "SystemData",
    "TestPermissionResult",
    "TrackedResource",
    "ActionType",
    "CloudNativeType",
    "CreatedByType",
    "HostType",
    "Origin",
    "ProvisioningState",
    "ResourceProvisioningState",
    "ServiceName",
    "SolutionConfigurationStatus",
    "SolutionTypeEnum",
    "Status",
    "Type",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
