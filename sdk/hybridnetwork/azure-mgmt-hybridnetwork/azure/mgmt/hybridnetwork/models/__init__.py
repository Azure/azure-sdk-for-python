# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import AzureStackEdgeFormat
from ._models_py3 import CustomProfile
from ._models_py3 import DataDisk
from ._models_py3 import Device
from ._models_py3 import DeviceListResult
from ._models_py3 import DevicePropertiesFormat
from ._models_py3 import DeviceRegistrationKey
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import ErrorDetail
from ._models_py3 import ErrorResponse
from ._models_py3 import ExecuteRequestParameters
from ._models_py3 import ImageReference
from ._models_py3 import LinuxConfiguration
from ._models_py3 import NetworkFunction
from ._models_py3 import NetworkFunctionListResult
from ._models_py3 import NetworkFunctionRoleConfiguration
from ._models_py3 import NetworkFunctionRoleInstanceListResult
from ._models_py3 import NetworkFunctionSkuDetails
from ._models_py3 import NetworkFunctionSkuListResult
from ._models_py3 import NetworkFunctionSkuRoleDetails
from ._models_py3 import NetworkFunctionTemplate
from ._models_py3 import NetworkFunctionUserConfiguration
from ._models_py3 import NetworkFunctionUserConfigurationOsProfile
from ._models_py3 import NetworkFunctionVendor
from ._models_py3 import NetworkFunctionVendorConfiguration
from ._models_py3 import NetworkFunctionVendorListResult
from ._models_py3 import NetworkInterface
from ._models_py3 import NetworkInterfaceIPConfiguration
from ._models_py3 import Operation
from ._models_py3 import OperationDisplay
from ._models_py3 import OperationListResult
from ._models_py3 import OsDisk
from ._models_py3 import OsProfile
from ._models_py3 import PreviewSubscription
from ._models_py3 import PreviewSubscriptionsList
from ._models_py3 import ProxyResource
from ._models_py3 import RequestMetadata
from ._models_py3 import Resource
from ._models_py3 import RoleInstance
from ._models_py3 import SkuCredential
from ._models_py3 import SkuOverview
from ._models_py3 import SshConfiguration
from ._models_py3 import SshPublicKey
from ._models_py3 import StorageProfile
from ._models_py3 import SubResource
from ._models_py3 import SystemData
from ._models_py3 import TagsObject
from ._models_py3 import TrackedResource
from ._models_py3 import Vendor
from ._models_py3 import VendorListResult
from ._models_py3 import VendorNetworkFunction
from ._models_py3 import VendorNetworkFunctionListResult
from ._models_py3 import VendorSku
from ._models_py3 import VendorSkuListResult
from ._models_py3 import VirtualHardDisk

from ._hybrid_network_management_client_enums import ActionType
from ._hybrid_network_management_client_enums import CreatedByType
from ._hybrid_network_management_client_enums import DeviceType
from ._hybrid_network_management_client_enums import DiskCreateOptionTypes
from ._hybrid_network_management_client_enums import HttpMethod
from ._hybrid_network_management_client_enums import IPAllocationMethod
from ._hybrid_network_management_client_enums import IPVersion
from ._hybrid_network_management_client_enums import NetworkFunctionRoleConfigurationType
from ._hybrid_network_management_client_enums import NetworkFunctionType
from ._hybrid_network_management_client_enums import OperatingSystemTypes
from ._hybrid_network_management_client_enums import OperationalState
from ._hybrid_network_management_client_enums import Origin
from ._hybrid_network_management_client_enums import ProvisioningState
from ._hybrid_network_management_client_enums import SkuDeploymentMode
from ._hybrid_network_management_client_enums import SkuType
from ._hybrid_network_management_client_enums import Status
from ._hybrid_network_management_client_enums import VMSwitchType
from ._hybrid_network_management_client_enums import VendorProvisioningState
from ._hybrid_network_management_client_enums import VirtualMachineSizeTypes
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AzureStackEdgeFormat",
    "CustomProfile",
    "DataDisk",
    "Device",
    "DeviceListResult",
    "DevicePropertiesFormat",
    "DeviceRegistrationKey",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "ExecuteRequestParameters",
    "ImageReference",
    "LinuxConfiguration",
    "NetworkFunction",
    "NetworkFunctionListResult",
    "NetworkFunctionRoleConfiguration",
    "NetworkFunctionRoleInstanceListResult",
    "NetworkFunctionSkuDetails",
    "NetworkFunctionSkuListResult",
    "NetworkFunctionSkuRoleDetails",
    "NetworkFunctionTemplate",
    "NetworkFunctionUserConfiguration",
    "NetworkFunctionUserConfigurationOsProfile",
    "NetworkFunctionVendor",
    "NetworkFunctionVendorConfiguration",
    "NetworkFunctionVendorListResult",
    "NetworkInterface",
    "NetworkInterfaceIPConfiguration",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "OsDisk",
    "OsProfile",
    "PreviewSubscription",
    "PreviewSubscriptionsList",
    "ProxyResource",
    "RequestMetadata",
    "Resource",
    "RoleInstance",
    "SkuCredential",
    "SkuOverview",
    "SshConfiguration",
    "SshPublicKey",
    "StorageProfile",
    "SubResource",
    "SystemData",
    "TagsObject",
    "TrackedResource",
    "Vendor",
    "VendorListResult",
    "VendorNetworkFunction",
    "VendorNetworkFunctionListResult",
    "VendorSku",
    "VendorSkuListResult",
    "VirtualHardDisk",
    "ActionType",
    "CreatedByType",
    "DeviceType",
    "DiskCreateOptionTypes",
    "HttpMethod",
    "IPAllocationMethod",
    "IPVersion",
    "NetworkFunctionRoleConfigurationType",
    "NetworkFunctionType",
    "OperatingSystemTypes",
    "OperationalState",
    "Origin",
    "ProvisioningState",
    "SkuDeploymentMode",
    "SkuType",
    "Status",
    "VMSwitchType",
    "VendorProvisioningState",
    "VirtualMachineSizeTypes",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
