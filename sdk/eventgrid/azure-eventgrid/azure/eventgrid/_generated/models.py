# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
import sys
from typing import Any, Dict, Optional

from . import _serialization

class EventGridEvent(_serialization.Model):
    """Properties of an event published to an Event Grid topic using the EventGrid Schema.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: An unique identifier for the event. Required.
    :vartype id: str
    :ivar topic: The resource path of the event source.
    :vartype topic: str
    :ivar subject: A resource path relative to the topic path. Required.
    :vartype subject: str
    :ivar data: Event data specific to the event type. Required.
    :vartype data: JSON
    :ivar event_type: The type of the event that occurred. Required.
    :vartype event_type: str
    :ivar event_time: The time (in UTC) the event was generated. Required.
    :vartype event_time: ~datetime.datetime
    :ivar metadata_version: The schema version of the event metadata.
    :vartype metadata_version: str
    :ivar data_version: The schema version of the data object. Required.
    :vartype data_version: str
    """

    _validation = {
        "id": {"required": True},
        "subject": {"required": True},
        "data": {"required": True},
        "event_type": {"required": True},
        "event_time": {"required": True},
        "metadata_version": {"readonly": True},
        "data_version": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "topic": {"key": "topic", "type": "str"},
        "subject": {"key": "subject", "type": "str"},
        "data": {"key": "data", "type": "object"},
        "event_type": {"key": "eventType", "type": "str"},
        "event_time": {"key": "eventTime", "type": "iso-8601"},
        "metadata_version": {"key": "metadataVersion", "type": "str"},
        "data_version": {"key": "dataVersion", "type": "str"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        subject: str,
        data: JSON,
        event_type: str,
        event_time: datetime.datetime,
        data_version: str,
        topic: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: An unique identifier for the event. Required.
        :paramtype id: str
        :keyword topic: The resource path of the event source.
        :paramtype topic: str
        :keyword subject: A resource path relative to the topic path. Required.
        :paramtype subject: str
        :keyword data: Event data specific to the event type. Required.
        :paramtype data: JSON
        :keyword event_type: The type of the event that occurred. Required.
        :paramtype event_type: str
        :keyword event_time: The time (in UTC) the event was generated. Required.
        :paramtype event_time: ~datetime.datetime
        :keyword data_version: The schema version of the data object. Required.
        :paramtype data_version: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.topic = topic
        self.subject = subject
        self.data = data
        self.event_type = event_type
        self.event_time = event_time
        self.metadata_version = None
        self.data_version = data_version