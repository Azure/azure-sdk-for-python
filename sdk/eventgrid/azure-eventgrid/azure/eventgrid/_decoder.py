# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any

from azure.eventgrid._models import EventContainer
from azure.eventgrid import _constants as constants

class EventGridDecoder:
    """
    A consumer responsible for decoding EventGridEventBatch/CloudEventBatch into a list of event type objects
    specified in the EventGridEvents/CloudEvents.
    """

    def __init__(self, **kwargs):
        pass

    def decode_message(self, message, **kwargs):
        # type: (azure.eventhub.EventData, azure.functions.EventGridEvent, azure.servicebus.Message, azure.functions.HttpRequest, azure.storage.queue.QueueMessage) -> List[models.EventContainer]
        """A message of a list of events from an event handler will be parsed and returned as a list of
        EventContainer objects.
        :param message: The event handler message to be decoded.
        :type message: azure.eventhub.EventData or azure.functions.EventGridEvent or  azure.servicebus.Message or azure.functions.HttpRequest or azure.storage.queue.QueueMessage
        :rtype: List[models.EventContainer]
        """
        pass
