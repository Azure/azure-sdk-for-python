# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import ExampleServiceConfiguration
from .operations import ComputeNodeAdministrationOperations
from .operations import ComputationOperations
from .operations import ExampleServiceOperationsMixin
from . import models


class ExampleService(ExampleServiceOperationsMixin):
    """ExampleService.

    :ivar compute_node_administration: ComputeNodeAdministrationOperations operations
    :vartype compute_node_administration: azure.computation.operations.ComputeNodeAdministrationOperations
    :ivar computation: ComputationOperations operations
    :vartype computation: azure.computation.operations.ComputationOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param node_name: 
    :type node_name: str
    :param x_ms_client_request_id: Optional client-provided request id.
    :type x_ms_client_request_id: str
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        node_name,  # type: str
        x_ms_client_request_id=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        base_url = 'None'
        self._config = ExampleServiceConfiguration(credential, node_name, x_ms_client_request_id, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.compute_node_administration = ComputeNodeAdministrationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.computation = ComputationOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> ExampleService
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
