# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import List, Optional

import msrest.serialization


class ComputeNode(msrest.serialization.Model):
    """ComputeNode.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: LinuxComputeNode, WindowsComputeNode.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar e_tag:
    :vartype e_tag: str
    :ivar name:
    :vartype name: str
    :param kind: Required. Constant filled by server.
    :type kind: str
    """

    _validation = {
        'e_tag': {'readonly': True},
        'name': {'readonly': True},
        'kind': {'required': True},
    }

    _attribute_map = {
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
    }

    _subtype_map = {
        'kind': {'LinuxComputeNode': 'LinuxComputeNode', 'WindowsComputeNode': 'WindowsComputeNode'}
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ComputeNode, self).__init__(**kwargs)
        self.e_tag = None
        self.name = None
        self.kind = None  # type: Optional[str]


class LinuxComputeNode(ComputeNode):
    """LinuxComputeNode.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar e_tag:
    :vartype e_tag: str
    :ivar name:
    :vartype name: str
    :param kind: Required. Constant filled by server.
    :type kind: str
    :param ssh_public_key: Required.
    :type ssh_public_key: str
    """

    _validation = {
        'e_tag': {'readonly': True},
        'name': {'readonly': True},
        'kind': {'required': True},
        'ssh_public_key': {'required': True},
    }

    _attribute_map = {
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
        'ssh_public_key': {'key': 'sshPublicKey', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        ssh_public_key: str,
        **kwargs
    ):
        super(LinuxComputeNode, self).__init__(**kwargs)
        self.kind = 'LinuxComputeNode'  # type: str
        self.ssh_public_key = ssh_public_key


class Operation(msrest.serialization.Model):
    """Operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created_date_time:
    :vartype created_date_time: ~datetime.datetime
    :ivar percent_complete:
    :vartype percent_complete: float
    :ivar status:  Possible values include: "notstarted", "running", "succeeded", "failed",
     "cancelled".
    :vartype status: str or ~azure.computation.models.OperationStatus
    """

    _validation = {
        'created_date_time': {'readonly': True},
        'percent_complete': {'readonly': True, 'maximum': 100, 'minimum': 0},
        'status': {'readonly': True},
    }

    _attribute_map = {
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'percent_complete': {'key': 'percentComplete', 'type': 'float'},
        'status': {'key': 'status', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Operation, self).__init__(**kwargs)
        self.created_date_time = None
        self.percent_complete = None
        self.status = None


class PageOfComputeNodes(msrest.serialization.Model):
    """PageOfComputeNodes.

    All required parameters must be populated in order to send to Azure.

    :param value: Required.
    :type value: list[~azure.computation.models.ComputeNode]
    :param next_link:
    :type next_link: str
    """

    _validation = {
        'value': {'required': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[ComputeNode]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: List["ComputeNode"],
        next_link: Optional[str] = None,
        **kwargs
    ):
        super(PageOfComputeNodes, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class WindowsComputeNode(ComputeNode):
    """WindowsComputeNode.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar e_tag:
    :vartype e_tag: str
    :ivar name:
    :vartype name: str
    :param kind: Required. Constant filled by server.
    :type kind: str
    :param user_name: Required.
    :type user_name: str
    """

    _validation = {
        'e_tag': {'readonly': True},
        'name': {'readonly': True},
        'kind': {'required': True},
        'user_name': {'required': True},
    }

    _attribute_map = {
        'e_tag': {'key': 'eTag', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
        'user_name': {'key': 'userName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        user_name: str,
        **kwargs
    ):
        super(WindowsComputeNode, self).__init__(**kwargs)
        self.kind = 'WindowsComputeNode'  # type: str
        self.user_name = user_name
