# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_py3 import Resource


class Bookmark(Resource):
    """Represents a bookmark in Azure Security Insights.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Azure resource Id
    :vartype id: str
    :ivar type: Azure resource type
    :vartype type: str
    :ivar name: Azure resource name
    :vartype name: str
    :param etag: Etag of the bookmark.
    :type etag: str
    :param display_name: Required. The display name of the bookmark
    :type display_name: str
    :param last_updated_time_utc: The last time the bookmark was updated
    :type last_updated_time_utc: datetime
    :param created_time_utc: The time the bookmark was created
    :type created_time_utc: datetime
    :param created_by: Describes a user that created the bookmark
    :type created_by: ~azure.mgmt.securityinsight.models.UserInfo
    :param updated_by: Describes a user that updated the bookmark
    :type updated_by: ~azure.mgmt.securityinsight.models.UserInfo
    :param notes: The notes of the bookmark
    :type notes: str
    :param labels: List of labels relevant to this bookmark
    :type labels: list[str]
    :param query: Required. The query of the bookmark.
    :type query: str
    """

    _validation = {
        'id': {'readonly': True},
        'type': {'readonly': True},
        'name': {'readonly': True},
        'display_name': {'required': True},
        'query': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'etag': {'key': 'etag', 'type': 'str'},
        'display_name': {'key': 'properties.displayName', 'type': 'str'},
        'last_updated_time_utc': {'key': 'properties.lastUpdatedTimeUtc', 'type': 'iso-8601'},
        'created_time_utc': {'key': 'properties.createdTimeUtc', 'type': 'iso-8601'},
        'created_by': {'key': 'properties.createdBy', 'type': 'UserInfo'},
        'updated_by': {'key': 'properties.updatedBy', 'type': 'UserInfo'},
        'notes': {'key': 'properties.notes', 'type': 'str'},
        'labels': {'key': 'properties.labels', 'type': '[str]'},
        'query': {'key': 'properties.query', 'type': 'str'},
    }

    def __init__(self, *, display_name: str, query: str, etag: str=None, last_updated_time_utc=None, created_time_utc=None, created_by=None, updated_by=None, notes: str=None, labels=None, **kwargs) -> None:
        super(Bookmark, self).__init__(**kwargs)
        self.etag = etag
        self.display_name = display_name
        self.last_updated_time_utc = last_updated_time_utc
        self.created_time_utc = created_time_utc
        self.created_by = created_by
        self.updated_by = updated_by
        self.notes = notes
        self.labels = labels
        self.query = query
