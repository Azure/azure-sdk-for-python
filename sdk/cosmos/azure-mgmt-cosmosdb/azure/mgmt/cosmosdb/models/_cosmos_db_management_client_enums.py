# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AnalyticalStorageSchemaType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describes the types of schema for analytical storage."""

    WELL_DEFINED = "WellDefined"
    FULL_FIDELITY = "FullFidelity"


class ApiType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum to indicate the API type of the restorable database account."""

    MONGO_DB = "MongoDB"
    GREMLIN = "Gremlin"
    CASSANDRA = "Cassandra"
    TABLE = "Table"
    SQL = "Sql"
    GREMLIN_V2 = "GremlinV2"


class AuthenticationMethod(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Which authentication method Cassandra should use to authenticate clients. 'None' turns off
    authentication, so should not be used except in emergencies. 'Cassandra' is the default
    password based authentication. The default is 'Cassandra'.
    """

    NONE = "None"
    CASSANDRA = "Cassandra"
    LDAP = "Ldap"


class BackupPolicyMigrationStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describes the status of migration between backup policy types."""

    INVALID = "Invalid"
    IN_PROGRESS = "InProgress"
    COMPLETED = "Completed"
    FAILED = "Failed"


class BackupPolicyType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describes the mode of backups."""

    PERIODIC = "Periodic"
    CONTINUOUS = "Continuous"


class BackupState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The current state of the backup."""

    INITIATED = "Initiated"
    IN_PROGRESS = "InProgress"
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"


class BackupStorageRedundancy(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum to indicate type of backup storage redundancy."""

    GEO = "Geo"
    LOCAL = "Local"
    ZONE = "Zone"


class CheckNameAvailabilityReason(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The reason why the given name is not available."""

    INVALID = "Invalid"
    ALREADY_EXISTS = "AlreadyExists"


class ClusterType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of the cluster. If set to Production, some operations might not be permitted on cluster."""

    PRODUCTION = "Production"
    NON_PRODUCTION = "NonProduction"


class CompositePathSortOrder(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Sort order for composite paths."""

    ASCENDING = "ascending"
    DESCENDING = "descending"


class ConflictResolutionMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the conflict resolution mode."""

    LAST_WRITER_WINS = "LastWriterWins"
    CUSTOM = "Custom"


class ConnectionState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The kind of connection error that occurred."""

    UNKNOWN = "Unknown"
    OK = "OK"
    OPERATOR_TO_DATA_CENTER_NETWORK_ERROR = "OperatorToDataCenterNetworkError"
    DATACENTER_TO_DATACENTER_NETWORK_ERROR = "DatacenterToDatacenterNetworkError"
    INTERNAL_OPERATOR_TO_DATA_CENTER_CERTIFICATE_ERROR = "InternalOperatorToDataCenterCertificateError"
    INTERNAL_ERROR = "InternalError"


class ConnectorOffer(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The cassandra connector offer type for the Cosmos DB C* database account."""

    SMALL = "Small"


class ContinuousTier(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum to indicate type of Continuous backup tier."""

    CONTINUOUS7_DAYS = "Continuous7Days"
    CONTINUOUS30_DAYS = "Continuous30Days"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class CreateMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum to indicate the mode of account creation."""

    DEFAULT = "Default"
    RESTORE = "Restore"
    POINT_IN_TIME_RESTORE = "PointInTimeRestore"


class CustomerManagedKeyStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the status of the Customer Managed Key feature on the account. In case there are
    errors, the property provides troubleshooting guidance.
    """

    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_AZURE_COSMOS_DB_SERVICE_IS_UNABLE_TO_OBTAIN_THE_AAD_AUTHENTICATION_TOKEN_FOR_THE_ACCOUNT_S_DEFAULT_IDENTITY_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_AZURE_ACTIVE_DIRECTORY_TOKEN_ACQUISITION_ERROR4000_ = "Access to your account is currently revoked because the Azure Cosmos DB service is unable to obtain the AAD authentication token for the account's default identity; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#azure-active-directory-token-acquisition-error (4000)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_AZURE_COSMOS_DB_ACCOUNT_S_KEY_VAULT_KEY_URI_DOES_NOT_FOLLOW_THE_EXPECTED_FORMAT_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_IMPROPER_SYNTAX_DETECTED_ON_THE_KEY_VAULT_URI_PROPERTY4006_ = "Access to your account is currently revoked because the Azure Cosmos DB account's key vault key URI does not follow the expected format; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#improper-syntax-detected-on-the-key-vault-uri-property (4006)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_CURRENT_DEFAULT_IDENTITY_NO_LONGER_HAS_PERMISSION_TO_THE_ASSOCIATED_KEY_VAULT_KEY_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_DEFAULT_IDENTITY_IS_UNAUTHORIZED_TO_ACCESS_THE_AZURE_KEY_VAULT_KEY4002_ = "Access to your account is currently revoked because the current default identity no longer has permission to the associated Key Vault key; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#default-identity-is-unauthorized-to-access-the-azure-key-vault-key (4002)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_AZURE_KEY_VAULT_DNS_NAME_SPECIFIED_BY_THE_ACCOUNT_S_KEYVAULTKEYURI_PROPERTY_COULD_NOT_BE_RESOLVED_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_UNABLE_TO_RESOLVE_THE_KEY_VAULTS_DNS4009_ = "Access to your account is currently revoked because the Azure Key Vault DNS name specified by the account's keyvaultkeyuri property could not be resolved; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#unable-to-resolve-the-key-vaults-dns (4009)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_CORRESPONDENT_KEY_IS_NOT_FOUND_ON_THE_SPECIFIED_KEY_VAULT_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_AZURE_KEY_VAULT_RESOURCE_NOT_FOUND4003_ = "Access to your account is currently revoked because the correspondent key is not found on the specified Key Vault; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#azure-key-vault-resource-not-found (4003)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_AZURE_COSMOS_DB_SERVICE_IS_UNABLE_TO_WRAP_OR_UNWRAP_THE_KEY_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_INTERNAL_UNWRAPPING_PROCEDURE_ERROR4005_ = "Access to your account is currently revoked because the Azure Cosmos DB service is unable to wrap or unwrap the key; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#internal-unwrapping-procedure-error (4005)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_AZURE_COSMOS_DB_ACCOUNT_HAS_AN_UNDEFINED_DEFAULT_IDENTITY_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_INVALID_AZURE_COSMOS_DB_DEFAULT_IDENTITY4015_ = "Access to your account is currently revoked because the Azure Cosmos DB account has an undefined default identity; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#invalid-azure-cosmos-db-default-identity (4015)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_ACCESS_RULES_ARE_BLOCKING_OUTBOUND_REQUESTS_TO_THE_AZURE_KEY_VAULT_SERVICE_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE4016_ = "Access to your account is currently revoked because the access rules are blocking outbound requests to the Azure Key Vault service; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide (4016)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_BECAUSE_THE_CORRESPONDENT_AZURE_KEY_VAULT_WAS_NOT_FOUND_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE_AZURE_KEY_VAULT_RESOURCE_NOT_FOUND4017_ = "Access to your account is currently revoked because the correspondent Azure Key Vault was not found; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide#azure-key-vault-resource-not-found (4017)."
    ACCESS_TO_YOUR_ACCOUNT_IS_CURRENTLY_REVOKED_FOR_MORE_DETAILS_ABOUT_THIS_ERROR_AND_HOW_TO_RESTORE_ACCESS_TO_YOUR_ACCOUNT_PLEASE_VISIT_HTTPS_LEARN_MICROSOFT_COM_EN_US_AZURE_COSMOS_DB_CMK_TROUBLESHOOTING_GUIDE = "Access to your account is currently revoked; for more details about this error and how to restore access to your account please visit https://learn.microsoft.com/en-us/azure/cosmos-db/cmk-troubleshooting-guide"
    ACCESS_TO_THE_CONFIGURED_CUSTOMER_MANAGED_KEY_CONFIRMED_ = (
        "Access to the configured customer managed key confirmed."
    )


class DatabaseAccountKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the type of database account. This can only be set at database account creation."""

    GLOBAL_DOCUMENT_DB = "GlobalDocumentDB"
    MONGO_DB = "MongoDB"
    PARSE = "Parse"


class DataTransferComponent(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """DataTransferComponent."""

    COSMOS_DB_CASSANDRA = "CosmosDBCassandra"
    COSMOS_DB_MONGO = "CosmosDBMongo"
    COSMOS_DB_SQL = "CosmosDBSql"
    AZURE_BLOB_STORAGE = "AzureBlobStorage"


class DataType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The datatype for which the indexing behavior is applied to."""

    STRING = "String"
    NUMBER = "Number"
    POINT = "Point"
    POLYGON = "Polygon"
    LINE_STRING = "LineString"
    MULTI_POLYGON = "MultiPolygon"


class DefaultConsistencyLevel(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The default consistency level and configuration settings of the Cosmos DB account."""

    EVENTUAL = "Eventual"
    SESSION = "Session"
    BOUNDED_STALENESS = "BoundedStaleness"
    STRONG = "Strong"
    CONSISTENT_PREFIX = "ConsistentPrefix"


class DefaultPriorityLevel(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum to indicate default priorityLevel of requests."""

    HIGH = "High"
    LOW = "Low"


class EnableFullTextQuery(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describe the level of detail with which queries are to be logged."""

    NONE = "None"
    TRUE = "True"
    FALSE = "False"


class IndexingMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the indexing mode."""

    CONSISTENT = "consistent"
    LAZY = "lazy"
    NONE = "none"


class IndexKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the type of index."""

    HASH = "Hash"
    RANGE = "Range"
    SPATIAL = "Spatial"


class KeyKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The access key to regenerate."""

    PRIMARY = "primary"
    SECONDARY = "secondary"
    PRIMARY_READONLY = "primaryReadonly"
    SECONDARY_READONLY = "secondaryReadonly"


class Kind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Kind of the connection string key."""

    PRIMARY = "Primary"
    SECONDARY = "Secondary"
    PRIMARY_READONLY = "PrimaryReadonly"
    SECONDARY_READONLY = "SecondaryReadonly"


class ManagedCassandraProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of the resource at the time the operation was called."""

    CREATING = "Creating"
    UPDATING = "Updating"
    DELETING = "Deleting"
    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    CANCELED = "Canceled"


class ManagedCassandraResourceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the resource."""

    SYSTEM_ASSIGNED = "SystemAssigned"
    NONE = "None"


class MinimalTlsVersion(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and
    Mongo API's, which only work with Tls 1.2.
    """

    TLS = "Tls"
    TLS11 = "Tls11"
    TLS12 = "Tls12"


class MongoClusterStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of the resource at the time the operation was called."""

    READY = "Ready"
    PROVISIONING = "Provisioning"
    UPDATING = "Updating"
    STARTING = "Starting"
    STOPPING = "Stopping"
    STOPPED = "Stopped"
    DROPPING = "Dropping"


class MongoRoleDefinitionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates whether the Role Definition was built-in or user created."""

    BUILT_IN_ROLE = "BuiltInRole"
    CUSTOM_ROLE = "CustomRole"


class NetworkAclBypass(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates what services are allowed to bypass firewall checks."""

    NONE = "None"
    AZURE_SERVICES = "AzureServices"


class NodeKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The kind of a node in the mongo cluster."""

    SHARD = "Shard"


class NodeState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The state of the node in Cassandra ring."""

    NORMAL = "Normal"
    LEAVING = "Leaving"
    JOINING = "Joining"
    MOVING = "Moving"
    STOPPED = "Stopped"


class NodeStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates whether the node is functioning or not."""

    UP = "Up"
    DOWN = "Down"


class NotebookWorkspaceName(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """NotebookWorkspaceName."""

    DEFAULT = "default"


class OperationType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum to indicate the operation type of the event."""

    CREATE = "Create"
    REPLACE = "Replace"
    DELETE = "Delete"
    RECREATE = "Recreate"
    SYSTEM_OPERATION = "SystemOperation"


class PartitionKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys
    (upto three maximum) are supported for container create.
    """

    HASH = "Hash"
    RANGE = "Range"
    MULTI_HASH = "MultiHash"


class PrimaryAggregationType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The primary aggregation type of the metric."""

    NONE = "None"
    AVERAGE = "Average"
    TOTAL = "Total"
    MINIMUM = "Minimum"
    MAXIMUM = "Maximum"
    LAST = "Last"


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The provisioning state of the resource."""

    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    CANCELED = "Canceled"
    IN_PROGRESS = "InProgress"
    UPDATING = "Updating"
    DROPPING = "Dropping"


class PublicNetworkAccess(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Whether requests from Public Network are allowed."""

    ENABLED = "Enabled"
    DISABLED = "Disabled"
    SECURED_BY_PERIMETER = "SecuredByPerimeter"


class ResourceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes
    both an implicitly created identity and a set of user assigned identities. The type 'None' will
    remove any identities from the service.
    """

    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned,UserAssigned"
    NONE = "None"


class RestoreMode(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describes the mode of the restore."""

    POINT_IN_TIME = "PointInTime"


class RoleDefinitionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates whether the Role Definition was built-in or user created."""

    BUILT_IN_ROLE = "BuiltInRole"
    CUSTOM_ROLE = "CustomRole"


class ServerVersion(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describes the ServerVersion of an a MongoDB account."""

    THREE2 = "3.2"
    THREE6 = "3.6"
    FOUR0 = "4.0"
    FOUR2 = "4.2"


class ServiceSize(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Instance type for the service."""

    COSMOS_D4_S = "Cosmos.D4s"
    COSMOS_D8_S = "Cosmos.D8s"
    COSMOS_D16_S = "Cosmos.D16s"


class ServiceStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describes the status of a service."""

    CREATING = "Creating"
    RUNNING = "Running"
    UPDATING = "Updating"
    DELETING = "Deleting"
    ERROR = "Error"
    STOPPED = "Stopped"


class ServiceType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """ServiceType for the service."""

    SQL_DEDICATED_GATEWAY = "SqlDedicatedGateway"
    DATA_TRANSFER = "DataTransfer"
    GRAPH_API_COMPUTE = "GraphAPICompute"
    MATERIALIZED_VIEWS_BUILDER = "MaterializedViewsBuilder"


class SpatialType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the spatial type of index."""

    POINT = "Point"
    LINE_STRING = "LineString"
    POLYGON = "Polygon"
    MULTI_POLYGON = "MultiPolygon"


class Status(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum to indicate current buildout status of the region."""

    UNINITIALIZED = "Uninitialized"
    INITIALIZING = "Initializing"
    INTERNALLY_READY = "InternallyReady"
    ONLINE = "Online"
    DELETING = "Deleting"


class ThroughputPolicyType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """ThroughputPolicy to apply for throughput redistribution."""

    NONE = "none"
    EQUAL = "equal"
    CUSTOM = "custom"


class TriggerOperation(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The operation the trigger is associated with."""

    ALL = "All"
    CREATE = "Create"
    UPDATE = "Update"
    DELETE = "Delete"
    REPLACE = "Replace"


class TriggerType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of the Trigger."""

    PRE = "Pre"
    POST = "Post"


class Type(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of the connection string."""

    SQL = "Sql"
    TABLE = "Table"
    MONGO_DB = "MongoDB"
    CASSANDRA = "Cassandra"
    CASSANDRA_CONNECTOR_METADATA = "CassandraConnectorMetadata"
    GREMLIN = "Gremlin"
    SQL_DEDICATED_GATEWAY = "SqlDedicatedGateway"
    GREMLIN_V2 = "GremlinV2"
    UNDEFINED = "Undefined"


class UnitType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The unit of the metric."""

    COUNT = "Count"
    BYTES = "Bytes"
    SECONDS = "Seconds"
    PERCENT = "Percent"
    COUNT_PER_SECOND = "CountPerSecond"
    BYTES_PER_SECOND = "BytesPerSecond"
    MILLISECONDS = "Milliseconds"
