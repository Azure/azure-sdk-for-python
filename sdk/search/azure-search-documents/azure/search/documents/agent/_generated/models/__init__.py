# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.5, generator: @autorest/python@6.39.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    KnowledgeAgentActivityRecord,
    KnowledgeAgentAzureBlobActivityArguments,
    KnowledgeAgentAzureBlobActivityRecord,
    KnowledgeAgentAzureBlobReference,
    KnowledgeAgentMessage,
    KnowledgeAgentMessageContent,
    KnowledgeAgentMessageImageContent,
    KnowledgeAgentMessageImageContentImage,
    KnowledgeAgentMessageTextContent,
    KnowledgeAgentModelAnswerSynthesisActivityRecord,
    KnowledgeAgentModelQueryPlanningActivityRecord,
    KnowledgeAgentReference,
    KnowledgeAgentRetrievalActivityRecord,
    KnowledgeAgentRetrievalRequest,
    KnowledgeAgentRetrievalResponse,
    KnowledgeAgentSearchIndexActivityArguments,
    KnowledgeAgentSearchIndexActivityRecord,
    KnowledgeAgentSearchIndexReference,
    KnowledgeAgentSemanticRerankerActivityRecord,
    KnowledgeSourceParams,
    RequestOptions,
    SearchIndexKnowledgeSourceParams,
)

from ._knowledge_agent_retrieval_client_enums import (  # type: ignore
    KnowledgeAgentMessageContentType,
    KnowledgeSourceKind,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "KnowledgeAgentActivityRecord",
    "KnowledgeAgentAzureBlobActivityArguments",
    "KnowledgeAgentAzureBlobActivityRecord",
    "KnowledgeAgentAzureBlobReference",
    "KnowledgeAgentMessage",
    "KnowledgeAgentMessageContent",
    "KnowledgeAgentMessageImageContent",
    "KnowledgeAgentMessageImageContentImage",
    "KnowledgeAgentMessageTextContent",
    "KnowledgeAgentModelAnswerSynthesisActivityRecord",
    "KnowledgeAgentModelQueryPlanningActivityRecord",
    "KnowledgeAgentReference",
    "KnowledgeAgentRetrievalActivityRecord",
    "KnowledgeAgentRetrievalRequest",
    "KnowledgeAgentRetrievalResponse",
    "KnowledgeAgentSearchIndexActivityArguments",
    "KnowledgeAgentSearchIndexActivityRecord",
    "KnowledgeAgentSearchIndexReference",
    "KnowledgeAgentSemanticRerankerActivityRecord",
    "KnowledgeSourceParams",
    "RequestOptions",
    "SearchIndexKnowledgeSourceParams",
    "KnowledgeAgentMessageContentType",
    "KnowledgeSourceKind",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
