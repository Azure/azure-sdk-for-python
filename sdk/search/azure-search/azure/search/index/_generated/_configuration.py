# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6198, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any

from azure.core.configuration import Configuration
from azure.core.pipeline import policies

VERSION = "unknown"

class SearchIndexClientConfiguration(Configuration):
    """Configuration for SearchIndexClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param search_service_name: The name of the search service.
    :type search_service_name: str
    :param search_dns_suffix: The DNS suffix of the search service. The default is search.windows.net.
    :type search_dns_suffix: str
    :param index_name: The name of the index.
    :type index_name: str
    """

    def __init__(
        self,
        search_service_name,  # type: str
        search_dns_suffix,  # type: str
        index_name,  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if search_service_name is None:
            raise ValueError("Parameter 'search_service_name' must not be None.")
        if search_dns_suffix is None:
            raise ValueError("Parameter 'search_dns_suffix' must not be None.")
        if index_name is None:
            raise ValueError("Parameter 'index_name' must not be None.")
        super(SearchIndexClientConfiguration, self).__init__(**kwargs)

        self.search_service_name = search_service_name
        self.search_dns_suffix = search_dns_suffix
        self.index_name = index_name
        self.api_version = "2019-05-06"
        self._configure(**kwargs)
        self.user_agent_policy.add_user_agent('azsdk-python-searchindexclient/{}'.format(VERSION))

    def _configure(
        self,
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        self.user_agent_policy = kwargs.get('user_agent_policy') or policies.UserAgentPolicy(**kwargs)
        self.headers_policy = kwargs.get('headers_policy') or policies.HeadersPolicy(**kwargs)
        self.proxy_policy = kwargs.get('proxy_policy') or policies.ProxyPolicy(**kwargs)
        self.logging_policy = kwargs.get('logging_policy') or policies.NetworkTraceLoggingPolicy(**kwargs)
        self.retry_policy = kwargs.get('retry_policy') or policies.RetryPolicy(**kwargs)
        self.custom_hook_policy = kwargs.get('custom_hook_policy') or policies.CustomHookPolicy(**kwargs)
        self.redirect_policy = kwargs.get('redirect_policy') or policies.RedirectPolicy(**kwargs)
        self.authentication_policy = kwargs.get('authentication_policy')
