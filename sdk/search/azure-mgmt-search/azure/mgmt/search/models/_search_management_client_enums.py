# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from enum import Enum


class UnavailableNameReason(str, Enum):

    invalid = "Invalid"
    already_exists = "AlreadyExists"


class SkuName(str, Enum):

    free = "free"
    basic = "basic"
    standard = "standard"
    standard2 = "standard2"
    standard3 = "standard3"
    storage_optimized_l1 = "storage_optimized_l1"
    storage_optimized_l2 = "storage_optimized_l2"


class PrivateLinkServiceConnectionStatus(str, Enum):

    pending = "Pending"
    approved = "Approved"
    rejected = "Rejected"
    disconnected = "Disconnected"


class SharedPrivateLinkResourceStatus(str, Enum):

    pending = "Pending"
    approved = "Approved"
    rejected = "Rejected"
    disconnected = "Disconnected"


class SharedPrivateLinkResourceProvisioningState(str, Enum):

    updating = "Updating"
    deleting = "Deleting"
    failed = "Failed"
    succeeded = "Succeeded"
    incomplete = "Incomplete"


class HostingMode(str, Enum):

    default = "default"
    high_density = "highDensity"


class PublicNetworkAccess(str, Enum):

    enabled = "enabled"
    disabled = "disabled"


class SearchServiceStatus(str, Enum):

    running = "running"
    provisioning = "provisioning"
    deleting = "deleting"
    degraded = "degraded"
    disabled = "disabled"
    error = "error"


class ProvisioningState(str, Enum):

    succeeded = "succeeded"
    provisioning = "provisioning"
    failed = "failed"


class IdentityType(str, Enum):

    none = "None"
    system_assigned = "SystemAssigned"


class SharedPrivateLinkResourceAsyncOperationResult(str, Enum):

    running = "Running"
    succeeded = "Succeeded"
    failed = "Failed"


class AdminKeyKind(str, Enum):

    primary = "primary"
    secondary = "secondary"
