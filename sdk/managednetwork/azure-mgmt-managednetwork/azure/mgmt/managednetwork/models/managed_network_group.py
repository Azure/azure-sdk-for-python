# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .proxy_resource import ProxyResource


class ManagedNetworkGroup(ProxyResource):
    """The Managed Network Group resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Fully qualified resource Id for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    :vartype id: str
    :ivar name: The name of the resource
    :vartype name: str
    :ivar type: The type of the resource. Ex-
     Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
    :vartype type: str
    :param location: The geo-location where the resource lives
    :type location: str
    :ivar provisioning_state: Provisioning state of the ManagedNetwork
     resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
     Possible values include: 'Updating', 'Deleting', 'Failed', 'Succeeded'
    :vartype provisioning_state: str or
     ~azure.mgmt.managednetwork.v2019_06_01_pre.models.ProvisioningState
    :ivar etag: A unique read-only string that changes whenever the resource
     is updated.
    :vartype etag: str
    :param management_groups: The collection of management groups covered by
     the Managed Network
    :type management_groups:
     list[~azure.mgmt.managednetwork.v2019_06_01_pre.models.ResourceId]
    :param subscriptions: The collection of subscriptions covered by the
     Managed Network
    :type subscriptions:
     list[~azure.mgmt.managednetwork.v2019_06_01_pre.models.ResourceId]
    :param virtual_networks: The collection of virtual nets covered by the
     Managed Network
    :type virtual_networks:
     list[~azure.mgmt.managednetwork.v2019_06_01_pre.models.ResourceId]
    :param subnets: The collection of  subnets covered by the Managed Network
    :type subnets:
     list[~azure.mgmt.managednetwork.v2019_06_01_pre.models.ResourceId]
    :param kind: Responsibility role under which this Managed Network Group
     will be created. Possible values include: 'Connectivity'
    :type kind: str or ~azure.mgmt.managednetwork.v2019_06_01_pre.models.Kind
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'etag': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'etag': {'key': 'properties.etag', 'type': 'str'},
        'management_groups': {'key': 'properties.managementGroups', 'type': '[ResourceId]'},
        'subscriptions': {'key': 'properties.subscriptions', 'type': '[ResourceId]'},
        'virtual_networks': {'key': 'properties.virtualNetworks', 'type': '[ResourceId]'},
        'subnets': {'key': 'properties.subnets', 'type': '[ResourceId]'},
        'kind': {'key': 'kind', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(ManagedNetworkGroup, self).__init__(**kwargs)
        self.provisioning_state = None
        self.etag = None
        self.management_groups = kwargs.get('management_groups', None)
        self.subscriptions = kwargs.get('subscriptions', None)
        self.virtual_networks = kwargs.get('virtual_networks', None)
        self.subnets = kwargs.get('subnets', None)
        self.kind = kwargs.get('kind', None)
