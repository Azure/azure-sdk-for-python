# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

try:
    from .resource_id_py3 import ResourceId
    from .scope_py3 import Scope
    from .managed_network_group_py3 import ManagedNetworkGroup
    from .managed_network_peering_policy_properties_py3 import ManagedNetworkPeeringPolicyProperties
    from .managed_network_peering_policy_py3 import ManagedNetworkPeeringPolicy
    from .connectivity_collection_py3 import ConnectivityCollection
    from .managed_network_py3 import ManagedNetwork
    from .managed_network_update_py3 import ManagedNetworkUpdate
    from .scope_assignment_py3 import ScopeAssignment
    from .hub_and_spoke_peering_policy_properties_py3 import HubAndSpokePeeringPolicyProperties
    from .mesh_peering_policy_properties_py3 import MeshPeeringPolicyProperties
    from .error_response_py3 import ErrorResponse, ErrorResponseException
    from .operation_display_py3 import OperationDisplay
    from .operation_py3 import Operation
    from .resource_py3 import Resource
    from .tracked_resource_py3 import TrackedResource
    from .proxy_resource_py3 import ProxyResource
    from .resource_properties_py3 import ResourceProperties
except (SyntaxError, ImportError):
    from .resource_id import ResourceId
    from .scope import Scope
    from .managed_network_group import ManagedNetworkGroup
    from .managed_network_peering_policy_properties import ManagedNetworkPeeringPolicyProperties
    from .managed_network_peering_policy import ManagedNetworkPeeringPolicy
    from .connectivity_collection import ConnectivityCollection
    from .managed_network import ManagedNetwork
    from .managed_network_update import ManagedNetworkUpdate
    from .scope_assignment import ScopeAssignment
    from .hub_and_spoke_peering_policy_properties import HubAndSpokePeeringPolicyProperties
    from .mesh_peering_policy_properties import MeshPeeringPolicyProperties
    from .error_response import ErrorResponse, ErrorResponseException
    from .operation_display import OperationDisplay
    from .operation import Operation
    from .resource import Resource
    from .tracked_resource import TrackedResource
    from .proxy_resource import ProxyResource
    from .resource_properties import ResourceProperties
from .managed_network_paged import ManagedNetworkPaged
from .scope_assignment_paged import ScopeAssignmentPaged
from .managed_network_group_paged import ManagedNetworkGroupPaged
from .managed_network_peering_policy_paged import ManagedNetworkPeeringPolicyPaged
from .operation_paged import OperationPaged
from .managed_network_management_client_enums import (
    Kind,
    Type,
    ProvisioningState,
)

__all__ = [
    'ResourceId',
    'Scope',
    'ManagedNetworkGroup',
    'ManagedNetworkPeeringPolicyProperties',
    'ManagedNetworkPeeringPolicy',
    'ConnectivityCollection',
    'ManagedNetwork',
    'ManagedNetworkUpdate',
    'ScopeAssignment',
    'HubAndSpokePeeringPolicyProperties',
    'MeshPeeringPolicyProperties',
    'ErrorResponse', 'ErrorResponseException',
    'OperationDisplay',
    'Operation',
    'Resource',
    'TrackedResource',
    'ProxyResource',
    'ResourceProperties',
    'ManagedNetworkPaged',
    'ScopeAssignmentPaged',
    'ManagedNetworkGroupPaged',
    'ManagedNetworkPeeringPolicyPaged',
    'OperationPaged',
    'Kind',
    'Type',
    'ProvisioningState',
]
