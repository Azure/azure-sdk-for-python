# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=useless-super-delegation

import datetime
from typing import Any, Dict, List, Mapping, Optional, TYPE_CHECKING, Union, overload

from .._utils.model_base import Model as _Model, rest_field

if TYPE_CHECKING:
    from .. import models as _models


class CancelOperationsRequest(_Model):
    """This is the request to cancel running operations in scheduled actions using the operation ids.

    :ivar operation_ids: The list of operation ids to cancel operations on. Required.
    :vartype operation_ids: list[str]
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    operation_ids: List[str] = rest_field(
        name="operationIds", visibility=["read", "create", "update", "delete", "query"]
    )
    """The list of operation ids to cancel operations on. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        operation_ids: List[str],
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class CancelOperationsResponse(_Model):
    """This is the response from a cancel operations request.

    :ivar results: An array of resource operations that were successfully cancelled. Required.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    results: List["_models.ResourceOperation"] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """An array of resource operations that were successfully cancelled. Required."""

    @overload
    def __init__(
        self,
        *,
        results: List["_models.ResourceOperation"],
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class CreateResourceOperationResponse(_Model):
    """The response from a create request.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the create request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the start request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the start request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    description: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The description of the operation response. Required."""
    type: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The type of resources used in the create request eg virtual machines. Required."""
    location: str = rest_field(visibility=["read", "create"])
    """The location of the start request eg westus. Required."""
    results: Optional[List["_models.ResourceOperation"]] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """The results from the start request if no errors exist."""

    @overload
    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class DeallocateResourceOperationResponse(_Model):
    """The response from a deallocate request.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the deallocate request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the deallocate request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the deallocate request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    description: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The description of the operation response. Required."""
    type: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The type of resources used in the deallocate request eg virtual machines. Required."""
    location: str = rest_field(visibility=["read", "create"])
    """The location of the deallocate request eg westus. Required."""
    results: Optional[List["_models.ResourceOperation"]] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """The results from the deallocate request if no errors exist."""

    @overload
    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class DeleteResourceOperationResponse(_Model):
    """The response from a delete request.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the delete request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the start request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the start request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    description: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The description of the operation response. Required."""
    type: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The type of resources used in the delete request eg virtual machines. Required."""
    location: str = rest_field(visibility=["read", "create"])
    """The location of the start request eg westus. Required."""
    results: Optional[List["_models.ResourceOperation"]] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """The results from the start request if no errors exist."""

    @overload
    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ErrorAdditionalInfo(_Model):
    """The resource management error additional info.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    type: Optional[str] = rest_field(visibility=["read"])
    """The additional info type."""
    info: Optional[Any] = rest_field(visibility=["read"])
    """The additional info."""


class ErrorDetail(_Model):
    """The error detail.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.computeschedule.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.computeschedule.models.ErrorAdditionalInfo]
    """

    code: Optional[str] = rest_field(visibility=["read"])
    """The error code."""
    message: Optional[str] = rest_field(visibility=["read"])
    """The error message."""
    target: Optional[str] = rest_field(visibility=["read"])
    """The error target."""
    details: Optional[List["_models.ErrorDetail"]] = rest_field(visibility=["read"])
    """The error details."""
    additional_info: Optional[List["_models.ErrorAdditionalInfo"]] = rest_field(
        name="additionalInfo", visibility=["read"]
    )
    """The error additional info."""


class ErrorResponse(_Model):
    """Error response.

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.computeschedule.models.ErrorDetail
    """

    error: Optional["_models.ErrorDetail"] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The error object."""

    @overload
    def __init__(
        self,
        *,
        error: Optional["_models.ErrorDetail"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ExecuteCreateRequest(_Model):
    """The ExecuteCreateRequest request for create operations.

    :ivar resource_config_parameters: resource creation payload. Required.
    :vartype resource_config_parameters:
     ~azure.mgmt.computeschedule.models.ResourceProvisionPayload
    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar correlationid: CorrelationId item.
    :vartype correlationid: str
    """

    resource_config_parameters: "_models.ResourceProvisionPayload" = rest_field(
        name="resourceConfigParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """resource creation payload. Required."""
    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    correlationid: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item."""

    @overload
    def __init__(
        self,
        *,
        resource_config_parameters: "_models.ResourceProvisionPayload",
        execution_parameters: "_models.ExecutionParameters",
        correlationid: Optional[str] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ExecuteDeallocateRequest(_Model):
    """The ExecuteDeallocateRequest request for executeDeallocate operations.

    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    resources: "_models.Resources" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resources for the request. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ExecuteDeleteRequest(_Model):
    """The ExecuteDeleteRequest for delete VM operation.

    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item.
    :vartype correlationid: str
    :ivar force_deletion: Forced delete resource item.
    :vartype force_deletion: bool
    """

    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    resources: "_models.Resources" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resources for the request. Required."""
    correlationid: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item."""
    force_deletion: Optional[bool] = rest_field(
        name="forceDeletion", visibility=["read", "create", "update", "delete", "query"]
    )
    """Forced delete resource item."""

    @overload
    def __init__(
        self,
        *,
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: Optional[str] = None,
        force_deletion: Optional[bool] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ExecuteHibernateRequest(_Model):
    """The ExecuteHibernateRequest request for executeHibernate operations.

    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    resources: "_models.Resources" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resources for the request. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ExecuteStartRequest(_Model):
    """The ExecuteStartRequest request for executeStart operations.

    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    resources: "_models.Resources" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resources for the request. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ExecutionParameters(_Model):
    """Extra details needed to run the user's request.

    :ivar optimization_preference: Details that could optimize the user's request. Known values
     are: "Cost", "Availability", and "CostAvailabilityBalanced".
    :vartype optimization_preference: str or
     ~azure.mgmt.computeschedule.models.OptimizationPreference
    :ivar retry_policy: Retry policy the user can pass.
    :vartype retry_policy: ~azure.mgmt.computeschedule.models.RetryPolicy
    """

    optimization_preference: Optional[Union[str, "_models.OptimizationPreference"]] = rest_field(
        name="optimizationPreference", visibility=["read", "create", "update", "delete", "query"]
    )
    """Details that could optimize the user's request. Known values are: \"Cost\", \"Availability\",
     and \"CostAvailabilityBalanced\"."""
    retry_policy: Optional["_models.RetryPolicy"] = rest_field(
        name="retryPolicy", visibility=["read", "create", "update", "delete", "query"]
    )
    """Retry policy the user can pass."""

    @overload
    def __init__(
        self,
        *,
        optimization_preference: Optional[Union[str, "_models.OptimizationPreference"]] = None,
        retry_policy: Optional["_models.RetryPolicy"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class GetOperationErrorsRequest(_Model):
    """This is the request to get errors per vm operations.

    :ivar operation_ids: The list of operation ids to query errors of. Required.
    :vartype operation_ids: list[str]
    """

    operation_ids: List[str] = rest_field(
        name="operationIds", visibility=["read", "create", "update", "delete", "query"]
    )
    """The list of operation ids to query errors of. Required."""

    @overload
    def __init__(
        self,
        *,
        operation_ids: List[str],
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class GetOperationErrorsResponse(_Model):
    """This is the response from a get operations errors request.

    :ivar results: An array of operationids and their corresponding errors if any. Required.
    :vartype results: list[~azure.mgmt.computeschedule.models.OperationErrorsResult]
    """

    results: List["_models.OperationErrorsResult"] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """An array of operationids and their corresponding errors if any. Required."""

    @overload
    def __init__(
        self,
        *,
        results: List["_models.OperationErrorsResult"],
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class GetOperationStatusRequest(_Model):
    """This is the request to get operation status using operationids.

    :ivar operation_ids: The list of operation ids to get the status of. Required.
    :vartype operation_ids: list[str]
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    operation_ids: List[str] = rest_field(
        name="operationIds", visibility=["read", "create", "update", "delete", "query"]
    )
    """The list of operation ids to get the status of. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        operation_ids: List[str],
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class GetOperationStatusResponse(_Model):
    """This is the response from a get operations status request.

    :ivar results: An array of resource operations based on their operation ids. Required.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    results: List["_models.ResourceOperation"] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """An array of resource operations based on their operation ids. Required."""

    @overload
    def __init__(
        self,
        *,
        results: List["_models.ResourceOperation"],
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class HibernateResourceOperationResponse(_Model):
    """The response from a Hibernate request.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the Hibernate request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the Hibernate request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the Hibernate request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    description: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The description of the operation response. Required."""
    type: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The type of resources used in the Hibernate request eg virtual machines. Required."""
    location: str = rest_field(visibility=["read", "create"])
    """The location of the Hibernate request eg westus. Required."""
    results: Optional[List["_models.ResourceOperation"]] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """The results from the Hibernate request if no errors exist."""

    @overload
    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class Operation(_Model):
    """REST API Operation.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for Azure Resource Manager/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.computeschedule.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.computeschedule.models.Origin
    :ivar action_type: Extensible enum. Indicates the action type. "Internal" refers to actions
     that are for internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.computeschedule.models.ActionType
    """

    name: Optional[str] = rest_field(visibility=["read"])
    """The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     \"Microsoft.Compute/virtualMachines/write\",
     \"Microsoft.Compute/virtualMachines/capture/action\"."""
    is_data_action: Optional[bool] = rest_field(name="isDataAction", visibility=["read"])
    """Whether the operation applies to data-plane. This is \"true\" for data-plane operations and
     \"false\" for Azure Resource Manager/control-plane operations."""
    display: Optional["_models.OperationDisplay"] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """Localized display information for this particular operation."""
    origin: Optional[Union[str, "_models.Origin"]] = rest_field(visibility=["read"])
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
     logs UX. Default value is \"user,system\". Known values are: \"user\", \"system\", and
     \"user,system\"."""
    action_type: Optional[Union[str, "_models.ActionType"]] = rest_field(name="actionType", visibility=["read"])
    """Extensible enum. Indicates the action type. \"Internal\" refers to actions that are for
     internal only APIs. \"Internal\""""

    @overload
    def __init__(
        self,
        *,
        display: Optional["_models.OperationDisplay"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class OperationDisplay(_Model):
    """Localized display information for and operation.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    provider: Optional[str] = rest_field(visibility=["read"])
    """The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring
     Insights\" or \"Microsoft Compute\"."""
    resource: Optional[str] = rest_field(visibility=["read"])
    """The localized friendly name of the resource type related to this operation. E.g. \"Virtual
     Machines\" or \"Job Schedule Collections\"."""
    operation: Optional[str] = rest_field(visibility=["read"])
    """The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create
     or Update Virtual Machine\", \"Restart Virtual Machine\"."""
    description: Optional[str] = rest_field(visibility=["read"])
    """The short, localized friendly description of the operation; suitable for tool tips and detailed
     views."""


class OperationErrorDetails(_Model):
    """This defines a list of operation errors associated with a unique operationId.

    :ivar error_code: The error code of the operation. Required.
    :vartype error_code: str
    :ivar error_details: The error details of the operation. Required.
    :vartype error_details: str
    :ivar timestamp: The timestamp of the error occurence.
    :vartype timestamp: ~datetime.datetime
    :ivar time_stamp: The timestamp of the error occurence.
    :vartype time_stamp: ~datetime.datetime
    :ivar azure_operation_name: The compute operationid of the Start/Deallocate/Hibernate request.
    :vartype azure_operation_name: str
    :ivar crp_operation_id: The compute operationid of the Start/Deallocate/Hibernate request.
    :vartype crp_operation_id: str
    """

    error_code: str = rest_field(name="errorCode", visibility=["read", "create", "update", "delete", "query"])
    """The error code of the operation. Required."""
    error_details: str = rest_field(name="errorDetails", visibility=["read", "create", "update", "delete", "query"])
    """The error details of the operation. Required."""
    timestamp: Optional[datetime.datetime] = rest_field(
        visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The timestamp of the error occurence."""
    time_stamp: Optional[datetime.datetime] = rest_field(
        name="timeStamp", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The timestamp of the error occurence."""
    azure_operation_name: Optional[str] = rest_field(
        name="azureOperationName", visibility=["read", "create", "update", "delete", "query"]
    )
    """The compute operationid of the Start/Deallocate/Hibernate request."""
    crp_operation_id: Optional[str] = rest_field(
        name="crpOperationId", visibility=["read", "create", "update", "delete", "query"]
    )
    """The compute operationid of the Start/Deallocate/Hibernate request."""

    @overload
    def __init__(
        self,
        *,
        error_code: str,
        error_details: str,
        timestamp: Optional[datetime.datetime] = None,
        time_stamp: Optional[datetime.datetime] = None,
        azure_operation_name: Optional[str] = None,
        crp_operation_id: Optional[str] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class OperationErrorsResult(_Model):
    """This is the first level of operation errors from the request when clients get errors per vm
    operation.

    :ivar operation_id: The operationId identifying a vm operation.
    :vartype operation_id: str
    :ivar creation_time: The creation time of the error result.
    :vartype creation_time: ~datetime.datetime
    :ivar activation_time: The activation time of a vm operation.
    :vartype activation_time: ~datetime.datetime
    :ivar completed_at: The completion time of the operation if the operation was completed.
    :vartype completed_at: ~datetime.datetime
    :ivar operation_errors: A list of errors associated with the operationid.
    :vartype operation_errors: list[~azure.mgmt.computeschedule.models.OperationErrorDetails]
    :ivar request_error_code: Request level error code.
    :vartype request_error_code: str
    :ivar request_error_details: Request level error details.
    :vartype request_error_details: str
    """

    operation_id: Optional[str] = rest_field(
        name="operationId", visibility=["read", "create", "update", "delete", "query"]
    )
    """The operationId identifying a vm operation."""
    creation_time: Optional[datetime.datetime] = rest_field(
        name="creationTime", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The creation time of the error result."""
    activation_time: Optional[datetime.datetime] = rest_field(
        name="activationTime", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The activation time of a vm operation."""
    completed_at: Optional[datetime.datetime] = rest_field(
        name="completedAt", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The completion time of the operation if the operation was completed."""
    operation_errors: Optional[List["_models.OperationErrorDetails"]] = rest_field(
        name="operationErrors", visibility=["read", "create", "update", "delete", "query"]
    )
    """A list of errors associated with the operationid."""
    request_error_code: Optional[str] = rest_field(
        name="requestErrorCode", visibility=["read", "create", "update", "delete", "query"]
    )
    """Request level error code."""
    request_error_details: Optional[str] = rest_field(
        name="requestErrorDetails", visibility=["read", "create", "update", "delete", "query"]
    )
    """Request level error details."""

    @overload
    def __init__(
        self,
        *,
        operation_id: Optional[str] = None,
        creation_time: Optional[datetime.datetime] = None,
        activation_time: Optional[datetime.datetime] = None,
        completed_at: Optional[datetime.datetime] = None,
        operation_errors: Optional[List["_models.OperationErrorDetails"]] = None,
        request_error_code: Optional[str] = None,
        request_error_details: Optional[str] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ResourceOperation(_Model):
    """High level response from an operation on a resource.

    :ivar resource_id: Unique identifier for the resource involved in the operation, eg ArmId.
    :vartype resource_id: str
    :ivar error_code: Resource level error code if it exists.
    :vartype error_code: str
    :ivar error_details: Resource level error details if they exist.
    :vartype error_details: str
    :ivar operation: Details of the operation performed on a resource.
    :vartype operation: ~azure.mgmt.computeschedule.models.ResourceOperationDetails
    """

    resource_id: Optional[str] = rest_field(
        name="resourceId", visibility=["read", "create", "update", "delete", "query"]
    )
    """Unique identifier for the resource involved in the operation, eg ArmId."""
    error_code: Optional[str] = rest_field(name="errorCode", visibility=["read", "create", "update", "delete", "query"])
    """Resource level error code if it exists."""
    error_details: Optional[str] = rest_field(
        name="errorDetails", visibility=["read", "create", "update", "delete", "query"]
    )
    """Resource level error details if they exist."""
    operation: Optional["_models.ResourceOperationDetails"] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """Details of the operation performed on a resource."""

    @overload
    def __init__(
        self,
        *,
        resource_id: Optional[str] = None,
        error_code: Optional[str] = None,
        error_details: Optional[str] = None,
        operation: Optional["_models.ResourceOperationDetails"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ResourceOperationDetails(_Model):
    """The details of a response from an operation on a resource.

    :ivar operation_id: Operation identifier for the unique operation. Required.
    :vartype operation_id: str
    :ivar resource_id: Unique identifier for the resource involved in the operation, eg ArmId.
    :vartype resource_id: str
    :ivar op_type: Type of operation performed on the resources. Known values are: "Unknown",
     "Start", "Deallocate", and "Hibernate".
    :vartype op_type: str or ~azure.mgmt.computeschedule.models.ResourceOperationType
    :ivar subscription_id: Subscription id attached to the request.
    :vartype subscription_id: str
    :ivar deadline: Deadline for the operation.
    :vartype deadline: ~datetime.datetime
    :ivar deadline_type: Type of deadline of the operation. Known values are: "Unknown",
     "InitiateAt", and "CompleteBy".
    :vartype deadline_type: str or ~azure.mgmt.computeschedule.models.DeadlineType
    :ivar state: Current state of the operation. Known values are: "Unknown", "PendingScheduling",
     "Scheduled", "PendingExecution", "Executing", "Succeeded", "Failed", "Cancelled", and
     "Blocked".
    :vartype state: str or ~azure.mgmt.computeschedule.models.OperationState
    :ivar timezone: Timezone for the operation.
    :vartype timezone: str
    :ivar time_zone: Timezone for the operation.
    :vartype time_zone: str
    :ivar resource_operation_error: Operation level errors if they exist.
    :vartype resource_operation_error: ~azure.mgmt.computeschedule.models.ResourceOperationError
    :ivar completed_at: Time the operation was complete if errors are null.
    :vartype completed_at: ~datetime.datetime
    :ivar retry_policy: Retry policy the user can pass.
    :vartype retry_policy: ~azure.mgmt.computeschedule.models.RetryPolicy
    """

    operation_id: str = rest_field(name="operationId", visibility=["read", "create", "update", "delete", "query"])
    """Operation identifier for the unique operation. Required."""
    resource_id: Optional[str] = rest_field(
        name="resourceId", visibility=["read", "create", "update", "delete", "query"]
    )
    """Unique identifier for the resource involved in the operation, eg ArmId."""
    op_type: Optional[Union[str, "_models.ResourceOperationType"]] = rest_field(
        name="opType", visibility=["read", "create", "update", "delete", "query"]
    )
    """Type of operation performed on the resources. Known values are: \"Unknown\", \"Start\",
     \"Deallocate\", and \"Hibernate\"."""
    subscription_id: Optional[str] = rest_field(
        name="subscriptionId", visibility=["read", "create", "update", "delete", "query"]
    )
    """Subscription id attached to the request."""
    deadline: Optional[datetime.datetime] = rest_field(
        visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """Deadline for the operation."""
    deadline_type: Optional[Union[str, "_models.DeadlineType"]] = rest_field(
        name="deadlineType", visibility=["read", "create", "update", "delete", "query"]
    )
    """Type of deadline of the operation. Known values are: \"Unknown\", \"InitiateAt\", and
     \"CompleteBy\"."""
    state: Optional[Union[str, "_models.OperationState"]] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """Current state of the operation. Known values are: \"Unknown\", \"PendingScheduling\",
     \"Scheduled\", \"PendingExecution\", \"Executing\", \"Succeeded\", \"Failed\", \"Cancelled\",
     and \"Blocked\"."""
    timezone: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """Timezone for the operation."""
    time_zone: Optional[str] = rest_field(name="timeZone", visibility=["read", "create", "update", "delete", "query"])
    """Timezone for the operation."""
    resource_operation_error: Optional["_models.ResourceOperationError"] = rest_field(
        name="resourceOperationError", visibility=["read", "create", "update", "delete", "query"]
    )
    """Operation level errors if they exist."""
    completed_at: Optional[datetime.datetime] = rest_field(
        name="completedAt", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """Time the operation was complete if errors are null."""
    retry_policy: Optional["_models.RetryPolicy"] = rest_field(
        name="retryPolicy", visibility=["read", "create", "update", "delete", "query"]
    )
    """Retry policy the user can pass."""

    @overload
    def __init__(
        self,
        *,
        operation_id: str,
        resource_id: Optional[str] = None,
        op_type: Optional[Union[str, "_models.ResourceOperationType"]] = None,
        subscription_id: Optional[str] = None,
        deadline: Optional[datetime.datetime] = None,
        deadline_type: Optional[Union[str, "_models.DeadlineType"]] = None,
        state: Optional[Union[str, "_models.OperationState"]] = None,
        timezone: Optional[str] = None,
        time_zone: Optional[str] = None,
        resource_operation_error: Optional["_models.ResourceOperationError"] = None,
        completed_at: Optional[datetime.datetime] = None,
        retry_policy: Optional["_models.RetryPolicy"] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ResourceOperationError(_Model):
    """These describe errors that occur at the resource level.

    :ivar error_code: Code for the error eg 404, 500. Required.
    :vartype error_code: str
    :ivar error_details: Detailed message about the error. Required.
    :vartype error_details: str
    """

    error_code: str = rest_field(name="errorCode", visibility=["read", "create", "update", "delete", "query"])
    """Code for the error eg 404, 500. Required."""
    error_details: str = rest_field(name="errorDetails", visibility=["read", "create", "update", "delete", "query"])
    """Detailed message about the error. Required."""

    @overload
    def __init__(
        self,
        *,
        error_code: str,
        error_details: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class ResourceProvisionPayload(_Model):
    """Resource creation data model.

    :ivar base_profile: JSON object that contains VM properties that are common across all VMs in
     this batch (if you want to create 100 VMs in this request, and they all have same vmSize, then
     include vmSize in baseProfile).
    :vartype base_profile: dict[str, any]
    :ivar resource_overrides: JSON array, that contains VM properties that should to be overridden
     for each VM in the batch (if you want to create 100 VMs, they all need a distinct computerName
     property, you pass computerNames for each VM in batch in this array), service will merge
     baseProfile with VM specific overrides and create a merged VMProfile.
    :vartype resource_overrides: list[dict[str, any]]
    :ivar resource_count: Number of VMs to be created. Required.
    :vartype resource_count: int
    :ivar resource_prefix: if resourceOverrides doesn't contain "name", service will create name
     based of prefix and ResourceCount e.g. resourceprefix-0,resourceprefix-1..
    :vartype resource_prefix: str
    """

    base_profile: Optional[Dict[str, Any]] = rest_field(
        name="baseProfile", visibility=["read", "create", "update", "delete", "query"]
    )
    """JSON object that contains VM properties that are common across all VMs in this batch (if you
     want to create 100 VMs in this request, and they all have same vmSize, then include vmSize in
     baseProfile)."""
    resource_overrides: Optional[List[Dict[str, Any]]] = rest_field(
        name="resourceOverrides", visibility=["read", "create", "update", "delete", "query"]
    )
    """JSON array, that contains VM properties that should to be overridden for each VM in the batch
     (if you want to create 100 VMs, they all need a distinct computerName property, you pass
     computerNames for each VM in batch in this array), service will merge baseProfile with VM
     specific overrides and create a merged VMProfile."""
    resource_count: int = rest_field(name="resourceCount", visibility=["read", "create", "update", "delete", "query"])
    """Number of VMs to be created. Required."""
    resource_prefix: Optional[str] = rest_field(
        name="resourcePrefix", visibility=["read", "create", "update", "delete", "query"]
    )
    """if resourceOverrides doesn't contain \"name\", service will create name based of prefix and
     ResourceCount e.g. resourceprefix-0,resourceprefix-1.."""

    @overload
    def __init__(
        self,
        *,
        resource_count: int,
        base_profile: Optional[Dict[str, Any]] = None,
        resource_overrides: Optional[List[Dict[str, Any]]] = None,
        resource_prefix: Optional[str] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class Resources(_Model):
    """The resources needed for the user request.

    :ivar ids: The resource ids used for the request. Required.
    :vartype ids: list[str]
    """

    ids: List[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resource ids used for the request. Required."""

    @overload
    def __init__(
        self,
        *,
        ids: List[str],
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class RetryPolicy(_Model):
    """The retry policy for the user request.

    :ivar retry_count: Retry count for user request.
    :vartype retry_count: int
    :ivar retry_window_in_minutes: Retry window in minutes for user request.
    :vartype retry_window_in_minutes: int
    """

    retry_count: Optional[int] = rest_field(
        name="retryCount", visibility=["read", "create", "update", "delete", "query"]
    )
    """Retry count for user request."""
    retry_window_in_minutes: Optional[int] = rest_field(
        name="retryWindowInMinutes", visibility=["read", "create", "update", "delete", "query"]
    )
    """Retry window in minutes for user request."""

    @overload
    def __init__(
        self,
        *,
        retry_count: Optional[int] = None,
        retry_window_in_minutes: Optional[int] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class Schedule(_Model):
    """The schedule details for the user request.

    :ivar deadline: The deadline for the operation.
    :vartype deadline: ~datetime.datetime
    :ivar dead_line: The deadline for the operation.
    :vartype dead_line: ~datetime.datetime
    :ivar timezone: The timezone for the operation.
    :vartype timezone: str
    :ivar time_zone: The timezone for the operation.
    :vartype time_zone: str
    :ivar deadline_type: The deadlinetype of the operation, this can either be InitiateAt or
     CompleteBy. Required. Known values are: "Unknown", "InitiateAt", and "CompleteBy".
    :vartype deadline_type: str or ~azure.mgmt.computeschedule.models.DeadlineType
    """

    deadline: Optional[datetime.datetime] = rest_field(
        visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The deadline for the operation."""
    dead_line: Optional[datetime.datetime] = rest_field(
        name="deadLine", visibility=["read", "create", "update", "delete", "query"], format="rfc3339"
    )
    """The deadline for the operation."""
    timezone: Optional[str] = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The timezone for the operation."""
    time_zone: Optional[str] = rest_field(name="timeZone", visibility=["read", "create", "update", "delete", "query"])
    """The timezone for the operation."""
    deadline_type: Union[str, "_models.DeadlineType"] = rest_field(
        name="deadlineType", visibility=["read", "create", "update", "delete", "query"]
    )
    """The deadlinetype of the operation, this can either be InitiateAt or CompleteBy. Required. Known
     values are: \"Unknown\", \"InitiateAt\", and \"CompleteBy\"."""

    @overload
    def __init__(
        self,
        *,
        deadline_type: Union[str, "_models.DeadlineType"],
        deadline: Optional[datetime.datetime] = None,
        dead_line: Optional[datetime.datetime] = None,
        timezone: Optional[str] = None,
        time_zone: Optional[str] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class StartResourceOperationResponse(_Model):
    """The response from a start request.

    :ivar description: The description of the operation response. Required.
    :vartype description: str
    :ivar type: The type of resources used in the start request eg virtual machines. Required.
    :vartype type: str
    :ivar location: The location of the start request eg westus. Required.
    :vartype location: str
    :ivar results: The results from the start request if no errors exist.
    :vartype results: list[~azure.mgmt.computeschedule.models.ResourceOperation]
    """

    description: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The description of the operation response. Required."""
    type: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The type of resources used in the start request eg virtual machines. Required."""
    location: str = rest_field(visibility=["read", "create"])
    """The location of the start request eg westus. Required."""
    results: Optional[List["_models.ResourceOperation"]] = rest_field(
        visibility=["read", "create", "update", "delete", "query"]
    )
    """The results from the start request if no errors exist."""

    @overload
    def __init__(
        self,
        *,
        description: str,
        type: str,
        location: str,
        results: Optional[List["_models.ResourceOperation"]] = None,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class SubmitDeallocateRequest(_Model):
    """The deallocate request for resources.

    :ivar schedule: The schedule for the request. Required.
    :vartype schedule: ~azure.mgmt.computeschedule.models.Schedule
    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    schedule: "_models.Schedule" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The schedule for the request. Required."""
    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    resources: "_models.Resources" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resources for the request. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        schedule: "_models.Schedule",
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class SubmitHibernateRequest(_Model):
    """This is the request for hibernate.

    :ivar schedule: The schedule for the request. Required.
    :vartype schedule: ~azure.mgmt.computeschedule.models.Schedule
    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    schedule: "_models.Schedule" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The schedule for the request. Required."""
    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    resources: "_models.Resources" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resources for the request. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        schedule: "_models.Schedule",
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)


class SubmitStartRequest(_Model):
    """This is the request for start.

    :ivar schedule: The schedule for the request. Required.
    :vartype schedule: ~azure.mgmt.computeschedule.models.Schedule
    :ivar execution_parameters: The execution parameters for the request. Required.
    :vartype execution_parameters: ~azure.mgmt.computeschedule.models.ExecutionParameters
    :ivar resources: The resources for the request. Required.
    :vartype resources: ~azure.mgmt.computeschedule.models.Resources
    :ivar correlationid: CorrelationId item. Required.
    :vartype correlationid: str
    """

    schedule: "_models.Schedule" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The schedule for the request. Required."""
    execution_parameters: "_models.ExecutionParameters" = rest_field(
        name="executionParameters", visibility=["read", "create", "update", "delete", "query"]
    )
    """The execution parameters for the request. Required."""
    resources: "_models.Resources" = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """The resources for the request. Required."""
    correlationid: str = rest_field(visibility=["read", "create", "update", "delete", "query"])
    """CorrelationId item. Required."""

    @overload
    def __init__(
        self,
        *,
        schedule: "_models.Schedule",
        execution_parameters: "_models.ExecutionParameters",
        resources: "_models.Resources",
        correlationid: str,
    ) -> None: ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]) -> None:
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:
        super().__init__(*args, **kwargs)
