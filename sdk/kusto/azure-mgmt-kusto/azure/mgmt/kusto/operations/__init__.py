# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._clusters_operations import ClustersOperations  # type: ignore
from ._cluster_principal_assignments_operations import ClusterPrincipalAssignmentsOperations  # type: ignore
from ._skus_operations import SkusOperations  # type: ignore
from ._databases_operations import DatabasesOperations  # type: ignore
from ._attached_database_configurations_operations import AttachedDatabaseConfigurationsOperations  # type: ignore
from ._managed_private_endpoints_operations import ManagedPrivateEndpointsOperations  # type: ignore
from ._database_operations import DatabaseOperations  # type: ignore
from ._database_principal_assignments_operations import DatabasePrincipalAssignmentsOperations  # type: ignore
from ._scripts_operations import ScriptsOperations  # type: ignore
from ._sandbox_custom_images_operations import SandboxCustomImagesOperations  # type: ignore
from ._private_endpoint_connections_operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._private_link_resources_operations import PrivateLinkResourcesOperations  # type: ignore
from ._data_connections_operations import DataConnectionsOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._operations_results_operations import OperationsResultsOperations  # type: ignore
from ._operations_results_location_operations import OperationsResultsLocationOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ClustersOperations",
    "ClusterPrincipalAssignmentsOperations",
    "SkusOperations",
    "DatabasesOperations",
    "AttachedDatabaseConfigurationsOperations",
    "ManagedPrivateEndpointsOperations",
    "DatabaseOperations",
    "DatabasePrincipalAssignmentsOperations",
    "ScriptsOperations",
    "SandboxCustomImagesOperations",
    "PrivateEndpointConnectionsOperations",
    "PrivateLinkResourcesOperations",
    "DataConnectionsOperations",
    "Operations",
    "OperationsResultsOperations",
    "OperationsResultsLocationOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
