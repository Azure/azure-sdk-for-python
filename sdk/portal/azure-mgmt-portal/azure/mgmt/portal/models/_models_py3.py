# pylint: disable=line-too-long,useless-suppression,too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from collections.abc import MutableMapping
import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .._utils import serialization as _serialization

if TYPE_CHECKING:
    from .. import models as _models
JSON = MutableMapping[str, Any]


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.portal.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.type: Optional[str] = None
        self.system_data: Optional["_models.SystemData"] = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.portal.models.SystemData
    """


class Configuration(ProxyResource):
    """The tenant configuration resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.portal.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.portal.models.ConfigurationProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "ConfigurationProperties"},
    }

    def __init__(self, *, properties: Optional["_models.ConfigurationProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.portal.models.ConfigurationProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class ConfigurationListResult(_serialization.Model):
    """The response of a Configuration list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Configuration items on this page. Required.
    :vartype value: list[~azure.mgmt.portal.models.Configuration]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Configuration]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Configuration"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Configuration items on this page. Required.
        :paramtype value: list[~azure.mgmt.portal.models.Configuration]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ConfigurationProperties(_serialization.Model):
    """Tenant Configuration Properties with Provisioning state.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar enforce_private_markdown_storage: When flag is set to true Markdown tile will require
     external storage configuration (URI). The inline content configuration will be prohibited.
    :vartype enforce_private_markdown_storage: bool
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.portal.models.ResourceProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "enforce_private_markdown_storage": {"key": "enforcePrivateMarkdownStorage", "type": "bool"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, enforce_private_markdown_storage: Optional[bool] = None, **kwargs: Any) -> None:
        """
        :keyword enforce_private_markdown_storage: When flag is set to true Markdown tile will require
         external storage configuration (URI). The inline content configuration will be prohibited.
        :paramtype enforce_private_markdown_storage: bool
        """
        super().__init__(**kwargs)
        self.enforce_private_markdown_storage = enforce_private_markdown_storage
        self.provisioning_state: Optional[Union[str, "_models.ResourceProvisioningState"]] = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.portal.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class Dashboard(TrackedResource):
    """The shared dashboard resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.portal.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure.mgmt.portal.models.DashboardPropertiesWithProvisioningState
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "DashboardPropertiesWithProvisioningState"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.DashboardPropertiesWithProvisioningState"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure.mgmt.portal.models.DashboardPropertiesWithProvisioningState
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties


class DashboardLens(_serialization.Model):
    """A dashboard lens.

    All required parameters must be populated in order to send to server.

    :ivar order: The lens order. Required.
    :vartype order: int
    :ivar parts: The dashboard parts. Required.
    :vartype parts: list[~azure.mgmt.portal.models.DashboardParts]
    :ivar metadata: The dashboard len's metadata.
    :vartype metadata: JSON
    """

    _validation = {
        "order": {"required": True},
        "parts": {"required": True},
    }

    _attribute_map = {
        "order": {"key": "order", "type": "int"},
        "parts": {"key": "parts", "type": "[DashboardParts]"},
        "metadata": {"key": "metadata", "type": "object"},
    }

    def __init__(
        self, *, order: int, parts: List["_models.DashboardParts"], metadata: Optional[JSON] = None, **kwargs: Any
    ) -> None:
        """
        :keyword order: The lens order. Required.
        :paramtype order: int
        :keyword parts: The dashboard parts. Required.
        :paramtype parts: list[~azure.mgmt.portal.models.DashboardParts]
        :keyword metadata: The dashboard len's metadata.
        :paramtype metadata: JSON
        """
        super().__init__(**kwargs)
        self.order = order
        self.parts = parts
        self.metadata = metadata


class DashboardListResult(_serialization.Model):
    """The response of a Dashboard list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The Dashboard items on this page. Required.
    :vartype value: list[~azure.mgmt.portal.models.Dashboard]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Dashboard]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Dashboard"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Dashboard items on this page. Required.
        :paramtype value: list[~azure.mgmt.portal.models.Dashboard]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class DashboardPartMetadata(_serialization.Model):
    """A dashboard part metadata.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    MarkdownPartMetadata

    All required parameters must be populated in order to send to server.

    :ivar type: The dashboard part metadata type. Required.
     "Extension/HubsExtension/PartType/MarkdownPart"
    :vartype type: str or ~azure.mgmt.portal.models.DashboardPartMetadataType
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
    }

    _subtype_map = {"type": {"Extension/HubsExtension/PartType/MarkdownPart": "MarkdownPartMetadata"}}

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type: Optional[str] = None


class DashboardParts(_serialization.Model):
    """A dashboard part.

    All required parameters must be populated in order to send to server.

    :ivar position: The dashboard's part position. Required.
    :vartype position: ~azure.mgmt.portal.models.DashboardPartsPosition
    :ivar metadata: The dashboard part's metadata.
    :vartype metadata: ~azure.mgmt.portal.models.DashboardPartMetadata
    """

    _validation = {
        "position": {"required": True},
    }

    _attribute_map = {
        "position": {"key": "position", "type": "DashboardPartsPosition"},
        "metadata": {"key": "metadata", "type": "DashboardPartMetadata"},
    }

    def __init__(
        self,
        *,
        position: "_models.DashboardPartsPosition",
        metadata: Optional["_models.DashboardPartMetadata"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword position: The dashboard's part position. Required.
        :paramtype position: ~azure.mgmt.portal.models.DashboardPartsPosition
        :keyword metadata: The dashboard part's metadata.
        :paramtype metadata: ~azure.mgmt.portal.models.DashboardPartMetadata
        """
        super().__init__(**kwargs)
        self.position = position
        self.metadata = metadata


class DashboardPartsPosition(_serialization.Model):
    """The dashboard's part position.

    All required parameters must be populated in order to send to server.

    :ivar x: The dashboard's part x coordinate. Required.
    :vartype x: int
    :ivar y: The dashboard's part y coordinate. Required.
    :vartype y: int
    :ivar row_span: The dashboard's part row span. Required.
    :vartype row_span: int
    :ivar col_span: The dashboard's part column span. Required.
    :vartype col_span: int
    :ivar metadata: The dashboard part's metadata.
    :vartype metadata: JSON
    """

    _validation = {
        "x": {"required": True},
        "y": {"required": True},
        "row_span": {"required": True},
        "col_span": {"required": True},
    }

    _attribute_map = {
        "x": {"key": "x", "type": "int"},
        "y": {"key": "y", "type": "int"},
        "row_span": {"key": "rowSpan", "type": "int"},
        "col_span": {"key": "colSpan", "type": "int"},
        "metadata": {"key": "metadata", "type": "object"},
    }

    def __init__(
        self, *, x: int, y: int, row_span: int, col_span: int, metadata: Optional[JSON] = None, **kwargs: Any
    ) -> None:
        """
        :keyword x: The dashboard's part x coordinate. Required.
        :paramtype x: int
        :keyword y: The dashboard's part y coordinate. Required.
        :paramtype y: int
        :keyword row_span: The dashboard's part row span. Required.
        :paramtype row_span: int
        :keyword col_span: The dashboard's part column span. Required.
        :paramtype col_span: int
        :keyword metadata: The dashboard part's metadata.
        :paramtype metadata: JSON
        """
        super().__init__(**kwargs)
        self.x = x
        self.y = y
        self.row_span = row_span
        self.col_span = col_span
        self.metadata = metadata


class DashboardProperties(_serialization.Model):
    """The shared dashboard properties.

    :ivar lenses: The dashboard lenses.
    :vartype lenses: list[~azure.mgmt.portal.models.DashboardLens]
    :ivar metadata: The dashboard metadata.
    :vartype metadata: JSON
    """

    _attribute_map = {
        "lenses": {"key": "lenses", "type": "[DashboardLens]"},
        "metadata": {"key": "metadata", "type": "object"},
    }

    def __init__(
        self, *, lenses: Optional[List["_models.DashboardLens"]] = None, metadata: Optional[JSON] = None, **kwargs: Any
    ) -> None:
        """
        :keyword lenses: The dashboard lenses.
        :paramtype lenses: list[~azure.mgmt.portal.models.DashboardLens]
        :keyword metadata: The dashboard metadata.
        :paramtype metadata: JSON
        """
        super().__init__(**kwargs)
        self.lenses = lenses
        self.metadata = metadata


class DashboardPropertiesWithProvisioningState(_serialization.Model):
    """Dashboard Properties with Provisioning state.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar lenses: The dashboard lenses.
    :vartype lenses: list[~azure.mgmt.portal.models.DashboardLens]
    :ivar metadata: The dashboard metadata.
    :vartype metadata: JSON
    :ivar provisioning_state: The status of the last operation. Known values are: "Succeeded",
     "Failed", and "Canceled".
    :vartype provisioning_state: str or ~azure.mgmt.portal.models.ResourceProvisioningState
    """

    _validation = {
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "lenses": {"key": "lenses", "type": "[DashboardLens]"},
        "metadata": {"key": "metadata", "type": "object"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self, *, lenses: Optional[List["_models.DashboardLens"]] = None, metadata: Optional[JSON] = None, **kwargs: Any
    ) -> None:
        """
        :keyword lenses: The dashboard lenses.
        :paramtype lenses: list[~azure.mgmt.portal.models.DashboardLens]
        :keyword metadata: The dashboard metadata.
        :paramtype metadata: JSON
        """
        super().__init__(**kwargs)
        self.lenses = lenses
        self.metadata = metadata
        self.provisioning_state: Optional[Union[str, "_models.ResourceProvisioningState"]] = None


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type: Optional[str] = None
        self.info: Optional[JSON] = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.portal.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.portal.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code: Optional[str] = None
        self.message: Optional[str] = None
        self.target: Optional[str] = None
        self.details: Optional[List["_models.ErrorDetail"]] = None
        self.additional_info: Optional[List["_models.ErrorAdditionalInfo"]] = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.portal.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.portal.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class MarkdownPartMetadata(DashboardPartMetadata):
    """Markdown part metadata.

    All required parameters must be populated in order to send to server.

    :ivar type: The dashboard part metadata type. Required.
     "Extension/HubsExtension/PartType/MarkdownPart"
    :vartype type: str or ~azure.mgmt.portal.models.DashboardPartMetadataType
    :ivar inputs: Input to dashboard part.
    :vartype inputs: list[JSON]
    :ivar settings: Markdown part settings.
    :vartype settings: ~azure.mgmt.portal.models.MarkdownPartMetadataSettings
    """

    _validation = {
        "type": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "inputs": {"key": "inputs", "type": "[object]"},
        "settings": {"key": "settings", "type": "MarkdownPartMetadataSettings"},
    }

    def __init__(
        self,
        *,
        inputs: Optional[List[JSON]] = None,
        settings: Optional["_models.MarkdownPartMetadataSettings"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword inputs: Input to dashboard part.
        :paramtype inputs: list[JSON]
        :keyword settings: Markdown part settings.
        :paramtype settings: ~azure.mgmt.portal.models.MarkdownPartMetadataSettings
        """
        super().__init__(**kwargs)
        self.type: str = "Extension/HubsExtension/PartType/MarkdownPart"
        self.inputs = inputs
        self.settings = settings


class MarkdownPartMetadataSettings(_serialization.Model):
    """Markdown part settings.

    :ivar content: The content of markdown part.
    :vartype content: ~azure.mgmt.portal.models.MarkdownPartMetadataSettingsContent
    """

    _attribute_map = {
        "content": {"key": "content", "type": "MarkdownPartMetadataSettingsContent"},
    }

    def __init__(
        self, *, content: Optional["_models.MarkdownPartMetadataSettingsContent"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword content: The content of markdown part.
        :paramtype content: ~azure.mgmt.portal.models.MarkdownPartMetadataSettingsContent
        """
        super().__init__(**kwargs)
        self.content = content


class MarkdownPartMetadataSettingsContent(_serialization.Model):
    """The content of markdown part.

    :ivar content: The content of the markdown part.
    :vartype content: str
    :ivar title: The title of the markdown part.
    :vartype title: str
    :ivar subtitle: The subtitle of the markdown part.
    :vartype subtitle: str
    :ivar markdown_source: The source of the content of the markdown part.
    :vartype markdown_source: int
    :ivar markdown_uri: The uri of markdown content.
    :vartype markdown_uri: str
    """

    _attribute_map = {
        "content": {"key": "content", "type": "str"},
        "title": {"key": "title", "type": "str"},
        "subtitle": {"key": "subtitle", "type": "str"},
        "markdown_source": {"key": "markdownSource", "type": "int"},
        "markdown_uri": {"key": "markdownUri", "type": "str"},
    }

    def __init__(
        self,
        *,
        content: Optional[str] = None,
        title: Optional[str] = None,
        subtitle: Optional[str] = None,
        markdown_source: Optional[int] = None,
        markdown_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword content: The content of the markdown part.
        :paramtype content: str
        :keyword title: The title of the markdown part.
        :paramtype title: str
        :keyword subtitle: The subtitle of the markdown part.
        :paramtype subtitle: str
        :keyword markdown_source: The source of the content of the markdown part.
        :paramtype markdown_source: int
        :keyword markdown_uri: The uri of markdown content.
        :paramtype markdown_uri: str
        """
        super().__init__(**kwargs)
        self.content = content
        self.title = title
        self.subtitle = subtitle
        self.markdown_source = markdown_source
        self.markdown_uri = markdown_uri


class Operation(_serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.portal.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Known values are: "user", "system",
     and "user,system".
    :vartype origin: str or ~azure.mgmt.portal.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. "Internal"
    :vartype action_type: str or ~azure.mgmt.portal.models.ActionType
    """

    _validation = {
        "name": {"readonly": True},
        "is_data_action": {"readonly": True},
        "origin": {"readonly": True},
        "action_type": {"readonly": True},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "is_data_action": {"key": "isDataAction", "type": "bool"},
        "display": {"key": "display", "type": "OperationDisplay"},
        "origin": {"key": "origin", "type": "str"},
        "action_type": {"key": "actionType", "type": "str"},
    }

    def __init__(self, *, display: Optional["_models.OperationDisplay"] = None, **kwargs: Any) -> None:
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.portal.models.OperationDisplay
        """
        super().__init__(**kwargs)
        self.name: Optional[str] = None
        self.is_data_action: Optional[bool] = None
        self.display = display
        self.origin: Optional[Union[str, "_models.Origin"]] = None
        self.action_type: Optional[Union[str, "_models.ActionType"]] = None


class OperationDisplay(_serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        "provider": {"readonly": True},
        "resource": {"readonly": True},
        "operation": {"readonly": True},
        "description": {"readonly": True},
    }

    _attribute_map = {
        "provider": {"key": "provider", "type": "str"},
        "resource": {"key": "resource", "type": "str"},
        "operation": {"key": "operation", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.provider: Optional[str] = None
        self.resource: Optional[str] = None
        self.operation: Optional[str] = None
        self.description: Optional[str] = None


class OperationListResult(_serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link
    to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.portal.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        "value": {"readonly": True},
        "next_link": {"readonly": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Operation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.value: Optional[List["_models.Operation"]] = None
        self.next_link: Optional[str] = None


class PatchableDashboard(_serialization.Model):
    """The shared dashboard resource definition.

    :ivar properties: The shared dashboard properties.
    :vartype properties: ~azure.mgmt.portal.models.DashboardProperties
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "DashboardProperties"},
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.DashboardProperties"] = None,
        tags: Optional[Dict[str, str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: The shared dashboard properties.
        :paramtype properties: ~azure.mgmt.portal.models.DashboardProperties
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.tags = tags


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure.mgmt.portal.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.portal.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure.mgmt.portal.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.portal.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class Violation(_serialization.Model):
    """Violation information.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Id of the item that violates tenant configuration.
    :vartype id: str
    :ivar user_id: Id of the user who owns violated item.
    :vartype user_id: str
    :ivar error_message: Error message.
    :vartype error_message: str
    """

    _validation = {
        "id": {"readonly": True},
        "user_id": {"readonly": True},
        "error_message": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "user_id": {"key": "userId", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id: Optional[str] = None
        self.user_id: Optional[str] = None
        self.error_message: Optional[str] = None


class ViolationsList(_serialization.Model):
    """List of list of items that violate tenant's configuration.

    All required parameters must be populated in order to send to server.

    :ivar value: The Violation items on this page. Required.
    :vartype value: list[~azure.mgmt.portal.models.Violation]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[Violation]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.Violation"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The Violation items on this page. Required.
        :paramtype value: list[~azure.mgmt.portal.models.Violation]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link
