# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import Configuration
from ._models_py3 import ConfigurationList
from ._models_py3 import Dashboard
from ._models_py3 import DashboardLens
from ._models_py3 import DashboardListResult
from ._models_py3 import DashboardPartMetadata
from ._models_py3 import DashboardParts
from ._models_py3 import DashboardPartsPosition
from ._models_py3 import ErrorDefinition
from ._models_py3 import ErrorResponse
from ._models_py3 import MarkdownPartMetadata
from ._models_py3 import MarkdownPartMetadataSettings
from ._models_py3 import MarkdownPartMetadataSettingsContent
from ._models_py3 import MarkdownPartMetadataSettingsContentSettings
from ._models_py3 import PatchableDashboard
from ._models_py3 import ProxyResource
from ._models_py3 import Resource
from ._models_py3 import ResourceProviderOperation
from ._models_py3 import ResourceProviderOperationDisplay
from ._models_py3 import ResourceProviderOperationList
from ._models_py3 import Violation
from ._models_py3 import ViolationsList

from ._portal_enums import ConfigurationName
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Configuration",
    "ConfigurationList",
    "Dashboard",
    "DashboardLens",
    "DashboardListResult",
    "DashboardPartMetadata",
    "DashboardParts",
    "DashboardPartsPosition",
    "ErrorDefinition",
    "ErrorResponse",
    "MarkdownPartMetadata",
    "MarkdownPartMetadataSettings",
    "MarkdownPartMetadataSettingsContent",
    "MarkdownPartMetadataSettingsContentSettings",
    "PatchableDashboard",
    "ProxyResource",
    "Resource",
    "ResourceProviderOperation",
    "ResourceProviderOperationDisplay",
    "ResourceProviderOperationList",
    "Violation",
    "ViolationsList",
    "ConfigurationName",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
