# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Dict, List, Optional, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

from ._dfp_enums import *


class CheckInstanceNameAvailabilityParameters(msrest.serialization.Model):
    """Details of DFP instance name request body.

    :ivar name: Name for checking availability.
    :vartype name: str
    :ivar type: The resource type of DFP instance.
    :vartype type: str
    """

    _validation = {
        'name': {'max_length': 63, 'min_length': 3, 'pattern': r'^[a-z][a-z0-9]*$'},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        type: Optional[str] = "Microsoft.Dynamics365FraudProtection/instances",
        **kwargs
    ):
        """
        :keyword name: Name for checking availability.
        :paramtype name: str
        :keyword type: The resource type of DFP instance.
        :paramtype type: str
        """
        super(CheckInstanceNameAvailabilityParameters, self).__init__(**kwargs)
        self.name = name
        self.type = type


class CheckInstanceNameAvailabilityResult(msrest.serialization.Model):
    """The checking result of DFP instance name availability.

    :ivar name_available: Indicator of availability of the DFP instance name.
    :vartype name_available: bool
    :ivar reason: The reason of unavailability.
    :vartype reason: str
    :ivar message: The detailed message of the request unavailability.
    :vartype message: str
    """

    _attribute_map = {
        'name_available': {'key': 'nameAvailable', 'type': 'bool'},
        'reason': {'key': 'reason', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        name_available: Optional[bool] = None,
        reason: Optional[str] = None,
        message: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword name_available: Indicator of availability of the DFP instance name.
        :paramtype name_available: bool
        :keyword reason: The reason of unavailability.
        :paramtype reason: str
        :keyword message: The detailed message of the request unavailability.
        :paramtype message: str
        """
        super(CheckInstanceNameAvailabilityResult, self).__init__(**kwargs)
        self.name_available = name_available
        self.reason = reason
        self.message = message


class Resource(msrest.serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Resource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None


class DFPInstance(Resource):
    """Represents an instance of a DFP instance resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar location: Required. Location of the DFP resource.
    :vartype location: str
    :ivar tags: A set of tags. Key-value pairs of additional resource provisioning properties.
    :vartype tags: dict[str, str]
    :ivar system_data: Metadata pertaining to creation and last modification of the resource.
    :vartype system_data: ~azure.mgmt.dfp.models.SystemData
    :ivar administration: A collection of DFP instance administrators.
    :vartype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
    :ivar provisioning_state: The current deployment state of DFP resource. The provisioningState
     is to indicate states for resource provisioning. Possible values include: "Deleting",
     "Succeeded", "Failed", "Paused", "Suspended", "Provisioning", "Updating", "Suspending",
     "Pausing", "Resuming", "Preparing", "Scaling".
    :vartype provisioning_state: str or ~azure.mgmt.dfp.models.ProvisioningState
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'system_data': {'readonly': True},
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'administration': {'key': 'properties.administration', 'type': 'DFPInstanceAdministrators'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        administration: Optional["DFPInstanceAdministrators"] = None,
        **kwargs
    ):
        """
        :keyword location: Required. Location of the DFP resource.
        :paramtype location: str
        :keyword tags: A set of tags. Key-value pairs of additional resource provisioning properties.
        :paramtype tags: dict[str, str]
        :keyword administration: A collection of DFP instance administrators.
        :paramtype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
        """
        super(DFPInstance, self).__init__(**kwargs)
        self.location = location
        self.tags = tags
        self.system_data = None
        self.administration = administration
        self.provisioning_state = None


class DFPInstanceAdministrators(msrest.serialization.Model):
    """An array of administrator user identities.

    :ivar members: An array of administrator user identities.
    :vartype members: list[str]
    """

    _attribute_map = {
        'members': {'key': 'members', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        members: Optional[List[str]] = None,
        **kwargs
    ):
        """
        :keyword members: An array of administrator user identities.
        :paramtype members: list[str]
        """
        super(DFPInstanceAdministrators, self).__init__(**kwargs)
        self.members = members


class DFPInstanceMutableProperties(msrest.serialization.Model):
    """An object that represents a set of mutable DFP resource properties.

    :ivar administration: A collection of DFP instance administrators.
    :vartype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
    """

    _attribute_map = {
        'administration': {'key': 'administration', 'type': 'DFPInstanceAdministrators'},
    }

    def __init__(
        self,
        *,
        administration: Optional["DFPInstanceAdministrators"] = None,
        **kwargs
    ):
        """
        :keyword administration: A collection of DFP instance administrators.
        :paramtype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
        """
        super(DFPInstanceMutableProperties, self).__init__(**kwargs)
        self.administration = administration


class DFPInstanceProperties(DFPInstanceMutableProperties):
    """Properties of DFP resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar administration: A collection of DFP instance administrators.
    :vartype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
    :ivar provisioning_state: The current deployment state of DFP resource. The provisioningState
     is to indicate states for resource provisioning. Possible values include: "Deleting",
     "Succeeded", "Failed", "Paused", "Suspended", "Provisioning", "Updating", "Suspending",
     "Pausing", "Resuming", "Preparing", "Scaling".
    :vartype provisioning_state: str or ~azure.mgmt.dfp.models.ProvisioningState
    """

    _validation = {
        'provisioning_state': {'readonly': True},
    }

    _attribute_map = {
        'administration': {'key': 'administration', 'type': 'DFPInstanceAdministrators'},
        'provisioning_state': {'key': 'provisioningState', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        administration: Optional["DFPInstanceAdministrators"] = None,
        **kwargs
    ):
        """
        :keyword administration: A collection of DFP instance administrators.
        :paramtype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
        """
        super(DFPInstanceProperties, self).__init__(administration=administration, **kwargs)
        self.provisioning_state = None


class DFPInstances(msrest.serialization.Model):
    """An array of DFP instance resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar value: Required. An array of DFP instance resources.
    :vartype value: list[~azure.mgmt.dfp.models.DFPInstance]
    :ivar next_link: URL to get the next set of operation list results if there are any.
    :vartype next_link: str
    """

    _validation = {
        'value': {'required': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[DFPInstance]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: List["DFPInstance"],
        **kwargs
    ):
        """
        :keyword value: Required. An array of DFP instance resources.
        :paramtype value: list[~azure.mgmt.dfp.models.DFPInstance]
        """
        super(DFPInstances, self).__init__(**kwargs)
        self.value = value
        self.next_link = None


class DFPInstanceUpdateParameters(msrest.serialization.Model):
    """Provision request specification.

    :ivar tags: A set of tags. Key-value pairs of additional provisioning properties.
    :vartype tags: dict[str, str]
    :ivar administration: A collection of DFP instance administrators.
    :vartype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
        'administration': {'key': 'properties.administration', 'type': 'DFPInstanceAdministrators'},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        administration: Optional["DFPInstanceAdministrators"] = None,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Key-value pairs of additional provisioning properties.
        :paramtype tags: dict[str, str]
        :keyword administration: A collection of DFP instance administrators.
        :paramtype administration: ~azure.mgmt.dfp.models.DFPInstanceAdministrators
        """
        super(DFPInstanceUpdateParameters, self).__init__(**kwargs)
        self.tags = tags
        self.administration = administration


class ErrorAdditionalInfo(msrest.serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    _validation = {
        'type': {'readonly': True},
        'info': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'info': {'key': 'info', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorAdditionalInfo, self).__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.dfp.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.dfp.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetail]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorDetail, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.dfp.models.ErrorDetail
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        *,
        error: Optional["ErrorDetail"] = None,
        **kwargs
    ):
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.dfp.models.ErrorDetail
        """
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = error


class Operation(msrest.serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.dfp.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Possible values include: "user",
     "system", "user,system".
    :vartype origin: str or ~azure.mgmt.dfp.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. Possible values include: "Internal".
    :vartype action_type: str or ~azure.mgmt.dfp.models.ActionType
    """

    _validation = {
        'name': {'readonly': True},
        'is_data_action': {'readonly': True},
        'origin': {'readonly': True},
        'action_type': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'is_data_action': {'key': 'isDataAction', 'type': 'bool'},
        'display': {'key': 'display', 'type': 'OperationDisplay'},
        'origin': {'key': 'origin', 'type': 'str'},
        'action_type': {'key': 'actionType', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        display: Optional["OperationDisplay"] = None,
        **kwargs
    ):
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.dfp.models.OperationDisplay
        """
        super(Operation, self).__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(msrest.serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        'provider': {'readonly': True},
        'resource': {'readonly': True},
        'operation': {'readonly': True},
        'description': {'readonly': True},
    }

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationDisplay, self).__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationDisplayValue(msrest.serialization.Model):
    """Display information of an operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation: Friendly name of the operation.
    :vartype operation: str
    :ivar resource: Friendly name of the resource type the operation applies to.
    :vartype resource: str
    :ivar description: Friendly description of the operation.
    :vartype description: str
    :ivar provider: Friendly name of the resource provider.
    :vartype provider: str
    """

    _validation = {
        'operation': {'readonly': True},
        'resource': {'readonly': True},
        'description': {'readonly': True},
        'provider': {'readonly': True},
    }

    _attribute_map = {
        'operation': {'key': 'operation', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'provider': {'key': 'provider', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationDisplayValue, self).__init__(**kwargs)
        self.operation = None
        self.resource = None
        self.description = None
        self.provider = None


class OperationListResult(msrest.serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.dfp.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Operation]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class SystemData(msrest.serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Possible values include:
     "User", "Application", "ManagedIdentity", "Key".
    :vartype created_by_type: str or ~azure.mgmt.dfp.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Possible
     values include: "User", "Application", "ManagedIdentity", "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.dfp.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_by_type': {'key': 'createdByType', 'type': 'str'},
        'created_at': {'key': 'createdAt', 'type': 'iso-8601'},
        'last_modified_by': {'key': 'lastModifiedBy', 'type': 'str'},
        'last_modified_by_type': {'key': 'lastModifiedByType', 'type': 'str'},
        'last_modified_at': {'key': 'lastModifiedAt', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Possible values
         include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype created_by_type: str or ~azure.mgmt.dfp.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Possible
         values include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.dfp.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super(SystemData, self).__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at
