{
    "chosen_version": "2020-03-01-preview",
    "total_api_version_list": ["2020-03-01-preview"],
    "client": {
        "name": "DeviceUpdate",
        "filename": "_device_update",
        "description": "Microsoft Device Update resource provider.",
        "base_url": "\u0027https://management.azure.com\u0027",
        "custom_base_url": null,
        "azure_arm": true,
        "has_lro_operations": true,
        "client_side_validation": false,
        "sync_imports": "{\"typing\": {\"azurecore\": {\"azure.core.credentials\": [\"TokenCredential\"]}}, \"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.mgmt.core\": [\"ARMPipelineClient\"]}, \"local\": {\"._configuration\": [\"DeviceUpdateConfiguration\"], \"._operations_mixin\": [\"DeviceUpdateOperationsMixin\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}, \"azurecore\": {\"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"]}}}",
        "async_imports": "{\"typing\": {\"azurecore\": {\"azure.core.credentials_async\": [\"AsyncTokenCredential\"]}}, \"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.mgmt.core\": [\"AsyncARMPipelineClient\"]}, \"local\": {\"._configuration\": [\"DeviceUpdateConfiguration\"], \"._operations_mixin\": [\"DeviceUpdateOperationsMixin\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}, \"azurecore\": {\"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"]}}}"
    },
    "global_parameters": {
        "sync": {
            "credential": {
                "signature": "credential,  # type: \"TokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials.TokenCredential",
                "required": true
            },
            "subscription_id": {
                "signature": "subscription_id,  # type: str",
                "description": "The Azure subscription ID.",
                "docstring_type": "str",
                "required": true
            }
        },
        "async": {
            "credential": {
                "signature": "credential: \"AsyncTokenCredential\",",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials_async.AsyncTokenCredential",
                "required": true
            },
            "subscription_id": {
                "signature": "subscription_id: str,",
                "description": "The Azure subscription ID.",
                "docstring_type": "str",
                "required": true
            }
        },
        "constant": {
        },
        "call": "credential, subscription_id",
        "service_client_specific": {
            "sync": {
                "api_version": {
                    "signature": "api_version=None, # type: Optional[str]",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "base_url": {
                    "signature": "base_url=None,  # type: Optional[str]",
                    "description": "Service URL",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile=KnownProfiles.default, # type: KnownProfiles",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            },
            "async": {
                "api_version": {
                    "signature": "api_version: Optional[str] = None,",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "base_url": {
                    "signature": "base_url: Optional[str] = None,",
                    "description": "Service URL",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile: KnownProfiles = KnownProfiles.default,",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            }
        }
    },
    "config": {
        "credential": true,
        "credential_scopes": ["https://management.azure.com/.default"],
        "credential_default_policy_type": "BearerTokenCredentialPolicy",
        "credential_default_policy_type_has_async_version": true,
        "credential_key_header_name": null,
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"], \"azure.mgmt.core.policies\": [\"ARMHttpLoggingPolicy\"]}, \"local\": {\"._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"typing\": {\"azurecore\": {\"azure.core.credentials\": [\"TokenCredential\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"], \"azure.mgmt.core.policies\": [\"ARMHttpLoggingPolicy\"]}, \"local\": {\".._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"typing\": {\"azurecore\": {\"azure.core.credentials_async\": [\"AsyncTokenCredential\"]}}}"
    },
    "operation_groups": {
        "accounts": "AccountsOperations",
        "instances": "InstancesOperations",
        "operations": "Operations"
    },
    "operation_mixins": {
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.mgmt.core.exceptions\": [\"ARMErrorFormat\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.mgmt.core.exceptions\": [\"ARMErrorFormat\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Optional\", \"TypeVar\"]}}}",
        "operations": {
            "check_name_availability" : {
                "sync": {
                    "signature": "def check_name_availability(\n    self,\n    request,  # type: \"_models.CheckNameAvailabilityRequest\"\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Checks ADU resource name availability.\n\n:param request: Check Name Availability Request.\n:type request: ~device_update.models.CheckNameAvailabilityRequest\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: CheckNameAvailabilityResponse, or the result of cls(response)\n:rtype: ~device_update.models.CheckNameAvailabilityResponse\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def check_name_availability(\n    self,\n    request: \"_models.CheckNameAvailabilityRequest\",\n    **kwargs\n) -\u003e \"_models.CheckNameAvailabilityResponse\":\n",
                    "doc": "\"\"\"Checks ADU resource name availability.\n\n:param request: Check Name Availability Request.\n:type request: ~device_update.models.CheckNameAvailabilityRequest\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: CheckNameAvailabilityResponse, or the result of cls(response)\n:rtype: ~device_update.models.CheckNameAvailabilityResponse\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "request"
            }
        }
    }
}