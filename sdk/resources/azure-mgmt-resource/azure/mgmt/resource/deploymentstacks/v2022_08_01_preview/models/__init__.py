# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    AzureResourceBase,
    DenySettings,
    DeploymentStack,
    DeploymentStackListResult,
    DeploymentStackProperties,
    DeploymentStackPropertiesActionOnUnmanage,
    DeploymentStackTemplateDefinition,
    DeploymentStacksDebugSetting,
    DeploymentStacksError,
    DeploymentStacksParametersLink,
    DeploymentStacksTemplateLink,
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    ManagedResourceReference,
    ResourceReference,
    ResourceReferenceExtended,
    SystemData,
)

from ._deployment_stacks_client_enums import (  # type: ignore
    CreatedByType,
    DenySettingsMode,
    DenyStatusMode,
    DeploymentStackProvisioningState,
    DeploymentStacksDeleteDetachEnum,
    ResourceStatusMode,
    UnmanageActionManagementGroupMode,
    UnmanageActionResourceGroupMode,
    UnmanageActionResourceMode,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AzureResourceBase",
    "DenySettings",
    "DeploymentStack",
    "DeploymentStackListResult",
    "DeploymentStackProperties",
    "DeploymentStackPropertiesActionOnUnmanage",
    "DeploymentStackTemplateDefinition",
    "DeploymentStacksDebugSetting",
    "DeploymentStacksError",
    "DeploymentStacksParametersLink",
    "DeploymentStacksTemplateLink",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "ManagedResourceReference",
    "ResourceReference",
    "ResourceReferenceExtended",
    "SystemData",
    "CreatedByType",
    "DenySettingsMode",
    "DenyStatusMode",
    "DeploymentStackProvisioningState",
    "DeploymentStacksDeleteDetachEnum",
    "ResourceStatusMode",
    "UnmanageActionManagementGroupMode",
    "UnmanageActionResourceGroupMode",
    "UnmanageActionResourceMode",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
