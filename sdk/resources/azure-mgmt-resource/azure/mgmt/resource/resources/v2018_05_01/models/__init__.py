# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models_py3 import (  # type: ignore
    AliasPathType,
    AliasType,
    BasicDependency,
    ComponentsSgqdofSchemasIdentityPropertiesUserassignedidentitiesAdditionalproperties,
    DebugSetting,
    Dependency,
    Deployment,
    DeploymentExportResult,
    DeploymentExtended,
    DeploymentExtendedFilter,
    DeploymentListResult,
    DeploymentOperation,
    DeploymentOperationProperties,
    DeploymentOperationsListResult,
    DeploymentProperties,
    DeploymentPropertiesExtended,
    DeploymentValidateResult,
    ErrorAdditionalInfo,
    ErrorResponse,
    ExportTemplateRequest,
    GenericResource,
    GenericResourceExpanded,
    GenericResourceFilter,
    HttpMessage,
    Identity,
    OnErrorDeployment,
    OnErrorDeploymentExtended,
    Operation,
    OperationDisplay,
    OperationListResult,
    ParametersLink,
    Plan,
    Provider,
    ProviderListResult,
    ProviderResourceType,
    Resource,
    ResourceGroup,
    ResourceGroupExportResult,
    ResourceGroupFilter,
    ResourceGroupListResult,
    ResourceGroupPatchable,
    ResourceGroupProperties,
    ResourceListResult,
    ResourceManagementErrorWithDetails,
    ResourceProviderOperationDisplayProperties,
    ResourcesMoveInfo,
    Sku,
    SubResource,
    TagCount,
    TagDetails,
    TagValue,
    TagsListResult,
    TargetResource,
    TemplateHashResult,
    TemplateLink,
    ZoneMapping,
)

from ._resource_management_client_enums import (  # type: ignore
    DeploymentMode,
    OnErrorDeploymentType,
    ResourceIdentityType,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AliasPathType",
    "AliasType",
    "BasicDependency",
    "ComponentsSgqdofSchemasIdentityPropertiesUserassignedidentitiesAdditionalproperties",
    "DebugSetting",
    "Dependency",
    "Deployment",
    "DeploymentExportResult",
    "DeploymentExtended",
    "DeploymentExtendedFilter",
    "DeploymentListResult",
    "DeploymentOperation",
    "DeploymentOperationProperties",
    "DeploymentOperationsListResult",
    "DeploymentProperties",
    "DeploymentPropertiesExtended",
    "DeploymentValidateResult",
    "ErrorAdditionalInfo",
    "ErrorResponse",
    "ExportTemplateRequest",
    "GenericResource",
    "GenericResourceExpanded",
    "GenericResourceFilter",
    "HttpMessage",
    "Identity",
    "OnErrorDeployment",
    "OnErrorDeploymentExtended",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "ParametersLink",
    "Plan",
    "Provider",
    "ProviderListResult",
    "ProviderResourceType",
    "Resource",
    "ResourceGroup",
    "ResourceGroupExportResult",
    "ResourceGroupFilter",
    "ResourceGroupListResult",
    "ResourceGroupPatchable",
    "ResourceGroupProperties",
    "ResourceListResult",
    "ResourceManagementErrorWithDetails",
    "ResourceProviderOperationDisplayProperties",
    "ResourcesMoveInfo",
    "Sku",
    "SubResource",
    "TagCount",
    "TagDetails",
    "TagValue",
    "TagsListResult",
    "TargetResource",
    "TemplateHashResult",
    "TemplateLink",
    "ZoneMapping",
    "DeploymentMode",
    "OnErrorDeploymentType",
    "ResourceIdentityType",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
