# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

from ._workloads_client_enums import *


class ProviderSpecificProperties(msrest.serialization.Model):
    """Gets or sets the provider specific properties.

    You probably want to use the sub-classes and not this class directly. Known
    sub-classes are: DB2ProviderInstanceProperties, MsSqlServerProviderInstanceProperties, PrometheusHaClusterProviderInstanceProperties, PrometheusOSProviderInstanceProperties, HanaDbProviderInstanceProperties, SapNetWeaverProviderInstanceProperties.

    All required parameters must be populated in order to send to Azure.

    :ivar provider_type: Required. The provider type. For example, the value can be
     SapHana.Constant filled by server.
    :vartype provider_type: str
    """

    _validation = {
        'provider_type': {'required': True},
    }

    _attribute_map = {
        'provider_type': {'key': 'providerType', 'type': 'str'},
    }

    _subtype_map = {
        'provider_type': {'Db2': 'DB2ProviderInstanceProperties', 'MsSqlServer': 'MsSqlServerProviderInstanceProperties', 'PrometheusHaCluster': 'PrometheusHaClusterProviderInstanceProperties', 'PrometheusOS': 'PrometheusOSProviderInstanceProperties', 'SapHana': 'HanaDbProviderInstanceProperties', 'SapNetWeaver': 'SapNetWeaverProviderInstanceProperties'}
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProviderSpecificProperties, self).__init__(**kwargs)
        self.provider_type = None  # type: Optional[str]


class DB2ProviderInstanceProperties(ProviderSpecificProperties):
    """Gets or sets the DB2 provider properties.

    All required parameters must be populated in order to send to Azure.

    :ivar provider_type: Required. The provider type. For example, the value can be
     SapHana.Constant filled by server.
    :vartype provider_type: str
    :ivar hostname: Gets or sets the target virtual machine name.
    :vartype hostname: str
    :ivar db_name: Gets or sets the db2 database name.
    :vartype db_name: str
    :ivar db_port: Gets or sets the db2 database sql port.
    :vartype db_port: str
    :ivar db_username: Gets or sets the db2 database user name.
    :vartype db_username: str
    :ivar db_password: Gets or sets the db2 database password.
    :vartype db_password: str
    :ivar db_password_uri: Gets or sets the key vault URI to secret with the database password.
    :vartype db_password_uri: str
    :ivar sap_sid: Gets or sets the SAP System Identifier.
    :vartype sap_sid: str
    """

    _validation = {
        'provider_type': {'required': True},
    }

    _attribute_map = {
        'provider_type': {'key': 'providerType', 'type': 'str'},
        'hostname': {'key': 'hostname', 'type': 'str'},
        'db_name': {'key': 'dbName', 'type': 'str'},
        'db_port': {'key': 'dbPort', 'type': 'str'},
        'db_username': {'key': 'dbUsername', 'type': 'str'},
        'db_password': {'key': 'dbPassword', 'type': 'str'},
        'db_password_uri': {'key': 'dbPasswordUri', 'type': 'str'},
        'sap_sid': {'key': 'sapSid', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        hostname: Optional[str] = None,
        db_name: Optional[str] = None,
        db_port: Optional[str] = None,
        db_username: Optional[str] = None,
        db_password: Optional[str] = None,
        db_password_uri: Optional[str] = None,
        sap_sid: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword hostname: Gets or sets the target virtual machine name.
        :paramtype hostname: str
        :keyword db_name: Gets or sets the db2 database name.
        :paramtype db_name: str
        :keyword db_port: Gets or sets the db2 database sql port.
        :paramtype db_port: str
        :keyword db_username: Gets or sets the db2 database user name.
        :paramtype db_username: str
        :keyword db_password: Gets or sets the db2 database password.
        :paramtype db_password: str
        :keyword db_password_uri: Gets or sets the key vault URI to secret with the database password.
        :paramtype db_password_uri: str
        :keyword sap_sid: Gets or sets the SAP System Identifier.
        :paramtype sap_sid: str
        """
        super(DB2ProviderInstanceProperties, self).__init__(**kwargs)
        self.provider_type = 'Db2'  # type: str
        self.hostname = hostname
        self.db_name = db_name
        self.db_port = db_port
        self.db_username = db_username
        self.db_password = db_password
        self.db_password_uri = db_password_uri
        self.sap_sid = sap_sid


class Error(msrest.serialization.Model):
    """Standard error object.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Server-defined set of error codes.
    :vartype code: str
    :ivar message: Human-readable representation of the error.
    :vartype message: str
    :ivar target: Target of the error.
    :vartype target: str
    :ivar details: Array of details about specific errors that led to this reported error.
    :vartype details: list[~azure.mgmt.workloads.models.Error]
    :ivar inner_error: Object containing more specific information than  the current object about
     the error.
    :vartype inner_error: ~azure.mgmt.workloads.models.ErrorInnerError
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'inner_error': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[Error]'},
        'inner_error': {'key': 'innerError', 'type': 'ErrorInnerError'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Error, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.inner_error = None


class ErrorAdditionalInfo(msrest.serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    _validation = {
        'type': {'readonly': True},
        'info': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'info': {'key': 'info', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorAdditionalInfo, self).__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.mgmt.workloads.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.mgmt.workloads.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetail]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ErrorDetail, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorInnerError(msrest.serialization.Model):
    """Object containing more specific information than  the current object about the error.

    :ivar inner_error: Standard error object.
    :vartype inner_error: ~azure.mgmt.workloads.models.Error
    """

    _attribute_map = {
        'inner_error': {'key': 'innerError', 'type': 'Error'},
    }

    def __init__(
        self,
        *,
        inner_error: Optional["Error"] = None,
        **kwargs
    ):
        """
        :keyword inner_error: Standard error object.
        :paramtype inner_error: ~azure.mgmt.workloads.models.Error
        """
        super(ErrorInnerError, self).__init__(**kwargs)
        self.inner_error = inner_error


class ErrorResponse(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure.mgmt.workloads.models.ErrorDetail
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        *,
        error: Optional["ErrorDetail"] = None,
        **kwargs
    ):
        """
        :keyword error: The error object.
        :paramtype error: ~azure.mgmt.workloads.models.ErrorDetail
        """
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = error


class HanaDbProviderInstanceProperties(ProviderSpecificProperties):
    """Gets or sets the provider properties.

    All required parameters must be populated in order to send to Azure.

    :ivar provider_type: Required. The provider type. For example, the value can be
     SapHana.Constant filled by server.
    :vartype provider_type: str
    :ivar hostname: Gets or sets the target virtual machine size.
    :vartype hostname: str
    :ivar db_name: Gets or sets the hana database name.
    :vartype db_name: str
    :ivar sql_port: Gets or sets the database sql port.
    :vartype sql_port: str
    :ivar instance_number: Gets or sets the database instance number.
    :vartype instance_number: str
    :ivar db_username: Gets or sets the database user name.
    :vartype db_username: str
    :ivar db_password: Gets or sets the database password.
    :vartype db_password: str
    :ivar db_password_uri: Gets or sets the key vault URI to secret with the database password.
    :vartype db_password_uri: str
    :ivar db_ssl_certificate_uri: Gets or sets the blob URI to SSL certificate for the DB.
    :vartype db_ssl_certificate_uri: str
    :ivar ssl_host_name_in_certificate: Gets or sets the hostname(s) in the SSL certificate.
    :vartype ssl_host_name_in_certificate: str
    """

    _validation = {
        'provider_type': {'required': True},
    }

    _attribute_map = {
        'provider_type': {'key': 'providerType', 'type': 'str'},
        'hostname': {'key': 'hostname', 'type': 'str'},
        'db_name': {'key': 'dbName', 'type': 'str'},
        'sql_port': {'key': 'sqlPort', 'type': 'str'},
        'instance_number': {'key': 'instanceNumber', 'type': 'str'},
        'db_username': {'key': 'dbUsername', 'type': 'str'},
        'db_password': {'key': 'dbPassword', 'type': 'str'},
        'db_password_uri': {'key': 'dbPasswordUri', 'type': 'str'},
        'db_ssl_certificate_uri': {'key': 'dbSslCertificateUri', 'type': 'str'},
        'ssl_host_name_in_certificate': {'key': 'sslHostNameInCertificate', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        hostname: Optional[str] = None,
        db_name: Optional[str] = None,
        sql_port: Optional[str] = None,
        instance_number: Optional[str] = None,
        db_username: Optional[str] = None,
        db_password: Optional[str] = None,
        db_password_uri: Optional[str] = None,
        db_ssl_certificate_uri: Optional[str] = None,
        ssl_host_name_in_certificate: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword hostname: Gets or sets the target virtual machine size.
        :paramtype hostname: str
        :keyword db_name: Gets or sets the hana database name.
        :paramtype db_name: str
        :keyword sql_port: Gets or sets the database sql port.
        :paramtype sql_port: str
        :keyword instance_number: Gets or sets the database instance number.
        :paramtype instance_number: str
        :keyword db_username: Gets or sets the database user name.
        :paramtype db_username: str
        :keyword db_password: Gets or sets the database password.
        :paramtype db_password: str
        :keyword db_password_uri: Gets or sets the key vault URI to secret with the database password.
        :paramtype db_password_uri: str
        :keyword db_ssl_certificate_uri: Gets or sets the blob URI to SSL certificate for the DB.
        :paramtype db_ssl_certificate_uri: str
        :keyword ssl_host_name_in_certificate: Gets or sets the hostname(s) in the SSL certificate.
        :paramtype ssl_host_name_in_certificate: str
        """
        super(HanaDbProviderInstanceProperties, self).__init__(**kwargs)
        self.provider_type = 'SapHana'  # type: str
        self.hostname = hostname
        self.db_name = db_name
        self.sql_port = sql_port
        self.instance_number = instance_number
        self.db_username = db_username
        self.db_password = db_password
        self.db_password_uri = db_password_uri
        self.db_ssl_certificate_uri = db_ssl_certificate_uri
        self.ssl_host_name_in_certificate = ssl_host_name_in_certificate


class ManagedRGConfiguration(msrest.serialization.Model):
    """Managed resource group configuration.

    :ivar name: Managed resource group name.
    :vartype name: str
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword name: Managed resource group name.
        :paramtype name: str
        """
        super(ManagedRGConfiguration, self).__init__(**kwargs)
        self.name = name


class Resource(msrest.serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.workloads.models.SystemData
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(Resource, self).__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.workloads.models.SystemData
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: Required. The geo-location where the resource lives.
    :vartype location: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: Required. The geo-location where the resource lives.
        :paramtype location: str
        """
        super(TrackedResource, self).__init__(**kwargs)
        self.tags = tags
        self.location = location


class Monitor(TrackedResource):
    """SAP monitor info on Azure (ARM properties and SAP monitor properties).

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.workloads.models.SystemData
    :ivar tags: A set of tags. Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: Required. The geo-location where the resource lives.
    :vartype location: str
    :ivar provisioning_state: State of provisioning of the monitor. Possible values include:
     "Accepted", "Creating", "Updating", "Failed", "Succeeded", "Deleting", "Migrating".
    :vartype provisioning_state: str or
     ~azure.mgmt.workloads.models.WorkloadMonitorProvisioningState
    :ivar errors: Defines the SAP monitor errors.
    :vartype errors: ~azure.mgmt.workloads.models.MonitorPropertiesErrors
    :ivar app_location: The monitor resources will be deployed in the monitoring region. The subnet
     region should be same as the monitoring region.
    :vartype app_location: str
    :ivar routing_preference: Sets the routing preference of the monitor. By default only RFC1918
     traffic is routed to the customer VNET. Possible values include: "Default", "RouteAll".
    :vartype routing_preference: str or ~azure.mgmt.workloads.models.RoutingPreference
    :ivar managed_resource_group_configuration: Managed resource group configuration.
    :vartype managed_resource_group_configuration:
     ~azure.mgmt.workloads.models.ManagedRGConfiguration
    :ivar log_analytics_workspace_arm_id: The ARM ID of the Log Analytics Workspace that is used
     for monitoring.
    :vartype log_analytics_workspace_arm_id: str
    :ivar monitor_subnet: The subnet which the SAP monitor will be deployed in.
    :vartype monitor_subnet: str
    :ivar msi_arm_id: The ARM ID of the MSI used for monitoring.
    :vartype msi_arm_id: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'location': {'required': True},
        'provisioning_state': {'readonly': True},
        'errors': {'readonly': True},
        'msi_arm_id': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'errors': {'key': 'properties.errors', 'type': 'MonitorPropertiesErrors'},
        'app_location': {'key': 'properties.appLocation', 'type': 'str'},
        'routing_preference': {'key': 'properties.routingPreference', 'type': 'str'},
        'managed_resource_group_configuration': {'key': 'properties.managedResourceGroupConfiguration', 'type': 'ManagedRGConfiguration'},
        'log_analytics_workspace_arm_id': {'key': 'properties.logAnalyticsWorkspaceArmId', 'type': 'str'},
        'monitor_subnet': {'key': 'properties.monitorSubnet', 'type': 'str'},
        'msi_arm_id': {'key': 'properties.msiArmId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        app_location: Optional[str] = None,
        routing_preference: Optional[Union[str, "RoutingPreference"]] = None,
        managed_resource_group_configuration: Optional["ManagedRGConfiguration"] = None,
        log_analytics_workspace_arm_id: Optional[str] = None,
        monitor_subnet: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: Required. The geo-location where the resource lives.
        :paramtype location: str
        :keyword app_location: The monitor resources will be deployed in the monitoring region. The
         subnet region should be same as the monitoring region.
        :paramtype app_location: str
        :keyword routing_preference: Sets the routing preference of the monitor. By default only
         RFC1918 traffic is routed to the customer VNET. Possible values include: "Default", "RouteAll".
        :paramtype routing_preference: str or ~azure.mgmt.workloads.models.RoutingPreference
        :keyword managed_resource_group_configuration: Managed resource group configuration.
        :paramtype managed_resource_group_configuration:
         ~azure.mgmt.workloads.models.ManagedRGConfiguration
        :keyword log_analytics_workspace_arm_id: The ARM ID of the Log Analytics Workspace that is used
         for monitoring.
        :paramtype log_analytics_workspace_arm_id: str
        :keyword monitor_subnet: The subnet which the SAP monitor will be deployed in.
        :paramtype monitor_subnet: str
        """
        super(Monitor, self).__init__(tags=tags, location=location, **kwargs)
        self.provisioning_state = None
        self.errors = None
        self.app_location = app_location
        self.routing_preference = routing_preference
        self.managed_resource_group_configuration = managed_resource_group_configuration
        self.log_analytics_workspace_arm_id = log_analytics_workspace_arm_id
        self.monitor_subnet = monitor_subnet
        self.msi_arm_id = None


class MonitorListResult(msrest.serialization.Model):
    """The response from the List SAP monitors operation.

    :ivar value: The list of SAP monitors.
    :vartype value: list[~azure.mgmt.workloads.models.Monitor]
    :ivar next_link: The URL to get the next set of SAP monitors.
    :vartype next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Monitor]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["Monitor"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword value: The list of SAP monitors.
        :paramtype value: list[~azure.mgmt.workloads.models.Monitor]
        :keyword next_link: The URL to get the next set of SAP monitors.
        :paramtype next_link: str
        """
        super(MonitorListResult, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class MonitorPropertiesErrors(Error):
    """Defines the SAP monitor errors.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Server-defined set of error codes.
    :vartype code: str
    :ivar message: Human-readable representation of the error.
    :vartype message: str
    :ivar target: Target of the error.
    :vartype target: str
    :ivar details: Array of details about specific errors that led to this reported error.
    :vartype details: list[~azure.mgmt.workloads.models.Error]
    :ivar inner_error: Object containing more specific information than  the current object about
     the error.
    :vartype inner_error: ~azure.mgmt.workloads.models.ErrorInnerError
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'inner_error': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[Error]'},
        'inner_error': {'key': 'innerError', 'type': 'ErrorInnerError'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(MonitorPropertiesErrors, self).__init__(**kwargs)


class MsSqlServerProviderInstanceProperties(ProviderSpecificProperties):
    """Gets or sets the SQL server provider properties.

    All required parameters must be populated in order to send to Azure.

    :ivar provider_type: Required. The provider type. For example, the value can be
     SapHana.Constant filled by server.
    :vartype provider_type: str
    :ivar hostname: Gets or sets the SQL server host name.
    :vartype hostname: str
    :ivar db_port: Gets or sets the database sql port.
    :vartype db_port: str
    :ivar db_username: Gets or sets the database user name.
    :vartype db_username: str
    :ivar db_password: Gets or sets the database password.
    :vartype db_password: str
    :ivar db_password_uri: Gets or sets the key vault URI to secret with the database password.
    :vartype db_password_uri: str
    :ivar sap_sid: Gets or sets the SAP System Identifier.
    :vartype sap_sid: str
    """

    _validation = {
        'provider_type': {'required': True},
    }

    _attribute_map = {
        'provider_type': {'key': 'providerType', 'type': 'str'},
        'hostname': {'key': 'hostname', 'type': 'str'},
        'db_port': {'key': 'dbPort', 'type': 'str'},
        'db_username': {'key': 'dbUsername', 'type': 'str'},
        'db_password': {'key': 'dbPassword', 'type': 'str'},
        'db_password_uri': {'key': 'dbPasswordUri', 'type': 'str'},
        'sap_sid': {'key': 'sapSid', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        hostname: Optional[str] = None,
        db_port: Optional[str] = None,
        db_username: Optional[str] = None,
        db_password: Optional[str] = None,
        db_password_uri: Optional[str] = None,
        sap_sid: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword hostname: Gets or sets the SQL server host name.
        :paramtype hostname: str
        :keyword db_port: Gets or sets the database sql port.
        :paramtype db_port: str
        :keyword db_username: Gets or sets the database user name.
        :paramtype db_username: str
        :keyword db_password: Gets or sets the database password.
        :paramtype db_password: str
        :keyword db_password_uri: Gets or sets the key vault URI to secret with the database password.
        :paramtype db_password_uri: str
        :keyword sap_sid: Gets or sets the SAP System Identifier.
        :paramtype sap_sid: str
        """
        super(MsSqlServerProviderInstanceProperties, self).__init__(**kwargs)
        self.provider_type = 'MsSqlServer'  # type: str
        self.hostname = hostname
        self.db_port = db_port
        self.db_username = db_username
        self.db_password = db_password
        self.db_password_uri = db_password_uri
        self.sap_sid = sap_sid


class Operation(msrest.serialization.Model):
    """Details of a REST API operation, returned from the Resource Provider Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar name: The name of the operation, as per Resource-Based Access Control (RBAC). Examples:
     "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action".
    :vartype name: str
    :ivar is_data_action: Whether the operation applies to data-plane. This is "true" for
     data-plane operations and "false" for ARM/control-plane operations.
    :vartype is_data_action: bool
    :ivar display: Localized display information for this particular operation.
    :vartype display: ~azure.mgmt.workloads.models.OperationDisplay
    :ivar origin: The intended executor of the operation; as in Resource Based Access Control
     (RBAC) and audit logs UX. Default value is "user,system". Possible values include: "user",
     "system", "user,system".
    :vartype origin: str or ~azure.mgmt.workloads.models.Origin
    :ivar action_type: Enum. Indicates the action type. "Internal" refers to actions that are for
     internal only APIs. Possible values include: "Internal".
    :vartype action_type: str or ~azure.mgmt.workloads.models.ActionType
    """

    _validation = {
        'name': {'readonly': True},
        'is_data_action': {'readonly': True},
        'origin': {'readonly': True},
        'action_type': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'is_data_action': {'key': 'isDataAction', 'type': 'bool'},
        'display': {'key': 'display', 'type': 'OperationDisplay'},
        'origin': {'key': 'origin', 'type': 'str'},
        'action_type': {'key': 'actionType', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        display: Optional["OperationDisplay"] = None,
        **kwargs
    ):
        """
        :keyword display: Localized display information for this particular operation.
        :paramtype display: ~azure.mgmt.workloads.models.OperationDisplay
        """
        super(Operation, self).__init__(**kwargs)
        self.name = None
        self.is_data_action = None
        self.display = display
        self.origin = None
        self.action_type = None


class OperationDisplay(msrest.serialization.Model):
    """Localized display information for this particular operation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar provider: The localized friendly form of the resource provider name, e.g. "Microsoft
     Monitoring Insights" or "Microsoft Compute".
    :vartype provider: str
    :ivar resource: The localized friendly name of the resource type related to this operation.
     E.g. "Virtual Machines" or "Job Schedule Collections".
    :vartype resource: str
    :ivar operation: The concise, localized friendly name for the operation; suitable for
     dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
    :vartype operation: str
    :ivar description: The short, localized friendly description of the operation; suitable for
     tool tips and detailed views.
    :vartype description: str
    """

    _validation = {
        'provider': {'readonly': True},
        'resource': {'readonly': True},
        'operation': {'readonly': True},
        'description': {'readonly': True},
    }

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationDisplay, self).__init__(**kwargs)
        self.provider = None
        self.resource = None
        self.operation = None
        self.description = None


class OperationListResult(msrest.serialization.Model):
    """A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar value: List of operations supported by the resource provider.
    :vartype value: list[~azure.mgmt.workloads.models.Operation]
    :ivar next_link: URL to get the next set of operation list results (if there are any).
    :vartype next_link: str
    """

    _validation = {
        'value': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[Operation]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(OperationListResult, self).__init__(**kwargs)
        self.value = None
        self.next_link = None


class OperationsContent(Resource):
    """Defines the workload operation content.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.workloads.models.SystemData
    :ivar name_properties_name: Name of the operation.
    :vartype name_properties_name: str
    :ivar is_data_action: Indicates whether the operation applies to data-plane.
    :vartype is_data_action: bool
    :ivar origin: Defines the workload operation origin. Possible values include: "NotSpecified",
     "User", "System".
    :vartype origin: str or ~azure.mgmt.workloads.models.OperationProperties
    :ivar display: Display information of the operation.
    :vartype display: ~azure.mgmt.workloads.models.OperationsDefinitionDisplay
    :ivar action_type: Defines the action type of workload operation. Possible values include:
     "NotSpecified", "Internal".
    :vartype action_type: str or ~azure.mgmt.workloads.models.WorkloadMonitorActionType
    :ivar properties: Defines the workload operation properties.
    :vartype properties: any
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'name_properties_name': {'key': 'properties.name', 'type': 'str'},
        'is_data_action': {'key': 'properties.isDataAction', 'type': 'bool'},
        'origin': {'key': 'properties.origin', 'type': 'str'},
        'display': {'key': 'properties.display', 'type': 'OperationsDefinitionDisplay'},
        'action_type': {'key': 'properties.actionType', 'type': 'str'},
        'properties': {'key': 'properties.properties', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        name_properties_name: Optional[str] = None,
        is_data_action: Optional[bool] = None,
        origin: Optional[Union[str, "OperationProperties"]] = None,
        display: Optional["OperationsDefinitionDisplay"] = None,
        action_type: Optional[Union[str, "WorkloadMonitorActionType"]] = None,
        properties: Optional[Any] = None,
        **kwargs
    ):
        """
        :keyword name_properties_name: Name of the operation.
        :paramtype name_properties_name: str
        :keyword is_data_action: Indicates whether the operation applies to data-plane.
        :paramtype is_data_action: bool
        :keyword origin: Defines the workload operation origin. Possible values include:
         "NotSpecified", "User", "System".
        :paramtype origin: str or ~azure.mgmt.workloads.models.OperationProperties
        :keyword display: Display information of the operation.
        :paramtype display: ~azure.mgmt.workloads.models.OperationsDefinitionDisplay
        :keyword action_type: Defines the action type of workload operation. Possible values include:
         "NotSpecified", "Internal".
        :paramtype action_type: str or ~azure.mgmt.workloads.models.WorkloadMonitorActionType
        :keyword properties: Defines the workload operation properties.
        :paramtype properties: any
        """
        super(OperationsContent, self).__init__(**kwargs)
        self.name_properties_name = name_properties_name
        self.is_data_action = is_data_action
        self.origin = origin
        self.display = display
        self.action_type = action_type
        self.properties = properties


class OperationsDefinition(msrest.serialization.Model):
    """Properties of an Operation.

    All required parameters must be populated in order to send to Azure.

    :ivar name: Required. Name of the operation.
    :vartype name: str
    :ivar is_data_action: Indicates whether the operation applies to data-plane.
    :vartype is_data_action: bool
    :ivar origin: Defines the workload operation origin. Possible values include: "NotSpecified",
     "User", "System".
    :vartype origin: str or ~azure.mgmt.workloads.models.OperationProperties
    :ivar display: Required. Display information of the operation.
    :vartype display: ~azure.mgmt.workloads.models.OperationsDefinitionDisplay
    :ivar action_type: Defines the action type of workload operation. Possible values include:
     "NotSpecified", "Internal".
    :vartype action_type: str or ~azure.mgmt.workloads.models.WorkloadMonitorActionType
    :ivar properties: Defines the workload operation properties.
    :vartype properties: any
    """

    _validation = {
        'name': {'required': True},
        'display': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'is_data_action': {'key': 'isDataAction', 'type': 'bool'},
        'origin': {'key': 'origin', 'type': 'str'},
        'display': {'key': 'display', 'type': 'OperationsDefinitionDisplay'},
        'action_type': {'key': 'actionType', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        name: str,
        display: "OperationsDefinitionDisplay",
        is_data_action: Optional[bool] = None,
        origin: Optional[Union[str, "OperationProperties"]] = None,
        action_type: Optional[Union[str, "WorkloadMonitorActionType"]] = None,
        properties: Optional[Any] = None,
        **kwargs
    ):
        """
        :keyword name: Required. Name of the operation.
        :paramtype name: str
        :keyword is_data_action: Indicates whether the operation applies to data-plane.
        :paramtype is_data_action: bool
        :keyword origin: Defines the workload operation origin. Possible values include:
         "NotSpecified", "User", "System".
        :paramtype origin: str or ~azure.mgmt.workloads.models.OperationProperties
        :keyword display: Required. Display information of the operation.
        :paramtype display: ~azure.mgmt.workloads.models.OperationsDefinitionDisplay
        :keyword action_type: Defines the action type of workload operation. Possible values include:
         "NotSpecified", "Internal".
        :paramtype action_type: str or ~azure.mgmt.workloads.models.WorkloadMonitorActionType
        :keyword properties: Defines the workload operation properties.
        :paramtype properties: any
        """
        super(OperationsDefinition, self).__init__(**kwargs)
        self.name = name
        self.is_data_action = is_data_action
        self.origin = origin
        self.display = display
        self.action_type = action_type
        self.properties = properties


class OperationsDefinitionArrayResponseWithContinuation(msrest.serialization.Model):
    """Defines the workload operation definition response.

    :ivar value: Defines the workload operation definition response properties.
    :vartype value: list[~azure.mgmt.workloads.models.OperationsDefinition]
    :ivar next_link: The URL to get to the next set of results, if there are any.
    :vartype next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[OperationsDefinition]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["OperationsDefinition"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword value: Defines the workload operation definition response properties.
        :paramtype value: list[~azure.mgmt.workloads.models.OperationsDefinition]
        :keyword next_link: The URL to get to the next set of results, if there are any.
        :paramtype next_link: str
        """
        super(OperationsDefinitionArrayResponseWithContinuation, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class OperationsDisplayDefinition(msrest.serialization.Model):
    """Defines the workload operation.

    All required parameters must be populated in order to send to Azure.

    :ivar provider: Required. Defines the workload provider.
    :vartype provider: str
    :ivar resource: Required. Defines the workload resource.
    :vartype resource: str
    :ivar operation: Required. Defines the workload operation.
    :vartype operation: str
    :ivar description: Required. Describes the workload operation.
    :vartype description: str
    """

    _validation = {
        'provider': {'required': True},
        'resource': {'required': True},
        'operation': {'required': True},
        'description': {'required': True},
    }

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        provider: str,
        resource: str,
        operation: str,
        description: str,
        **kwargs
    ):
        """
        :keyword provider: Required. Defines the workload provider.
        :paramtype provider: str
        :keyword resource: Required. Defines the workload resource.
        :paramtype resource: str
        :keyword operation: Required. Defines the workload operation.
        :paramtype operation: str
        :keyword description: Required. Describes the workload operation.
        :paramtype description: str
        """
        super(OperationsDisplayDefinition, self).__init__(**kwargs)
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description


class OperationsDefinitionDisplay(OperationsDisplayDefinition):
    """Display information of the operation.

    All required parameters must be populated in order to send to Azure.

    :ivar provider: Required. Defines the workload provider.
    :vartype provider: str
    :ivar resource: Required. Defines the workload resource.
    :vartype resource: str
    :ivar operation: Required. Defines the workload operation.
    :vartype operation: str
    :ivar description: Required. Describes the workload operation.
    :vartype description: str
    """

    _validation = {
        'provider': {'required': True},
        'resource': {'required': True},
        'operation': {'required': True},
        'description': {'required': True},
    }

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        provider: str,
        resource: str,
        operation: str,
        description: str,
        **kwargs
    ):
        """
        :keyword provider: Required. Defines the workload provider.
        :paramtype provider: str
        :keyword resource: Required. Defines the workload resource.
        :paramtype resource: str
        :keyword operation: Required. Defines the workload operation.
        :paramtype operation: str
        :keyword description: Required. Describes the workload operation.
        :paramtype description: str
        """
        super(OperationsDefinitionDisplay, self).__init__(provider=provider, resource=resource, operation=operation, description=description, **kwargs)


class OperationStatusResult(msrest.serialization.Model):
    """The current status of an async operation.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Fully qualified ID for the async operation.
    :vartype id: str
    :ivar name: Name of the async operation.
    :vartype name: str
    :ivar status: Required. Operation status.
    :vartype status: str
    :ivar percent_complete: Percent of the operation that is complete.
    :vartype percent_complete: float
    :ivar start_time: The start time of the operation.
    :vartype start_time: ~datetime.datetime
    :ivar end_time: The end time of the operation.
    :vartype end_time: ~datetime.datetime
    :ivar operations: The operations list.
    :vartype operations: list[~azure.mgmt.workloads.models.OperationStatusResult]
    :ivar error: If present, details of the operation error.
    :vartype error: ~azure.mgmt.workloads.models.ErrorDetail
    """

    _validation = {
        'status': {'required': True},
        'percent_complete': {'maximum': 100, 'minimum': 0},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'percent_complete': {'key': 'percentComplete', 'type': 'float'},
        'start_time': {'key': 'startTime', 'type': 'iso-8601'},
        'end_time': {'key': 'endTime', 'type': 'iso-8601'},
        'operations': {'key': 'operations', 'type': '[OperationStatusResult]'},
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        *,
        status: str,
        id: Optional[str] = None,
        name: Optional[str] = None,
        percent_complete: Optional[float] = None,
        start_time: Optional[datetime.datetime] = None,
        end_time: Optional[datetime.datetime] = None,
        operations: Optional[List["OperationStatusResult"]] = None,
        error: Optional["ErrorDetail"] = None,
        **kwargs
    ):
        """
        :keyword id: Fully qualified ID for the async operation.
        :paramtype id: str
        :keyword name: Name of the async operation.
        :paramtype name: str
        :keyword status: Required. Operation status.
        :paramtype status: str
        :keyword percent_complete: Percent of the operation that is complete.
        :paramtype percent_complete: float
        :keyword start_time: The start time of the operation.
        :paramtype start_time: ~datetime.datetime
        :keyword end_time: The end time of the operation.
        :paramtype end_time: ~datetime.datetime
        :keyword operations: The operations list.
        :paramtype operations: list[~azure.mgmt.workloads.models.OperationStatusResult]
        :keyword error: If present, details of the operation error.
        :paramtype error: ~azure.mgmt.workloads.models.ErrorDetail
        """
        super(OperationStatusResult, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.status = status
        self.percent_complete = percent_complete
        self.start_time = start_time
        self.end_time = end_time
        self.operations = operations
        self.error = error


class PrometheusHaClusterProviderInstanceProperties(ProviderSpecificProperties):
    """Gets or sets the PrometheusHaCluster provider properties.

    All required parameters must be populated in order to send to Azure.

    :ivar provider_type: Required. The provider type. For example, the value can be
     SapHana.Constant filled by server.
    :vartype provider_type: str
    :ivar prometheus_url: URL of the Node Exporter endpoint.
    :vartype prometheus_url: str
    :ivar hostname: Gets or sets the target machine name.
    :vartype hostname: str
    :ivar sid: Gets or sets the cluster sid.
    :vartype sid: str
    :ivar cluster_name: Gets or sets the clusterName.
    :vartype cluster_name: str
    """

    _validation = {
        'provider_type': {'required': True},
    }

    _attribute_map = {
        'provider_type': {'key': 'providerType', 'type': 'str'},
        'prometheus_url': {'key': 'prometheusUrl', 'type': 'str'},
        'hostname': {'key': 'hostname', 'type': 'str'},
        'sid': {'key': 'sid', 'type': 'str'},
        'cluster_name': {'key': 'clusterName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        prometheus_url: Optional[str] = None,
        hostname: Optional[str] = None,
        sid: Optional[str] = None,
        cluster_name: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword prometheus_url: URL of the Node Exporter endpoint.
        :paramtype prometheus_url: str
        :keyword hostname: Gets or sets the target machine name.
        :paramtype hostname: str
        :keyword sid: Gets or sets the cluster sid.
        :paramtype sid: str
        :keyword cluster_name: Gets or sets the clusterName.
        :paramtype cluster_name: str
        """
        super(PrometheusHaClusterProviderInstanceProperties, self).__init__(**kwargs)
        self.provider_type = 'PrometheusHaCluster'  # type: str
        self.prometheus_url = prometheus_url
        self.hostname = hostname
        self.sid = sid
        self.cluster_name = cluster_name


class PrometheusOSProviderInstanceProperties(ProviderSpecificProperties):
    """Gets or sets the PrometheusOS provider properties.

    All required parameters must be populated in order to send to Azure.

    :ivar provider_type: Required. The provider type. For example, the value can be
     SapHana.Constant filled by server.
    :vartype provider_type: str
    :ivar prometheus_url: URL of the Node Exporter endpoint.
    :vartype prometheus_url: str
    """

    _validation = {
        'provider_type': {'required': True},
    }

    _attribute_map = {
        'provider_type': {'key': 'providerType', 'type': 'str'},
        'prometheus_url': {'key': 'prometheusUrl', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        prometheus_url: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword prometheus_url: URL of the Node Exporter endpoint.
        :paramtype prometheus_url: str
        """
        super(PrometheusOSProviderInstanceProperties, self).__init__(**kwargs)
        self.provider_type = 'PrometheusOS'  # type: str
        self.prometheus_url = prometheus_url


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.workloads.models.SystemData
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProxyResource, self).__init__(**kwargs)


class ProviderInstance(ProxyResource):
    """A provider instance associated with monitor.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. Ex -
     /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure.mgmt.workloads.models.SystemData
    :ivar provisioning_state: State of provisioning of the provider instance. Possible values
     include: "Accepted", "Creating", "Updating", "Failed", "Succeeded", "Deleting", "Migrating".
    :vartype provisioning_state: str or
     ~azure.mgmt.workloads.models.WorkloadMonitorProvisioningState
    :ivar errors: Defines the provider instance errors.
    :vartype errors: ~azure.mgmt.workloads.models.ProviderInstancePropertiesErrors
    :ivar provider_settings: Defines the provider instance errors.
    :vartype provider_settings: ~azure.mgmt.workloads.models.ProviderSpecificProperties
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'system_data': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'errors': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'system_data': {'key': 'systemData', 'type': 'SystemData'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'errors': {'key': 'properties.errors', 'type': 'ProviderInstancePropertiesErrors'},
        'provider_settings': {'key': 'properties.providerSettings', 'type': 'ProviderSpecificProperties'},
    }

    def __init__(
        self,
        *,
        provider_settings: Optional["ProviderSpecificProperties"] = None,
        **kwargs
    ):
        """
        :keyword provider_settings: Defines the provider instance errors.
        :paramtype provider_settings: ~azure.mgmt.workloads.models.ProviderSpecificProperties
        """
        super(ProviderInstance, self).__init__(**kwargs)
        self.provisioning_state = None
        self.errors = None
        self.provider_settings = provider_settings


class ProviderInstanceListResult(msrest.serialization.Model):
    """The response from the List provider instances operation.

    :ivar value: The list of provider instances.
    :vartype value: list[~azure.mgmt.workloads.models.ProviderInstance]
    :ivar next_link: The URL to get the next set of provider instances.
    :vartype next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[ProviderInstance]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["ProviderInstance"]] = None,
        next_link: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword value: The list of provider instances.
        :paramtype value: list[~azure.mgmt.workloads.models.ProviderInstance]
        :keyword next_link: The URL to get the next set of provider instances.
        :paramtype next_link: str
        """
        super(ProviderInstanceListResult, self).__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class ProviderInstancePropertiesErrors(Error):
    """Defines the provider instance errors.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: Server-defined set of error codes.
    :vartype code: str
    :ivar message: Human-readable representation of the error.
    :vartype message: str
    :ivar target: Target of the error.
    :vartype target: str
    :ivar details: Array of details about specific errors that led to this reported error.
    :vartype details: list[~azure.mgmt.workloads.models.Error]
    :ivar inner_error: Object containing more specific information than  the current object about
     the error.
    :vartype inner_error: ~azure.mgmt.workloads.models.ErrorInnerError
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'inner_error': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[Error]'},
        'inner_error': {'key': 'innerError', 'type': 'ErrorInnerError'},
    }

    def __init__(
        self,
        **kwargs
    ):
        """
        """
        super(ProviderInstancePropertiesErrors, self).__init__(**kwargs)


class SapNetWeaverProviderInstanceProperties(ProviderSpecificProperties):
    """Gets or sets the provider properties.

    All required parameters must be populated in order to send to Azure.

    :ivar provider_type: Required. The provider type. For example, the value can be
     SapHana.Constant filled by server.
    :vartype provider_type: str
    :ivar sap_sid: Gets or sets the SAP System Identifier.
    :vartype sap_sid: str
    :ivar sap_hostname: Gets or sets the target virtual machine IP Address/FQDN.
    :vartype sap_hostname: str
    :ivar sap_instance_nr: Gets or sets the instance number of SAP NetWeaver.
    :vartype sap_instance_nr: str
    :ivar sap_host_file_entries: Gets or sets the list of HostFile Entries.
    :vartype sap_host_file_entries: list[str]
    :ivar sap_username: Gets or sets the SAP user name.
    :vartype sap_username: str
    :ivar sap_password: Sets the SAP password.
    :vartype sap_password: str
    :ivar sap_password_uri: Gets or sets the key vault URI to secret with the SAP password.
    :vartype sap_password_uri: str
    :ivar sap_client_id: Gets or sets the SAP Client ID.
    :vartype sap_client_id: str
    :ivar sap_port_number: Gets or sets the SAP HTTP port number.
    :vartype sap_port_number: str
    :ivar sap_ssl_certificate_uri: Gets or sets the blob URI to SSL certificate for the SAP system.
    :vartype sap_ssl_certificate_uri: str
    """

    _validation = {
        'provider_type': {'required': True},
    }

    _attribute_map = {
        'provider_type': {'key': 'providerType', 'type': 'str'},
        'sap_sid': {'key': 'sapSid', 'type': 'str'},
        'sap_hostname': {'key': 'sapHostname', 'type': 'str'},
        'sap_instance_nr': {'key': 'sapInstanceNr', 'type': 'str'},
        'sap_host_file_entries': {'key': 'sapHostFileEntries', 'type': '[str]'},
        'sap_username': {'key': 'sapUsername', 'type': 'str'},
        'sap_password': {'key': 'sapPassword', 'type': 'str'},
        'sap_password_uri': {'key': 'sapPasswordUri', 'type': 'str'},
        'sap_client_id': {'key': 'sapClientId', 'type': 'str'},
        'sap_port_number': {'key': 'sapPortNumber', 'type': 'str'},
        'sap_ssl_certificate_uri': {'key': 'sapSslCertificateUri', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        sap_sid: Optional[str] = None,
        sap_hostname: Optional[str] = None,
        sap_instance_nr: Optional[str] = None,
        sap_host_file_entries: Optional[List[str]] = None,
        sap_username: Optional[str] = None,
        sap_password: Optional[str] = None,
        sap_password_uri: Optional[str] = None,
        sap_client_id: Optional[str] = None,
        sap_port_number: Optional[str] = None,
        sap_ssl_certificate_uri: Optional[str] = None,
        **kwargs
    ):
        """
        :keyword sap_sid: Gets or sets the SAP System Identifier.
        :paramtype sap_sid: str
        :keyword sap_hostname: Gets or sets the target virtual machine IP Address/FQDN.
        :paramtype sap_hostname: str
        :keyword sap_instance_nr: Gets or sets the instance number of SAP NetWeaver.
        :paramtype sap_instance_nr: str
        :keyword sap_host_file_entries: Gets or sets the list of HostFile Entries.
        :paramtype sap_host_file_entries: list[str]
        :keyword sap_username: Gets or sets the SAP user name.
        :paramtype sap_username: str
        :keyword sap_password: Sets the SAP password.
        :paramtype sap_password: str
        :keyword sap_password_uri: Gets or sets the key vault URI to secret with the SAP password.
        :paramtype sap_password_uri: str
        :keyword sap_client_id: Gets or sets the SAP Client ID.
        :paramtype sap_client_id: str
        :keyword sap_port_number: Gets or sets the SAP HTTP port number.
        :paramtype sap_port_number: str
        :keyword sap_ssl_certificate_uri: Gets or sets the blob URI to SSL certificate for the SAP
         system.
        :paramtype sap_ssl_certificate_uri: str
        """
        super(SapNetWeaverProviderInstanceProperties, self).__init__(**kwargs)
        self.provider_type = 'SapNetWeaver'  # type: str
        self.sap_sid = sap_sid
        self.sap_hostname = sap_hostname
        self.sap_instance_nr = sap_instance_nr
        self.sap_host_file_entries = sap_host_file_entries
        self.sap_username = sap_username
        self.sap_password = sap_password
        self.sap_password_uri = sap_password_uri
        self.sap_client_id = sap_client_id
        self.sap_port_number = sap_port_number
        self.sap_ssl_certificate_uri = sap_ssl_certificate_uri


class SystemData(msrest.serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Possible values include:
     "User", "Application", "ManagedIdentity", "Key".
    :vartype created_by_type: str or ~azure.mgmt.workloads.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Possible
     values include: "User", "Application", "ManagedIdentity", "Key".
    :vartype last_modified_by_type: str or ~azure.mgmt.workloads.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_by_type': {'key': 'createdByType', 'type': 'str'},
        'created_at': {'key': 'createdAt', 'type': 'iso-8601'},
        'last_modified_by': {'key': 'lastModifiedBy', 'type': 'str'},
        'last_modified_by_type': {'key': 'lastModifiedByType', 'type': 'str'},
        'last_modified_at': {'key': 'lastModifiedAt', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs
    ):
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Possible values
         include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype created_by_type: str or ~azure.mgmt.workloads.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Possible
         values include: "User", "Application", "ManagedIdentity", "Key".
        :paramtype last_modified_by_type: str or ~azure.mgmt.workloads.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super(SystemData, self).__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class Tags(msrest.serialization.Model):
    """Tags field of the resource.

    :ivar tags: A set of tags. Tags field of the resource.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        'tags': {'key': 'tags', 'type': '{str}'},
    }

    def __init__(
        self,
        *,
        tags: Optional[Dict[str, str]] = None,
        **kwargs
    ):
        """
        :keyword tags: A set of tags. Tags field of the resource.
        :paramtype tags: dict[str, str]
        """
        super(Tags, self).__init__(**kwargs)
        self.tags = tags
