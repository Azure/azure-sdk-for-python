# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, Optional, TYPE_CHECKING

from azure.core.rest import HttpRequest, HttpResponse
from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

from . import models
from ._configuration import SecurityCenterConfiguration
from .operations import AdaptiveApplicationControlsOperations, AdaptiveNetworkHardeningsOperations, AdvancedThreatProtectionOperations, AlertsOperations, AlertsSuppressionRulesOperations, AllowedConnectionsOperations, AssessmentsMetadataOperations, AssessmentsOperations, AutoProvisioningSettingsOperations, AutomationsOperations, ComplianceResultsOperations, CompliancesOperations, ConnectorsOperations, CustomAssessmentAutomationsOperations, CustomEntityStoreAssignmentsOperations, DeviceSecurityGroupsOperations, DiscoveredSecuritySolutionsOperations, ExternalSecuritySolutionsOperations, InformationProtectionPoliciesOperations, IngestionSettingsOperations, IotSecuritySolutionAnalyticsOperations, IotSecuritySolutionOperations, IotSecuritySolutionsAnalyticsAggregatedAlertOperations, IotSecuritySolutionsAnalyticsRecommendationOperations, JitNetworkAccessPoliciesOperations, LocationsOperations, MdeOnboardingsOperations, Operations, PricingsOperations, RegulatoryComplianceAssessmentsOperations, RegulatoryComplianceControlsOperations, RegulatoryComplianceStandardsOperations, SecureScoreControlDefinitionsOperations, SecureScoreControlsOperations, SecureScoresOperations, SecurityConnectorsOperations, SecurityContactsOperations, SecuritySolutionsOperations, SecuritySolutionsReferenceDataOperations, ServerVulnerabilityAssessmentOperations, SettingsOperations, SoftwareInventoriesOperations, SqlVulnerabilityAssessmentBaselineRulesOperations, SqlVulnerabilityAssessmentScanResultsOperations, SqlVulnerabilityAssessmentScansOperations, SubAssessmentsOperations, TasksOperations, TopologyOperations, WorkspaceSettingsOperations

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials import TokenCredential

class SecurityCenter:
    """API spec for Microsoft.Security (Azure Security Center) resource provider.

    :ivar mde_onboardings: MdeOnboardingsOperations operations
    :vartype mde_onboardings: azure.mgmt.security.operations.MdeOnboardingsOperations
    :ivar custom_assessment_automations: CustomAssessmentAutomationsOperations operations
    :vartype custom_assessment_automations:
     azure.mgmt.security.operations.CustomAssessmentAutomationsOperations
    :ivar custom_entity_store_assignments: CustomEntityStoreAssignmentsOperations operations
    :vartype custom_entity_store_assignments:
     azure.mgmt.security.operations.CustomEntityStoreAssignmentsOperations
    :ivar compliance_results: ComplianceResultsOperations operations
    :vartype compliance_results: azure.mgmt.security.operations.ComplianceResultsOperations
    :ivar pricings: PricingsOperations operations
    :vartype pricings: azure.mgmt.security.operations.PricingsOperations
    :ivar advanced_threat_protection: AdvancedThreatProtectionOperations operations
    :vartype advanced_threat_protection:
     azure.mgmt.security.operations.AdvancedThreatProtectionOperations
    :ivar device_security_groups: DeviceSecurityGroupsOperations operations
    :vartype device_security_groups: azure.mgmt.security.operations.DeviceSecurityGroupsOperations
    :ivar iot_security_solution: IotSecuritySolutionOperations operations
    :vartype iot_security_solution: azure.mgmt.security.operations.IotSecuritySolutionOperations
    :ivar iot_security_solution_analytics: IotSecuritySolutionAnalyticsOperations operations
    :vartype iot_security_solution_analytics:
     azure.mgmt.security.operations.IotSecuritySolutionAnalyticsOperations
    :ivar iot_security_solutions_analytics_aggregated_alert:
     IotSecuritySolutionsAnalyticsAggregatedAlertOperations operations
    :vartype iot_security_solutions_analytics_aggregated_alert:
     azure.mgmt.security.operations.IotSecuritySolutionsAnalyticsAggregatedAlertOperations
    :ivar iot_security_solutions_analytics_recommendation:
     IotSecuritySolutionsAnalyticsRecommendationOperations operations
    :vartype iot_security_solutions_analytics_recommendation:
     azure.mgmt.security.operations.IotSecuritySolutionsAnalyticsRecommendationOperations
    :ivar locations: LocationsOperations operations
    :vartype locations: azure.mgmt.security.operations.LocationsOperations
    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.security.operations.Operations
    :ivar tasks: TasksOperations operations
    :vartype tasks: azure.mgmt.security.operations.TasksOperations
    :ivar auto_provisioning_settings: AutoProvisioningSettingsOperations operations
    :vartype auto_provisioning_settings:
     azure.mgmt.security.operations.AutoProvisioningSettingsOperations
    :ivar compliances: CompliancesOperations operations
    :vartype compliances: azure.mgmt.security.operations.CompliancesOperations
    :ivar information_protection_policies: InformationProtectionPoliciesOperations operations
    :vartype information_protection_policies:
     azure.mgmt.security.operations.InformationProtectionPoliciesOperations
    :ivar security_contacts: SecurityContactsOperations operations
    :vartype security_contacts: azure.mgmt.security.operations.SecurityContactsOperations
    :ivar workspace_settings: WorkspaceSettingsOperations operations
    :vartype workspace_settings: azure.mgmt.security.operations.WorkspaceSettingsOperations
    :ivar regulatory_compliance_standards: RegulatoryComplianceStandardsOperations operations
    :vartype regulatory_compliance_standards:
     azure.mgmt.security.operations.RegulatoryComplianceStandardsOperations
    :ivar regulatory_compliance_controls: RegulatoryComplianceControlsOperations operations
    :vartype regulatory_compliance_controls:
     azure.mgmt.security.operations.RegulatoryComplianceControlsOperations
    :ivar regulatory_compliance_assessments: RegulatoryComplianceAssessmentsOperations operations
    :vartype regulatory_compliance_assessments:
     azure.mgmt.security.operations.RegulatoryComplianceAssessmentsOperations
    :ivar sub_assessments: SubAssessmentsOperations operations
    :vartype sub_assessments: azure.mgmt.security.operations.SubAssessmentsOperations
    :ivar automations: AutomationsOperations operations
    :vartype automations: azure.mgmt.security.operations.AutomationsOperations
    :ivar alerts_suppression_rules: AlertsSuppressionRulesOperations operations
    :vartype alerts_suppression_rules:
     azure.mgmt.security.operations.AlertsSuppressionRulesOperations
    :ivar server_vulnerability_assessment: ServerVulnerabilityAssessmentOperations operations
    :vartype server_vulnerability_assessment:
     azure.mgmt.security.operations.ServerVulnerabilityAssessmentOperations
    :ivar assessments_metadata: AssessmentsMetadataOperations operations
    :vartype assessments_metadata: azure.mgmt.security.operations.AssessmentsMetadataOperations
    :ivar assessments: AssessmentsOperations operations
    :vartype assessments: azure.mgmt.security.operations.AssessmentsOperations
    :ivar adaptive_application_controls: AdaptiveApplicationControlsOperations operations
    :vartype adaptive_application_controls:
     azure.mgmt.security.operations.AdaptiveApplicationControlsOperations
    :ivar adaptive_network_hardenings: AdaptiveNetworkHardeningsOperations operations
    :vartype adaptive_network_hardenings:
     azure.mgmt.security.operations.AdaptiveNetworkHardeningsOperations
    :ivar allowed_connections: AllowedConnectionsOperations operations
    :vartype allowed_connections: azure.mgmt.security.operations.AllowedConnectionsOperations
    :ivar topology: TopologyOperations operations
    :vartype topology: azure.mgmt.security.operations.TopologyOperations
    :ivar jit_network_access_policies: JitNetworkAccessPoliciesOperations operations
    :vartype jit_network_access_policies:
     azure.mgmt.security.operations.JitNetworkAccessPoliciesOperations
    :ivar discovered_security_solutions: DiscoveredSecuritySolutionsOperations operations
    :vartype discovered_security_solutions:
     azure.mgmt.security.operations.DiscoveredSecuritySolutionsOperations
    :ivar security_solutions_reference_data: SecuritySolutionsReferenceDataOperations operations
    :vartype security_solutions_reference_data:
     azure.mgmt.security.operations.SecuritySolutionsReferenceDataOperations
    :ivar external_security_solutions: ExternalSecuritySolutionsOperations operations
    :vartype external_security_solutions:
     azure.mgmt.security.operations.ExternalSecuritySolutionsOperations
    :ivar secure_scores: SecureScoresOperations operations
    :vartype secure_scores: azure.mgmt.security.operations.SecureScoresOperations
    :ivar secure_score_controls: SecureScoreControlsOperations operations
    :vartype secure_score_controls: azure.mgmt.security.operations.SecureScoreControlsOperations
    :ivar secure_score_control_definitions: SecureScoreControlDefinitionsOperations operations
    :vartype secure_score_control_definitions:
     azure.mgmt.security.operations.SecureScoreControlDefinitionsOperations
    :ivar security_solutions: SecuritySolutionsOperations operations
    :vartype security_solutions: azure.mgmt.security.operations.SecuritySolutionsOperations
    :ivar connectors: ConnectorsOperations operations
    :vartype connectors: azure.mgmt.security.operations.ConnectorsOperations
    :ivar sql_vulnerability_assessment_scans: SqlVulnerabilityAssessmentScansOperations operations
    :vartype sql_vulnerability_assessment_scans:
     azure.mgmt.security.operations.SqlVulnerabilityAssessmentScansOperations
    :ivar sql_vulnerability_assessment_scan_results:
     SqlVulnerabilityAssessmentScanResultsOperations operations
    :vartype sql_vulnerability_assessment_scan_results:
     azure.mgmt.security.operations.SqlVulnerabilityAssessmentScanResultsOperations
    :ivar sql_vulnerability_assessment_baseline_rules:
     SqlVulnerabilityAssessmentBaselineRulesOperations operations
    :vartype sql_vulnerability_assessment_baseline_rules:
     azure.mgmt.security.operations.SqlVulnerabilityAssessmentBaselineRulesOperations
    :ivar alerts: AlertsOperations operations
    :vartype alerts: azure.mgmt.security.operations.AlertsOperations
    :ivar settings: SettingsOperations operations
    :vartype settings: azure.mgmt.security.operations.SettingsOperations
    :ivar ingestion_settings: IngestionSettingsOperations operations
    :vartype ingestion_settings: azure.mgmt.security.operations.IngestionSettingsOperations
    :ivar software_inventories: SoftwareInventoriesOperations operations
    :vartype software_inventories: azure.mgmt.security.operations.SoftwareInventoriesOperations
    :ivar security_connectors: SecurityConnectorsOperations operations
    :vartype security_connectors: azure.mgmt.security.operations.SecurityConnectorsOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param subscription_id: Azure subscription ID.
    :type subscription_id: str
    :param base_url: Service URL. Default value is 'https://management.azure.com'.
    :type base_url: str
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no
     Retry-After header is present.
    """

    def __init__(
        self,
        credential: "TokenCredential",
        subscription_id: str,
        base_url: str = "https://management.azure.com",
        **kwargs: Any
    ) -> None:
        self._config = SecurityCenterConfiguration(credential=credential, subscription_id=subscription_id, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self._serialize.client_side_validation = False
        self.mde_onboardings = MdeOnboardingsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.custom_assessment_automations = CustomAssessmentAutomationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.custom_entity_store_assignments = CustomEntityStoreAssignmentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.compliance_results = ComplianceResultsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.pricings = PricingsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.advanced_threat_protection = AdvancedThreatProtectionOperations(self._client, self._config, self._serialize, self._deserialize)
        self.device_security_groups = DeviceSecurityGroupsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.iot_security_solution = IotSecuritySolutionOperations(self._client, self._config, self._serialize, self._deserialize)
        self.iot_security_solution_analytics = IotSecuritySolutionAnalyticsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.iot_security_solutions_analytics_aggregated_alert = IotSecuritySolutionsAnalyticsAggregatedAlertOperations(self._client, self._config, self._serialize, self._deserialize)
        self.iot_security_solutions_analytics_recommendation = IotSecuritySolutionsAnalyticsRecommendationOperations(self._client, self._config, self._serialize, self._deserialize)
        self.locations = LocationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.operations = Operations(self._client, self._config, self._serialize, self._deserialize)
        self.tasks = TasksOperations(self._client, self._config, self._serialize, self._deserialize)
        self.auto_provisioning_settings = AutoProvisioningSettingsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.compliances = CompliancesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_policies = InformationProtectionPoliciesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.security_contacts = SecurityContactsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.workspace_settings = WorkspaceSettingsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.regulatory_compliance_standards = RegulatoryComplianceStandardsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.regulatory_compliance_controls = RegulatoryComplianceControlsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.regulatory_compliance_assessments = RegulatoryComplianceAssessmentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.sub_assessments = SubAssessmentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.automations = AutomationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.alerts_suppression_rules = AlertsSuppressionRulesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.server_vulnerability_assessment = ServerVulnerabilityAssessmentOperations(self._client, self._config, self._serialize, self._deserialize)
        self.assessments_metadata = AssessmentsMetadataOperations(self._client, self._config, self._serialize, self._deserialize)
        self.assessments = AssessmentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.adaptive_application_controls = AdaptiveApplicationControlsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.adaptive_network_hardenings = AdaptiveNetworkHardeningsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.allowed_connections = AllowedConnectionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.topology = TopologyOperations(self._client, self._config, self._serialize, self._deserialize)
        self.jit_network_access_policies = JitNetworkAccessPoliciesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.discovered_security_solutions = DiscoveredSecuritySolutionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.security_solutions_reference_data = SecuritySolutionsReferenceDataOperations(self._client, self._config, self._serialize, self._deserialize)
        self.external_security_solutions = ExternalSecuritySolutionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.secure_scores = SecureScoresOperations(self._client, self._config, self._serialize, self._deserialize)
        self.secure_score_controls = SecureScoreControlsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.secure_score_control_definitions = SecureScoreControlDefinitionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.security_solutions = SecuritySolutionsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.connectors = ConnectorsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.sql_vulnerability_assessment_scans = SqlVulnerabilityAssessmentScansOperations(self._client, self._config, self._serialize, self._deserialize)
        self.sql_vulnerability_assessment_scan_results = SqlVulnerabilityAssessmentScanResultsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.sql_vulnerability_assessment_baseline_rules = SqlVulnerabilityAssessmentBaselineRulesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.alerts = AlertsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.settings = SettingsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.ingestion_settings = IngestionSettingsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.software_inventories = SoftwareInventoriesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.security_connectors = SecurityConnectorsOperations(self._client, self._config, self._serialize, self._deserialize)


    def _send_request(
        self,
        request,  # type: HttpRequest
        **kwargs: Any
    ) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client._send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/python/protocol/quickstart

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, **kwargs)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> SecurityCenter
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
