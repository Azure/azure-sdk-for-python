# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import AzureTrackedResourceLocation
from ._models_py3 import CloudErrorBody
from ._models_py3 import CloudOffering
from ._models_py3 import CspmMonitorAwsOffering
from ._models_py3 import CspmMonitorAwsOfferingNativeCloudConnection
from ._models_py3 import CustomAssessmentAutomation
from ._models_py3 import CustomAssessmentAutomationRequest
from ._models_py3 import CustomAssessmentAutomationsListResult
from ._models_py3 import CustomEntityStoreAssignment
from ._models_py3 import CustomEntityStoreAssignmentRequest
from ._models_py3 import CustomEntityStoreAssignmentsListResult
from ._models_py3 import DefenderForContainersAwsOffering
from ._models_py3 import DefenderForContainersAwsOfferingCloudWatchToKinesis
from ._models_py3 import DefenderForContainersAwsOfferingKinesisToS3
from ._models_py3 import DefenderForContainersAwsOfferingKubernetesScubaReader
from ._models_py3 import DefenderForContainersAwsOfferingKubernetesService
from ._models_py3 import DefenderForServersAwsOffering
from ._models_py3 import DefenderForServersAwsOfferingArcAutoProvisioning
from ._models_py3 import DefenderForServersAwsOfferingArcAutoProvisioningServicePrincipalSecretMetadata
from ._models_py3 import DefenderForServersAwsOfferingDefenderForServers
from ._models_py3 import ETag
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import InformationProtectionAwsOffering
from ._models_py3 import InformationProtectionAwsOfferingInformationProtection
from ._models_py3 import Kind
from ._models_py3 import Resource
from ._models_py3 import SecurityConnector
from ._models_py3 import SecurityConnectorPropertiesOrganizationalData
from ._models_py3 import SecurityConnectorsList
from ._models_py3 import SystemData
from ._models_py3 import Tags
from ._models_py3 import TrackedResource

from ._security_center_enums import CloudName
from ._security_center_enums import CreatedByType
from ._security_center_enums import OfferingType
from ._security_center_enums import OrganizationMembershipType
from ._security_center_enums import SeverityEnum
from ._security_center_enums import SupportedCloudEnum
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AzureTrackedResourceLocation",
    "CloudErrorBody",
    "CloudOffering",
    "CspmMonitorAwsOffering",
    "CspmMonitorAwsOfferingNativeCloudConnection",
    "CustomAssessmentAutomation",
    "CustomAssessmentAutomationRequest",
    "CustomAssessmentAutomationsListResult",
    "CustomEntityStoreAssignment",
    "CustomEntityStoreAssignmentRequest",
    "CustomEntityStoreAssignmentsListResult",
    "DefenderForContainersAwsOffering",
    "DefenderForContainersAwsOfferingCloudWatchToKinesis",
    "DefenderForContainersAwsOfferingKinesisToS3",
    "DefenderForContainersAwsOfferingKubernetesScubaReader",
    "DefenderForContainersAwsOfferingKubernetesService",
    "DefenderForServersAwsOffering",
    "DefenderForServersAwsOfferingArcAutoProvisioning",
    "DefenderForServersAwsOfferingArcAutoProvisioningServicePrincipalSecretMetadata",
    "DefenderForServersAwsOfferingDefenderForServers",
    "ETag",
    "ErrorAdditionalInfo",
    "InformationProtectionAwsOffering",
    "InformationProtectionAwsOfferingInformationProtection",
    "Kind",
    "Resource",
    "SecurityConnector",
    "SecurityConnectorPropertiesOrganizationalData",
    "SecurityConnectorsList",
    "SystemData",
    "Tags",
    "TrackedResource",
    "CloudName",
    "CreatedByType",
    "OfferingType",
    "OrganizationMembershipType",
    "SeverityEnum",
    "SupportedCloudEnum",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
