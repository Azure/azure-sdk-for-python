# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.security.aio import SecurityCenter

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer
from devtools_testutils.aio import recorded_by_proxy_async

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSecurityCenterPricingsOperationsAsync(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SecurityCenter, is_async=True)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_pricings_get(self, resource_group):
        response = await self.client.pricings.get(
            scope_id="str",
            pricing_name="str",
            api_version="2024-01-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_pricings_update(self, resource_group):
        response = await self.client.pricings.update(
            scope_id="str",
            pricing_name="str",
            pricing={
                "deprecated": bool,
                "enablementTime": "2020-02-20 00:00:00",
                "enforce": "str",
                "extensions": [
                    {
                        "isEnabled": "str",
                        "name": "str",
                        "additionalExtensionProperties": {"str": {}},
                        "operationStatus": {"code": "str", "message": "str"},
                    }
                ],
                "freeTrialRemainingTime": "1 day, 0:00:00",
                "id": "str",
                "inherited": "str",
                "inheritedFrom": "str",
                "name": "str",
                "pricingTier": "str",
                "replacedBy": ["str"],
                "resourcesCoverageStatus": "str",
                "subPlan": "str",
                "type": "str",
            },
            api_version="2024-01-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_pricings_delete(self, resource_group):
        response = await self.client.pricings.delete(
            scope_id="str",
            pricing_name="str",
            api_version="2024-01-01",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy_async
    async def test_pricings_list(self, resource_group):
        response = await self.client.pricings.list(
            scope_id="str",
            api_version="2024-01-01",
        )

        # please add some check logic here by yourself
        # ...
