interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Content-Length:
      - '0'
      Content-Type:
      - application/json; charset=utf-8
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault4e00e7f.vault.azure.net/keys/keybak4e00e7f/create?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Unauthorized","message":"Request is missing a Bearer
        or PoP token."}}'
    headers:
      cache-control: no-cache
      content-length: '87'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:05:34 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      www-authenticate: Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 401
      message: Unauthorized
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault4e00e7f.vault.azure.net
        - /keys/keybak4e00e7f/create
        - api-version=7.0
        - ''
- request:
    body: '{"kty": "RSA"}'
    headers:
      Accept:
      - application/json
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault4e00e7f.vault.azure.net/keys/keybak4e00e7f/create?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vault4e00e7f.vault.azure.net/keys/keybak4e00e7f/3c0419d3c58744d59a8bac24343991b4","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"50xdub66EuFuQnQYkI4OhUUQlsxcuwcnAWne4luFgXhc3xNHkrf3Xpo1Cw1m0YCwYyU33um8TSvXLWxOr6LE1XZGpJrXGypfo2UzsduoIRBWOF5FIRpSEbCPMl_I3eth8aSJHsn3vSYS0nyGkotDTP_jLJ03dWHHHTqKX29WpMbeQ3e4ambV1j3-YqkS1n0Uv27kGUFPMBArDrklzAZ3arzGQy4lWfuBdyFE5TK52A8IE9Hqm-sY9ApuoNgAcYnRySJxcvRoLYSNkWdW56HtJpwptGoUj299v6VpYn16pWU-UJ1N8oU12rx-igX_boUTXIuZRcK0-fbNaPW_nuQUww","e":"AQAB"},"attributes":{"enabled":true,"created":1571198735,"updated":1571198735,"recoveryLevel":"Purgeable"}}'
    headers:
      cache-control: no-cache
      content-length: '648'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:05:34 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 200
      message: OK
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault4e00e7f.vault.azure.net
        - /keys/keybak4e00e7f/create
        - api-version=7.0
        - ''
- request:
    body: null
    headers:
      Accept:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault4e00e7f.vault.azure.net/keys/keybak4e00e7f/backup?api-version=7.0
  response:
    body:
      string: '{"value":""}'
    headers:
      cache-control: no-cache
      content-length: '10579'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:05:34 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 200
      message: OK
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault4e00e7f.vault.azure.net
        - /keys/keybak4e00e7f/backup
        - api-version=7.0
        - ''
- request:
    body: null
    headers:
      Accept:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: DELETE
    uri: https://vault4e00e7f.vault.azure.net/keys/keybak4e00e7f?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vault4e00e7f.vault.azure.net/keys/keybak4e00e7f/3c0419d3c58744d59a8bac24343991b4","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"50xdub66EuFuQnQYkI4OhUUQlsxcuwcnAWne4luFgXhc3xNHkrf3Xpo1Cw1m0YCwYyU33um8TSvXLWxOr6LE1XZGpJrXGypfo2UzsduoIRBWOF5FIRpSEbCPMl_I3eth8aSJHsn3vSYS0nyGkotDTP_jLJ03dWHHHTqKX29WpMbeQ3e4ambV1j3-YqkS1n0Uv27kGUFPMBArDrklzAZ3arzGQy4lWfuBdyFE5TK52A8IE9Hqm-sY9ApuoNgAcYnRySJxcvRoLYSNkWdW56HtJpwptGoUj299v6VpYn16pWU-UJ1N8oU12rx-igX_boUTXIuZRcK0-fbNaPW_nuQUww","e":"AQAB"},"attributes":{"enabled":true,"created":1571198735,"updated":1571198735,"recoveryLevel":"Purgeable"}}'
    headers:
      cache-control: no-cache
      content-length: '648'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:05:34 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 200
      message: OK
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault4e00e7f.vault.azure.net
        - /keys/keybak4e00e7f
        - api-version=7.0
        - ''
- request:
    body: null
    headers:
      Accept:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: GET
    uri: https://vault4e00e7f.vault.azure.net/deletedkeys/keybak4e00e7f?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"NotSupported","message":"Operation \"get deleted
        key\" is not enabled for this vault."}}'
    headers:
      cache-control: no-cache
      content-length: '106'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:05:34 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 400
      message: Bad Request
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault4e00e7f.vault.azure.net
        - /deletedkeys/keybak4e00e7f
        - api-version=7.0
        - ''
version: 1
