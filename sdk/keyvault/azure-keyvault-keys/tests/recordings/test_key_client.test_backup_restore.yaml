interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/keybak2e80e6d/create?api-version=7.1
  response:
    body:
      string: '{"error":{"code":"Unauthorized","message":"Request is missing a Bearer
        or PoP token."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '87'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:04 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      www-authenticate:
      - Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"kty": "RSA"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '14'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/keybak2e80e6d/create?api-version=7.1
  response:
    body:
      string: '{"key":{"kid":"https://vaultname.vault.azure.net/keys/keybak2e80e6d/33858647b6fb4636acdd1499803d5a1a","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"xxVKOxvmnlqJmHzeKdTogfj_cD6QUbHYYygvY9yathnwWe6nsNu_BFcxrVXH2qxSWac9j_uF9E1fEXWpu4eu7UumbvbHGgTz1F-PU6IMfsAO0OU1xes9dUkFGF_ILw8RhT2QdxxHPWNp42yjx19lrMrbjnwn6zHUR3gL142JhXlKS6YGkmwrAXcOHih1j_EgLbctDY4JEyTw9yTrNdwugiOmNYiLdmNJekiqTl9UvPQdCa5uGeZUhJLRYvLHKGh6s8mhiaEIYr0UBjIHk6zZ3Nrxg2jd_gwDvT-R-USy7UGoTByPViD4lMpYSUvtAitV22VpE4b8cZC9H6ERkb4LOQ","e":"AQAB"},"attributes":{"enabled":true,"created":1604008085,"updated":1604008085,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '693'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:05 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/keybak2e80e6d/backup?api-version=7.1
  response:
    body:
      string: '{"value":""}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '10812'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:05 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: DELETE
    uri: https://vaultname.vault.azure.net/keys/keybak2e80e6d?api-version=7.1
  response:
    body:
      string: '{"recoveryId":"https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d","deletedDate":1604008086,"scheduledPurgeDate":1611784086,"key":{"kid":"https://vaultname.vault.azure.net/keys/keybak2e80e6d/33858647b6fb4636acdd1499803d5a1a","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"xxVKOxvmnlqJmHzeKdTogfj_cD6QUbHYYygvY9yathnwWe6nsNu_BFcxrVXH2qxSWac9j_uF9E1fEXWpu4eu7UumbvbHGgTz1F-PU6IMfsAO0OU1xes9dUkFGF_ILw8RhT2QdxxHPWNp42yjx19lrMrbjnwn6zHUR3gL142JhXlKS6YGkmwrAXcOHih1j_EgLbctDY4JEyTw9yTrNdwugiOmNYiLdmNJekiqTl9UvPQdCa5uGeZUhJLRYvLHKGh6s8mhiaEIYr0UBjIHk6zZ3Nrxg2jd_gwDvT-R-USy7UGoTByPViD4lMpYSUvtAitV22VpE4b8cZC9H6ERkb4LOQ","e":"AQAB"},"attributes":{"enabled":true,"created":1604008085,"updated":1604008085,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '840'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:05 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d?api-version=7.1
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: keybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '81'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:05 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d?api-version=7.1
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: keybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '81'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:07 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d?api-version=7.1
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: keybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '81'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:09 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d?api-version=7.1
  response:
    body:
      string: '{"recoveryId":"https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d","deletedDate":1604008086,"scheduledPurgeDate":1611784086,"key":{"kid":"https://vaultname.vault.azure.net/keys/keybak2e80e6d/33858647b6fb4636acdd1499803d5a1a","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"xxVKOxvmnlqJmHzeKdTogfj_cD6QUbHYYygvY9yathnwWe6nsNu_BFcxrVXH2qxSWac9j_uF9E1fEXWpu4eu7UumbvbHGgTz1F-PU6IMfsAO0OU1xes9dUkFGF_ILw8RhT2QdxxHPWNp42yjx19lrMrbjnwn6zHUR3gL142JhXlKS6YGkmwrAXcOHih1j_EgLbctDY4JEyTw9yTrNdwugiOmNYiLdmNJekiqTl9UvPQdCa5uGeZUhJLRYvLHKGh6s8mhiaEIYr0UBjIHk6zZ3Nrxg2jd_gwDvT-R-USy7UGoTByPViD4lMpYSUvtAitV22VpE4b8cZC9H6ERkb4LOQ","e":"AQAB"},"attributes":{"enabled":true,"created":1604008085,"updated":1604008085,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '840'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: DELETE
    uri: https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d?api-version=7.1
  response:
    body:
      string: ''
    headers:
      cache-control:
      - no-cache
      date:
      - Thu, 29 Oct 2020 21:48:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 204
      message: No Content
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/keybak2e80e6d?api-version=7.1
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: keybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '81'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10813'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.1
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"Conflict while restoring key
        https://vaultname.vault.azure.net/keys/keybak2e80e6d/33858647b6fb4636acdd1499803d5a1a
        - key already exists or concurrent access"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '213'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10813'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.1
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"Conflict while restoring key
        https://vaultname.vault.azure.net/keys/keybak2e80e6d/33858647b6fb4636acdd1499803d5a1a
        - key already exists or concurrent access"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '213'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:15 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10813'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.3.1 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.1
  response:
    body:
      string: '{"key":{"kid":"https://vaultname.vault.azure.net/keys/keybak2e80e6d/33858647b6fb4636acdd1499803d5a1a","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"xxVKOxvmnlqJmHzeKdTogfj_cD6QUbHYYygvY9yathnwWe6nsNu_BFcxrVXH2qxSWac9j_uF9E1fEXWpu4eu7UumbvbHGgTz1F-PU6IMfsAO0OU1xes9dUkFGF_ILw8RhT2QdxxHPWNp42yjx19lrMrbjnwn6zHUR3gL142JhXlKS6YGkmwrAXcOHih1j_EgLbctDY4JEyTw9yTrNdwugiOmNYiLdmNJekiqTl9UvPQdCa5uGeZUhJLRYvLHKGh6s8mhiaEIYr0UBjIHk6zZ3Nrxg2jd_gwDvT-R-USy7UGoTByPViD4lMpYSUvtAitV22VpE4b8cZC9H6ERkb4LOQ","e":"AQAB"},"attributes":{"enabled":true,"created":1604008085,"updated":1604008085,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '693'
      content-type:
      - application/json; charset=utf-8
      date:
      - Thu, 29 Oct 2020 21:48:18 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=162.211.216.102;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.2.58.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
version: 1
