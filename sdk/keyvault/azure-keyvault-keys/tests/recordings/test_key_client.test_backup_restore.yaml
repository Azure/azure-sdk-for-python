interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/create?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"Unauthorized","message":"Request is missing a Bearer
        or PoP token."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '87'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:45 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      www-authenticate:
      - Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"key_ops": ["encrypt", "decrypt", "sign", "verify", "wrapKey", "unwrapKey"],
      "tags": {"test name ": "CreateRSAKeyTest", "purpose": "unit test"}, "kty": "RSA"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '159'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/create?api-version=7.2-preview
  response:
    body:
      string: '{"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"u1XlVk6E2sVsRziN7bfYnbWlYTzFtszAk1i80xtkymRZlxLLCjh5Gc_NZdFWh7i6_RosUSrGep4g7xq1WwZRfPz50iD1q0OmsPCMSb8KmvB3WeaZJMGPss8N0rY6qO5ngwh7JpG3uKddjxI7-I51VNW-SGc0gvYhgfL9NLHEVpBPMwTmQKkExswsPFiOh1rWGCumQsxA0H_mCdaKeZ1jlvY9_c2bnKYbqj3u4cZL7wzUneBBa2o9u8zFvL7yapBZr2p0k7XP8yTs4H45ZTAc71DdAPqY8fABhpjJP2bXoYR8X5ZIxkR0B_dvnXpZKtPQimyFGMZja2sAa0yOs1_ixQ","e":"AQAB"},"attributes":{"enabled":true,"created":1615590586,"updated":1615590586,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90},"tags":{"test
        name ":"CreateRSAKeyTest","purpose":"unit test"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '752'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:46 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/backup?api-version=7.2-preview
  response:
    body:
      string: '{"value":""}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '12348'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:46 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: DELETE
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"recoveryId":"https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d","deletedDate":1615590586,"scheduledPurgeDate":1623366586,"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"u1XlVk6E2sVsRziN7bfYnbWlYTzFtszAk1i80xtkymRZlxLLCjh5Gc_NZdFWh7i6_RosUSrGep4g7xq1WwZRfPz50iD1q0OmsPCMSb8KmvB3WeaZJMGPss8N0rY6qO5ngwh7JpG3uKddjxI7-I51VNW-SGc0gvYhgfL9NLHEVpBPMwTmQKkExswsPFiOh1rWGCumQsxA0H_mCdaKeZ1jlvY9_c2bnKYbqj3u4cZL7wzUneBBa2o9u8zFvL7yapBZr2p0k7XP8yTs4H45ZTAc71DdAPqY8fABhpjJP2bXoYR8X5ZIxkR0B_dvnXpZKtPQimyFGMZja2sAa0yOs1_ixQ","e":"AQAB"},"attributes":{"enabled":true,"created":1615590586,"updated":1615590586,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90},"tags":{"test
        name ":"CreateRSAKeyTest","purpose":"unit test"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '895'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:46 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:46 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:48 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:50 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:52 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:54 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:57 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:09:59 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybak2e80e6d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '91'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:01 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: '{"recoveryId":"https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d","deletedDate":1615590586,"scheduledPurgeDate":1623366586,"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"u1XlVk6E2sVsRziN7bfYnbWlYTzFtszAk1i80xtkymRZlxLLCjh5Gc_NZdFWh7i6_RosUSrGep4g7xq1WwZRfPz50iD1q0OmsPCMSb8KmvB3WeaZJMGPss8N0rY6qO5ngwh7JpG3uKddjxI7-I51VNW-SGc0gvYhgfL9NLHEVpBPMwTmQKkExswsPFiOh1rWGCumQsxA0H_mCdaKeZ1jlvY9_c2bnKYbqj3u4cZL7wzUneBBa2o9u8zFvL7yapBZr2p0k7XP8yTs4H45ZTAc71DdAPqY8fABhpjJP2bXoYR8X5ZIxkR0B_dvnXpZKtPQimyFGMZja2sAa0yOs1_ixQ","e":"AQAB"},"attributes":{"enabled":true,"created":1615590586,"updated":1615590586,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90},"tags":{"test
        name ":"CreateRSAKeyTest","purpose":"unit test"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '895'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:03 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: DELETE
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybak2e80e6d?api-version=7.2-preview
  response:
    body:
      string: ''
    headers:
      cache-control:
      - no-cache
      date:
      - Fri, 12 Mar 2021 23:10:03 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 204
      message: No Content
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '12349'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '616'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:03 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '12349'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '616'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:06 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '12349'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '616'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:09 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '12349'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '616'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '12349'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.2-preview
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '616'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:16 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": "JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUl5WVdabU5tRmhNUzAzTm1Ka0xUUTBZVGN0WVRjek5DMDJaalZoWkRCaU5XRTRPVGdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQzB5TlRZaUxDSmxibU1pT2lKQk1qVTJRMEpETFVoVE5URXlJbjAuRk9ic1N5Vl9qbGdVN1dMZllTUTVTbFM5T1duQ3pzWlNoeWo2VHA1LTF4QWhYVTlPQ3U0bTRNRGdxYmRiWHN5RnVLZlRvaXQtVzV6LUxITXk5d0RLX040VlhqQmU2MkxPbHJ0RHlNN2NpNDdyLTFVcGtCVkV2Wml1TjYwb1BTTTV5djNSTWZRVDRVbERSdEVaYkU0OHExalBnalhIZkJmMUQ2NjBaaVVPYjdNZkczX2Z2dlpMa212UzhmWnoybjU4Ni01QmdVNDRDYU92M084Zkw2VUw1Q0FCMEg5NkVBeUlzT3hlRXlVZlZzZW1OMnNEb3VGSk5IRk9Uc0xjN3Fpa0VxYnRKMDBLWV8yUk0wVG1mS0ZvSi1hZlpWRWtWeFBzV2VldFFRQm9OX1FVWkZ5WlZEVEVIT3VwdDVPcW1TSVFldjRCdzJLTTZGY1plcC1jMWVoSVpBLjJRc2NxTUFodUI0Q0NCNnFhdGN4V2cuNTZpS2RqenBnWFNsd0diSkdtU3RudExfNE5nRGJtT0FKVURIRnFMQ0RDeDJPR3d1RHhCRzFLWkoteHp4T3VLLWFHRXRvb2hBekV4NjgzS0JSRU5YMl9OLTNHZHVoLUZYV0I0cGlvUUdKQmJrbDhfR255VW5tVi1aOHZadDlJQ1dFNGdjYTFLQWNFZVY2TFN1M2EwUDlUQllGaDNxa2pqRU9XbjhuUXdBNU5QVV9NUlJHNHdPaTNWN1lqSkhOdUx1WkVvQTJQR1dreFA0VG5tT2lrTnhpdnhUNzhSUHlfYUFrS2dlRTgyZmxDTjQ3STE5cnFETmFJUHMwLXNYcG1sa2FFNm9PajNWR1RvMXh5TmpIdXNMWnBWY01XOXVMUmFMbk5jWDlFY1JYa2dHbWQ1RVpWLXFBcEVhcHRKemRYMTc0YTJlMWo2VnhWbEFQV1llLVZFcmM3b2w3QUxMYkJEaFBpUVowS0M4WmRoLWdkbkdkSVppTXFBX1BUdnFpRDFfalhLdlpLMnh3TUpMdVpGRXo2ZnlzX2xlc3Uyd1NNYV9BbHlDQ2VGOS1PbEREOFFlREZhQzRpTVZSZjJ5UmlKeDlPNXhoRWUxRzVpbVhBRmhlWlpQTHdHWWxmYmJ0U2xpWm1UQzJCc0NUeWxHMkFwMWx6R1FNUUMwVWE1ZURmTHh2YVVuYzI4VFE2cFQweDRyNkx3VWJYa25VV0JFUjhwZG9tV1F4U1paTi1WSW5IS1RXSk16NFBwMm9qdFpIWVo4NzYxN2RhMXFKY2NYLVdlcFVBQWNBdWhzcFZnX3hLZHM3SWw3WVlIOG01ZUtoZS1wWHVpSlhHSmxtdTJycTIyUFNyUDZULVhhOWk2YmlCZU8wTU1jaHhCNDVXQ2ZGdERDZ1BMeWs2eE1hbnlQUV8zQWk0NlB0Sm9JMzNiTUhrU0ppVENvWm5IWVFDdVF0TldaamVRM2dDSVQzY2ZXZGhEY21UVFVMWDRtcEk5NC1lZWFUUTRaVkVoMXRUeTA4aGcwVDctTEk1RldxeUJHWUlPN3JSZHA2RmxtcFNCZDh6dEhMZXYwVTU2QVEtdWstbjIzUUhUV2M5eFdENVctOWZva1NiVXQ1ZWt6MzlTNEIxWHpxQkZabzRUUFlKZmFUcVFxbi1Fb2l4T1Z6OFZTaFZVQTRfbWQtNm5iQ2QwQ3lUcHF2T1dIbnN1V0VtVHZza0RTalJuYTRCbGdRRWRmZzdSbl96RGxVbk1qRXlXT1BxWmQxVlpFLWRPaERZU0ZMMTZHTjFqeFFjLWZWcmJkQ2JMUDZiRVZXZk15ZEYzNmFFbWUtalFRLTZIeFpHWGppZmVIbGp6RGgtNUtZbGNqYnB3eU5XZjNiSThlOGo4MnFHbExhbmRzNVQ0U2tNdmZ6clJvS2V2TTNDWXNMZ25JU1NtNEEtWkIzSWhsT25WVGR2M2VhcVlUT0wwSDVTR3BSd0hBZi1kZXlvMmZaSktSUDF6dVVmSTgtbmJTQ3k5Tk9yZk9uLVVDdHRYZ21VY2Nwak5JQ01BMzViRWhodVVfeDZxNGpJdVYwSmI3a1NWVFRMeDJjZDRiLTNrb3ZBNFhoSWJHdjY2SGhtU3hqYktDSnlQTlVpOWZMU1ZfREdqVmw3aTdyN3ZDcjF1aEJvcGFHTjlqdTdLNVNBS2VSb0VwWDZlWUN4V3FCZTBNcGV5dlJxMmxnTnVOblM0QmxfY0NSLUdGcmtLeUViWHlpYVFiRm5yWi1id2ZjbElhSmgwdTQwXzdPdkJmSDhnUjZjaWdIVGFldWVCb1pYVWVaY3BMbkNxWC1CYjZ4eWxPalQ2UU00VGR6bV96dEJ3WGVzU05RUHNpRjJCSnUzSDNNdDZ4aTdZRWVCWE1vcjlDaDVPYWg2SUJ4MDZZU3hqU0ZhQzFaaEwtWVIwekg1R0N3N2VSbjRFVk8ycXVaY3VndDdoajVrQlU5VkpiS2NrMmdmNWs2c0dhS3NXb0UzclZaZmY4OFF6VmFkUWpPbUNPb3pMOWFTanlWTE5WeVM5TWRGNno1ZG9VWjRUVHJxNnBIWm9DYVpZWWpwNWJPdnZtVHJVM3RzbjVOaV91bUZPQUY3SmswOTZwa3pXc3h4TTlKQi1pRHJMRGpxd21maDBqMnduQ3NiUlNRVEZNTjNSdFVmLXQ5UW5fTXVQRTBuQS1obUtxUFhMb0xWUnBaZzhCbFJqRWFybWxuMlNfanJ6Nnh6YVpUY1BQaEh4QWtBZ2dNckRYaVN4bV9wU0JrM3ZTVUVGaUdlXzk1Si1FWWZRNm1PVno2cjdITlFjMEF4S08tc01vd0R2X0dMc1lod3NVNy01dndTNlZSVjhDYXpGMnJ6WWUtZWtTaDJzWU1YYXJBZHMzb0JCZTVKT1FGWnM1eEkwM0c0aEZvNEJscUlLc2ZjSGFYZmFlWnV6N2puVElNNU41akdSVjZwSzFuNzk1cFBTdThlUVcxcWdlWjhqaHJPdGpaU0pqZ3ZqN0F2TU53eUlGeEZEdmRfcUFmQUdsSjBRWHZfNEstbHluejVxS3B0SUV1WVRreGZLa2tRZmxkaVJGQzJVNWZiOExvSW43Rl9sWnU1S1JhcHNGSktvRk5ybkhyWUFjVFdxWE16V1pYbzYzczd0Y2hfRE03UWVpWU9WYjlpY3B1LWtNYWtEVmd5aUtWQ0QxSjU4ZjcwT3dXY2lkXzFYS0tuaFJKeFBhRlZ4YXRpWGVkYk9WZUJWOF91TW9qczBaaDBEdkxiVi1tVHdXR1JrQzVpZDl6Wk15TlhGZ1B1WTR4NDVXeUx1cWpCanNZT2owTjQ2SDI0aHVOUmROV1lNcjFRMGlGODY2NHB0T0stSlJzRS0zcVJnbC1sQnVFTjlIUTUwbVJxMS0yTUswaGlVSWdVcG56WTNZeHVoVlhyclJ4MzR5RElfQ3U2bVNGX3d5WVZxd1kzNC1CYlRWMEFPUHRYcVJjT2VUYlFaYjVnZzNsZEh6UjRkak1hRnA4ZjRZSGtyZkY4eDJiM0lJZTRodXNkVGVpX1FyWHAyS2huTUFadDk3d19xZ0x3a1VwTkhFaUdrdFhaamNiVTVGN1FHU2I4Um5zUUdUWTlWaVRCTWtkb3E2Mnd0S1N3eEJ0ZUJkR2wyMklEZm9VNGpJeENCTUpRT0p0UG1idzhoa0ZlenFsWk02cjdPR3NBZ2hJVU11aUo4RWxSSndIbmVyakxJc0E0MDc2S2VHa01LWVE2LXY4VmFuS1ZJbEhuQ1N1dGxzc3JUZWhWaHoxejJLMjU0OTlyM1p6cXdWSHJuY2hZRm5oWGZibmw0dXBDS0ZRcDFQa20xR05saDJLbEd3MWdiWHFBRXNneGZzc3BIdVVkNFRmM0pZbVhKTThjRlk2Z1I5SC1PUkdrYlFocjRyTnlsXzFpVU5oQkdqdU9nQXNKdXJ3YUJwbEQ1YzB2Mm1QQkxHQlVlemM3VFZJcjhITmpObXBWS0dkZnNxN2RwMmNZalJPb3V3M1RQN1JWekRsb21MZGtHUlk0UEV1UmhCOG1pRUJ3bkJLT0hnVndhX1llN0JrUGtLbXJpM0Q3dWM3Wk1jVGVtdkQ1Tl9pNU5Ld3E3a0hmZUFtcTFSNDVKRjB1dE5RZ2d2bWFuaVh5TkpCYzV1cnVtaFdJcWV2WHlxZDRjQ1VrMHV1TFdSb1JBV0c5UnhPQ0VyZC1EcmpYV2U5R0FFdF9vZW9CX2stcl80Rnlud3JnX2psQ25XVUlLNzFUUS1pOV9FRmZhVHRZaG02SThGajVCTlJKMDFPMHR2ZnI2ZjdpVThjYTBmUDR0a2ctcjdGUUptMlVjcFhMVi12YjVpSlp1UnA5LVZmRURRTlFJbGxKclViZjZYbGJERG13MmhTM2NjdjUzVUNYZ3JpNnJJT2xjOGt5T0hjc3hpOXF2V0RmcGk3MnhTcTEtTmZqU2l6Sl9BQWNjeUZTQ0V2S3NjY185cFpTU1ZFdS1xazU0NUdXVkRiMFAybHVPanNkcWY0SkhFaFRpM2JyV2p6Tk9tRnBTalVSenBGck1VRTVGcjVpTXFJc2VzYnoweUhQdDQzSllmV2dUeHJXaFJka2NUaWFCcVpvVjlJSDY2NHNMOHdfWExNT05aWG42LXNva3AxaVdHYklsanNuMWJ1RjFaYklCN0UzOFVySjZtdkFZYThZUWhZTzV5TE9XOW16U2dtZVJieXNOU295UHc3ZGZqZ0g0ZEJrcDYxNWxQeFkzcko0aWdRQ0pFdk1tekhCc0JCVE5Nd0xSVFhvbzZtRWtGS0FhcXlMaG9RQ2J0amdrYXhKc2VuNkZ0c2RjdS12QjZtQUV1dTV3RkFVanIxRk8weW1RRUk2dUhSV3haOV9ONTZpRlNzbkR2QU9oOXZpenZRN3BmS1VaUEFBZk9NQkRQV3NkMVJjQmNHeU9GMlhyc19xNHpvMWc0N0lEcFlJUy12NENhQmx2Q01wRzhyTmxYRHZTb1Uwd3NQcTVBWmxRb1V5VW9BV3oyQm5ZQ2NmNlo5Z1hOVkZPS2V6R3BIcURVQWQ0cUZWa09ySTdpS19NY3RPQ0dZakJZVF9kd29lQ01KbEJjR0pqRnhRZlBuUUwyOHVRdTZfTHVxQmlQcm9CSW5YQ1VCRWZPRHRmeW9oMVpkcEttRUM2MmM0MVgyaVpwN05oZzNZZ3A2UENHNVkyaDFPY0c5R0pYSUFvc0xvaEhaZkl4U0ZhNVV3LXkzVDVmZkV0ZXVRSFpiX3NvN2taQ2pTUDJ2TFMtZ1dVcllxa0d4cWhQT28ySnZuMlNwU1M1cDFQRnZPUll4NHljX2p4dXJxem9JOGZpUV80OWtLbDBzMlRqamtwUGhqdHFaUkhZY1o2N0xXYWE0S3hOeFlqaU9Ea0wyYTNLZ3gtTWFNOEQtS3dUUVdlbUV0dEswR3J6Z0FtaTlhMV8tN0pORHJlOGM2c2dFRGNRX3hPdzdvNDNBekJVRTQ3VWU3Q1lpYWZjdzE0MjBpdUFXZEloVVd5X3dOU2YzR1AzSFRkQWV4emJhQlhqY1F5MFlRNnBrSFBQYXo2ZUdZZ29GYWI2OFpyUmpXb19GQWY4dW1XdU5rOTFGeVhSR2xKMkRwZ3MyQ3J5YWEwR3d2V1M2bkdFT2w2eXhiOTY0NGdSbk9ha3k3RFYwQzVfZi1PNkRBUDBfejQ3aXB2TFYxOGJlTnp3cUFpZDVUeUY2bk1SZ3E1LVpSNzRKNWtQdEZBaWxGVG81UVFZM3M0RFFfZVNybkc2ejN1V1k4YU9IaXA3aHJKWmdoUzllcUdEbTliTEVBZmVYbnBzcEttTHBYUGltR05TVUUyMjZVTXdwNExvSmVhQmhBSHMzU016bGhnX0dxT2lJVmRyRmxzX0hqUXZWVkZFazRRX0tKQkt5aXAyVjJUNVN2bmhfdlUwZVZHcFF2aG1INGFURXl4TVE3dTladFZRZ0hFQTJIcWdDMzdnQVpzekprUWlLTERFLTh0WVJnclJOZXpkUlZnYUs2Z082cjNqbUlTVXd6MVNBQ3Etd28tMC1zQ2xNWUtTRVBvTm5UNms3VFhmRkV4cHUxZzE3ZWdqRlQ2ZS1iRl9xTkVBbThUVGotampfYVZpVFhodTcwbWlFb0VMM09UOS14Q19yTUFPLVJKSnRzTGRLUmFuTkR1blFKU0UtSHYwcDJLS0pSTjdCSk9SUkwzZWJDSnBSQmZBSHh6NXpsdklqZ0RCWmlEeWNyenJKOHpsS3lTandabFk3MzhsNWpHTnVjTnM4cGxnMi1LWjBONUFtSXdFM21UNW5hTENuY2ZzaURQZVZNdHhMZG95eUNvYzU3cDRBN1JiSW5rWmRLaUhoM2J6R1QzNjljWHpWWWdlOWJFZ2lsME5tNWtfNllhTzMtak5ydUZ3Xy04TEdodkVRbjFrT2d0eHBzSTlnSHhwOURYNUpJdHVJMjY3T19tRUxXakxzcjJVZ0pyUnlrQjlpR3dRS2RleUpLdE9OZ1pBOFNtMGJBWHBDMlpwbWp1T2lObU1NRmFXXzlhQ2JtcXdzRXhZaHNJOTh2eGNIUk0wM2RjS1l5SWtYT1k4VWpxRVBtdVEtY0lDY043U0lqT3BKY3gtOXNsU1lPdWtaS3ZmZHZMRnNINHFtN3Y4TGhiM2ZiX3JMcWJRMlhSNzNDbHBfd1dOMS1jMlBNNF9nazd1SWhDcGRTcUJsaVFTZkQtelRTeFdLLU85Z29pUFVBbk5HVTFBbmZXUnlRUTNMLUgybmRCbzF3VEJYSFVJSW9BWEd4c2VLWHZ2VUt2cGM3NlR4WUIwSjhkY2puWUZ4QW5fTm9jaXBubmxLdzdRNXhTTExuMFh3WUkxaGJ1dzB3SjFvT3hqUXJfdzB3bUVmRmJnRWsySlc2aHdGYloteWt6U3U2U0pHTHYtTFNiZnB4MGtSd3lpT3psQUlCQzF3b1E2TERVTmJrNlRmLWFxMXBneWhJZHhNMWtPbmVLV2dldEpnQkNoUWJJVTVlY1JSY2ppUEh1V05NcW9zTzkzejc4bGlObk1CZGlnRXhGWUdhcUFQU3NLcG5WcDl6V3FSWHJIQWI3VFNWS0lZNWh3UWowcGw4cDQ3LTNyRy1wZ05JdzRpRlgtV0s3WFJCWkIxdjFadzlUM1o2ZFdsREpuU0w3enctdEFfcVFQVkpLY0dKOTZzd3hnS0k0NElnNTR5SWxOUzV3blVoMWtVeUdJUl9IZVVIVy1DTXlDeExmYjFOenk2X1pRcF9aR044WGJtOThCSUpOUmx4WFFqc2o2bW9oR0VyRGJBalVacXdxRHNpT3ZJeVlGdnE5dXFuYUVTa0tNc1hhYzQ2Sk12VndMUlBNNHE2NlZNczJNcWtDTjNpN0JfMmsza1ljR1BwWFB6RmFnbzJVU2dUaGxhNHY1RnBTaU9KUnR4LVRad3BKU1h0ZEMzaGJ4TkJZaUNGX0hiR2pFMVlvU0phTXpCYlBqd0JNYWc0VW45OTlOSXJ2RkhyUE9weTd2c0wxVXk0WnEzOWoyeEdJaHU4UzJWMGd5WGNJdjhscTFKbnoxUFFPTVlrTVpzWXF5TmJQNG1ubDMtcFFqSTVUcFppOFhTcHQybXlZMUlRRUtzdTN1UF9GV2NxMExkRDRaVl9lWVZHZDBZcXJqYm43Q0NMYlhRaTZscnl5cnFrUmpBUUZVTjBhbTBCWkVlaWM0eVJGZklhSkVaWUl3M3dUbnA1dzBVNFdtY3Z5N2NVcnZ0MmxWdUE4VmlraUJncDlhdUc0TGotRnFTWnVCYUZRNUdXMzJnWTZRWkpiNjVQMWdCYl9hTUxsNmRuWWJocjFPWDhnMDQxNGdqUEdRb0dHVVdIcnFUZUtZdVJoY3RqSUd4bmZKd3ZtS2M4TGZiZG9Fd1ZzbTQ2SDlqdktpcTloUHJTbV9iQlAyeERiNk1qVmI0WHRrODRRUGE5U1hTS08ycm5Da1lzanlnY0dzaUpIdTBCUDFvU3FFbVRfT0xoSDhvNTdiVXFhaUh0RHFWTVBOczRJOVVMQmkwQklxRmFleWplbVJNdFJYTGdQcjNDSzFhVm5oTjFWUWdNOHBMd1NUTUZNSzNTLWtvWHVQTGdzRUs3ajdsU0lCYnhybDhXdFpFR2RsRnktZVN0NXV4aXpSTUh4WlVjSFQtZW5zUkhKMm92SzhGT0dJdmNGZXo1cXRJRnZyb0ExOHI5cUNPd1c4eFVzelVlNjlYT2dwdDhQREZZdzRDZU9OYm9VU1k5QWJiR0psZ2lRd2NCU0VuUV9FVHJULWk0SV80dzNqaUpCYzJnS2xUS0Yyc0hVQmdsXzRRbkxETTA5OGFWY3FDSHJ3QTZpTzNvMERYbjhPamJLSERTcWJMVk4xbnBfalpCSHl4aEExeXNmTnVqdHhXc0JuRllPbFhGUFFYMFg2UGF0VTZzSVVUV0QtVDkzZ1ZxXzd4UFBFbm1RZjRRNGtiTjloM2NxRTJzOGozSVVnVDVkX0tqUVFZM183TUlXdl9qa3E5VEllOGR5eWhyZUFVR2d5YTZDaU1zOGZzdXYxMHF2YVQtLVdvb3FpeXI1SWZTbzNZWE1EWXdRSlJlQVdZeXdVMzM0TG5qSzFmOTVGS2ZEQ2tTNjNyX1g0Y1Z5NnZRSHpyM0k4OXZwZzExNERSSnc2cGU2aWtvdjVUcDhWWkRsd1NhbmJvajItVEtCLUJVMzA1YjMxdkdEV1VCbVlCanVRclRSdks5QzFTWTNIVkFIdWhJNk5HNkVkNjBMQTZpa3FodXc4X19Hd083RmxnUENoNVpCYXgydURHQ2k4ZEwtbWVJOExJUVZHMFE1R0hyUHpwOUNJZWFnNldnc2VNcEdVV0ZvMWhBbVhtZk9uTzBUdkNKbVptc2QwMUtYb1pZSzBTUjRCZjhKdVF6clEtV21ZaEJEbGRFZ0lXQlpYX1NNc2h4d1o1S05ZYWROR1lPVnhsT2pBaDlybUdfQU9nOXYyUkxlMklXWHdGcmtJd1BNYUlmUWcwaURKN3VzMW9QN2lLLUZrQ1dEcGFOZzhCajlRY2dBcy1kUmFMdWJoNktSOEx0Y3huM3YtbDZrSTFsYWFmQko4NlFtNnNPbDFlV053SkRkeldCUXBJV2JFd2tHTWhiQXRLSExrSWp3MjZvdXlOc1h0UUItNTdmX0hLak90TTZ0TlVFWjlfTlphNUlwa1cwZzFVUk5FQy1JVktCZVY5RkRlNzhiZW1mV0JzSmtuOThVbFJYQ0VrWHBxYnBEaGFHdnUtd05LVDJvX19Wb3dTUVNfZmF4VlVqMmw4dXh2RFlkVk1tdjczdUpwSnppTlVUWWprZ2pLak9HTHJGX0I3eWNSQ1ZhaEU1OF9KeTVpWWtuQks3YnNIeGdFWVBvMFB4cXE4dXNDNUxrcnFCN2R5N0tnc25kSm1kOFo5VDlTako0RXU2Z2xxVE9iTGdNVXY4RlFuR2dZZFRqQ3F1MXlXMm5tRVFBeE93eU9rS0dKWV92UzNsanBHY05Pb2FRTFlQQjlPcmsyVzBHMjdabnhvY3ZlS0drS0hQR1hvUHR3SFdCUEVUZ3c1aHQ4dVdJTUltZ1lsb1k3NU9pX0FTRkw1THRXOTF0NXFTUzdGSk4zT2lBWFlCek9jdV9SMlo0azV5UnlIbXlFOUZvVjdBSnBEWDlKSmNERVhFUzdsV3JIcE9hZkV0RVE2bGxudXVILVdUTWZLdXdBOVlDRlExd0JWWTdRTGMzaEJ3X25Ha1JmLW02LWZIMVM4dVFoTVpaazNDTDR2aXlmeE5Ba2VPSDNnb25LbDJvajFjbkJXOXI1aXc4S2N3azc3MVdyTmViWUl1V3pfLVFfZXB1YjhPQ1ZwdmNQanQ4Q2tPZjRZQTd6VUMwZ0FmUjdEOThmem43a2ZpLVl0Y01JVnFVNUxTVmxBZEJNNkh3dUtvOWUxNUxFQm1ZVzBIR01aZ0lKRUJ1MGtQZGMzN3dCNVliOEtsRDlfcnZBTXpzakVpQ3FXWlh4Z2VPUlFZeTNOMjcxelJPbjlHTm9VdmMweVFDVnFsUVlTRkxsTjRxaDRja0FER0E5U3IyeFN4aTdOVHRFRFdIcHVEZEZlNEROVl9Pc3NYcHRMeUs3ZTFoNVdqY2ROcHFLd1luQ3k2NjZpbzVYeEloRDRFNHlEcEh6NC15cWstWWJZYzVWWkF1UnFvdVc1ODFITU04SmE0UTBzaXQydTNyU3VWT0FocDdGb0IzRWJYSFJKbjVCVl9EbFhoRU5KcG8xbmxGZ2VzZC1tQ2dVU3FZYzgzR01VVFdYV0EtaVFOLXJ6RHpOUU9KSmdXUXVUdEZ2a2tpQmtNa19rUGd1YnJfZTBuOGZjV0VuTW53d215ZlJRUExRcFlDblV2OG8tTGhVX0hTNGNOdVZzdVZSb3BkN3VNc1hHZmNvbkhCX2E0Yi1wUjlnaDAtLTY5eHhTNFlmNFlTM1VDaGZpQk5vbVo1S20yUnhDQndrUU45RVg4azc0T3M5WWl1NUtSbmFoVUZ3amgxdnRqLXY1ako5SGJvU1dkOFNkTlFqMzRaYnBzdEd0eWYxTEt5TWNJaG5jNl90R3FkeFg0SUdpSkNnbWFWRlh4UlBoYkJvdnZnT19zMTdGcUhkRTNhSHVYSnFsVG02WW9DX0szMHNCWkh6ZHNuZUtaOWJfdWdhTzdXalhXUUw3cWNUYTVFYUxLbUJueGo5SWxIOXpWdjZUR3BqN3dBY3pzZWhJN3Z0QVRFSkZ3SEliOS1nc2dYX29GbF90ZXZuWlhkWmZCX0k1ZDVXZ3BzbXJHZUYyeVFac2VOelI3eVlKQV9qM0JaY0RLRUdQblpnTloxU2Y1eWhnemdDWWVVaVRyQmEyS1hIYW11OVlNM0hlNm15dkhCNUdNQ3F3N1ZjOEJIc2NsaUgtZEZRZ3MyRkt3WWE5dDJrQk5JNmp4b29pVlVYTjZNei1GdmdNR3dkel9FQVhIN2lqZEVqVmtfc1ZuS2xtYzBkQjlIVnB4eEhhVVIwVnVKUTYwclFJVXg0TWNSQnNFX0NDV1hwNkdMYWtSOVFRMjdRVHZxUWpMMVJkZFBSMUdMY3pFVXBtLW5GSHhleTNiSjF0ZjdLVmg4dUh0c2NNc3RTWG9ZOE81al9YdE4wNTlYaW00Ujd1RDZnX0pEWjVqMDBXd2dTYmRaTXFscWhIdXZPODVUdFRrTnFCM1VVR2JWVzJCNmtZUUhkdm5kT0VuNE9FaFNBa08xNEltVmxXYmdETWxtRU5ZQ2syS2lOdFc2MDhWZ3BUblg4YUhiVWI5MW1OSVphRE1aZnNKX3pyS2txaVhueUNVTFRFR01oUmhlSTFadDFRWUw5blFuampEam9Vdm9zUExrOTBBZExsQkMxTFJUU3hhdEdDZXVfT0VXeWUxR0x4ekFuOU92TlM1UkNHWHlqelJxeURidnF2N192bW5TWEQ5OVpaM2N5VmhyaTZZOU1jeEw0ejBOenZzMEVJNEUyX2NfNmJEaDE2ajBBb3BTSkFBSFZDWUNGamVmZWhJbGxpRFR2bTJBazZxRzlWQ3hpT1pKNHlKdURQNE15cTdyR055Q2lHY2p0ZmY0d0puWm5vc3IwZjdlOWJBT2Qzb0dLUklUWWlFWFQtRjBJWnRTclhaNDFzMmQ3b2VsQ0VMRGZJUnp5bWpoQUxGMnlFallsRkZFMmVNUmdtLWJFSVFlR2kydnRKUkFOWkd1NXE1emZ6ZERoQ0lwWEhWZFQzWllreTRuMlpNekQzcjM1RHFvNFdadGlUSHl4bTExZmdkYUFBXzNyTkpQWFN2NllnMURHZVBIVW9TWTFmR0NmQUNmVFdVLWc5RzNlQnppVTFZYnZ0bVdrQjEtdTFaQVdLTVNrMkJfd3B4azg2dWg5SFJ0TmJkTUR0ajNOb0Z3T2ZxVTBKdTNSTTBieXBicEltZ2tBSXI3Z0p5VXEzcU8xM1lwdlFPNFdzbjVzeGdJYnJzY0xBZUNsOW40S0phWHhCVzJqZWxTbVE2SE9OT2dZX1BwYnRla2prZ0h5T1JqM3JSbHRoVkFyc21CSEJfXzAySzdZNTl3cC1jNC4xd3BSM09pa2JnamhiS3NqV2k5cHo4aUdHLTZIXzY5Uk1EeHBpZ05oWERN"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '12349'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b4 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.2-preview
  response:
    body:
      string: '{"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybak2e80e6d/77511f92c32845ccb177069f4cfb4b67","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"u1XlVk6E2sVsRziN7bfYnbWlYTzFtszAk1i80xtkymRZlxLLCjh5Gc_NZdFWh7i6_RosUSrGep4g7xq1WwZRfPz50iD1q0OmsPCMSb8KmvB3WeaZJMGPss8N0rY6qO5ngwh7JpG3uKddjxI7-I51VNW-SGc0gvYhgfL9NLHEVpBPMwTmQKkExswsPFiOh1rWGCumQsxA0H_mCdaKeZ1jlvY9_c2bnKYbqj3u4cZL7wzUneBBa2o9u8zFvL7yapBZr2p0k7XP8yTs4H45ZTAc71DdAPqY8fABhpjJP2bXoYR8X5ZIxkR0B_dvnXpZKtPQimyFGMZja2sAa0yOs1_ixQ","e":"AQAB"},"attributes":{"enabled":true,"created":1615590586,"updated":1615590586,"recoveryLevel":"Recoverable+Purgeable","recoverableDays":90},"tags":{"test
        name ":"CreateRSAKeyTest","purpose":"unit test"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '752'
      content-type:
      - application/json; charset=utf-8
      date:
      - Fri, 12 Mar 2021 23:10:19 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus2
      x-ms-keyvault-service-version:
      - 1.2.205.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
version: 1
