interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/create?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Unauthorized","message":"Request is missing a Bearer
        or PoP token."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '87'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:39 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      www-authenticate:
      - Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"kty": "RSA"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '14'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/create?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"qBSI8tyMW8LvyToQNu7ouh-u29k1wJFg_fwoHA5AfjA5cPvIaFHlypdQ1zkGSLmZnCKhn47bXh90O6i1v5SHr1IQstKT3Y2egBnFXgcgFSj91GVMXJfbFWu666jWBVItiwlDzgwQEuGXDoVPH8xltY2sK2vF9RyZ2SaC_bQg7Z4Yg4Y3Ql64pGdgRT4L-ZX7Xaa88G09tvyTxRFNnm8Eo3AVAEwr1vjdo5G_SmGrJ2FR-ljE7krwdag3HqZiZlS82ri0zGg4za3mWW58swb2BtV7LElNT2Zgte3oK8cpzp5RF8vnKgm10Q7rdS8IPmK4ku9ttwrRx8vCF47zxsm1HQ","e":"AQAB"},"attributes":{"enabled":true,"created":1618855121,"updated":1618855121,"recoveryLevel":"Recoverable+Purgeable"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '671'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:40 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/backup?api-version=7.0
  response:
    body:
      string: '{"value":""}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '10272'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:40 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: DELETE
    uri: https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"recoveryId":"https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d","deletedDate":1618855121,"scheduledPurgeDate":1626631121,"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"qBSI8tyMW8LvyToQNu7ouh-u29k1wJFg_fwoHA5AfjA5cPvIaFHlypdQ1zkGSLmZnCKhn47bXh90O6i1v5SHr1IQstKT3Y2egBnFXgcgFSj91GVMXJfbFWu666jWBVItiwlDzgwQEuGXDoVPH8xltY2sK2vF9RyZ2SaC_bQg7Z4Yg4Y3Ql64pGdgRT4L-ZX7Xaa88G09tvyTxRFNnm8Eo3AVAEwr1vjdo5G_SmGrJ2FR-ljE7krwdag3HqZiZlS82ri0zGg4za3mWW58swb2BtV7LElNT2Zgte3oK8cpzp5RF8vnKgm10Q7rdS8IPmK4ku9ttwrRx8vCF47zxsm1HQ","e":"AQAB"},"attributes":{"enabled":true,"created":1618855121,"updated":1618855121,"recoveryLevel":"Recoverable+Purgeable"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '817'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:40 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:40 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:43 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:45 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:47 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:50 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:51 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:53 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:55 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:57 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"KeyNotFound","message":"Deleted Key not found: livekvtestkeybaka5ce121d"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '92'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:58:59 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 404
      message: Not Found
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: GET
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: '{"recoveryId":"https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d","deletedDate":1618855121,"scheduledPurgeDate":1626631121,"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"qBSI8tyMW8LvyToQNu7ouh-u29k1wJFg_fwoHA5AfjA5cPvIaFHlypdQ1zkGSLmZnCKhn47bXh90O6i1v5SHr1IQstKT3Y2egBnFXgcgFSj91GVMXJfbFWu666jWBVItiwlDzgwQEuGXDoVPH8xltY2sK2vF9RyZ2SaC_bQg7Z4Yg4Y3Ql64pGdgRT4L-ZX7Xaa88G09tvyTxRFNnm8Eo3AVAEwr1vjdo5G_SmGrJ2FR-ljE7krwdag3HqZiZlS82ri0zGg4za3mWW58swb2BtV7LElNT2Zgte3oK8cpzp5RF8vnKgm10Q7rdS8IPmK4ku9ttwrRx8vCF47zxsm1HQ","e":"AQAB"},"attributes":{"enabled":true,"created":1618855121,"updated":1618855121,"recoveryLevel":"Recoverable+Purgeable"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '817'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:59:02 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: DELETE
    uri: https://vaultname.vault.azure.net/deletedkeys/livekvtestkeybaka5ce121d?api-version=7.0
  response:
    body:
      string: ''
    headers:
      cache-control:
      - no-cache
      date:
      - Mon, 19 Apr 2021 17:59:02 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 204
      message: No Content
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10273'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '619'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:59:02 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10273'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '619'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:59:06 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10273'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '619'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:59:09 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": "JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQzB5TlRZaUxDSmxibU1pT2lKQk1qVTJRMEpETFVoVE5URXlJbjAuUVNMSk9xaFBXVXVVS3NiWWtJRW9lTHliSXliVVJRWVlLQ2l2WjZVU3lDUEdGLUdVM1I4RFZ5ZmphN3lKM3kycUFOZVVNQzJScy1rNVc1aHYzY3BzU1RTOXd1YXY3VTMyekxtRm5jNVBwU0ctR2NSZWtiemYxbnpBSlAyRVprMnBRYmhMS1JVZmV6RFlUay1TTXRpT01QTUZzTVU1SFZ4anltUVlRR041Z1JnVHdXV0NXOURWV19mZWExaXRBbFZGcWQ4bFJVQVRWekJ5eU50U0p4Z0JOMmpBaFV0N3pLTWYzT05rSnMzY0x4ZWtmbGxUX0w2Q1BpMUliMURNV1V3Yml3d0IxaTdjbFFfLWxRbjZBaGpub2lZSU40MFl0cTVKNE9PdmtwVFFRM3ExWjlXb3VCQWdlR1FFeGwwY2lMeWszRGRlNUc4SDFQY0RhSmVsMmZaSjZnLmxfUkF0cDNiUHVJZkVGNlVPOWRselEuanpTQmw0anBCaU1PR1lEVm8tdmxmS3BMckY3aFBlcFR3UENYYTlKbG1NbkVYRUZudElHc3ZMVkYzUW5qTnNjOUwxNTBnMk1zY3FyWERycTlhVWtkWFgta2NsR3RKam03cU92UTlJY1V1VG05a0RvWXA1Z2lvdE9VR2pJNzdsR3ZJMF9xaXNOV2Mwb1FtNTZFeExLdTBsTW90QzI1SHJUc0Y4SlhRV1hWV09NLXU5dmtNTXlUbTNNVDRxTmY3eFdXN1dFYjdtZ1IyM0VxMVZRWXlBOXA3RDZXOEM3VW1lSjItQU1Ednp6bnNkNnBjZTlIVDBMRjdnNE1zMm5ReFNCZE0tUUN5cGEtOFFBT01wSTZQbHZwRU11TVNFeUJkLTQyeF9GN2JrSzU5LUVDc18wSzJSak9wRUpLNEtweGJfSWNaeU80S3BaN2o5SmFVeDJ3NHdfelVMZ0FLaGlqdktkdDlVZ3NhMC1TTm9BOU1ENU5sR1pTaHR5NzRBX1dReXU1Nkh0dmpITFZLX0xKbmI0Z0pvOXUyN1l4ZDNMZUtXaVJrTkF0dG5kZl9NUWZwdGRweWdETGRFTHp2VUlZeGRRemxQdi00UUp0NW10UFhHU2VBTnRkSGNoREUxWEZZcU16eHpXRnBNM0QwdzNMOGl3SENPbGVfeVY5THpLVU1yd0MtZmd2aDdCaXhwb1RQeHdjYXp5QVhEODVnblNZeElDOU0yRDFtZDlWTkpnUnZ5NWdyU0U4b29uVlNNdU5RRmNPRUVkNGVaQ1V6X2NJVnhTSGJQMEFhakpyaHZvSFdxZEFSbUVzYTByM293QXJlZlZRSTFTcUhickZ0cGxDQzl6djNSVXFnZFdDeEVDdGE3bWpiLUN0LVlqNUdqczNTUXFkWUlSRTJhNUkxYXRmM1hyMUZrbUtNMkhmMng1UjN5cVpyOWhHQ2ZTOFRIVV95Yi1ENmpIVU1nY1lDNXd6VHJsR3Q5SDA1SUg0aG9BenVlS0ZyV1RSSG9mVk1QaWpqdDFiSmtFVDRPUTlpUG9tTVpIeEY4d1BlQW11dWswOFJSbmhLRm5KQTYzZTRjOVdnazh3VmlpbTIycm85WUFqMDdxUjdQLVhoRHpTLUFhbUlOUzlreGJhNm1VYU0yN1ZYbHdTcTduc1VMcjlnbHl1R0tLeHJKcTA4U24zSUVsNkxYZ25nS2RRdDVxX0RNSEd5NS1ZbEZKSWRuSWx3ZTVkclJOcWdtZVNEWkNGVVFvdDAybXB1dG9oYWpreG5wbE9hdkFpb09ZQmFOczhJUjNGRm1WS3RUVWVkcTZBNDlYdEpNYk5MV2V1Zm1VaEFNMmxOMjBld0owU2Q1Qk1NYWxEaV9NSzJxMGZUcVY0R2phOVYzSG94eTg0M3d2dk1sMzAzZC1MUVA5RW44ZFZzUFlMQzJfNGF0R3FibGhYUjhhRmY4RWphZDNKZVZxMlpmekpRX1JZbG4xRlVjU2w0NHR0Z0xyN0hUdmNGXzJVaUxKS29kTnJ1QkE0WVUxSlRKNjlDcENoMDRRVUtqejlWbUFkbVlZQmQ2VGt2VlAxSVBJMHVVbFVqeVVDQlR1T0JoUU9OSC0xWmEwMUxZOUZiRi05b2RFNTJiekJXdlgtQUo1alluVEdXYW94ZFA0bHYtYmJ0WURRbWl0NkpmazdxS0NKRklURzZzVnF5SnQwclR3eUhqU0U2YTkyUmhSTXk3ODlNLXhvbnczalhYU2lIZWFjVkJldUdIZ3RWZFhxcjBWMk53MHZOUTVwNnZzcjVQVzA0TndqSDZPdmpvV1FKNmV4TzFCVkw1djRWbF9yNEVEZU1IX0l6RVhEV3RhNjJjWGtaTlEwNTBTcHlTcW94TEdrcmdFeXJMUlJ0akl3ZHpqdG5ad2dyYW9lRDZmMzJXbkh0aGhFeF8wVTkwOG5CMzJFaWhSNnFCUUtWQUl0bUxCNEJ3XzVoOEVpc2t1S01WUGt4Nk9lb284WVJqaF9TVFpJZFFZOHktNF9pQlpKMlh1Z3dmU1hDZURpc21LQkFoOVVydGo4QXhqSW1aLXBENUhlTjBRN3RTcjhwckRZRUlwM21JU3BCNFc5SDZZRFo0VlZRUHh0akw0eWM3d1ZhVzE5cHhWeXFmYlFsUk9jbElBT05rcWVDczVlRVRJOHhyRjgzQ2Vfc3NxQ2JIV1V4SktlQVMwMmRVU0JmYTQ3akZDS0IzZVhkVVF0Ty1hOWdJMFBSTldIOXRtZFNUbkpGSXhWb2dWTmpQUVJHUzZoazNjbTRKbFhVc1BuZWlxQWlIMk93VTJKN3NjbW43cnlYSWJ0WmVKLTViekFaY3NfU0R0NnMzbDlxU2U4MF9RTkkwcXdJYUlMMGR1Y0dWOTFPNl9yWjM4TlVxdzZtcTQ3eU1YTVNMTmtOVldWcU5TZ1hFQ2tfNVZpTkN5ZExBQlZxOEVzVE9rVFFhbGRnWnFaYlJhbXQwRUJhREFZZUZZNGVMUVRPQ1o1dVVWakN6ZWQ4YzQ0MjFXRmM2V3FzVXRQWjBhVmdtZTRkRUJZa2tkUUxVQ0VzSzVuQ203TC1rcDlvRkFlY0dLZHBlaU5aRFp3eElDSDVBUy1rV0pqNTBxOWZEb1o0TTdvamFCVUlCZ2Y0dnJaQVB4cmpnbDJjMXFwMUJzWUFyOHBOLWJSMDFKUXlBOTc3Tzd5OUZNa0hEdzFBb1JLbWwwTG5nbW5XaDRaRXBmcGlFSFZoekNjNEFvUnB0VGMwSW9PR1l6dkhZdFpMRUdzN0FVbTZzbktPNWtRRHQ2bm1RV0xYclVCTmZHTVI1dmxHQnpJdTNSTkthWTc4dEMtZnM4RE14U0F4aHZhTzhiSC1CWldNVzRScVpDeU80OGxwQml3VWVvd2NrdEFudjM3bWxtV3FwNmg0TnRfZFdmT1hUT3JzTm1yOVdfQmpJZXh0WnkzV0lMeWZfWGEzZmYyMVB3UC12MEhqRVBKMER6Vng4aWFkanFJYmt2TFFXSWdKWjVCZk5vME85YXdFckZKQXRvSW5XYTNoYkk3VDVrX0NIQW5Kc092RTA2X0FTTW84ZmZmeXAzUDg0YUpQRjhKSmpVTURLRUlraGJ4U3ozN3FJejJGRG00V1B6MUNVbFBLY2RZVzc2VkJWcGIzaXZBRzFhZnRONzdCbFpQb1BLRXJpdGpYaFVrZy0xS0U4dzlpc19JUGEzTlc0dFVNVkM5ZElYSWs3dVA3a1hVQUJ3aUNkTmhhXzd0NXNBWmk0ZTVFaDB3d2tZclJmcTJnX1NPZEVha2l0VzNYWFJaeHljZmliWl9LZ3ZsTi1zQmtncDZleW1VbTVwZkx1S05OYS05ZTFReXBESVhqQVFacjZ1SnU0ZFZ3M3Jva3h1WXZUaGFOTlVqcGdGMlFUcVl2Vko3Y1F6d2FlTlVCNXlrSjh0RFBZelRIZXQxLXRjbTZaV3dMQTV6bUdjcjgyaVhhaHZHUjhVSThBMGtjRTJWeENqWjdmLVBScDlyOTVUSGgzOGZ5cmNRSFBocTF3ZVo4ZDc2OGpTamFPSWVoSjlYMW4tTFV4QXYxOXhkbUFJekdDdW5LTzd0UjVKZDhGRnVCS0dELVVvWUFKS3dwb0pQdUFHZ3JvTVRoRWpNTWc5eE9LdXc3UDZFUTVaZXA4UTJFWTVMajEzMnd0V3RKS0hLSVRfc0lWQS1iSXRUNFpRRzVKX24zbUlmdGRUaHBjMk4ybHRIR0ZRbm44cWFsVkxWSU9ZTU5NM0dNdDBmaXFkV2VwNEVZVEVqNmpnVENzWTlZLW9xcFR4cWJfRjhvaDNuR01JcjdSa3B4YjgxQU54WFA5SGczeldjTzZKbmlPV1llQ3h4alh2WVdHZUhaQ1NVYU4zY3NfQ2h0RlIzTFZ0VU1DdE1wbHBseC1waEZPUzdHZzVmVWZQT19mZElQeEtiTktiOGdSMDlEaDBhLWwwYWpWdFBJZ1pZV2pBOUNtVkxUQ0d5TnEyYVVIYmM3S0xQUE5yMU83YjZXTDZqcmFfV1NfNWRjVjNVajRKd1FIcXZ0dkUwS2J6N2tMT1Z5QzN1SDN4SldIUEIzUU5kOFUxVWJRWkU2RTRYOFlOanQzTTZYZFlGSjVtckdYR19qLVFadWJKMlZYa0liYmJ6S2NkN3dyRFlMdkVwSEpiZEtncHZYcVBWZ2FObnlwRkQyaUZ5Si1Fay1kWGdxXzBMVUZoSE1YOVRlV3B6R25QS013RWhUN0RKbXdpUXRmNkxUdEhVVE1JX3hCTmw5RWo3cEpOcGN0SVNUSEkxTlc1OTVnN2NiYWFSMEVsaFU3TU1xLVRnS0R3dnU4NWpZN2FDeVUtMnRlendfX29icmlyLWM5TFJCVmswazlRLXNmenhRMXR6UEdGc1pFTUJWNEQ1QzducndsTUF1cFg3cGNYWW5hVncxb0RVYjVNVUhRd3llLWNacnBub1NiS0tIbFFDT29BRTZ3Y1dQTEU0TzcyUHppVnRfOFNzM215WXlXekxLUGtnNlF2QVM0STNSUnJQWXVZRWRja1lUczhBbzdheHhXa1IybHVqYTlKX0d5cEgzMWRaVFlMamFxSGNnelo5QjNtbEVTZWRjU0FPT0g4Tkt0Y180ZzJEVTFfT0hXUVE1TFBVeml6ZTF0OG9SYkUtRnRlRjQwMG11UzB5WVhZZlJpcXZ4VVVXSE1RNFZFYVNWbG1ZbHZDa0xUcEVLZm5YNzVxZHVnRmhSSmNJVms4MWhlX3lGWTVLVGozZFZ4c0F0TE1GbGQ1and4TENRQUxOT3FRV21MRmRkOFZhWVpmalZpS0RjX05HMXBQRjlkaEF5ajV1TlZhSGhxczQzUTU3NU5EMTg4TGJoakx0dlZTSndhT0V2cDJOM0cyNUxDN2FMXzdOeEptbGg0OE1TZzZBUm9YOUdhNnVCSGxkVmd1dlNTS0E0TjhPUzlIbzNoNHh6TFpNczNUOE84Q1JTV2hoZGNiTGVlcG5QM2FFRUVfZHpYcU9oeEd2NkVjbmRNOW9DeWZZbWxMYUJxXzJWTnFlbW1ENlRvZTB4UldzWTZ3QnlYMVgtZ0V5RkstTEJOeXpFVHlCbTZJLUJoUENvSUx3dklPcXJ3OXlCTUNodWlTY2tiVlk2SFdfMzAwNHhoZWI3MnRSQTRCX2N2U2twU2VBTlFteHpPNW9DMkctc2gtZnJETnp2aXMxSHhkLWx4UGJfVk9rSTBPeUpiZGNoTnRHZ213RTFMWjFKbEd5TWQ2ZFk5Tldlam5sMEdmXzJ2NnBYTG5mRy1uTWpJT1hMc056QWl5ZUlMalRFZ2tMWTBaLUlEYVEwb2RzbjdtWTJuLUxYN1BwTERxR3pNOGIwM1hFYllCQjg3bWZBaXFRQU9xSGJNeHFycE95MDQ5V0pnQnJDdC1jTDY2MVhHNjNNTGMyZW42T25OdjhNQTdsMEJDVllYYkdiVHk4YzBvT0tkcUNqOUJzdk1WTmRNb29fSXlpSy1Dcllob25zNVBDQTdWRld0bkVBdzJPV1hCNERvcWVaZjAteTN4Rm14WHhBNEo5M1BicWY1Z3pUeGdMSlN2RVlnYkZydWJaQ1NBM3Jlc081NER5SWV5NzZOcjhVUFBxTExvTW4wYTlqbDJDR0JZN29XUWRYYm9fTjJKM3hRWkxreExLX3c4MHUxbjh2Z0hYNmVGQV9qMzM2bHJpZG5reV90dlBSMVRRaVlGekJIaFBDRHdWclhBSk5zdTc4Uk5YMUc2V3J1Z2cybGRQemN6ZHN6YmFSb0hWWGJxbi01dml3bjdGRTZjdVFNaTJrb2JHZHZPb3BTSmRSU1NmS2tPRFRHMXFiUDJLdFpJRE44SktnMm5zRk5FMi1NeVE3eFpLT1h5aHR3X1E0bGVHZ0dlZ2RzMGJjWnJZNy1GYXlyUWZzczFBTm9ZQ0hYTExHeDc2R2lvSFAyWnVtR0hWem1nZklwN1pyOUltUlV2TkxacTJUVUlsMVVhYnFSUGtHRlNsbExEbnNkV0pwSkZvX2t6RUJCX3pfM1dtRWpmT2hlcUgzRTNWMXVMbUh2dFZnUndqRTdNdU10aGZTeFd6aGpfM3NIV1c3a0I5VmNkWHU2WnJvNVJITGk1YVRTRy1EejJNTmhjeXZEZnFsbENBSVB5RWR4cDZFNG9xczFRX3Q3YTNJeWdxUURnbWxibklLQmRDZmpvTTJCTDF6T2JidEI5RVJIS3BESUMtRDd4UThtdUppc0RhcEZZTUt1RGE1Zzc5WjFhM2tsRTFYSC1DYjlUT1ZtZVhoTk5seC1mQl9fRy1CdkRCaEpoc1N1dVlhbktrNFNRS0k2d09fQ1ZLaGY1NVpwejUtT0NUVEJQSTdlSHdDY0VScGZxa21zWU56Sm9BS29vVG1CSzE1Q24xUGo1N2plM0VYLUdmMThjXy0xVU1Ed1VxM25QYU0zY2xWM2ZJMlhSUWZfQjREcFBPa0pBRW9LeUdFcF9abW1KdUZNOXE2UUZiQ3VHZ0xGMUhHRFBNNDNEc0Zra0tRYTQzVHQyQnJqMDB4OU4tZV9za1BzbVU2bUxRdGtIZ0tPbmZyZ1NmYmNuaTRvVkZaNUd5YjdOZDFzUE12VHU5TmkxN3FYcGdhTml4M1hpQUZkZ2xXbVdhT25PUkIzRWFaaWY2TDdUbFc2emNsb1daQlZfbHhER1B1MTFvWUMtdVlUVFMwWVNWVGptbzA0ZktOQ3hGeVp6MDNEMGdYa0Z4bURCR1VMLWNINEJKRlFMeEJuYWV1TGxCMDhfaE5QbzBVbmZFNmFOd3Vsal9EUUxPOVkteGxKY3hZNnotT1Q1NU9yLUFveGF2UDRWTjF0WXVabWFaWjJjOHJwNW1EZkJ6a1ZrUFJaU1JucFRwSTR5SlJEOWpna0VvUmVWQVF6RFlyLXgzME8wTFpmbnc0Ym9DNkNaTUlwVkhrcUlhUklrZnJsYlptd1JoX2pDS2xHYTlTRGJnekVmR1ZjaEJqZ0R2Qm5BVmFoU2xWMGlpNXJocS1yaE5MRmx0NmV0OHdSWHlLOEVnYTNQN2liMFozdng0VUg3OVhTUWRpYTlxempyQ19WRHV2czl2SkJjM2ZyS0dOWWNvWjBuMDdXcjBGLTJDUmhfMlBsOTdtYm1ZWTdNUnlWTUdDbXo5OW5FTjVnRnZDY2xvMXo1RUdpM3JtOUNBN0dHUlpOVEVIeDZyNWNYOUpzajZhemJ0Qkt0U0NsS3hDMGMtaVdncnJMWnpWNGNCZGpFT3lqWUFwMjhRYjkyUWNaMjRlaThfc0hIZG9sSVRfRnFaanhqUlZBLVZmWUM5aVE2T08tQm1qSS1MWTVLOTkxNkp0c0x4SThsbnNCZGpSVEY1S1EzNUhMYlFIWElvSmpjcjBFLTJxczhVYUF3WG9xM0s5YzR5NzlQUVRJbjBYMVhtZDBrOVpfVUNKYlFpbkFJZGk4amRKUlFBZXZRcTdCUWNGTTF4X3hyZWtIWTNsa0x4VWdYanhDV3RzZUdiTFpBVktvb2pkTThycFRMVWRkZ29YZHN2T1lzdFpTQzJCb1FkZzJoMG9xT0dJR1IyQ1JjTE9vTmxnWURMSlFpYzB2RzdVX3VQcm5BSGFYUHd0YnBSdVg4NG9uMDBFWWNkUjRXR2VzWGVHdHFtUzdXblZkam81aEJiNWswcV9nVFBmWG16MmhuUzR0V1I0OURqbTdBVE1BeW1XNXhhd3B5VXFWeVV3RzJ4UXdyOTY3MExNTHBVLXBrSVVmZy1iTFR4ZnpXXzJXU3VIVktnUFBHNHpCd21fbE5NNE4zQW9nRDBNZi1PMmpvN280RnhTMHU5eFJZaGEyOGtDR0RnZDdlNEk0Wm44V1MtMnpVMVA4cW9BQ003ZkNtam41Z3dOdjRWU3dNMHFqZ25zbEVwTl96RzhfZXQ2Z2J0eGlLWG42dVJTY3dNNl90bXB0T1JxTTFzOVB3TG82VXQwR01MTC0tWFF2OXFtbExvYnIxUk5XWWUtQ3FfbEJ4TEJKZnQxUUtMRnZnb3dyWGllS1ZzYXo4bDRaV04wcGU2MUtOeTZZYktlNVhWTTRUSkkwbU96d1BhX092TGx0TjFxYldwWF9ER3JPY3l4SEhuOXpOY04wd3ZRMTVnczJMZk9tckxobEhPRFFLbjZVTnJaQXRzRk00LTFKb05pQlJITUYtSl8ySWI0YnZ2a0E0OXBzcWt3cml5aU5VdS1GWXpUZ3BnWTU4WVdRYW1kZmhjRjNNNGd0QWtsZFRna0trS2otczFoTWtEWVNjOW9JOGNjQ3FWcGF3ckdlQWVXQ1dCejkxcjdsbkhLYi1FVV9ab2hiRVFfemtOUVdmNko3UTJlT0xuWDFhZW5UWHNnNklDRnlBWmN1VW40anFuZWYxMng3dXM4THo0N0ZGc0VaakxIUkNjV3ctck5obWI3dFZ4OWRCTkJ2dEhlWkFKMklzMWRCYmJDRzV3TnhueHF0N3VyRk1iQURKWnQzREdaeXFKU1RvV3QtYmluQ3oxUVVKS0hVYjJWZ3hGWGpZWnpGQjYwZjA0VXktcEZobm9jWDBFOGpReVJaVUdIZjNsU0k4Tm5FbG5XRmN4VnJzRFZ6S3dmQVh5bTk5cmFsdjR5bG9FZzhTVTZrZUZqLTFidHk0em4waE9uSXg0SGVnMmZmMW5jRnJWLXI1eDBuU3FaLWFZYzYwR1pTRTdQUnZoRTllX01FNVVKTHhhQjc5ekxkb3hmaU45WW9VdF9xaXJUeFBBRHVId0NMSjdVdGV0di1neTZGMmZfZVdvWXNOZVpIcmRUajNKb1lIck1YXzRuUm83a25adGY0LVZSTDNoVS1nbkt2VUxTbXI4WVh4SmU0Q0tJN1hCbjZVMlIxRkdmRjV0VHVsWlBwY0pabVhDdzhKUFp2WWdZTWx4NmNYc05zNkpkUU9BUWx5UFpockN2OXo4RGlocy1vamFoNE1zRWlKWUZJNEpELWlLVG9DcVlCanQtTEdoZEpaTlB6LWdBaEV3X1pUQWp5LWNBUm5Nc1ZORVA4ektxa25tTkpQMWhyaHN5OTVwd3c3LS1CYjhFRFA5MWRVd3YyYUhVZEhuYjNWMjljU0dJLUpId3VyaHJBdEprcVNDdkZ1M205MzBtVEVrdWhOYUZBakF0OHBzQ2ktT0ZkYWtxN2JqSkVQbVJRTlZ6elB5ZlJVeGZxNll4M3R5Q3hUU0NsMGhhZkVKaFppZzVIVDFZVTU0NkgtQjF0NTREVHdwZEZnakp4dmJ0ZnlQTnRnd2xXN3pRbEFpYTZ0WWI5Q1hQandNUDR4bkhVcG5QdE9VRzBBMzRDUjVkVmh6U0NZSmI2UWVNTkNxNFBGUmV1ZlhTb0M3NWc2T2JobURxalM0VDhwV0RFU00tTjFoY0VCYktSX3FhQ1Z6SmgtVUxLQS1KTG5GSXdZWGVna2xUMTNzODAzVVhaRlFWZUNVT1hMMGVfcDktVUJJb3lkR0JsV2tkZmtxbVhEcGpFdGlZZy5xb1EyU0l3bEVNMWNvcUZMY3ppNGpGUWNiRmRpdlp5bXFoeWxfY1hEbkRV"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10273'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '619'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:59:12 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10273'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Conflict","message":"There was a conflict restoring
        the key ''https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060''.
        This can happen if either: a second key with the same name was created after
        the first key was deleted; thus trying to restore a key whose name is already
        in use. To fix this, rename the second key to something else so that the restore
        works. The second probable cause of this exception is when multiple operations
        are performed in parallel against the key. To avoid this error, perform operations
        against a key in a sequential manner."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '619'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:59:15 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 409
      message: Conflict
- request:
    body: '{"value": ""}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '10273'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.4.0b5 Python/3.5.3 (Windows-10-10.0.19041-SP0)
    method: POST
    uri: https://vaultname.vault.azure.net/keys/restore?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vaultname.vault.azure.net/keys/livekvtestkeybaka5ce121d/5f865b2d029740088690995da186a060","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"qBSI8tyMW8LvyToQNu7ouh-u29k1wJFg_fwoHA5AfjA5cPvIaFHlypdQ1zkGSLmZnCKhn47bXh90O6i1v5SHr1IQstKT3Y2egBnFXgcgFSj91GVMXJfbFWu666jWBVItiwlDzgwQEuGXDoVPH8xltY2sK2vF9RyZ2SaC_bQg7Z4Yg4Y3Ql64pGdgRT4L-ZX7Xaa88G09tvyTxRFNnm8Eo3AVAEwr1vjdo5G_SmGrJ2FR-ljE7krwdag3HqZiZlS82ri0zGg4za3mWW58swb2BtV7LElNT2Zgte3oK8cpzp5RF8vnKgm10Q7rdS8IPmK4ku9ttwrRx8vCF47zxsm1HQ","e":"AQAB"},"attributes":{"enabled":true,"created":1618855121,"updated":1618855121,"recoveryLevel":"Recoverable+Purgeable"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '671'
      content-type:
      - application/json; charset=utf-8
      date:
      - Mon, 19 Apr 2021 17:59:18 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - conn_type=Ipv4;addr=172.92.159.124;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - eastus2
      x-ms-keyvault-service-version:
      - 1.2.236.0
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
version: 1
