interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Content-Type:
      - application/json; charset=utf-8
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault103214bc.vault.azure.net/keys/keyrec/create?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Unauthorized","message":"Request is missing a Bearer
        or PoP token."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '87'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 16 Oct 2019 04:09:18 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - Microsoft-IIS/10.0
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      www-authenticate:
      - Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"
      x-aspnet-version:
      - 4.0.30319
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.1.0.879
      x-powered-by:
      - ASP.NET
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"kty": "RSA"}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault103214bc.vault.azure.net/keys/keyrec/create?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vault103214bc.vault.azure.net/keys/keyrec/0f9393774a354505a0a0760142fd2bc9","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"7pTT2vsSjBJiC9YVfJtwmDbeVW1bY3L3_9OCUdq8LOU6BiALEABPBYstZXbvvqjZTSWLtSv4-i0f7pezm1yfdmwCSCWvEaWDu5YBYp8Wi6bcWBH8mTTKr5jUgmipC-qsGqUyuanaIp4wrBKhOfvGa4BUaRGm_WcRgQILmS1Nv7IkGIbepoJVSdoxHUNwhwbIvvCxAsHNJpiiYle4Tbbc30tQHvm7kvts4tIr_xdCKKbxDWWkkysmIDxPv2nwPtkdBLUHKzQNBUWTaI3Prkwbg1kCeVk9t4lGYP81S4QrUYg0k62BUcygj_8UNVwzEOMfrTwyRExO9ggCf8vFi-4WHQ","e":"AQAB"},"attributes":{"enabled":true,"created":1571198959,"updated":1571198959,"recoveryLevel":"Purgeable"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '642'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 16 Oct 2019 04:09:18 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - Microsoft-IIS/10.0
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-aspnet-version:
      - 4.0.30319
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.1.0.879
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault103214bc.vault.azure.net/keys/keyrec/backup?api-version=7.0
  response:
    body:
      string: '{"value":""}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '10607'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 16 Oct 2019 04:09:19 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - Microsoft-IIS/10.0
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-aspnet-version:
      - 4.0.30319
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.1.0.879
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: DELETE
    uri: https://vault103214bc.vault.azure.net/keys/keyrec?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vault103214bc.vault.azure.net/keys/keyrec/0f9393774a354505a0a0760142fd2bc9","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"7pTT2vsSjBJiC9YVfJtwmDbeVW1bY3L3_9OCUdq8LOU6BiALEABPBYstZXbvvqjZTSWLtSv4-i0f7pezm1yfdmwCSCWvEaWDu5YBYp8Wi6bcWBH8mTTKr5jUgmipC-qsGqUyuanaIp4wrBKhOfvGa4BUaRGm_WcRgQILmS1Nv7IkGIbepoJVSdoxHUNwhwbIvvCxAsHNJpiiYle4Tbbc30tQHvm7kvts4tIr_xdCKKbxDWWkkysmIDxPv2nwPtkdBLUHKzQNBUWTaI3Prkwbg1kCeVk9t4lGYP81S4QrUYg0k62BUcygj_8UNVwzEOMfrTwyRExO9ggCf8vFi-4WHQ","e":"AQAB"},"attributes":{"enabled":true,"created":1571198959,"updated":1571198959,"recoveryLevel":"Purgeable"}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '642'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 16 Oct 2019 04:09:19 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - Microsoft-IIS/10.0
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-aspnet-version:
      - 4.0.30319
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.1.0.879
      x-powered-by:
      - ASP.NET
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: GET
    uri: https://vault103214bc.vault.azure.net/deletedkeys/keyrec?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"NotSupported","message":"Operation \"get deleted
        key\" is not enabled for this vault."}}'
    headers:
      cache-control:
      - no-cache
      content-length:
      - '106'
      content-type:
      - application/json; charset=utf-8
      date:
      - Wed, 16 Oct 2019 04:09:19 GMT
      expires:
      - '-1'
      pragma:
      - no-cache
      server:
      - Microsoft-IIS/10.0
      strict-transport-security:
      - max-age=31536000;includeSubDomains
      x-aspnet-version:
      - 4.0.30319
      x-content-type-options:
      - nosniff
      x-ms-keyvault-network-info:
      - addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region:
      - westus
      x-ms-keyvault-service-version:
      - 1.1.0.879
      x-powered-by:
      - ASP.NET
    status:
      code: 400
      message: Bad Request
version: 1
