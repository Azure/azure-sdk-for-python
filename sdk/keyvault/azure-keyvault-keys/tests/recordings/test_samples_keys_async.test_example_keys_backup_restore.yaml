interactions:
- request:
    body: null
    headers:
      Accept: [application/json]
      Content-Length: ['0']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-keys/4.0.0b2 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault105115999796041739.vault.azure.net/keys/test-key/create?api-version=7.0
  response:
    body: {string: '{"error":{"code":"Unauthorized","message":"Request is missing
        a Bearer or PoP token."}}'}
    headers: {cache-control: no-cache, content-length: '87', content-type: application/json;
        charset=utf-8, date: 'Tue, 03 Sep 2019 21:43:39 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      www-authenticate: 'Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"', x-aspnet-version: 4.0.30319, x-content-type-options: nosniff,
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 401, message: Unauthorized}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault105115999796041739.vault.azure.net,
        /keys/test-key/create, api-version=7.0, '']
- request:
    body: '{"kty": "RSA"}'
    headers:
      Accept: [application/json]
      Content-Length: ['14']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-keys/4.0.0b2 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault105115999796041739.vault.azure.net/keys/test-key/create?api-version=7.0
  response:
    body: {string: '{"key":{"kid":"https://vault105115999796041739.vault.azure.net/keys/test-key/5d3ff0ae1b7142e19956888d246f6264","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"k_tvyn0fwRP0e7QR-JPZ7yqOvf6KVtWxisGfA-GoZWNfxPFdL4YIa-k1bKJ-ey2EkjTe24lNUnnUOOlhJzNsjwqFYRCeHXKxsUOnWH-uwtgYMNxkl5VXoVEAmg11bpMEc0vT4_yQtxaAAAsIy5abQ4KljRSIQWzlvmeJ6Iu3A0ANnV-0Po4wQSXo4IjXyuO-0L4F-7ZXBKPLKkblnK_qV2HgdL_USsbc8ESDTrcaRwYyUsYnC7j0GAUKF7HfCa5mF27_pe57759AP_u2fa8Tu1q-W33aBOHM1DdHPaTJjMGeCqmYu9NxfQoHN8fyyO_PwBofSMOCv4U6hQqiLTW1zQ","e":"AQAB"},"attributes":{"enabled":true,"created":1567547020,"updated":1567547020,"recoveryLevel":"Purgeable"}}'}
    headers: {cache-control: no-cache, content-length: '654', content-type: application/json;
        charset=utf-8, date: 'Tue, 03 Sep 2019 21:43:39 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault105115999796041739.vault.azure.net,
        /keys/test-key/create, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-keys/4.0.0b2 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault105115999796041739.vault.azure.net/keys/test-key/backup?api-version=7.0
  response:
    body: {string: '{"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLlMwaV9mQmlqS3Nsd1BWUHc4anRyMmo4R3NUc1FTTFdCYmY1SG4yYnFHOWZLaTk3bGhiNldQOXZVY3EzU2ZfaGx4ZlQ0M1RCZ2hFa0dST1JaX1FLekdMUk9kbE9tU2pTZXBLa3FNTXVSak81RWxJN2wxdEljZURiZURkTGRtTjBKYW11dHZyY3J3SUMxN213Z21nMUpIbG5GTFJqTG96Mno3ZUFIdTQ0VHh0Y0duUGZiMndyYmZtUGRhMUNwSk1wREdBRlItMmVMa3RCTTczekVEMDRzOFJKclo2YTZwelFkVVhaSnE1cnRlVXZaRmlhS2kwbUFYbjdwMEdmbFhLQTVUN0ptbVZhd1Jhb250RllvRGpXVnU4aTRMb3NCTHVJT0JpbU8wdEdTWUQ3Q0xaR0VBTDZQWjN3NlMzR1JFRzRuUGk4anFWeDdCYTc0dS1MV1F4WXhZUS4xOHJYMGlqeXA5c3JxUnVfYThCdy1BLm85cFo2MmlhakN1MEhPc1ZtTE45TTNiTWFfeW9SREhFUEs1Z3VaS3lra0VqcUpVa3ZQam9QOVZEMzJxV1NuVVJnOW10VldpbU10U1owdFUzSTMybEg3UTZ5VUNiM3RTV1dlWEtrLWkwYlBmc1kxNXNUVUp1Y0NkN2NyQlZwYm1KSThaanNRRURlNW9kb0R0QXlzZFV5MG1kcXVkQXFXZUhtd2lfMUh0OUswX2hnOU05ejNjSVpOR19iOURKOXduWGlPdjZ6ekRXUmRqUnJIOTVJRU5lQmZVTm03ZUZ6NzVXYjd6eERpeHpUX3FLZUM3Y3kwVTZ6SXo0YXNmOVJKeGx0VzZKcG1BLTFDVGFHdmhtTV9BVTREU3VzZWJZcm5vNGVrNjBmQVJXZXFEaWozQlZ5RU1mdVFGRHUxbmpHcDkyU1RTWGJ2cFVoUHM1LW54STcxQzAxaGFvZnFiRTJTVW92TTktUVJ2RUdLaGpab1JCYnNJZzAyZGxZb3N2ODNhRHdFaF9SekxKNFVMeXBRRW03VGpkaHB3MEhOQzZkYmtnOGlpeGxtbFJVSy1jVC1xaFNlX2ZRekt3SllMLS0tU3h3T3M3QnRZWGhIQkhkdEhaN0htTUNqUlhiVEc2Q0pvbXhpZUxBa25iTGw0UEs5MUJwTmpDQ2JUcUxjdF9YcmdXUGM4Y2VoYzIxa1E0RWlYNDB2SjNTb1gzRjl4VnVjc013VEE3YkFOR2lKb3dnMThiaVFiNlFQS1JKZXhlbTZvVnVNYUFFd1o2MWFqXzl1RHpNTzc1Y1R0cm85ZGM5bVNoRXVVOE8yb0k0eEkySjhsOE9xa1ZRQXBfM3RwYWUxMmJWYk1JTTZTeDZVOUZhYXgyZjlQMjZ5a0FaVHJ3NmNiVVhNUTlCaEItN0xRRWF3MFNDZnFYVkZpTDR4cERzcWNyQkxnZW43bjBaSlNSX0oxQkZXMXMzQXREcEdTYVVDLWVIcXF0OWdXVjNHZTRNN3VHcmhvLWdLNUJMSDJkTVpfTlpZd285M0o0dy15elpGM2hCSVlnYXhHV29qRHM1VXpOc0E2MmU5bnMzNzRvRXVlQkxVZ3FPdGlRLXFXTjlxSHAwYkozMWRpX21RaEhXTXJoSGJUTUtEZVNFa21HOXBmUFB0OEw4WGU5QVltdi1haHZvNjl4RDByWEhQVGhQY2QtQk00Sm5nSzJIdGZFYXM4VkstZTBvRHFHXzRpSUk1SkZfV2JUSUM0NkdSNTBqYmgtZUxlMU5OR3FrYnFpMFZVdndfMmtmTUEyVDg3Tzkxbjg2Wmp3bjFYd0R2cks1ZHNJWGZOc19XelFNSEVuVl9fLVhpYVU5U3EtbmpqS1FmbDJDVDVJQmdJNXVZQWZDd1pDd1VfQ1VrUXpROUxvSXlEZzIyTjc3NGFaaWMzYm5kaXdCQzkzSVl6Zm14MjY5YzRPekJOSXVBbGFKUTlSTDZZci1EUW40LUF2QUlkUkV2WHFuWkg1QmlwNUEzYU9hZHNySmQwUUF1RFpzcEtwZWhhRVVQeTBFRG8zM2h5NlBaNzN4WEVGRjdycWZNTjIzaXpRaDd6bkxPZkxmTGdUZnpzcThNb2hUa1puOFdzQVcwbmVLUXFLLXpRRVBncDFuXzF4TkZIZUxHUU1XSmxaSWozLVJ3aG1fM0pGR091OEpGWGZUN3FEWnV6bFhoUTFOUVlaNFlsNlVzU3BtWmNYTnZQUXdzMjNGTlBrbVdiNWRrYWgzc2tYQ2F4VExndDI1OWhTYmJiSjJUUVp4RnFTTG5jUXBqb0tNeUFZcXNubEtQbnlHQVZycGtfcGZDd1p3dFpKd1pYQkFrQ2U1ZHBETkp5RElSZloxSXc2YWRSbnl4Z1Q4bFVqV3ZpdEFjbGlDUjlIanlabEs2VXZ3VlpqXzR0eXZDek52V0lTQlFEQWo4R3JlMlc0amRlY3RiajJfcnlIWUROUzBZLUpuVG5DM1E2RTJZS2JrOEJyUFZMZk1WOXB3eExGZWtfNGJjQzJEOUVGVVdKWnA4Sl9oUVRUdTZOd0xLc1BIYU9QTXVmQ1Y2VGdVeDVkWXhRbFhncXdfUjJyU1VUYVYyd2d6b1F0SDFWemJ4VS1jMzdlUkk4S0pSRVhGMEJtVWk3cTVPc1dZSU05Y1Bud3lQUmpsak9TeWJSTlRmZGV0Z1pRX1Jxb3MxSi1hdDBSUGF1SVkwbTdhRHg3X0t3NEpLMlZpTVEweE5SOHJRM2wzZjRnT2JrcDhldDdzMGpqaGVwdE1ockw0cURZVUNFSjZ4U25JQTJKMWJGaTFldnBkd1JEVjVXMkE0ZnJIRm5jajV1VHNkUU1WZERnam5uZF9YbTg2SDNkTW1ZT0pVWkVXckRRcFZGR1pVVC12QkZGQ001M190a21BUDN0NTlqV1k2TU9nVG5Mb1BXTGdLWG92eFhnUjIwZGk5S3FaMURoY1RKb09kNGM3NUg2QVVmT1ZvY05XamdsaWctWVg2YmxzdXpudll0MXZLS2NoUnRqdDNHSHl4Q29uc3h3QUNFY21ydFdLZXVsTTYtYWFmZk4wVXFkclpLajhINkl0SnFiSElWYUhlLTRYSTdmUWdKRnVHV3hGVHlDeFAzajFneERxU1dDX0hISmJXMGVyT2libmRQS2JRWkhkUFI5M3hPYUl1eVdnVlNSa2xfODZ0N3ktc21nVm1ZRFlMSmpOOWpfSnJGbDJqdjFIaFI1bGhjN01mbi1QNGIzd29ORThHaFpvY0xfZEIwY2Z6OWpmQnJyeV9wZ2FVcjQyUFpwRzFrSjVIejlVcVR1ejFVWlRqRWxsMUNVMmZWQUp4eUlDamwzcUV2dGwtOGVzS0NoU1g0QmJnRlc3M1dfNnMyWVhpbFd5QTNrcG5WaVpPdWo4M19jVVB3N2stcG4yVEQ1cjlOb2xESGFkbmoxWlFET05tblNfVVRnU1ZZMVgyZUMwbm9EcExDNTZVZnJTMHBSQ09YZm5MU1RtWU1HN3Y2VmhGbGFnbXZPUGpSYWpuQ1oya0RlN1NoWk1Jd1N0WXlPbXB6RlJ6NVFLbnQ3UWpCSDl2dXFKbUt2Z05uMEJLMmEzbmN2cXZoQ0E5UkkyNFRqUnlnYmduX2IzSExQOFh6aTJsVWdSWjR5dVhzc0FKMFhoVUpxc2tBSkRxOVphMkhMMmlFZG5mejd5Z3dNdHM2YVBrUkdlM0YtRnBFN04xaUVUNXpOSktoeDY1NjZXZTNCVHZZM1NfQ0Z4cTFXeFlXdy1fZW01c3dpMWpHQ25sSEpkU2xTRHJLVjJhOUQ4YzgzTEhvT3pITC04STFYWU9SdjdMckFqdGlOUlNKbmFHQl84RGVJbVI0eG0yb3RZTzdveUdIWEJ2YVM0ZDRwNFVKR2xIbUJuNWxVT1FLN3AtaEdqQXpFeUVKRl9UcUVDNExCZmljR2VETnBWTVdoOFNRM1B4ekMzMHBBU21hUzVNdERGUDd6ZHFva1hBSlgyVHE3dFlDSF84WVd4LThsYTVCU21UdG16YVFzRzJ3aGZwcVlQbUxjTGFSYXhRMWFBZkVIcjZmUGZQc0pOZWZhMDZEeXpjcHZhZ25lQkJ3bzdYVkJKcDBIYmFtQnBqUTFmajRZcmlES2x1aXk1alJkalpLakIzOEpkdG5RUEhPWEN2YU11V1dMZmJ5ZzhTeWFkRnhVZjRlS3JESVo1dWpzUmdwS0w1RnBXdXRNN09wNGNKdE5rSUpodnk2dnhTLWNOWE5CSTFTQ3ZIeVhBYi1GTl9US1E0M1BpeDBJQ1NaSTV6OWFqS0xjcEUwUnRMdXJ6UXJPanR1LTVSeDdSRUZnQ3lhZWNvcFVGRFNsNElpREQwblN1ZW1sRUVMUGZ6ZGQ2NmVBRjlHRzM0R3VZU2dCdGxqVUNRSWJMQTQzY0xaZHFPVkJpVkdQX3ZfR0tmU1dXcXhyelQ3Nmx1UEdWQzZqN2kyeWFhblZlZkhpY01laGZ2aVV1clRObDR1d1NSOWptRGJVZDRUNEJ6RzlTYTViZzR2R05rUVJSN1E2bUhSRkxKbEdxemRPQUQ0WDZ3RnB2V1pVdUFRcFVmZ1MwcThsUHpQT0NHRnJXc0R1M0kybjdja1JXMWQ1Sm5xN1cwaVpPQnRWU0xPOXlZclBzRXpxQ1VtTi1Ed1c3Tl83SHlSRmpzZGdtU3dQUXJiWjhWRUxXVlg1WGxPTlVZY2h3NXE1bXM5VGxuTk1VY3Y1N1VyVGRzb0NsUnFyTEFDRU40SDVCV3VvbEhkSE94ejJ2MkFneGl2SWVLdmVqZVlpY205X1F6QlMzRkpfLWFGR3k1RTQwZk5zdG1OcDJBTWR5YkdWRnNPSFQ3YS10UnA2Q0Q2blFqUjZZRkRXTjdzSmZOV1ZjX1ZkU2VVZW1lVUx3YURMLVc0T1lWUUE4cklMbkFTQlNZR0RUWTJDdnpxZEFvb2JjZnZZUi1RalpHQ1ltaTVlenZ1WVRJeXFndWM5X3JEdXFfZjdCMnZzbTI1clRON0xFcTNabW1RMUh4Y2R5OXFMdnVFTExtanh3WE05cWRZcXlWMmdzbWM0MGVIeDhRV01yMDhwZXFkLVlOcE5kTmZNSS1DVnZKdm43ZkhCeU44SnNKQUVlT3Vpc0xfNWxlT1hSZWdUalc3dmtaenRCRm1lRS1zUjYxS0d3NkpWamlxbEhiallvcUNDZGJfdGpxbVdLc2pDRGZLN29wUGxjc3NGcmJ6ZGQ2MlNmYlNITTBfY1V2WERQRExqdFlxcnR6ekVDQzJDM0VjczF2NHkyY3pvdk9Qc08zVTdzeHNqOTBPb2FVVkpXM1o4SmVSQUh3djdjZGJmRjZSYkRrRkpKMkd2bkM4aDdtZjhubjJfVGtPMlZ6OEVPVzBHY1VYaFBlUUhJNlNKTzhYSE5Qa3pDelBuYVd3Q0IwTWUySlNwbklLVGU2Yy1xTGJJWnYwTE44ZUZZS1N1MlVlYlBXbm9tbnRjQTN0encwTDdzRkttWWlFZGhuU2k1ZlNoZnItQUgtLWdwRlNGZTdCUHNmcFVMYnl0NDA4ZjNCQk55R0wxSTUtWWNoSEtPcllNYVR2bXhzejdKekpoOUxiWkxiRmJPOFRzTTlaZERfRUx0R282bGJ1VEFxLVBwRUwtVmxxV0IxeFltVmEwdTVaemdkLWNXZ19YYnNIVVZ2eFJvMDRRNWRxa3NycXRZRDk3b3F3Ump3VEpMV05YZDE1SjZTNV9IbFRHVk81QXBraXU0V01OcERnbEMzV2xGbTJaTkJmbDFPU3dxN3BydFMwTF9HMEtVcTgtcXZEU1M0TjBYSEVpSngzN3luTDlkRjJRekpYMmVyUHpubnNxclozWFNwNzVqT1dHMVpKYnJDQXNXVTNSRDRJbDNxbXEzTTFaRnZTY0dPVS1XOExhVU1SaHNQY21pRjV2ZDJhb05wS2lIQ0VOUVFVZEoybWhQajItYkRjOVJVZk51Wjg4SFJXZ25yYkRHYWptRndROHhjYjVvMS1zcVRYaDRLbEdiRUpZNjNwMTVtTFhpY0ZES2xBQ3VrUHp4a1NqckpZQVBUc1g2UU1tc09uekM3bU5VRW1SRENxU3hMUjBIdGJ1MEQ5V3FUbWpLWFRCaW1XeEdHaHcxLXVYTWR5TllBVWUwUlRkNnlyYnpEYzhvT0JMU0NEX1RWMVNpYmUwbHpfY0FNUGpxdmlLYWgwMzhkR1hQaDlEZzhYc1hBZURUcWhLd1NzY3dodThYOHNTTnB1SVBEN3UzUzFfcmFGOVNPTktOQXljQXROQkc5Yi1pSUFEWGpweG1jYmxJOUVtNWo3d1NpN0JORVFkRGY3bjNLZ3F4bGNOUDdUX21xMFdPVTQwRFBnS3h4N0lQeGgyOVB3SUJIZExIcnNLZkxWcjNnOGxCMGs3UkdsOUN3NWFnQzFSSUVjTHh2UVNsMEpIaGRFdGk5MEczQTFKWURrWlJjNUZaQXBLSnhSVld2elB5alRHM3BtakQ5eGRyS0ZILVVjWHFnd3R5YW9SWWZ0ZWE0eXM0LVM3aTctVDlDVVl5cjZoZkNZVXU5SWJ1ZVZINW4wdXVpYzRPS211U2FMTVVPSU9nUnRJZWluWEM4ZmxhSWxnR2JxZXl6YXZYVGFkTmhXcHBPUG1qaUFhdG5JUDIzaUNpcW8wdzFuc3Bkb2h4b2xuM01pTXBfSmV6VWZsdzlLWGJXUFpSTGdHbjByV2RjNWdyRU5oMEdrUzQ1QlJYcXRUOExKWm45dUJBSExTT2lBeHA0WU5TYjN0YnMySnJUb0NRWExWTjhEcjFUdm5uZ0xCQkMzWFhJQVNZS1B5NjU1aGt1VHMwWkRZTG9tODdYWS1mbzR3V1pvLURUZjFBTmNFTFg0dUFwam5YWHBuMjZYdHJ6aVJnem9sQkV6SDJNMjZFaGlLc2NVT0RZcWdKbURGNkNjdU9zamdNT0lIZmw0VFdRQTd2YUFZOTNjRldBR1lYSjkycENQOWtiMEVNQVM0WFNhQ0tPSEo3dEpFLUxnSklxTFNNRENyV1RvamkxcjQwZWlaOXNVYVlNVkh6emMwQ1VYdDBmYWlSbjVWUGVLZHc5SFp2Y2Vod01hYnRvRFdaeGt6MkFaR1ROa3llM1B1Q2llNjUzc3JsUXJWeEtQVGdSNjZKVWNucWpfWFlMMWxjMkxyUE9ERHR3TEhydkluVjd3NG5tMHR1TnZkdzRXcF9CVWNMMmhTVk9IZXpUd08xT3JiMUw1d0tQWk81WUgzLWZUbXdPSWRCVHRybjBXODF1QTZlb0pfMFJLRmZHNy1jc280T2FKaEozbmVzMUY1X2xCM3ZaOW16dE9iVVNzcE9YOFF5d1Q2VklPU0J1Tkppcm5HM1NhZXd4eVFwbjlTMU91OHlabXJha0ItUXlJSE1iVzBMeXVXeW5OYTFxZU11UlMtZGEtbngycm9idU5fdGJNRWdwTTdLai1jbFBxTlFFUW9MTHlsOUNiUE4xZEkxN05QblQ1Sm9PYWpkV2wxaU5DODlXRXZYeXUwOTk3OVZ5S1o4MGs2Sy0yZ181WjZjbnR2dWE3SnBBWk9CYnduVEc1blY1emNhSldYVHNtQlJ1UmdOYlNzOUxSSndURUszaEh0b1lYYVBadVEwX2FnQ0Itc0JnVWlOS1lYMDZrT2w1TVFwT1Zya0JDc1RKVkVnd2E0NWZxQ19WcC1ZVHItc0kwX01RdWNEcmJUSElHMUZjZG5kejRicTBPcVNmd2ZVLTBmMFZ3UWl4YVJXdHJOZ2dpTndRMFJMZTQwNEd2eTgyc19LUEFNaF91cjJxQzVFMGFUeHpWZnJuYzh2QVY2RHc2TTRJWDJEVE9CcW94c05WZl9MejFpWF9DYnZKYy00Q0wxd25kX0dBeTlZd1BqdGJVOF9BUS1rUVNHTmhiSVN0NEpPb1hWWVZoZkNWUm9FWTlKa0ZvX1d5eWJSRVBha0hLOVhOaUd0QkFveUsxcnQ2dk40djJzd3JaZkZpeVpDZ3pZcV8wUjBiaVBfSnZ5dDB1X25BdGpGWW5TUE5VR1pDMGpBX21vM19Qa1lSRnZ3bDhMUHU4bTU1eUo5VzJLd0N6Vmp2WVNhOGdQM2p6LVJQRG9CbWxWUW1HRTZLdmlwai1jMC1hNjFQcnFydnVDQkRFSVlBc192TW5wenJEY1dRV1R6ZzdxSU9QcGxUTXEzbl83OUwwbUJ0dE5rZVctNnZSU2lsalA2X0dzOW5idUo1VHY5OXN5N3RoRGFtYllLU0s4djJHSlRUZl9IbGNCSG9BdXUtdUc5S2hNeW16N0VvdGdhaWthbTJQcmpMWjNWaWxDWEpjZHJhNkdfaWdnc3hJSXlqV01hR3doZURaUjNFQnFZeFpEQTFac0ZUV1RTY01sMU1YUW84d3hxZzZYcTRoS3JKSHdiaGR6OERRNFlnY3c2ZDFvTUNQOTYyajVkemozMzNidDlzQ3JEU3hIcTg2MXltRTJzTHNmanhPWDJZYVZHSF94amhTQnJuaXkzLXVlUkZvdVNkbFc4WEd0UFN1dXMwbEFvMXROWElPWWhUUFk2NHBDRW0tTkd1c2RHZmxtR3pXeHBXaE5Vd2I3Z2h5Y2FGUnBqTUNnUUpzWUI4bmJGZTdaclFuQTZzQzI3aktJQXZzLUxaM3h4OW5KUm02N2dYbTBqVkI1T0Voa0ppR2trQXFyaThraEEtRGNTbldMLVRvZDFlNFRCd2JTRVNXSkM3MThUUkJ0WHc4X1R6OGhCY2JRTW5adzNsVUVxcUVTejBsV2txWFA1cy1nU1p2ZVpkeUw3cHVLamVfNVhNX3RsZTBlUWppQTRjMGtNZUNUN2NHRzdXWUpXcnVlMnFPSVo1S1Q1dXRzdmpodVl6QXJnTmYta0xDcTcwQTdnUHcycjItZC15cldIQWIwTWVxcXdmR1paR1RRcEVjTGQzd2tHX19oOWN5T001Q3J5bzJVUEFJcUhmV1ZWTDdSSHVkZDlRd3d2amlwNjlOeTNZWThQcGlSWE8zR1RjLUJwNTNGYk5obnVMRk0wWWtKQ0tRMzRUbzVjaUVCc3lUT3M5S0tULV9YbnltcjZURldKTzd4bHB5aEdLNUQ2QW0tNW9iY21KT2VPaXdxWHBtRENmSW9GM3dLeFZjSUxHSGlJMWFJTWRTZVdOLU9FM0kwVW16Q1lSTzZzMFF1OEFJQ01za0Q0NXpOMTJDSmM5Yjd0VGczMGI2ZGl1QWM2WE1FN0FLVjh0QkduNmRELUd2c3k5V2JxR291VFRGMzNEUTh1Z0JXWHV0Mzc2WFdfTzdOUG44bEVnSDdVc25HdUlZM1lYbjFyVGxuQlJGdE1ieUdSQW1jN1ZCYlUyNTFfaGNUbHdmWERQZ2hnNl9BaHFVVmtocHktZTA0TDdWWWN1a25rUzgtXzFJbVVjT0Q4ZzVvZExTaWZoeVFFZUpGbXNWb0NKNUhjTEtoYjhuV0RCX2g2QWtjd3RsemxRZ2lUR1BGX3NTS3VKaDI3SHpDMFhJeVByekhRcFl1eHE0Mlp1ZXBjZXZpSmRRdUxYd1F3RVdnY2U5TXJnOXNraTNaZWJxOUxhZnRKTTI0YUhiMjVkOGUwYzdpMXFab09HeGZYZzU1OGdDZTUya0VXdWRDRFVHRFVBdXZ0b21QVm44SEV0UFc3c21wYVM1M2k5NXV1azAyTXNQaUVzbWltQ3EzYXhzaDFrckdNT014Um9paTltVVB1ZnU5T2ItTC1MamVKRnpIdGRRcHpWQWRGQlB2R2NsVU1uY1gwVTlVdEdfWWNVRUp1Ni1QR3lLSTNQM3dJeDhpb0o2M2xFaVU1VWgzU3lLWVpYNDdMZTRUejc0SHppTnFfRGtwMlJNRWlGQzVQbmhmb3FTUm0tQlk4TmRlS0pKbUY1dm8xTm94NmJYRW45WU90VGdqSzZBMnI5ZGgwY1dLWFZ1djFBTllvSGhGd2hTRm1nRmt0U0dvUE9GbUhubmt6M2pmVHZ6TUJLT3RpZk9lOTUwaDkxSTA2VXQyZGtkb0ZHTFpVNHFxSHFvdmFIeVJwZTY3MlprYl9QamJYMW50bUFfa2pZaU91cEJkM3RtaE9rYjRnLWhuSGlob1k2aGsxY3ZSQW5yQW9GcER3aVhBUTlhY0dMcjVzLVpBcGhGN000SEtsaXVPQllidVZDdkYteUZBR2dJSlczRjBYTS1RaW1SMDFTREpWQVl0TGRwaTVwc2laSm9SUkJMeW1maDdYb2MyMGtsa1NXOTFiUE9oQUtKR0ZwbEVuUm1waGl5ZVZnZDdIbzNXNFNvS0hhbzZIT1Z6TU1tSXNqTEU4bjUySU1iTWtETzJHbTBkNmliRFJRM3FqOHV3eEZhWU1pek54U2lhLTJkX3B2OTdjZ3VlanBNX1dXU2M3TmUxSUQ5NVJhOHVudVpRRV9veE5pTTVUZWwwRjlLMHFvUS4tUmFBZkdkV0dlOEdkWDQ2OS11NkJn"}'}
    headers: {cache-control: no-cache, content-length: '10692', content-type: application/json;
        charset=utf-8, date: 'Tue, 03 Sep 2019 21:43:39 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault105115999796041739.vault.azure.net,
        /keys/test-key/backup, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-keys/4.0.0b2 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: DELETE
    uri: https://vault105115999796041739.vault.azure.net/keys/test-key?api-version=7.0
  response:
    body: {string: '{"key":{"kid":"https://vault105115999796041739.vault.azure.net/keys/test-key/5d3ff0ae1b7142e19956888d246f6264","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"k_tvyn0fwRP0e7QR-JPZ7yqOvf6KVtWxisGfA-GoZWNfxPFdL4YIa-k1bKJ-ey2EkjTe24lNUnnUOOlhJzNsjwqFYRCeHXKxsUOnWH-uwtgYMNxkl5VXoVEAmg11bpMEc0vT4_yQtxaAAAsIy5abQ4KljRSIQWzlvmeJ6Iu3A0ANnV-0Po4wQSXo4IjXyuO-0L4F-7ZXBKPLKkblnK_qV2HgdL_USsbc8ESDTrcaRwYyUsYnC7j0GAUKF7HfCa5mF27_pe57759AP_u2fa8Tu1q-W33aBOHM1DdHPaTJjMGeCqmYu9NxfQoHN8fyyO_PwBofSMOCv4U6hQqiLTW1zQ","e":"AQAB"},"attributes":{"enabled":true,"created":1567547020,"updated":1567547020,"recoveryLevel":"Purgeable"}}'}
    headers: {cache-control: no-cache, content-length: '654', content-type: application/json;
        charset=utf-8, date: 'Tue, 03 Sep 2019 21:43:39 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault105115999796041739.vault.azure.net,
        /keys/test-key, api-version=7.0, '']
- request:
    body: '{"value": ""}'
    headers:
      Accept: [application/json]
      Content-Length: ['10693']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-keys/4.0.0b2 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault105115999796041739.vault.azure.net/keys/restore?api-version=7.0
  response:
    body: {string: '{"key":{"kid":"https://vault105115999796041739.vault.azure.net/keys/test-key/5d3ff0ae1b7142e19956888d246f6264","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"k_tvyn0fwRP0e7QR-JPZ7yqOvf6KVtWxisGfA-GoZWNfxPFdL4YIa-k1bKJ-ey2EkjTe24lNUnnUOOlhJzNsjwqFYRCeHXKxsUOnWH-uwtgYMNxkl5VXoVEAmg11bpMEc0vT4_yQtxaAAAsIy5abQ4KljRSIQWzlvmeJ6Iu3A0ANnV-0Po4wQSXo4IjXyuO-0L4F-7ZXBKPLKkblnK_qV2HgdL_USsbc8ESDTrcaRwYyUsYnC7j0GAUKF7HfCa5mF27_pe57759AP_u2fa8Tu1q-W33aBOHM1DdHPaTJjMGeCqmYu9NxfQoHN8fyyO_PwBofSMOCv4U6hQqiLTW1zQ","e":"AQAB"},"attributes":{"enabled":true,"created":1567547020,"updated":1567547020,"recoveryLevel":"Purgeable"}}'}
    headers: {cache-control: no-cache, content-length: '654', content-type: application/json;
        charset=utf-8, date: 'Tue, 03 Sep 2019 21:43:40 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault105115999796041739.vault.azure.net,
        /keys/restore, api-version=7.0, '']
version: 1
