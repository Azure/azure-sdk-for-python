interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Content-Length:
      - '0'
      Content-Type:
      - application/json; charset=utf-8
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault96041739.vault.azure.net/keys/test-key/create?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"Unauthorized","message":"Request is missing a Bearer
        or PoP token."}}'
    headers:
      cache-control: no-cache
      content-length: '87'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:06:12 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      www-authenticate: Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 401
      message: Unauthorized
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault96041739.vault.azure.net
        - /keys/test-key/create
        - api-version=7.0
        - ''
- request:
    body: '{"kty": "RSA"}'
    headers:
      Accept:
      - application/json
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault96041739.vault.azure.net/keys/test-key/create?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vault96041739.vault.azure.net/keys/test-key/4c7a97c6fd45415aa85446d0aa498e06","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"vkji8KxmQsIdcEikT5NKTR9A4Grj-f9lsCGSceofCUpuU0JkzJDagqHV2S_zr0QvI26Ocgm3eOtcgyFWzYm5Ccwsp6sSACTLZCydCYt4vYojZTRBIaTPQrgLaWNWTmsT_y7oE16wD8AXMHUIUPUkWavEc_vpWSfLswNj275UVuSXUNnPzhhtd5-7U9qKyV9okerDxs-IfDxCv0swNkJXbC5WciskNEnCK3RMhlNd7NSQ9yw9_IsR7NGJdJfjbbylj5rk0CU8KGuSfIc_VoIBSl9h0nGaWVrDi8bo9CyMKL4F1nofuqg8XarUfZpaxdftg-0SIVIFg7l1Cn0d0RAtjQ","e":"AQAB"},"attributes":{"enabled":true,"created":1571198773,"updated":1571198773,"recoveryLevel":"Purgeable"}}'
    headers:
      cache-control: no-cache
      content-length: '644'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:06:12 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 200
      message: OK
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault96041739.vault.azure.net
        - /keys/test-key/create
        - api-version=7.0
        - ''
- request:
    body: null
    headers:
      Accept:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: POST
    uri: https://vault96041739.vault.azure.net/keys/test-key/backup?api-version=7.0
  response:
    body:
      string: '{"value":""}'
    headers:
      cache-control: no-cache
      content-length: '10607'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:06:13 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 200
      message: OK
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault96041739.vault.azure.net
        - /keys/test-key/backup
        - api-version=7.0
        - ''
- request:
    body: null
    headers:
      Accept:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: DELETE
    uri: https://vault96041739.vault.azure.net/keys/test-key?api-version=7.0
  response:
    body:
      string: '{"key":{"kid":"https://vault96041739.vault.azure.net/keys/test-key/4c7a97c6fd45415aa85446d0aa498e06","kty":"RSA","key_ops":["encrypt","decrypt","sign","verify","wrapKey","unwrapKey"],"n":"vkji8KxmQsIdcEikT5NKTR9A4Grj-f9lsCGSceofCUpuU0JkzJDagqHV2S_zr0QvI26Ocgm3eOtcgyFWzYm5Ccwsp6sSACTLZCydCYt4vYojZTRBIaTPQrgLaWNWTmsT_y7oE16wD8AXMHUIUPUkWavEc_vpWSfLswNj275UVuSXUNnPzhhtd5-7U9qKyV9okerDxs-IfDxCv0swNkJXbC5WciskNEnCK3RMhlNd7NSQ9yw9_IsR7NGJdJfjbbylj5rk0CU8KGuSfIc_VoIBSl9h0nGaWVrDi8bo9CyMKL4F1nofuqg8XarUfZpaxdftg-0SIVIFg7l1Cn0d0RAtjQ","e":"AQAB"},"attributes":{"enabled":true,"created":1571198773,"updated":1571198773,"recoveryLevel":"Purgeable"}}'
    headers:
      cache-control: no-cache
      content-length: '644'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:06:13 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 200
      message: OK
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault96041739.vault.azure.net
        - /keys/test-key
        - api-version=7.0
        - ''
- request:
    body: null
    headers:
      Accept:
      - application/json
      User-Agent:
      - azsdk-python-keyvault-keys/4.0.0b5 Python/3.7.2 (Darwin-17.7.0-x86_64-i386-64bit)
    method: GET
    uri: https://vault96041739.vault.azure.net/deletedkeys/test-key?api-version=7.0
  response:
    body:
      string: '{"error":{"code":"NotSupported","message":"Operation \"get deleted
        key\" is not enabled for this vault."}}'
    headers:
      cache-control: no-cache
      content-length: '106'
      content-type: application/json; charset=utf-8
      date: Wed, 16 Oct 2019 04:06:13 GMT
      expires: '-1'
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=24.16.207.26;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.879
      x-powered-by: ASP.NET
    status:
      code: 400
      message: Bad Request
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult
        - https
        - vault96041739.vault.azure.net
        - /deletedkeys/test-key
        - api-version=7.0
        - ''
version: 1
