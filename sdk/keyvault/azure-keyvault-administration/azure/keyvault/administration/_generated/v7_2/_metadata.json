{
    "chosen_version": "7.2",
    "total_api_version_list": ["7.2"],
    "client": {
        "name": "KeyVaultClient",
        "filename": "_key_vault_client",
        "description": "The key vault client performs cryptographic key operations and vault operations against the Key Vault service.",
        "host_value": null,
        "parameterized_host_template": "\u0027{vaultBaseUrl}\u0027",
        "azure_arm": false,
        "has_lro_operations": true,
        "client_side_validation": false,
        "sync_imports": "{\"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}}, \"regular\": {\"azurecore\": {\"azure.core\": [\"PipelineClient\"], \"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"]}, \"local\": {\"._configuration\": [\"KeyVaultClientConfiguration\"], \".._serialization\": [\"Deserializer\", \"Serializer\"], \"._operations_mixin\": [\"KeyVaultClientOperationsMixin\"]}}}",
        "async_imports": "{\"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}}, \"regular\": {\"azurecore\": {\"azure.core\": [\"AsyncPipelineClient\"], \"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"]}, \"local\": {\"._configuration\": [\"KeyVaultClientConfiguration\"], \"..._serialization\": [\"Deserializer\", \"Serializer\"], \"._operations_mixin\": [\"KeyVaultClientOperationsMixin\"]}}}"
    },
    "global_parameters": {
        "sync": {
        },
        "async": {
        },
        "constant": {
        },
        "call": "",
        "service_client_specific": {
            "sync": {
                "api_version": {
                    "signature": "api_version=None, # type: Optional[str]",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile=KnownProfiles.default, # type: KnownProfiles",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            },
            "async": {
                "api_version": {
                    "signature": "api_version: Optional[str] = None,",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile: KnownProfiles = KnownProfiles.default,",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            }
        }
    },
    "config": {
        "credential": false,
        "credential_scopes": null,
        "credential_call_sync": null,
        "credential_call_async": null,
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"]}, \"local\": {\"._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"]}, \"local\": {\".._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}}"
    },
    "operation_groups": {
        "role_definitions": "RoleDefinitionsOperations",
        "role_assignments": "RoleAssignmentsOperations"
    },
    "operation_mixins": {
        "sync_imports": "{\"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"regular\": {\"stdlib\": {\"typing\": [\"IO\", \"Optional\", \"Union\"]}, \"local\": {\".\": [[\"models\", \"_models\"]]}, \"azurecore\": {\"azure.core.polling\": [\"LROPoller\"]}}}",
        "async_imports": "{\"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"regular\": {\"stdlib\": {\"typing\": [\"IO\", \"Optional\", \"Union\"]}, \"local\": {\"..\": [[\"models\", \"_models\"]]}, \"azurecore\": {\"azure.core.polling\": [\"AsyncLROPoller\"]}}}",
        "operations": {
            "_full_backup_initial" : {
                "sync": {
                    "signature": "def _full_backup_initial(\n    self,\n    vault_base_url: str,\n    azure_storage_blob_container_uri: Optional[Union[_models.SASTokenParameter, IO]] = None,\n    **kwargs: Any\n) -\u003e _models.FullBackupOperation:\n",
                    "doc": "\"\"\"Creates a full backup using a user-provided SAS token to an Azure blob storage container. This\noperation is supported only by the Managed HSM service.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param azure_storage_blob_container_uri: Azure blob shared access signature token pointing to a\n valid Azure blob container where full backup needs to be stored. This token needs to be valid\n for at least next 24 hours from the time of making this call. Is either a model type or a IO\n type. Default value is None.\n:type azure_storage_blob_container_uri: ~azure.keyvault.v7_2.models.SASTokenParameter or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: FullBackupOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.FullBackupOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, azure_storage_blob_container_uri, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def _full_backup_initial(\n    self,\n    vault_base_url: str,\n    azure_storage_blob_container_uri: Optional[Union[_models.SASTokenParameter, IO]] = None,\n    **kwargs: Any\n) -\u003e _models.FullBackupOperation:\n",
                    "doc": "\"\"\"Creates a full backup using a user-provided SAS token to an Azure blob storage container. This\noperation is supported only by the Managed HSM service.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param azure_storage_blob_container_uri: Azure blob shared access signature token pointing to a\n valid Azure blob container where full backup needs to be stored. This token needs to be valid\n for at least next 24 hours from the time of making this call. Is either a model type or a IO\n type. Default value is None.\n:type azure_storage_blob_container_uri: ~azure.keyvault.v7_2.models.SASTokenParameter or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: FullBackupOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.FullBackupOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, azure_storage_blob_container_uri, **kwargs"
                }
            },
            "begin_full_backup" : {
                "sync": {
                    "signature": "def begin_full_backup(\n    self,\n    vault_base_url: str,\n    azure_storage_blob_container_uri: Optional[Union[_models.SASTokenParameter, IO]] = None,\n    **kwargs: Any\n) -\u003e LROPoller[_models.FullBackupOperation]:\n",
                    "doc": "\"\"\"Creates a full backup using a user-provided SAS token to an Azure blob storage container. This\noperation is supported only by the Managed HSM service.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param azure_storage_blob_container_uri: Azure blob shared access signature token pointing to a\n valid Azure blob container where full backup needs to be stored. This token needs to be valid\n for at least next 24 hours from the time of making this call. Is either a model type or a IO\n type. Default value is None.\n:type azure_storage_blob_container_uri: ~azure.keyvault.v7_2.models.SASTokenParameter or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: By default, your polling method will be LROBasePolling. Pass in False for\n this operation to not poll, or pass in your own initialized polling object for a personal\n polling strategy.\n:paramtype polling: bool or ~azure.core.polling.PollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no\n Retry-After header is present.\n:return: An instance of LROPoller that returns either FullBackupOperation or the result of\n cls(response)\n:rtype: ~azure.core.polling.LROPoller[~azure.keyvault.v7_2.models.FullBackupOperation]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, azure_storage_blob_container_uri, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def begin_full_backup(\n    self,\n    vault_base_url: str,\n    azure_storage_blob_container_uri: Optional[Union[_models.SASTokenParameter, IO]] = None,\n    **kwargs: Any\n) -\u003e AsyncLROPoller[_models.FullBackupOperation]:\n",
                    "doc": "\"\"\"Creates a full backup using a user-provided SAS token to an Azure blob storage container. This\noperation is supported only by the Managed HSM service.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param azure_storage_blob_container_uri: Azure blob shared access signature token pointing to a\n valid Azure blob container where full backup needs to be stored. This token needs to be valid\n for at least next 24 hours from the time of making this call. Is either a model type or a IO\n type. Default value is None.\n:type azure_storage_blob_container_uri: ~azure.keyvault.v7_2.models.SASTokenParameter or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: By default, your polling method will be AsyncLROBasePolling. Pass in False\n for this operation to not poll, or pass in your own initialized polling object for a personal\n polling strategy.\n:paramtype polling: bool or ~azure.core.polling.AsyncPollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no\n Retry-After header is present.\n:return: An instance of AsyncLROPoller that returns either FullBackupOperation or the result of\n cls(response)\n:rtype: ~azure.core.polling.AsyncLROPoller[~azure.keyvault.v7_2.models.FullBackupOperation]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, azure_storage_blob_container_uri, **kwargs"
                }
            },
            "full_backup_status" : {
                "sync": {
                    "signature": "def full_backup_status(\n    self,\n    vault_base_url: str,\n    job_id: str,\n    **kwargs: Any\n) -\u003e _models.FullBackupOperation:\n",
                    "doc": "\"\"\"Returns the status of full backup operation.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param job_id: The id returned as part of the backup request. Required.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: FullBackupOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.FullBackupOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, job_id, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def full_backup_status(\n    self,\n    vault_base_url: str,\n    job_id: str,\n    **kwargs: Any\n) -\u003e _models.FullBackupOperation:\n",
                    "doc": "\"\"\"Returns the status of full backup operation.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param job_id: The id returned as part of the backup request. Required.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: FullBackupOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.FullBackupOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, job_id, **kwargs"
                }
            },
            "_full_restore_operation_initial" : {
                "sync": {
                    "signature": "def _full_restore_operation_initial(\n    self,\n    vault_base_url: str,\n    restore_blob_details: Optional[Union[_models.RestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e _models.RestoreOperation:\n",
                    "doc": "\"\"\"Restores all key materials using the SAS token pointing to a previously stored Azure Blob\nstorage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.RestoreOperationParameters or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: RestoreOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.RestoreOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, restore_blob_details, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def _full_restore_operation_initial(\n    self,\n    vault_base_url: str,\n    restore_blob_details: Optional[Union[_models.RestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e _models.RestoreOperation:\n",
                    "doc": "\"\"\"Restores all key materials using the SAS token pointing to a previously stored Azure Blob\nstorage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.RestoreOperationParameters or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: RestoreOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.RestoreOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, restore_blob_details, **kwargs"
                }
            },
            "begin_full_restore_operation" : {
                "sync": {
                    "signature": "def begin_full_restore_operation(\n    self,\n    vault_base_url: str,\n    restore_blob_details: Optional[Union[_models.RestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e LROPoller[_models.RestoreOperation]:\n",
                    "doc": "\"\"\"Restores all key materials using the SAS token pointing to a previously stored Azure Blob\nstorage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.RestoreOperationParameters or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: By default, your polling method will be LROBasePolling. Pass in False for\n this operation to not poll, or pass in your own initialized polling object for a personal\n polling strategy.\n:paramtype polling: bool or ~azure.core.polling.PollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no\n Retry-After header is present.\n:return: An instance of LROPoller that returns either RestoreOperation or the result of\n cls(response)\n:rtype: ~azure.core.polling.LROPoller[~azure.keyvault.v7_2.models.RestoreOperation]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, restore_blob_details, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def begin_full_restore_operation(\n    self,\n    vault_base_url: str,\n    restore_blob_details: Optional[Union[_models.RestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e AsyncLROPoller[_models.RestoreOperation]:\n",
                    "doc": "\"\"\"Restores all key materials using the SAS token pointing to a previously stored Azure Blob\nstorage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.RestoreOperationParameters or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: By default, your polling method will be AsyncLROBasePolling. Pass in False\n for this operation to not poll, or pass in your own initialized polling object for a personal\n polling strategy.\n:paramtype polling: bool or ~azure.core.polling.AsyncPollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no\n Retry-After header is present.\n:return: An instance of AsyncLROPoller that returns either RestoreOperation or the result of\n cls(response)\n:rtype: ~azure.core.polling.AsyncLROPoller[~azure.keyvault.v7_2.models.RestoreOperation]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, restore_blob_details, **kwargs"
                }
            },
            "restore_status" : {
                "sync": {
                    "signature": "def restore_status(\n    self,\n    vault_base_url: str,\n    job_id: str,\n    **kwargs: Any\n) -\u003e _models.RestoreOperation:\n",
                    "doc": "\"\"\"Returns the status of restore operation.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param job_id: The Job Id returned part of the restore operation. Required.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: RestoreOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.RestoreOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, job_id, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def restore_status(\n    self,\n    vault_base_url: str,\n    job_id: str,\n    **kwargs: Any\n) -\u003e _models.RestoreOperation:\n",
                    "doc": "\"\"\"Returns the status of restore operation.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param job_id: The Job Id returned part of the restore operation. Required.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: RestoreOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.RestoreOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, job_id, **kwargs"
                }
            },
            "_selective_key_restore_operation_initial" : {
                "sync": {
                    "signature": "def _selective_key_restore_operation_initial(\n    self,\n    vault_base_url: str,\n    key_name: str,\n    restore_blob_details: Optional[Union[_models.SelectiveKeyRestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e _models.SelectiveKeyRestoreOperation:\n",
                    "doc": "\"\"\"Restores all key versions of a given key using user supplied SAS token pointing to a previously\nstored Azure Blob storage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param key_name: The name of the key to be restored from the user supplied backup. Required.\n:type key_name: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperationParameters\n or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: SelectiveKeyRestoreOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, key_name, restore_blob_details, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def _selective_key_restore_operation_initial(\n    self,\n    vault_base_url: str,\n    key_name: str,\n    restore_blob_details: Optional[Union[_models.SelectiveKeyRestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e _models.SelectiveKeyRestoreOperation:\n",
                    "doc": "\"\"\"Restores all key versions of a given key using user supplied SAS token pointing to a previously\nstored Azure Blob storage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param key_name: The name of the key to be restored from the user supplied backup. Required.\n:type key_name: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperationParameters\n or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: SelectiveKeyRestoreOperation or the result of cls(response)\n:rtype: ~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperation\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, key_name, restore_blob_details, **kwargs"
                }
            },
            "begin_selective_key_restore_operation" : {
                "sync": {
                    "signature": "def begin_selective_key_restore_operation(\n    self,\n    vault_base_url: str,\n    key_name: str,\n    restore_blob_details: Optional[Union[_models.SelectiveKeyRestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e LROPoller[_models.SelectiveKeyRestoreOperation]:\n",
                    "doc": "\"\"\"Restores all key versions of a given key using user supplied SAS token pointing to a previously\nstored Azure Blob storage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param key_name: The name of the key to be restored from the user supplied backup. Required.\n:type key_name: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperationParameters\n or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: By default, your polling method will be LROBasePolling. Pass in False for\n this operation to not poll, or pass in your own initialized polling object for a personal\n polling strategy.\n:paramtype polling: bool or ~azure.core.polling.PollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no\n Retry-After header is present.\n:return: An instance of LROPoller that returns either SelectiveKeyRestoreOperation or the\n result of cls(response)\n:rtype: ~azure.core.polling.LROPoller[~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperation]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, key_name, restore_blob_details, **kwargs"
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def begin_selective_key_restore_operation(\n    self,\n    vault_base_url: str,\n    key_name: str,\n    restore_blob_details: Optional[Union[_models.SelectiveKeyRestoreOperationParameters, IO]] = None,\n    **kwargs: Any\n) -\u003e AsyncLROPoller[_models.SelectiveKeyRestoreOperation]:\n",
                    "doc": "\"\"\"Restores all key versions of a given key using user supplied SAS token pointing to a previously\nstored Azure Blob storage backup folder.\n\n:param vault_base_url: The vault name, for example https://myvault.vault.azure.net. Required.\n:type vault_base_url: str\n:param key_name: The name of the key to be restored from the user supplied backup. Required.\n:type key_name: str\n:param restore_blob_details: The Azure blob SAS token pointing to a folder where the previous\n successful full backup was stored. Is either a model type or a IO type. Default value is None.\n:type restore_blob_details: ~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperationParameters\n or IO\n:keyword content_type: Body Parameter content-type. Known values are: \u0027application/json\u0027.\n Default value is None.\n:paramtype content_type: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: By default, your polling method will be AsyncLROBasePolling. Pass in False\n for this operation to not poll, or pass in your own initialized polling object for a personal\n polling strategy.\n:paramtype polling: bool or ~azure.core.polling.AsyncPollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no\n Retry-After header is present.\n:return: An instance of AsyncLROPoller that returns either SelectiveKeyRestoreOperation or the\n result of cls(response)\n:rtype:\n ~azure.core.polling.AsyncLROPoller[~azure.keyvault.v7_2.models.SelectiveKeyRestoreOperation]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\"",
                    "call": "vault_base_url, key_name, restore_blob_details, **kwargs"
                }
            }
        }
    }
}
