interactions:
- request:
    body: null
    headers:
      Accept: [application/json]
      Content-Length: ['0']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"error":{"code":"Unauthorized","message":"Request is missing
        a Bearer or PoP token."}}'}
    headers: {cache-control: no-cache, content-length: '87', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:11 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      www-authenticate: 'Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"', x-aspnet-version: 4.0.30319, x-content-type-options: nosniff,
      x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 401, message: Unauthorized}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: '{"policy": {"key_props": {"exportable": true, "kty": "RSA", "key_size":
      2048, "reuse_key": false}, "secret_props": {"contentType": "application/x-pkcs12"},
      "x509_props": {"subject": "CN=*.microsoft.com", "sans": {}, "validity_months":
      24}, "lifetime_actions": [{"trigger": {"lifetime_percentage": 2}, "action":
      {"action_type": "EmailContacts"}}], "issuer": {"name": "Self"}}}'
    headers:
      Accept: [application/json]
      Content-Length: ['375']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAov+vniqC7LpgWtjYzjIEf6s93RVPgi3SlWm3u4bk4YQzLnYYtyTwWP4IuC4m2H4UseUs3GA+0W1n0rGkkJMqP9D8GX/4Lhp4hshn3e48F9XGna7+DAW3FKvHOWrrW/UxzXNXp+4wzGHRqLU/GzM3KYF1Bb4alGzxBWDN5YMqpgseeCxVgyaEa0MsWr7HVXVUwNjGVPsaxS3fPqnxDOxWNZMCbY7r1UU7Or8vy7f2MzPUJD7YTtvaGD4Xk7rR3uaairyzWnrdSeeOn0iVewtXvPvjzxmZNw/2/f6RE5i4Wosta9fa/l4ca6lVkmC99GFO7Pkq1Wvtwo3+6dHx/9cyqQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAAEZCpzPBq/T1hByBsvpKpYerQAK34nNZbyqhQaf/O5PoSGpRmzmKX7ydGN5NSScc8TuBVGN5AraY/8RXvOehj0sWEBtPwZpiCkgF8ms1YL8S9gipSiclJ2coCNkhTaDs/HB6pfNFOcGgi2rHWSfb2o/f435e2hGkSEwDqGHwYYkct3mP4SDDqZ89sDGExmmWYcjwqX4YSFzYpYs+9+WHlTiRTzzoXWfSkxl3Cox+Kky2G7tEO76AtWDEP1tNEv0v3dD2Mzu49B+XBsomZEqVSwAzU2G7OnmXdiG0e0KIf8ew8pMoFysExieSOSPrmU0ls5PvTFffInjoo03IXbQkiU=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"59a8344affe446e1aaae08b2883fb71f"}'}
    headers:
      cache-control: no-cache
      content-length: '1293'
      content-type: application/json; charset=utf-8
      date: Fri, 06 Sep 2019 18:04:13 GMT
      expires: '-1'
      location: [h, t, t, p, s, ':', /, /, v, a, u, l, t, c, f, a, '1', '4', '9',
        '7', ., v, a, u, l, t, ., a, z, u, r, e, ., n, e, t, /, c, e, r, t, i, f,
        i, c, a, t, e, s, /, c, e, r, t, c, f, a, '1', '4', '9', '7', /, p, e, n,
        d, i, n, g, '?', a, p, i, '-', v, e, r, s, i, o, n, '=', '7', ., '0', '&',
        r, e, q, u, e, s, t, _, i, d, '=', '5', '9', a, '8', '3', '4', '4', a, f,
        f, e, '4', '4', '6', e, '1', a, a, a, e, '0', '8', b, '2', '8', '8', '3',
        f, b, '7', '1', f]
      pragma: no-cache
      retry-after: '10'
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.878
      x-powered-by: ASP.NET
    status: {code: 202, message: Accepted}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAov+vniqC7LpgWtjYzjIEf6s93RVPgi3SlWm3u4bk4YQzLnYYtyTwWP4IuC4m2H4UseUs3GA+0W1n0rGkkJMqP9D8GX/4Lhp4hshn3e48F9XGna7+DAW3FKvHOWrrW/UxzXNXp+4wzGHRqLU/GzM3KYF1Bb4alGzxBWDN5YMqpgseeCxVgyaEa0MsWr7HVXVUwNjGVPsaxS3fPqnxDOxWNZMCbY7r1UU7Or8vy7f2MzPUJD7YTtvaGD4Xk7rR3uaairyzWnrdSeeOn0iVewtXvPvjzxmZNw/2/f6RE5i4Wosta9fa/l4ca6lVkmC99GFO7Pkq1Wvtwo3+6dHx/9cyqQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAAEZCpzPBq/T1hByBsvpKpYerQAK34nNZbyqhQaf/O5PoSGpRmzmKX7ydGN5NSScc8TuBVGN5AraY/8RXvOehj0sWEBtPwZpiCkgF8ms1YL8S9gipSiclJ2coCNkhTaDs/HB6pfNFOcGgi2rHWSfb2o/f435e2hGkSEwDqGHwYYkct3mP4SDDqZ89sDGExmmWYcjwqX4YSFzYpYs+9+WHlTiRTzzoXWfSkxl3Cox+Kky2G7tEO76AtWDEP1tNEv0v3dD2Mzu49B+XBsomZEqVSwAzU2G7OnmXdiG0e0KIf8ew8pMoFysExieSOSPrmU0ls5PvTFffInjoo03IXbQkiU=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"59a8344affe446e1aaae08b2883fb71f"}'}
    headers: {cache-control: no-cache, content-length: '1293', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:13 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAov+vniqC7LpgWtjYzjIEf6s93RVPgi3SlWm3u4bk4YQzLnYYtyTwWP4IuC4m2H4UseUs3GA+0W1n0rGkkJMqP9D8GX/4Lhp4hshn3e48F9XGna7+DAW3FKvHOWrrW/UxzXNXp+4wzGHRqLU/GzM3KYF1Bb4alGzxBWDN5YMqpgseeCxVgyaEa0MsWr7HVXVUwNjGVPsaxS3fPqnxDOxWNZMCbY7r1UU7Or8vy7f2MzPUJD7YTtvaGD4Xk7rR3uaairyzWnrdSeeOn0iVewtXvPvjzxmZNw/2/f6RE5i4Wosta9fa/l4ca6lVkmC99GFO7Pkq1Wvtwo3+6dHx/9cyqQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAAEZCpzPBq/T1hByBsvpKpYerQAK34nNZbyqhQaf/O5PoSGpRmzmKX7ydGN5NSScc8TuBVGN5AraY/8RXvOehj0sWEBtPwZpiCkgF8ms1YL8S9gipSiclJ2coCNkhTaDs/HB6pfNFOcGgi2rHWSfb2o/f435e2hGkSEwDqGHwYYkct3mP4SDDqZ89sDGExmmWYcjwqX4YSFzYpYs+9+WHlTiRTzzoXWfSkxl3Cox+Kky2G7tEO76AtWDEP1tNEv0v3dD2Mzu49B+XBsomZEqVSwAzU2G7OnmXdiG0e0KIf8ew8pMoFysExieSOSPrmU0ls5PvTFffInjoo03IXbQkiU=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"59a8344affe446e1aaae08b2883fb71f"}'}
    headers: {cache-control: no-cache, content-length: '1293', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:23 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAov+vniqC7LpgWtjYzjIEf6s93RVPgi3SlWm3u4bk4YQzLnYYtyTwWP4IuC4m2H4UseUs3GA+0W1n0rGkkJMqP9D8GX/4Lhp4hshn3e48F9XGna7+DAW3FKvHOWrrW/UxzXNXp+4wzGHRqLU/GzM3KYF1Bb4alGzxBWDN5YMqpgseeCxVgyaEa0MsWr7HVXVUwNjGVPsaxS3fPqnxDOxWNZMCbY7r1UU7Or8vy7f2MzPUJD7YTtvaGD4Xk7rR3uaairyzWnrdSeeOn0iVewtXvPvjzxmZNw/2/f6RE5i4Wosta9fa/l4ca6lVkmC99GFO7Pkq1Wvtwo3+6dHx/9cyqQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAAEZCpzPBq/T1hByBsvpKpYerQAK34nNZbyqhQaf/O5PoSGpRmzmKX7ydGN5NSScc8TuBVGN5AraY/8RXvOehj0sWEBtPwZpiCkgF8ms1YL8S9gipSiclJ2coCNkhTaDs/HB6pfNFOcGgi2rHWSfb2o/f435e2hGkSEwDqGHwYYkct3mP4SDDqZ89sDGExmmWYcjwqX4YSFzYpYs+9+WHlTiRTzzoXWfSkxl3Cox+Kky2G7tEO76AtWDEP1tNEv0v3dD2Mzu49B+XBsomZEqVSwAzU2G7OnmXdiG0e0KIf8ew8pMoFysExieSOSPrmU0ls5PvTFffInjoo03IXbQkiU=","cancellation_requested":false,"status":"completed","target":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497","request_id":"59a8344affe446e1aaae08b2883fb71f"}'}
    headers: {cache-control: no-cache, content-length: '1201', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:33 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAov+vniqC7LpgWtjYzjIEf6s93RVPgi3SlWm3u4bk4YQzLnYYtyTwWP4IuC4m2H4UseUs3GA+0W1n0rGkkJMqP9D8GX/4Lhp4hshn3e48F9XGna7+DAW3FKvHOWrrW/UxzXNXp+4wzGHRqLU/GzM3KYF1Bb4alGzxBWDN5YMqpgseeCxVgyaEa0MsWr7HVXVUwNjGVPsaxS3fPqnxDOxWNZMCbY7r1UU7Or8vy7f2MzPUJD7YTtvaGD4Xk7rR3uaairyzWnrdSeeOn0iVewtXvPvjzxmZNw/2/f6RE5i4Wosta9fa/l4ca6lVkmC99GFO7Pkq1Wvtwo3+6dHx/9cyqQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAAEZCpzPBq/T1hByBsvpKpYerQAK34nNZbyqhQaf/O5PoSGpRmzmKX7ydGN5NSScc8TuBVGN5AraY/8RXvOehj0sWEBtPwZpiCkgF8ms1YL8S9gipSiclJ2coCNkhTaDs/HB6pfNFOcGgi2rHWSfb2o/f435e2hGkSEwDqGHwYYkct3mP4SDDqZ89sDGExmmWYcjwqX4YSFzYpYs+9+WHlTiRTzzoXWfSkxl3Cox+Kky2G7tEO76AtWDEP1tNEv0v3dD2Mzu49B+XBsomZEqVSwAzU2G7OnmXdiG0e0KIf8ew8pMoFysExieSOSPrmU0ls5PvTFffInjoo03IXbQkiU=","cancellation_requested":false,"status":"completed","target":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497","request_id":"59a8344affe446e1aaae08b2883fb71f"}'}
    headers: {cache-control: no-cache, content-length: '1201', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:38 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/backup?api-version=7.0
  response:
    body: {string: '{"value":""}'}
    headers: {cache-control: no-cache, content-length: '42464', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:38 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497/backup, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: DELETE
    uri: https://vaultcfa1497.vault.azure.net/certificates/certcfa1497?api-version=7.0
  response:
    body: {string: '{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/554f5eca7f2e42009173c299dbee817b","kid":"https://vaultcfa1497.vault.azure.net/keys/certcfa1497/554f5eca7f2e42009173c299dbee817b","sid":"https://vaultcfa1497.vault.azure.net/secrets/certcfa1497/554f5eca7f2e42009173c299dbee817b","x5t":"HI3CLuPpqfe2c50MaE4H8eaGtjs","cer":"MIIDOjCCAiKgAwIBAgIQGaLR85GnTpGwQlbCuTPl8TANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkwOTA2MTc1NDIzWhcNMjEwOTA2MTgwNDIzWjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCi/6+eKoLsumBa2NjOMgR/qz3dFU+CLdKVabe7huThhDMudhi3JPBY/gi4LibYfhSx5SzcYD7RbWfSsaSQkyo/0PwZf/guGniGyGfd7jwX1cadrv4MBbcUq8c5autb9THNc1en7jDMYdGotT8bMzcpgXUFvhqUbPEFYM3lgyqmCx54LFWDJoRrQyxavsdVdVTA2MZU+xrFLd8+qfEM7FY1kwJtjuvVRTs6vy/Lt/YzM9QkPthO29oYPheTutHe5pqKvLNaet1J546fSJV7C1e8++PPGZk3D/b9/pETmLhaiy1r19r+XhxrqVWSYL30YU7s+SrVa+3Cjf7p0fH/1zKpAgMBAAGjfDB6MA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBQN0cJiDDG8eQggijY98tcXN+c3BjAdBgNVHQ4EFgQUDdHCYgwxvHkIIIo2PfLXFzfnNwYwDQYJKoZIhvcNAQELBQADggEBAIJ/6HG9HobUmkQUgDIBjImWswQzy6Hlm0WKRKuTfyFLoqdzt3vcDB2hIIbXmsaCu8qbqG8QWTw9+tXk34h4PUutE6b5if+dgOMr2W3sL6FHqsQR46soQkgOVVjZFyo8Z0eepFgjOW9elj7BrU9SAcWcGc0dUXGkISgkDfzSQcmLLlxBbWPHEMyVDerLsLUwDT2xRIrpfmLdeWI0CLJ8Pl+fWZDnWwG+hw8VIU8Ore9ftisApPzkT169+KwmgOrKy1aPTQlk4K8ehZHdiSweoYV3+cYNSsFYvNhAqdS1SzVa1x927W70fytAZzNV0iA79elamZgW+gaFvflK390JM+Q=","attributes":{"enabled":true,"nbf":1567792463,"exp":1630951463,"created":1567793063,"updated":1567793063,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","sans":{},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":2},"action":{"action_type":"EmailContacts"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1567793053,"updated":1567793053}},"pending":{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/pending"}}'}
    headers: {cache-control: no-cache, content-length: '2298', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:38 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/certcfa1497, api-version=7.0, '']
- request:
    body: '{"value": ""}'
    headers:
      Accept: [application/json]
      Content-Length: ['42465']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vaultcfa1497.vault.azure.net/certificates/restore?api-version=7.0
  response:
    body: {string: '{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/554f5eca7f2e42009173c299dbee817b","kid":"https://vaultcfa1497.vault.azure.net/keys/certcfa1497/554f5eca7f2e42009173c299dbee817b","sid":"https://vaultcfa1497.vault.azure.net/secrets/certcfa1497/554f5eca7f2e42009173c299dbee817b","x5t":"HI3CLuPpqfe2c50MaE4H8eaGtjs","cer":"MIIDOjCCAiKgAwIBAgIQGaLR85GnTpGwQlbCuTPl8TANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkwOTA2MTc1NDIzWhcNMjEwOTA2MTgwNDIzWjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCi/6+eKoLsumBa2NjOMgR/qz3dFU+CLdKVabe7huThhDMudhi3JPBY/gi4LibYfhSx5SzcYD7RbWfSsaSQkyo/0PwZf/guGniGyGfd7jwX1cadrv4MBbcUq8c5autb9THNc1en7jDMYdGotT8bMzcpgXUFvhqUbPEFYM3lgyqmCx54LFWDJoRrQyxavsdVdVTA2MZU+xrFLd8+qfEM7FY1kwJtjuvVRTs6vy/Lt/YzM9QkPthO29oYPheTutHe5pqKvLNaet1J546fSJV7C1e8++PPGZk3D/b9/pETmLhaiy1r19r+XhxrqVWSYL30YU7s+SrVa+3Cjf7p0fH/1zKpAgMBAAGjfDB6MA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBQN0cJiDDG8eQggijY98tcXN+c3BjAdBgNVHQ4EFgQUDdHCYgwxvHkIIIo2PfLXFzfnNwYwDQYJKoZIhvcNAQELBQADggEBAIJ/6HG9HobUmkQUgDIBjImWswQzy6Hlm0WKRKuTfyFLoqdzt3vcDB2hIIbXmsaCu8qbqG8QWTw9+tXk34h4PUutE6b5if+dgOMr2W3sL6FHqsQR46soQkgOVVjZFyo8Z0eepFgjOW9elj7BrU9SAcWcGc0dUXGkISgkDfzSQcmLLlxBbWPHEMyVDerLsLUwDT2xRIrpfmLdeWI0CLJ8Pl+fWZDnWwG+hw8VIU8Ore9ftisApPzkT169+KwmgOrKy1aPTQlk4K8ehZHdiSweoYV3+cYNSsFYvNhAqdS1SzVa1x927W70fytAZzNV0iA79elamZgW+gaFvflK390JM+Q=","attributes":{"enabled":true,"nbf":1567792463,"exp":1630951463,"created":1567793063,"updated":1567793063,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vaultcfa1497.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":2},"action":{"action_type":"EmailContacts"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1567793053,"updated":1567793053}}}'}
    headers: {cache-control: no-cache, content-length: '2199', content-type: application/json;
        charset=utf-8, date: 'Fri, 06 Sep 2019 18:04:39 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.174.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.878, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultcfa1497.vault.azure.net,
        /certificates/restore, api-version=7.0, '']
version: 1
