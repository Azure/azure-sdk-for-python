interactions:
- request:
    body: null
    headers:
      Accept: [application/json]
      Content-Length: ['0']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"error":{"code":"Unauthorized","message":"Request is missing
        a Bearer or PoP token."}}'}
    headers: {cache-control: no-cache, content-length: '87', content-type: application/json;
        charset=utf-8, date: 'Thu, 29 Aug 2019 01:59:05 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      www-authenticate: 'Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"', x-aspnet-version: 4.0.30319, x-content-type-options: nosniff,
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 401, message: Unauthorized}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: '{"policy": {"key_props": {"exportable": true, "kty": "RSA", "key_size":
      2048, "reuse_key": false}, "secret_props": {"contentType": "application/x-pkcs12"},
      "x509_props": {"subject": "CN=*.microsoft.com", "sans": {}, "validity_months":
      24}, "lifetime_actions": [{"trigger": {"lifetime_percentage": 2}, "action":
      {"action_type": "EmailContacts"}}], "issuer": {"name": "Self"}}}'
    headers:
      Accept: [application/json]
      Content-Length: ['375']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApuVqWfLfQg/g9i6ZRKCIkitPRxN0bDBOtXEn6+6gsQm45SZZyJbTNmhezjxIGMB58P7e2qBa2QHttcqetPktgUGgdIdEJWRpOXV6EuCe1beXQagFkf57ppzXek+YoUOjnTB2w+dsh/eqlZDFRSwft8/69Mhyuob1ql1kb1i78V03+fzEISZCB8s5Nu0dk9RfHhSzc3TqBQGyJicpvm/V3j4yNZ0sTP9s8871uVREOxnH/90fAYaKgUYKl1yNyekOzc08FyikWEAKmoyFSxNl0O2qlP/POuqbZL6GnozgJvGCe6n/ikk2KyekkOjJcsY+Lk4wTBlgeEXJkdmnOL+SSwIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAEThz4Pxp47zPIaOYtOYkepUB0BlBeaxfEtkLndptn1RafTE4NHUOZyy+pqU/cBWpfbPeJOBcyI6nS+Gm30WxX5f5/8aWlS6oSrGmKkd1FahH9sKueSdh6loYjuPt5A9kWFKwQFh7W3Tbjc1j1OSlqeccHj/tOgKe5lHCBaABL020JX8KhNHUE4HCcE7WXKRpP+at1ULTjRzVvqWDWtRcbmnDXf2gB82nwzDJvTXiDmOuUTXMnXkMj/nMIKYqm67tm4EBqndV0uvGATl6LIyWgIvjk2suJA7QHQ8HCK3WgF0QDpD7CsbsBlvfUafoWS3gvN6Y5KtqCUBoCYUiUn0mPc=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"eb95378e550c408c99069ccb7cb0aeba"}'}
    headers:
      cache-control: no-cache
      content-length: '1303'
      content-type: application/json; charset=utf-8
      date: Thu, 29 Aug 2019 01:59:06 GMT
      expires: '-1'
      location: [h, t, t, p, s, ':', /, /, v, a, u, l, t, '1', '0', '5', '1', '1',
        '5', '9', '9', '9', '7', c, f, a, '1', '4', '9', '7', ., v, a, u, l, t, .,
        a, z, u, r, e, ., n, e, t, /, c, e, r, t, i, f, i, c, a, t, e, s, /, c, e,
        r, t, c, f, a, '1', '4', '9', '7', /, p, e, n, d, i, n, g, '?', a, p, i, '-',
        v, e, r, s, i, o, n, '=', '7', ., '0', '&', r, e, q, u, e, s, t, _, i, d,
        '=', e, b, '9', '5', '3', '7', '8', e, '5', '5', '0', c, '4', '0', '8', c,
        '9', '9', '0', '6', '9', c, c, b, '7', c, b, '0', a, e, b, a]
      pragma: no-cache
      retry-after: '10'
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.876
      x-powered-by: ASP.NET
    status: {code: 202, message: Accepted}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApuVqWfLfQg/g9i6ZRKCIkitPRxN0bDBOtXEn6+6gsQm45SZZyJbTNmhezjxIGMB58P7e2qBa2QHttcqetPktgUGgdIdEJWRpOXV6EuCe1beXQagFkf57ppzXek+YoUOjnTB2w+dsh/eqlZDFRSwft8/69Mhyuob1ql1kb1i78V03+fzEISZCB8s5Nu0dk9RfHhSzc3TqBQGyJicpvm/V3j4yNZ0sTP9s8871uVREOxnH/90fAYaKgUYKl1yNyekOzc08FyikWEAKmoyFSxNl0O2qlP/POuqbZL6GnozgJvGCe6n/ikk2KyekkOjJcsY+Lk4wTBlgeEXJkdmnOL+SSwIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAEThz4Pxp47zPIaOYtOYkepUB0BlBeaxfEtkLndptn1RafTE4NHUOZyy+pqU/cBWpfbPeJOBcyI6nS+Gm30WxX5f5/8aWlS6oSrGmKkd1FahH9sKueSdh6loYjuPt5A9kWFKwQFh7W3Tbjc1j1OSlqeccHj/tOgKe5lHCBaABL020JX8KhNHUE4HCcE7WXKRpP+at1ULTjRzVvqWDWtRcbmnDXf2gB82nwzDJvTXiDmOuUTXMnXkMj/nMIKYqm67tm4EBqndV0uvGATl6LIyWgIvjk2suJA7QHQ8HCK3WgF0QDpD7CsbsBlvfUafoWS3gvN6Y5KtqCUBoCYUiUn0mPc=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"eb95378e550c408c99069ccb7cb0aeba"}'}
    headers: {cache-control: no-cache, content-length: '1303', content-type: application/json;
        charset=utf-8, date: 'Thu, 29 Aug 2019 01:59:06 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApuVqWfLfQg/g9i6ZRKCIkitPRxN0bDBOtXEn6+6gsQm45SZZyJbTNmhezjxIGMB58P7e2qBa2QHttcqetPktgUGgdIdEJWRpOXV6EuCe1beXQagFkf57ppzXek+YoUOjnTB2w+dsh/eqlZDFRSwft8/69Mhyuob1ql1kb1i78V03+fzEISZCB8s5Nu0dk9RfHhSzc3TqBQGyJicpvm/V3j4yNZ0sTP9s8871uVREOxnH/90fAYaKgUYKl1yNyekOzc08FyikWEAKmoyFSxNl0O2qlP/POuqbZL6GnozgJvGCe6n/ikk2KyekkOjJcsY+Lk4wTBlgeEXJkdmnOL+SSwIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAEThz4Pxp47zPIaOYtOYkepUB0BlBeaxfEtkLndptn1RafTE4NHUOZyy+pqU/cBWpfbPeJOBcyI6nS+Gm30WxX5f5/8aWlS6oSrGmKkd1FahH9sKueSdh6loYjuPt5A9kWFKwQFh7W3Tbjc1j1OSlqeccHj/tOgKe5lHCBaABL020JX8KhNHUE4HCcE7WXKRpP+at1ULTjRzVvqWDWtRcbmnDXf2gB82nwzDJvTXiDmOuUTXMnXkMj/nMIKYqm67tm4EBqndV0uvGATl6LIyWgIvjk2suJA7QHQ8HCK3WgF0QDpD7CsbsBlvfUafoWS3gvN6Y5KtqCUBoCYUiUn0mPc=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"eb95378e550c408c99069ccb7cb0aeba"}'}
    headers: {cache-control: no-cache, content-length: '1303', content-type: application/json;
        charset=utf-8, date: 'Thu, 29 Aug 2019 01:59:17 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApuVqWfLfQg/g9i6ZRKCIkitPRxN0bDBOtXEn6+6gsQm45SZZyJbTNmhezjxIGMB58P7e2qBa2QHttcqetPktgUGgdIdEJWRpOXV6EuCe1beXQagFkf57ppzXek+YoUOjnTB2w+dsh/eqlZDFRSwft8/69Mhyuob1ql1kb1i78V03+fzEISZCB8s5Nu0dk9RfHhSzc3TqBQGyJicpvm/V3j4yNZ0sTP9s8871uVREOxnH/90fAYaKgUYKl1yNyekOzc08FyikWEAKmoyFSxNl0O2qlP/POuqbZL6GnozgJvGCe6n/ikk2KyekkOjJcsY+Lk4wTBlgeEXJkdmnOL+SSwIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAEThz4Pxp47zPIaOYtOYkepUB0BlBeaxfEtkLndptn1RafTE4NHUOZyy+pqU/cBWpfbPeJOBcyI6nS+Gm30WxX5f5/8aWlS6oSrGmKkd1FahH9sKueSdh6loYjuPt5A9kWFKwQFh7W3Tbjc1j1OSlqeccHj/tOgKe5lHCBaABL020JX8KhNHUE4HCcE7WXKRpP+at1ULTjRzVvqWDWtRcbmnDXf2gB82nwzDJvTXiDmOuUTXMnXkMj/nMIKYqm67tm4EBqndV0uvGATl6LIyWgIvjk2suJA7QHQ8HCK3WgF0QDpD7CsbsBlvfUafoWS3gvN6Y5KtqCUBoCYUiUn0mPc=","cancellation_requested":false,"status":"completed","target":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497","request_id":"eb95378e550c408c99069ccb7cb0aeba"}'}
    headers: {cache-control: no-cache, content-length: '1221', content-type: application/json;
        charset=utf-8, date: 'Thu, 29 Aug 2019 01:59:27 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/backup?api-version=7.0
  response:
    body: {string: '{"value":""}'}
    headers: {cache-control: no-cache, content-length: '42635', content-type: application/json;
        charset=utf-8, date: 'Thu, 29 Aug 2019 01:59:27 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/backup, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: DELETE
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/dddf60ca50cf4bf5b8e367fa6ee001c7","kid":"https://vault1051159997cfa1497.vault.azure.net/keys/certcfa1497/dddf60ca50cf4bf5b8e367fa6ee001c7","sid":"https://vault1051159997cfa1497.vault.azure.net/secrets/certcfa1497/dddf60ca50cf4bf5b8e367fa6ee001c7","x5t":"hjNlE8d9FGKWw7Z17DM8SMsS56A","cer":"MIIDOjCCAiKgAwIBAgIQcF7xnLDCTwehiaS05+6avzANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkwODI5MDE0OTE4WhcNMjEwODI5MDE1OTE4WjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCm5WpZ8t9CD+D2LplEoIiSK09HE3RsME61cSfr7qCxCbjlJlnIltM2aF7OPEgYwHnw/t7aoFrZAe21yp60+S2BQaB0h0QlZGk5dXoS4J7Vt5dBqAWR/numnNd6T5ihQ6OdMHbD52yH96qVkMVFLB+3z/r0yHK6hvWqXWRvWLvxXTf5/MQhJkIHyzk27R2T1F8eFLNzdOoFAbImJym+b9XePjI1nSxM/2zzzvW5VEQ7Gcf/3R8BhoqBRgqXXI3J6Q7NzTwXKKRYQAqajIVLE2XQ7aqU/8866ptkvoaejOAm8YJ7qf+KSTYrJ6SQ6Mlyxj4uTjBMGWB4RcmR2ac4v5JLAgMBAAGjfDB6MA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBRFyiy487x4z0ja6ZtTfl0t0R2MZTAdBgNVHQ4EFgQURcosuPO8eM9I2umbU35dLdEdjGUwDQYJKoZIhvcNAQELBQADggEBAIpcvuNlrllFoW8WQXoVBgGyNq/x4edJ0KZcFdvx0GAWJDz2m0G0By2DC28r44QFyN2ynaeRvNW7BAsTMdsXUS+Sb72nNNns+d6wQS+vgjYmPQlBc4wUiAQ5poQutyEv9ChJIyLewOMLwZDh+1Vwc62Lb5k9i7TQtrZsGbT1wmJ2iHr/fOVANxyIfrYuNLGfVtDwNERaWgBJFQPX+MEyUep3GnbZ8MVNpA+fsNu6niN9HqZD77U2swMyUJ+MjR/Y7CGBWft/JNKOF4XWRPvgn5U8+qZ3ZVPok7FTGWSJ5JLuIZf+5edvHwT522sBqqUdlXeGDYQvWiqyNWyyMc4II9I=","attributes":{"enabled":true,"nbf":1567043358,"exp":1630202358,"created":1567043959,"updated":1567043959,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","sans":{},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":2},"action":{"action_type":"EmailContacts"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1567043946,"updated":1567043946}},"pending":{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending"}}'}
    headers: {cache-control: no-cache, content-length: '2348', content-type: application/json;
        charset=utf-8, date: 'Thu, 29 Aug 2019 01:59:27 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497, api-version=7.0, '']
- request:
    body: '{"value": ""}'
    headers:
      Accept: [application/json]
      Content-Length: ['42636']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/restore?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/dddf60ca50cf4bf5b8e367fa6ee001c7","kid":"https://vault1051159997cfa1497.vault.azure.net/keys/certcfa1497/dddf60ca50cf4bf5b8e367fa6ee001c7","sid":"https://vault1051159997cfa1497.vault.azure.net/secrets/certcfa1497/dddf60ca50cf4bf5b8e367fa6ee001c7","x5t":"hjNlE8d9FGKWw7Z17DM8SMsS56A","cer":"MIIDOjCCAiKgAwIBAgIQcF7xnLDCTwehiaS05+6avzANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkwODI5MDE0OTE4WhcNMjEwODI5MDE1OTE4WjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCm5WpZ8t9CD+D2LplEoIiSK09HE3RsME61cSfr7qCxCbjlJlnIltM2aF7OPEgYwHnw/t7aoFrZAe21yp60+S2BQaB0h0QlZGk5dXoS4J7Vt5dBqAWR/numnNd6T5ihQ6OdMHbD52yH96qVkMVFLB+3z/r0yHK6hvWqXWRvWLvxXTf5/MQhJkIHyzk27R2T1F8eFLNzdOoFAbImJym+b9XePjI1nSxM/2zzzvW5VEQ7Gcf/3R8BhoqBRgqXXI3J6Q7NzTwXKKRYQAqajIVLE2XQ7aqU/8866ptkvoaejOAm8YJ7qf+KSTYrJ6SQ6Mlyxj4uTjBMGWB4RcmR2ac4v5JLAgMBAAGjfDB6MA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBRFyiy487x4z0ja6ZtTfl0t0R2MZTAdBgNVHQ4EFgQURcosuPO8eM9I2umbU35dLdEdjGUwDQYJKoZIhvcNAQELBQADggEBAIpcvuNlrllFoW8WQXoVBgGyNq/x4edJ0KZcFdvx0GAWJDz2m0G0By2DC28r44QFyN2ynaeRvNW7BAsTMdsXUS+Sb72nNNns+d6wQS+vgjYmPQlBc4wUiAQ5poQutyEv9ChJIyLewOMLwZDh+1Vwc62Lb5k9i7TQtrZsGbT1wmJ2iHr/fOVANxyIfrYuNLGfVtDwNERaWgBJFQPX+MEyUep3GnbZ8MVNpA+fsNu6niN9HqZD77U2swMyUJ+MjR/Y7CGBWft/JNKOF4XWRPvgn5U8+qZ3ZVPok7FTGWSJ5JLuIZf+5edvHwT522sBqqUdlXeGDYQvWiqyNWyyMc4II9I=","attributes":{"enabled":true,"nbf":1567043358,"exp":1630202358,"created":1567043959,"updated":1567043959,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":2},"action":{"action_type":"EmailContacts"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1567043946,"updated":1567043946}}}'}
    headers: {cache-control: no-cache, content-length: '2239', content-type: application/json;
        charset=utf-8, date: 'Thu, 29 Aug 2019 01:59:28 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/restore, api-version=7.0, '']
version: 1
