interactions:
- request:
    body: null
    headers:
      Accept: [application/json]
      Content-Length: ['0']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"error":{"code":"Unauthorized","message":"Request is missing
        a Bearer or PoP token."}}'}
    headers: {cache-control: no-cache, content-length: '87', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:19:58 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      www-authenticate: 'Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"', x-aspnet-version: 4.0.30319, x-content-type-options: nosniff,
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 401, message: Unauthorized}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: '{"policy": {"key_props": {"exportable": true, "kty": "RSA", "key_size":
      2048, "reuse_key": false}, "secret_props": {"contentType": "application/x-pkcs12"},
      "x509_props": {"subject": "CN=*.microsoft.com", "sans": {}, "validity_months":
      24}, "lifetime_actions": [{"trigger": {"lifetime_percentage": 2}, "action":
      {"action_type": "EmailContacts"}}], "issuer": {"name": "Self"}}}'
    headers:
      Accept: [application/json]
      Content-Length: ['375']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqD1scIVrdmfjlAWncS4iyAjroA8v5+2QXaGW5J7BWK/FJQ1gWb4466HtNE3rhXkVg0LxKrDGN+6VSVTe+qAPv1RT2X0++PcLsTEY5DYH/bs3bav72ftX6h5c6TA+NrBO1I34B57HknTmNLtKX1IR6TAtFnGeOB7hw8X0G8CJyFCV0vXUPcONAkWMtUhP2eI6KpwDTpkffOeBnPuCcGT6EHg9gjvmldFxxkVbqdhwObR01o+Bi2ar42MFN/35BQJQpXPAlLNj+w+Jy/+OPOC3Md/BSMud+bfDp0k3dWW1KegGq4Xh2xrqoWo1L7En4Ypf9EVdIWzKVq/zKNRxQ5KypQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAHxWDCITt43yBQ/6D6H9IuR4pfvwYNnTV5ErnKOU7AERpiYfSW3ViFfj4ybgudKcLV4NRd6+ip0IA2i0OqHapNhb+zoM86K/rZxbPZvaHF+IqhbM3rIaoRKkA1Bd5R8UpJX+Wp7rIVFmyv3RVloW43J5/ihHmrwE5QWs50xox9EUVkGfQ9ou8XTuV/gu9iWaxZ04qMo8dCU/00jKW5zok3X500+xr4MgcOqsBKPHw/EfZIXaS8iuY6AML/DqOIm8xEERcdutLwyD1o9LXWcW3OpsRHrvRmhWN9vo/NbcyWGeeVG3TrRwteMVwBr09fbyvwKGdQBDSDZH/Mbtrz6kwuo=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"9003453483304d8c9c191b06e2e396e4"}'}
    headers:
      cache-control: no-cache
      content-length: '1303'
      content-type: application/json; charset=utf-8
      date: Wed, 04 Sep 2019 23:19:59 GMT
      expires: '-1'
      location: [h, t, t, p, s, ':', /, /, v, a, u, l, t, '1', '0', '5', '1', '1',
        '5', '9', '9', '9', '7', c, f, a, '1', '4', '9', '7', ., v, a, u, l, t, .,
        a, z, u, r, e, ., n, e, t, /, c, e, r, t, i, f, i, c, a, t, e, s, /, c, e,
        r, t, c, f, a, '1', '4', '9', '7', /, p, e, n, d, i, n, g, '?', a, p, i, '-',
        v, e, r, s, i, o, n, '=', '7', ., '0', '&', r, e, q, u, e, s, t, _, i, d,
        '=', '9', '0', '0', '3', '4', '5', '3', '4', '8', '3', '3', '0', '4', d, '8',
        c, '9', c, '1', '9', '1', b, '0', '6', e, '2', e, '3', '9', '6', e, '4']
      pragma: no-cache
      retry-after: '10'
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.876
      x-powered-by: ASP.NET
    status: {code: 202, message: Accepted}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqD1scIVrdmfjlAWncS4iyAjroA8v5+2QXaGW5J7BWK/FJQ1gWb4466HtNE3rhXkVg0LxKrDGN+6VSVTe+qAPv1RT2X0++PcLsTEY5DYH/bs3bav72ftX6h5c6TA+NrBO1I34B57HknTmNLtKX1IR6TAtFnGeOB7hw8X0G8CJyFCV0vXUPcONAkWMtUhP2eI6KpwDTpkffOeBnPuCcGT6EHg9gjvmldFxxkVbqdhwObR01o+Bi2ar42MFN/35BQJQpXPAlLNj+w+Jy/+OPOC3Md/BSMud+bfDp0k3dWW1KegGq4Xh2xrqoWo1L7En4Ypf9EVdIWzKVq/zKNRxQ5KypQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAHxWDCITt43yBQ/6D6H9IuR4pfvwYNnTV5ErnKOU7AERpiYfSW3ViFfj4ybgudKcLV4NRd6+ip0IA2i0OqHapNhb+zoM86K/rZxbPZvaHF+IqhbM3rIaoRKkA1Bd5R8UpJX+Wp7rIVFmyv3RVloW43J5/ihHmrwE5QWs50xox9EUVkGfQ9ou8XTuV/gu9iWaxZ04qMo8dCU/00jKW5zok3X500+xr4MgcOqsBKPHw/EfZIXaS8iuY6AML/DqOIm8xEERcdutLwyD1o9LXWcW3OpsRHrvRmhWN9vo/NbcyWGeeVG3TrRwteMVwBr09fbyvwKGdQBDSDZH/Mbtrz6kwuo=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"9003453483304d8c9c191b06e2e396e4"}'}
    headers: {cache-control: no-cache, content-length: '1303', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:19:59 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqD1scIVrdmfjlAWncS4iyAjroA8v5+2QXaGW5J7BWK/FJQ1gWb4466HtNE3rhXkVg0LxKrDGN+6VSVTe+qAPv1RT2X0++PcLsTEY5DYH/bs3bav72ftX6h5c6TA+NrBO1I34B57HknTmNLtKX1IR6TAtFnGeOB7hw8X0G8CJyFCV0vXUPcONAkWMtUhP2eI6KpwDTpkffOeBnPuCcGT6EHg9gjvmldFxxkVbqdhwObR01o+Bi2ar42MFN/35BQJQpXPAlLNj+w+Jy/+OPOC3Md/BSMud+bfDp0k3dWW1KegGq4Xh2xrqoWo1L7En4Ypf9EVdIWzKVq/zKNRxQ5KypQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAHxWDCITt43yBQ/6D6H9IuR4pfvwYNnTV5ErnKOU7AERpiYfSW3ViFfj4ybgudKcLV4NRd6+ip0IA2i0OqHapNhb+zoM86K/rZxbPZvaHF+IqhbM3rIaoRKkA1Bd5R8UpJX+Wp7rIVFmyv3RVloW43J5/ihHmrwE5QWs50xox9EUVkGfQ9ou8XTuV/gu9iWaxZ04qMo8dCU/00jKW5zok3X500+xr4MgcOqsBKPHw/EfZIXaS8iuY6AML/DqOIm8xEERcdutLwyD1o9LXWcW3OpsRHrvRmhWN9vo/NbcyWGeeVG3TrRwteMVwBr09fbyvwKGdQBDSDZH/Mbtrz6kwuo=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"9003453483304d8c9c191b06e2e396e4"}'}
    headers: {cache-control: no-cache, content-length: '1303', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:20:09 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqD1scIVrdmfjlAWncS4iyAjroA8v5+2QXaGW5J7BWK/FJQ1gWb4466HtNE3rhXkVg0LxKrDGN+6VSVTe+qAPv1RT2X0++PcLsTEY5DYH/bs3bav72ftX6h5c6TA+NrBO1I34B57HknTmNLtKX1IR6TAtFnGeOB7hw8X0G8CJyFCV0vXUPcONAkWMtUhP2eI6KpwDTpkffOeBnPuCcGT6EHg9gjvmldFxxkVbqdhwObR01o+Bi2ar42MFN/35BQJQpXPAlLNj+w+Jy/+OPOC3Md/BSMud+bfDp0k3dWW1KegGq4Xh2xrqoWo1L7En4Ypf9EVdIWzKVq/zKNRxQ5KypQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAHxWDCITt43yBQ/6D6H9IuR4pfvwYNnTV5ErnKOU7AERpiYfSW3ViFfj4ybgudKcLV4NRd6+ip0IA2i0OqHapNhb+zoM86K/rZxbPZvaHF+IqhbM3rIaoRKkA1Bd5R8UpJX+Wp7rIVFmyv3RVloW43J5/ihHmrwE5QWs50xox9EUVkGfQ9ou8XTuV/gu9iWaxZ04qMo8dCU/00jKW5zok3X500+xr4MgcOqsBKPHw/EfZIXaS8iuY6AML/DqOIm8xEERcdutLwyD1o9LXWcW3OpsRHrvRmhWN9vo/NbcyWGeeVG3TrRwteMVwBr09fbyvwKGdQBDSDZH/Mbtrz6kwuo=","cancellation_requested":false,"status":"completed","target":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497","request_id":"9003453483304d8c9c191b06e2e396e4"}'}
    headers: {cache-control: no-cache, content-length: '1221', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:20:19 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIICqjCCAZICAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqD1scIVrdmfjlAWncS4iyAjroA8v5+2QXaGW5J7BWK/FJQ1gWb4466HtNE3rhXkVg0LxKrDGN+6VSVTe+qAPv1RT2X0++PcLsTEY5DYH/bs3bav72ftX6h5c6TA+NrBO1I34B57HknTmNLtKX1IR6TAtFnGeOB7hw8X0G8CJyFCV0vXUPcONAkWMtUhP2eI6KpwDTpkffOeBnPuCcGT6EHg9gjvmldFxxkVbqdhwObR01o+Bi2ar42MFN/35BQJQpXPAlLNj+w+Jy/+OPOC3Md/BSMud+bfDp0k3dWW1KegGq4Xh2xrqoWo1L7En4Ypf9EVdIWzKVq/zKNRxQ5KypQIDAQABoEswSQYJKoZIhvcNAQkOMTwwOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBAHxWDCITt43yBQ/6D6H9IuR4pfvwYNnTV5ErnKOU7AERpiYfSW3ViFfj4ybgudKcLV4NRd6+ip0IA2i0OqHapNhb+zoM86K/rZxbPZvaHF+IqhbM3rIaoRKkA1Bd5R8UpJX+Wp7rIVFmyv3RVloW43J5/ihHmrwE5QWs50xox9EUVkGfQ9ou8XTuV/gu9iWaxZ04qMo8dCU/00jKW5zok3X500+xr4MgcOqsBKPHw/EfZIXaS8iuY6AML/DqOIm8xEERcdutLwyD1o9LXWcW3OpsRHrvRmhWN9vo/NbcyWGeeVG3TrRwteMVwBr09fbyvwKGdQBDSDZH/Mbtrz6kwuo=","cancellation_requested":false,"status":"completed","target":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497","request_id":"9003453483304d8c9c191b06e2e396e4"}'}
    headers: {cache-control: no-cache, content-length: '1221', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:20:25 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/backup?api-version=7.0
  response:
    body: {string: '{"value":""}'}
    headers: {cache-control: no-cache, content-length: '42664', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:20:25 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497/backup, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: DELETE
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/ed4a81ce38bd4aff9a320a54999365bb","kid":"https://vault1051159997cfa1497.vault.azure.net/keys/certcfa1497/ed4a81ce38bd4aff9a320a54999365bb","sid":"https://vault1051159997cfa1497.vault.azure.net/secrets/certcfa1497/ed4a81ce38bd4aff9a320a54999365bb","x5t":"EGCdbDY5NxW2aWAyaffevJ0T5WI","cer":"MIIDOjCCAiKgAwIBAgIQLMT9FrFxSXCIGo9LpD0VzDANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkwOTA0MjMxMDE0WhcNMjEwOTA0MjMyMDE0WjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoPWxwhWt2Z+OUBadxLiLICOugDy/n7ZBdoZbknsFYr8UlDWBZvjjroe00TeuFeRWDQvEqsMY37pVJVN76oA+/VFPZfT749wuxMRjkNgf9uzdtq/vZ+1fqHlzpMD42sE7UjfgHnseSdOY0u0pfUhHpMC0WcZ44HuHDxfQbwInIUJXS9dQ9w40CRYy1SE/Z4joqnANOmR9854Gc+4JwZPoQeD2CO+aV0XHGRVup2HA5tHTWj4GLZqvjYwU3/fkFAlClc8CUs2P7D4nL/4484Lcx38FIy535t8OnSTd1ZbUp6AarheHbGuqhajUvsSfhil/0RV0hbMpWr/Mo1HFDkrKlAgMBAAGjfDB6MA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBQlfgxfPPlqTxG+aZxCq6ndMe8SrzAdBgNVHQ4EFgQUJX4MXzz5ak8RvmmcQqup3THvEq8wDQYJKoZIhvcNAQELBQADggEBAChWFn8tJXpHADvvjrUEPLKFrhLe5HRn+4xOKeXvXR0FGNhRnaZ+kWc/kEpRUiUA8wTHsdJAi6zkAcg3iyrqA105PQ0nHxEMqQo6Kw3RUO3HBSrV5JKOmWCwJCGnAmBUlL3HdKabYfr1bWoTaeShyYR4+3bJ8RudScBMFFnFOMnO0JQNiNRleekGEG+TbH3L0y9ki8io1FelftHHgiuJPrB7hFNsluyss/mZkEcQY8knKXDel7QSV3/Awi4q5YRY3Zht0GXWFTHtvL8JqWKEGggIcq+iLRq2beESaIOsIoM+kNWN710ZlfUvbc1UQjBeF7BSgYwK7RPKG8aCe5fTY+I=","attributes":{"enabled":true,"nbf":1567638614,"exp":1630797614,"created":1567639214,"updated":1567639214,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","sans":{},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":2},"action":{"action_type":"EmailContacts"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1567639199,"updated":1567639199}},"pending":{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/pending"}}'}
    headers: {cache-control: no-cache, content-length: '2348', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:20:26 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/certcfa1497, api-version=7.0, '']
- request:
    body: '{"value": ""}'
    headers:
      Accept: [application/json]
      Content-Length: ['42665']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b1 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault1051159997cfa1497.vault.azure.net/certificates/restore?api-version=7.0
  response:
    body: {string: '{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/ed4a81ce38bd4aff9a320a54999365bb","kid":"https://vault1051159997cfa1497.vault.azure.net/keys/certcfa1497/ed4a81ce38bd4aff9a320a54999365bb","sid":"https://vault1051159997cfa1497.vault.azure.net/secrets/certcfa1497/ed4a81ce38bd4aff9a320a54999365bb","x5t":"EGCdbDY5NxW2aWAyaffevJ0T5WI","cer":"MIIDOjCCAiKgAwIBAgIQLMT9FrFxSXCIGo9LpD0VzDANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkwOTA0MjMxMDE0WhcNMjEwOTA0MjMyMDE0WjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoPWxwhWt2Z+OUBadxLiLICOugDy/n7ZBdoZbknsFYr8UlDWBZvjjroe00TeuFeRWDQvEqsMY37pVJVN76oA+/VFPZfT749wuxMRjkNgf9uzdtq/vZ+1fqHlzpMD42sE7UjfgHnseSdOY0u0pfUhHpMC0WcZ44HuHDxfQbwInIUJXS9dQ9w40CRYy1SE/Z4joqnANOmR9854Gc+4JwZPoQeD2CO+aV0XHGRVup2HA5tHTWj4GLZqvjYwU3/fkFAlClc8CUs2P7D4nL/4484Lcx38FIy535t8OnSTd1ZbUp6AarheHbGuqhajUvsSfhil/0RV0hbMpWr/Mo1HFDkrKlAgMBAAGjfDB6MA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBQlfgxfPPlqTxG+aZxCq6ndMe8SrzAdBgNVHQ4EFgQUJX4MXzz5ak8RvmmcQqup3THvEq8wDQYJKoZIhvcNAQELBQADggEBAChWFn8tJXpHADvvjrUEPLKFrhLe5HRn+4xOKeXvXR0FGNhRnaZ+kWc/kEpRUiUA8wTHsdJAi6zkAcg3iyrqA105PQ0nHxEMqQo6Kw3RUO3HBSrV5JKOmWCwJCGnAmBUlL3HdKabYfr1bWoTaeShyYR4+3bJ8RudScBMFFnFOMnO0JQNiNRleekGEG+TbH3L0y9ki8io1FelftHHgiuJPrB7hFNsluyss/mZkEcQY8knKXDel7QSV3/Awi4q5YRY3Zht0GXWFTHtvL8JqWKEGggIcq+iLRq2beESaIOsIoM+kNWN710ZlfUvbc1UQjBeF7BSgYwK7RPKG8aCe5fTY+I=","attributes":{"enabled":true,"nbf":1567638614,"exp":1630797614,"created":1567639214,"updated":1567639214,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault1051159997cfa1497.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":2},"action":{"action_type":"EmailContacts"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1567639199,"updated":1567639199}}}'}
    headers: {cache-control: no-cache, content-length: '2239', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Sep 2019 23:20:26 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.876, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vault1051159997cfa1497.vault.azure.net,
        /certificates/restore, api-version=7.0, '']
version: 1
