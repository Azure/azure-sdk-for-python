# Stubs for azure.keyvault.keys.crypto._internal.jose (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ._internal import _b64_to_str, _str_to_b64url
from .key import Key
from .symmetric_key import SymmetricKey
from typing import Any, Optional

def protect(plaintext: Any, kek: Optional[Any] = ..., alg: Optional[Any] = ..., cek: Optional[Any] = ..., enc: Optional[Any] = ...) -> None: ...

class JoseObject:
    __dict__: Any = ...
    def deserialize(self, s: Any): ...
    def deserialize_b64(self, s: Any): ...
    def serialize(self): ...
    def serialize_b64url(self): ...

class JoseHeader(JoseObject):
    def to_compact_header(self): ...

class JweHeader(JoseHeader):
    alg: Any = ...
    kid: Any = ...
    enc: Any = ...
    def __init__(self, alg: Optional[Any] = ..., kid: Optional[Any] = ..., enc: Optional[Any] = ...) -> None: ...
    @staticmethod
    def from_compact_header(compact: Any): ...

class JweObject(JoseObject):
    unprotected: Any = ...
    protected: Any = ...
    encrypted_key: Any = ...
    iv: Any = ...
    ciphertext: Any = ...
    tag: Any = ...
    def __init__(self) -> None: ...
    def to_flattened_jwe(self): ...

class JwsHeader(JoseHeader):
    alg: Any = ...
    kid: Any = ...
    at: Any = ...
    ts: Any = ...
    p: Any = ...
    typ: Any = ...
    def __init__(self) -> None: ...
    @staticmethod
    def from_compact_header(compact: Any): ...

class JwsObject(JoseObject):
    protected: Any = ...
    payload: Any = ...
    signature: Any = ...
    def __init__(self) -> None: ...
    def to_flattened_jws(self): ...
