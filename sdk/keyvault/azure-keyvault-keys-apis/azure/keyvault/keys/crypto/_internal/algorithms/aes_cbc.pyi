# Stubs for azure.keyvault.keys.crypto._internal.algorithms.aes_cbc (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import abc
from ..algorithm import SymmetricEncryptionAlgorithm
from ..transform import BlockCryptoTransform
from abc import abstractmethod
from typing import Any

class _AesCbcCryptoTransform(BlockCryptoTransform, metaclass=abc.ABCMeta):
    def __init__(self, key: Any, iv: Any) -> None: ...
    def transform(self, data: Any): ...
    @abstractmethod
    def block_size(self) -> Any: ...

class _AesCbcDecryptor(_AesCbcCryptoTransform):
    def __init__(self, key: Any, iv: Any) -> None: ...
    def update(self, data: Any): ...
    def finalize(self, data: Any): ...
    @property
    def block_size(self) -> None: ...

class _AesCbcEncryptor(_AesCbcCryptoTransform):
    def __init__(self, key: Any, iv: Any) -> None: ...
    def update(self, data: Any): ...
    def finalize(self, data: Any): ...
    @property
    def block_size(self) -> None: ...

class _AesCbc(SymmetricEncryptionAlgorithm):
    def block_size(self): ...
    def block_size_in_bytes(self): ...
    def key_size(self): ...
    def key_size_in_bytes(self): ...
    def create_encryptor(self, key: Any, iv: Any): ...
    def create_decryptor(self, key: Any, iv: Any): ...

class Aes128Cbc(_AesCbc): ...
class Aes192Cbc(_AesCbc): ...
class Aes256Cbc(_AesCbc): ...
