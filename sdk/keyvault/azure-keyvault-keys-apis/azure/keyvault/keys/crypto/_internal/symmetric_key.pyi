# Stubs for azure.keyvault.keys.crypto._internal.symmetric_key (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .algorithms.aes_cbc import Aes128Cbc, Aes192Cbc, Aes256Cbc
from .algorithms.aes_cbc_hmac import Aes128CbcHmacSha256, Aes192CbcHmacSha384, Aes256CbcHmacSha512
from .algorithms.aes_kw import AesKw128, AesKw192, AesKw256
from .key import Key
from typing import Any, Optional

key_size_128: Any
key_size_192: Any
key_size_256: Any
key_size_384: Any
key_size_512: Any

class SymmetricKey(Key):
    def __init__(self, kid: Optional[Any] = ..., key_bytes: Optional[Any] = ..., key_size: Optional[Any] = ...) -> None: ...
    @property
    def kid(self): ...
    @property
    def default_encryption_algorithm(self): ...
    @property
    def default_key_wrap_algorithm(self): ...
    @property
    def supported_encryption_algorithms(self): ...
    @property
    def supported_key_wrap_algorithms(self): ...
    def encrypt(self, plain_text: Any, iv: Any, **kwargs: Any): ...
    def decrypt(self, cipher_text: Any, iv: Any, **kwargs: Any): ...
    def wrap_key(self, key: Any, **kwargs: Any): ...
    def unwrap_key(self, encrypted_key: Any, **kwargs: Any): ...
    def sign(self, digest: Any, **kwargs: Any) -> None: ...
    def verify(self, digest: Any, signature: Any, **kwargs: Any) -> None: ...
