# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class PeeringLocation(Resource):
    """Peering location is where connectivity could be established to the
    Microsoft Cloud Edge.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar name: The name of the resource.
    :vartype name: str
    :ivar id: The ID of the resource.
    :vartype id: str
    :ivar type: The type of the resource.
    :vartype type: str
    :param kind: The kind of peering that the peering location supports.
     Possible values include: 'Direct', 'Exchange'
    :type kind: str or ~azure.mgmt.peering.models.Kind
    :param direct: The properties that define a direct peering location.
    :type direct: ~azure.mgmt.peering.models.PeeringLocationPropertiesDirect
    :param exchange: The properties that define an exchange peering location.
    :type exchange:
     ~azure.mgmt.peering.models.PeeringLocationPropertiesExchange
    :param peering_location: The name of the peering location.
    :type peering_location: str
    :param country: The country in which the peering location exists.
    :type country: str
    :param azure_region: The Azure region associated with the peering
     location.
    :type azure_region: str
    """

    _validation = {
        'name': {'readonly': True},
        'id': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
        'direct': {'key': 'properties.direct', 'type': 'PeeringLocationPropertiesDirect'},
        'exchange': {'key': 'properties.exchange', 'type': 'PeeringLocationPropertiesExchange'},
        'peering_location': {'key': 'properties.peeringLocation', 'type': 'str'},
        'country': {'key': 'properties.country', 'type': 'str'},
        'azure_region': {'key': 'properties.azureRegion', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(PeeringLocation, self).__init__(**kwargs)
        self.kind = kwargs.get('kind', None)
        self.direct = kwargs.get('direct', None)
        self.exchange = kwargs.get('exchange', None)
        self.peering_location = kwargs.get('peering_location', None)
        self.country = kwargs.get('country', None)
        self.azure_region = kwargs.get('azure_region', None)
