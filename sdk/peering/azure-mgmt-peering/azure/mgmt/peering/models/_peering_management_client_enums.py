# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from enum import Enum


class Name(str, Enum):

    basic_exchange_free = "Basic_Exchange_Free"
    basic_direct_free = "Basic_Direct_Free"
    premium_direct_free = "Premium_Direct_Free"
    premium_exchange_metered = "Premium_Exchange_Metered"
    premium_direct_metered = "Premium_Direct_Metered"
    premium_direct_unlimited = "Premium_Direct_Unlimited"


class Tier(str, Enum):

    basic = "Basic"
    premium = "Premium"


class Family(str, Enum):

    direct = "Direct"
    exchange = "Exchange"


class Size(str, Enum):

    free = "Free"
    metered = "Metered"
    unlimited = "Unlimited"


class Kind(str, Enum):

    direct = "Direct"
    exchange = "Exchange"


class SessionAddressProvider(str, Enum):

    microsoft = "Microsoft"
    peer = "Peer"


class ConnectionState(str, Enum):

    none = "None"
    pending_approval = "PendingApproval"
    approved = "Approved"
    provisioning_started = "ProvisioningStarted"
    provisioning_failed = "ProvisioningFailed"
    provisioning_completed = "ProvisioningCompleted"
    validating = "Validating"
    active = "Active"


class SessionStateV4(str, Enum):

    none = "None"
    idle = "Idle"
    connect = "Connect"
    active = "Active"
    open_sent = "OpenSent"
    open_confirm = "OpenConfirm"
    open_received = "OpenReceived"
    established = "Established"
    pending_add = "PendingAdd"
    pending_update = "PendingUpdate"
    pending_remove = "PendingRemove"


class SessionStateV6(str, Enum):

    none = "None"
    idle = "Idle"
    connect = "Connect"
    active = "Active"
    open_sent = "OpenSent"
    open_confirm = "OpenConfirm"
    open_received = "OpenReceived"
    established = "Established"
    pending_add = "PendingAdd"
    pending_update = "PendingUpdate"
    pending_remove = "PendingRemove"


class DirectPeeringType(str, Enum):

    edge = "Edge"
    transit = "Transit"
    cdn = "Cdn"
    internal = "Internal"


class ProvisioningState(str, Enum):

    succeeded = "Succeeded"
    updating = "Updating"
    deleting = "Deleting"
    failed = "Failed"


class ValidationState(str, Enum):

    none = "None"
    pending = "Pending"
    approved = "Approved"
    failed = "Failed"


class PrefixValidationState(str, Enum):

    none = "None"
    invalid = "Invalid"
    verified = "Verified"
    failed = "Failed"
    pending = "Pending"
    warning = "Warning"
    unknown = "Unknown"


class LearnedType(str, Enum):

    none = "None"
    via_service_provider = "ViaServiceProvider"
    via_session = "ViaSession"
