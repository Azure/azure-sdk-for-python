# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from azure.mgmt.sql import SqlManagementClient

from devtools_testutils import AzureMgmtRecordedTestCase, RandomNameResourceGroupPreparer, recorded_by_proxy

AZURE_LOCATION = "eastus"


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestSqlManagementDataMaskingRulesOperations(AzureMgmtRecordedTestCase):
    def setup_method(self, method):
        self.client = self.create_mgmt_client(SqlManagementClient)

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_create_or_update(self, resource_group):
        response = self.client.data_masking_rules.create_or_update(
            resource_group_name=resource_group.name,
            server_name="str",
            database_name="str",
            data_masking_rule_name="str",
            parameters={
                "aliasName": "str",
                "columnName": "str",
                "id": "str",
                "kind": "str",
                "location": "str",
                "maskingFunction": "str",
                "name": "str",
                "numberFrom": "str",
                "numberTo": "str",
                "prefixSize": "str",
                "replacementString": "str",
                "ruleState": "str",
                "schemaName": "str",
                "suffixSize": "str",
                "tableName": "str",
                "type": "str",
            },
            api_version="2014-04-01",
            data_masking_policy_name="Default",
        )

        # please add some check logic here by yourself
        # ...

    @RandomNameResourceGroupPreparer(location=AZURE_LOCATION)
    @recorded_by_proxy
    def test_list_by_database(self, resource_group):
        response = self.client.data_masking_rules.list_by_database(
            resource_group_name=resource_group.name,
            server_name="str",
            database_name="str",
            api_version="2014-04-01",
            data_masking_policy_name="Default",
        )
        result = [r for r in response]
        # please add some check logic here by yourself
        # ...
