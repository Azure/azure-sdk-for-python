# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs."""

    INTERNAL = "Internal"


class AllowCrashDumpCollection(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Allow crash dumps values."""

    ENABLED = "Enabled"
    DISABLED = "Disabled"


class CapabilityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Capability image type."""

    APPLICATION_DEVELOPMENT = "ApplicationDevelopment"
    FIELD_SERVICING = "FieldServicing"


class CertificateStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Certificate status values."""

    ACTIVE = "Active"
    INACTIVE = "Inactive"
    EXPIRED = "Expired"
    REVOKED = "Revoked"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity that created the resource."""

    USER = "User"
    APPLICATION = "Application"
    MANAGED_IDENTITY = "ManagedIdentity"
    KEY = "Key"


class ImageType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Image type values."""

    INVALID_IMAGE_TYPE = "InvalidImageType"
    ONE_BL = "OneBl"
    PLUTON_RUNTIME = "PlutonRuntime"
    WIFI_FIRMWARE = "WifiFirmware"
    SECURITY_MONITOR = "SecurityMonitor"
    NORMAL_WORLD_LOADER = "NormalWorldLoader"
    NORMAL_WORLD_DTB = "NormalWorldDtb"
    NORMAL_WORLD_KERNEL = "NormalWorldKernel"
    ROOT_FS = "RootFs"
    SERVICES = "Services"
    APPLICATIONS = "Applications"
    FW_CONFIG = "FwConfig"
    BOOT_MANIFEST = "BootManifest"
    NWFS = "Nwfs"
    TRUSTED_KEYSTORE = "TrustedKeystore"
    POLICY = "Policy"
    CUSTOMER_BOARD_CONFIG = "CustomerBoardConfig"
    UPDATE_CERT_STORE = "UpdateCertStore"
    BASE_SYSTEM_UPDATE_MANIFEST = "BaseSystemUpdateManifest"
    FIRMWARE_UPDATE_MANIFEST = "FirmwareUpdateManifest"
    CUSTOMER_UPDATE_MANIFEST = "CustomerUpdateManifest"
    RECOVERY_MANIFEST = "RecoveryManifest"
    MANIFEST_SET = "ManifestSet"
    OTHER = "Other"


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    SYSTEM = "system"
    USER_SYSTEM = "user,system"


class OSFeedType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """OS feed type values."""

    RETAIL = "Retail"
    RETAIL_EVAL = "RetailEval"


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """ProvisioningState."""

    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    CANCELED = "Canceled"
    PROVISIONING = "Provisioning"
    UPDATING = "Updating"
    DELETING = "Deleting"
    ACCEPTED = "Accepted"


class RegionalDataBoundary(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Regional data boundary values."""

    NONE = "None"
    EU = "EU"


class UpdatePolicy(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Update policy values."""

    UPDATE_ALL = "UpdateAll"
    NO3_RD_PARTY_APP_UPDATES = "No3rdPartyAppUpdates"
