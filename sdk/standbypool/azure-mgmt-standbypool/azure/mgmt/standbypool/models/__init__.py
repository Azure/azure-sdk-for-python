# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models import (  # type: ignore
    ContainerGroupInstanceCountSummary,
    ContainerGroupProfile,
    ContainerGroupProperties,
    ErrorAdditionalInfo,
    ErrorDetail,
    ErrorResponse,
    Operation,
    OperationDisplay,
    PoolContainerGroupStateCount,
    PoolStatus,
    PoolVirtualMachineStateCount,
    ProxyResource,
    Resource,
    StandbyContainerGroupPoolElasticityProfile,
    StandbyContainerGroupPoolForecastValues,
    StandbyContainerGroupPoolPrediction,
    StandbyContainerGroupPoolResource,
    StandbyContainerGroupPoolResourceProperties,
    StandbyContainerGroupPoolResourceUpdate,
    StandbyContainerGroupPoolResourceUpdateProperties,
    StandbyContainerGroupPoolRuntimeViewResource,
    StandbyContainerGroupPoolRuntimeViewResourceProperties,
    StandbyVirtualMachinePoolElasticityProfile,
    StandbyVirtualMachinePoolForecastValues,
    StandbyVirtualMachinePoolPrediction,
    StandbyVirtualMachinePoolResource,
    StandbyVirtualMachinePoolResourceProperties,
    StandbyVirtualMachinePoolResourceUpdate,
    StandbyVirtualMachinePoolResourceUpdateProperties,
    StandbyVirtualMachinePoolRuntimeViewResource,
    StandbyVirtualMachinePoolRuntimeViewResourceProperties,
    StandbyVirtualMachineResource,
    StandbyVirtualMachineResourceProperties,
    Subnet,
    SystemData,
    TrackedResource,
    VirtualMachineInstanceCountSummary,
)

from ._enums import (  # type: ignore
    ActionType,
    CreatedByType,
    HealthStateCode,
    Origin,
    PoolContainerGroupState,
    PoolVirtualMachineState,
    ProvisioningState,
    RefillPolicy,
    VirtualMachineState,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ContainerGroupInstanceCountSummary",
    "ContainerGroupProfile",
    "ContainerGroupProperties",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "Operation",
    "OperationDisplay",
    "PoolContainerGroupStateCount",
    "PoolStatus",
    "PoolVirtualMachineStateCount",
    "ProxyResource",
    "Resource",
    "StandbyContainerGroupPoolElasticityProfile",
    "StandbyContainerGroupPoolForecastValues",
    "StandbyContainerGroupPoolPrediction",
    "StandbyContainerGroupPoolResource",
    "StandbyContainerGroupPoolResourceProperties",
    "StandbyContainerGroupPoolResourceUpdate",
    "StandbyContainerGroupPoolResourceUpdateProperties",
    "StandbyContainerGroupPoolRuntimeViewResource",
    "StandbyContainerGroupPoolRuntimeViewResourceProperties",
    "StandbyVirtualMachinePoolElasticityProfile",
    "StandbyVirtualMachinePoolForecastValues",
    "StandbyVirtualMachinePoolPrediction",
    "StandbyVirtualMachinePoolResource",
    "StandbyVirtualMachinePoolResourceProperties",
    "StandbyVirtualMachinePoolResourceUpdate",
    "StandbyVirtualMachinePoolResourceUpdateProperties",
    "StandbyVirtualMachinePoolRuntimeViewResource",
    "StandbyVirtualMachinePoolRuntimeViewResourceProperties",
    "StandbyVirtualMachineResource",
    "StandbyVirtualMachineResourceProperties",
    "Subnet",
    "SystemData",
    "TrackedResource",
    "VirtualMachineInstanceCountSummary",
    "ActionType",
    "CreatedByType",
    "HealthStateCode",
    "Origin",
    "PoolContainerGroupState",
    "PoolVirtualMachineState",
    "ProvisioningState",
    "RefillPolicy",
    "VirtualMachineState",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
