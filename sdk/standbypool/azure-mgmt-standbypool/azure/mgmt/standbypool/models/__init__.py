# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models import ContainerGroupInstanceCountSummary
from ._models import ContainerGroupProfile
from ._models import ContainerGroupProperties
from ._models import ErrorAdditionalInfo
from ._models import ErrorDetail
from ._models import ErrorResponse
from ._models import Operation
from ._models import OperationDisplay
from ._models import PoolResourceStateCount
from ._models import ProxyResource
from ._models import Resource
from ._models import StandbyContainerGroupPoolElasticityProfile
from ._models import StandbyContainerGroupPoolResource
from ._models import StandbyContainerGroupPoolResourceProperties
from ._models import StandbyContainerGroupPoolResourceUpdate
from ._models import StandbyContainerGroupPoolResourceUpdateProperties
from ._models import StandbyContainerGroupPoolRuntimeViewResource
from ._models import StandbyContainerGroupPoolRuntimeViewResourceProperties
from ._models import StandbyVirtualMachinePoolElasticityProfile
from ._models import StandbyVirtualMachinePoolResource
from ._models import StandbyVirtualMachinePoolResourceProperties
from ._models import StandbyVirtualMachinePoolResourceUpdate
from ._models import StandbyVirtualMachinePoolResourceUpdateProperties
from ._models import StandbyVirtualMachinePoolRuntimeViewResource
from ._models import StandbyVirtualMachinePoolRuntimeViewResourceProperties
from ._models import StandbyVirtualMachineResource
from ._models import StandbyVirtualMachineResourceProperties
from ._models import Subnet
from ._models import SystemData
from ._models import TrackedResource
from ._models import VirtualMachineInstanceCountSummary

from ._enums import ActionType
from ._enums import CreatedByType
from ._enums import Origin
from ._enums import ProvisioningState
from ._enums import RefillPolicy
from ._enums import VirtualMachineState
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "ContainerGroupInstanceCountSummary",
    "ContainerGroupProfile",
    "ContainerGroupProperties",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "Operation",
    "OperationDisplay",
    "PoolResourceStateCount",
    "ProxyResource",
    "Resource",
    "StandbyContainerGroupPoolElasticityProfile",
    "StandbyContainerGroupPoolResource",
    "StandbyContainerGroupPoolResourceProperties",
    "StandbyContainerGroupPoolResourceUpdate",
    "StandbyContainerGroupPoolResourceUpdateProperties",
    "StandbyContainerGroupPoolRuntimeViewResource",
    "StandbyContainerGroupPoolRuntimeViewResourceProperties",
    "StandbyVirtualMachinePoolElasticityProfile",
    "StandbyVirtualMachinePoolResource",
    "StandbyVirtualMachinePoolResourceProperties",
    "StandbyVirtualMachinePoolResourceUpdate",
    "StandbyVirtualMachinePoolResourceUpdateProperties",
    "StandbyVirtualMachinePoolRuntimeViewResource",
    "StandbyVirtualMachinePoolRuntimeViewResourceProperties",
    "StandbyVirtualMachineResource",
    "StandbyVirtualMachineResourceProperties",
    "Subnet",
    "SystemData",
    "TrackedResource",
    "VirtualMachineInstanceCountSummary",
    "ActionType",
    "CreatedByType",
    "Origin",
    "ProvisioningState",
    "RefillPolicy",
    "VirtualMachineState",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
