# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models import BgpPeer
from ._models import BgpPeerProperties
from ._models import BlobStorageClassTypeProperties
from ._models import ErrorAdditionalInfo
from ._models import ErrorDetail
from ._models import ErrorResponse
from ._models import ExtensionResource
from ._models import LoadBalancer
from ._models import LoadBalancerProperties
from ._models import NativeStorageClassTypeProperties
from ._models import NfsStorageClassTypeProperties
from ._models import Operation
from ._models import OperationDisplay
from ._models import Resource
from ._models import RwxStorageClassTypeProperties
from ._models import ServiceProperties
from ._models import ServiceResource
from ._models import SmbStorageClassTypeProperties
from ._models import StorageClassProperties
from ._models import StorageClassPropertiesUpdate
from ._models import StorageClassResource
from ._models import StorageClassResourceUpdate
from ._models import StorageClassTypeProperties
from ._models import StorageClassTypePropertiesUpdate
from ._models import SystemData

from ._enums import AccessMode
from ._enums import ActionType
from ._enums import AdvertiseMode
from ._enums import CreatedByType
from ._enums import DataResilienceTier
from ._enums import FailoverTier
from ._enums import NfsDirectoryActionOnVolumeDeletion
from ._enums import Origin
from ._enums import PerformanceTier
from ._enums import ProvisioningState
from ._enums import SCType
from ._enums import VolumeBindingMode
from ._enums import VolumeExpansion
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "BgpPeer",
    "BgpPeerProperties",
    "BlobStorageClassTypeProperties",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "ExtensionResource",
    "LoadBalancer",
    "LoadBalancerProperties",
    "NativeStorageClassTypeProperties",
    "NfsStorageClassTypeProperties",
    "Operation",
    "OperationDisplay",
    "Resource",
    "RwxStorageClassTypeProperties",
    "ServiceProperties",
    "ServiceResource",
    "SmbStorageClassTypeProperties",
    "StorageClassProperties",
    "StorageClassPropertiesUpdate",
    "StorageClassResource",
    "StorageClassResourceUpdate",
    "StorageClassTypeProperties",
    "StorageClassTypePropertiesUpdate",
    "SystemData",
    "AccessMode",
    "ActionType",
    "AdvertiseMode",
    "CreatedByType",
    "DataResilienceTier",
    "FailoverTier",
    "NfsDirectoryActionOnVolumeDeletion",
    "Origin",
    "PerformanceTier",
    "ProvisioningState",
    "SCType",
    "VolumeBindingMode",
    "VolumeExpansion",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
