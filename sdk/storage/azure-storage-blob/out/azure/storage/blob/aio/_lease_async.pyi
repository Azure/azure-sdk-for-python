# Stubs for azure.storage.blob.aio._lease_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .._generated.models import LeaseAccessConditions, StorageErrorException
from .._generated.operations import BlobOperations, ContainerOperations
from .._lease import BlobLeaseClient as LeaseClientBase
from .._serialize import get_modify_conditions
from .._shared.response_handlers import process_storage_error, return_response_headers
from typing import Any, Optional, TypeVar

BlobClient = TypeVar('BlobClient')
ContainerClient = TypeVar('ContainerClient')

class BlobLeaseClient(LeaseClientBase):
    def __enter__(self) -> None: ...
    def __exit__(self, *args: Any) -> None: ...
    async def __aenter__(self): ...
    async def __aexit__(self, *args: Any) -> None: ...
    id: Any = ...
    last_modified: Any = ...
    etag: Any = ...
    async def acquire(self, lease_duration: int=..., **kwargs: Any) -> None: ...
    async def renew(self, **kwargs: Any) -> None: ...
    async def release(self, **kwargs: Any) -> None: ...
    async def change(self, proposed_lease_id: str, **kwargs: Any) -> None: ...
    async def break_lease(self, lease_break_period: Optional[int]=..., **kwargs: Any) -> int: ...
