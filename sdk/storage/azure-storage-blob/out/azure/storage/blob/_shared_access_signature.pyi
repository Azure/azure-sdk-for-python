# Stubs for azure.storage.blob._shared_access_signature (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from azure.storage.blob import AccountSasPermissions, BlobSasPermissions, ContainerSasPermissions, ResourceTypes, UserDelegationKey
from azure.storage.blob._shared.shared_access_signature import SharedAccessSignature, _SharedAccessHelper
from datetime import datetime
from typing import Any, Optional, Union

class BlobQueryStringConstants:
    SIGNED_TIMESTAMP: str = ...

class BlobSharedAccessSignature(SharedAccessSignature):
    user_delegation_key: Any = ...
    def __init__(self, account_name: Any, account_key: Optional[Any] = ..., user_delegation_key: Optional[Any] = ...) -> None: ...
    def generate_blob(self, container_name: Any, blob_name: Any, snapshot: Optional[Any] = ..., permission: Optional[Any] = ..., expiry: Optional[Any] = ..., start: Optional[Any] = ..., policy_id: Optional[Any] = ..., ip: Optional[Any] = ..., protocol: Optional[Any] = ..., cache_control: Optional[Any] = ..., content_disposition: Optional[Any] = ..., content_encoding: Optional[Any] = ..., content_language: Optional[Any] = ..., content_type: Optional[Any] = ...): ...
    def generate_container(self, container_name: Any, permission: Optional[Any] = ..., expiry: Optional[Any] = ..., start: Optional[Any] = ..., policy_id: Optional[Any] = ..., ip: Optional[Any] = ..., protocol: Optional[Any] = ..., cache_control: Optional[Any] = ..., content_disposition: Optional[Any] = ..., content_encoding: Optional[Any] = ..., content_language: Optional[Any] = ..., content_type: Optional[Any] = ...): ...

class _BlobSharedAccessHelper(_SharedAccessHelper):
    def add_timestamp(self, timestamp: Any) -> None: ...
    def get_value_to_append(self, query: Any): ...
    def add_resource_signature(self, account_name: Any, account_key: Any, path: Any, user_delegation_key: Optional[Any] = ...) -> None: ...
    def get_token(self): ...

def generate_account_sas(account_name: str, account_key: str, resource_types: Union[ResourceTypes, str], permission: Union[AccountSasPermissions, str], expiry: Optional[Union[datetime, str]], start: Optional[Union[datetime, str]]=..., ip: Optional[str]=..., **kwargs: Any) -> str: ...
def generate_container_sas(account_name: str, container_name: str, account_key: Optional[str]=..., user_delegation_key: Optional[UserDelegationKey]=..., permission: Optional[Union[ContainerSasPermissions, str]]=..., expiry: Optional[Union[datetime, str]]=..., start: Optional[Union[datetime, str]]=..., policy_id: Optional[str]=..., ip: Optional[str]=..., **kwargs: Any) -> Any: ...
def generate_blob_sas(account_name: str, container_name: str, blob_name: str, snapshot: Optional[str]=..., account_key: Optional[str]=..., user_delegation_key: Optional[UserDelegationKey]=..., permission: Optional[Union[BlobSasPermissions, str]]=..., expiry: Optional[Union[datetime, str]]=..., start: Optional[Union[datetime, str]]=..., policy_id: Optional[str]=..., ip: Optional[str]=..., **kwargs: Any) -> Any: ...
