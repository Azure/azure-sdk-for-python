# Stubs for azure.storage.blob._generated.operations._blob_operations (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class BlobOperations:
    models: Any = ...
    x_ms_requires_sync: str = ...
    x_ms_copy_action: str = ...
    restype: str = ...
    def __init__(self, client: Any, config: Any, serializer: Any, deserializer: Any) -> None: ...
    def download(self, snapshot: Optional[Any] = ..., timeout: Optional[Any] = ..., range: Optional[Any] = ..., range_get_content_md5: Optional[Any] = ..., range_get_content_crc64: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cpk_info: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def get_properties(self, snapshot: Optional[Any] = ..., timeout: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cpk_info: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def delete(self, snapshot: Optional[Any] = ..., timeout: Optional[Any] = ..., delete_snapshots: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def set_access_control(self, timeout: Optional[Any] = ..., owner: Optional[Any] = ..., group: Optional[Any] = ..., posix_permissions: Optional[Any] = ..., posix_acl: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def get_access_control(self, timeout: Optional[Any] = ..., upn: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def rename(self, rename_source: Any, timeout: Optional[Any] = ..., path_rename_mode: Optional[Any] = ..., directory_properties: Optional[Any] = ..., posix_permissions: Optional[Any] = ..., posix_umask: Optional[Any] = ..., source_lease_id: Optional[Any] = ..., request_id: Optional[Any] = ..., directory_http_headers: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., source_modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def undelete(self, timeout: Optional[Any] = ..., request_id: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def set_http_headers(self, timeout: Optional[Any] = ..., request_id: Optional[Any] = ..., blob_http_headers: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def set_metadata(self, timeout: Optional[Any] = ..., metadata: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cpk_info: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def acquire_lease(self, timeout: Optional[Any] = ..., duration: Optional[Any] = ..., proposed_lease_id: Optional[Any] = ..., request_id: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def release_lease(self, lease_id: Any, timeout: Optional[Any] = ..., request_id: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def renew_lease(self, lease_id: Any, timeout: Optional[Any] = ..., request_id: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def change_lease(self, lease_id: Any, proposed_lease_id: Any, timeout: Optional[Any] = ..., request_id: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def break_lease(self, timeout: Optional[Any] = ..., break_period: Optional[Any] = ..., request_id: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def create_snapshot(self, timeout: Optional[Any] = ..., metadata: Optional[Any] = ..., request_id: Optional[Any] = ..., cpk_info: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def start_copy_from_url(self, copy_source: Any, timeout: Optional[Any] = ..., metadata: Optional[Any] = ..., tier: Optional[Any] = ..., rehydrate_priority: Optional[Any] = ..., request_id: Optional[Any] = ..., source_modified_access_conditions: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def copy_from_url(self, copy_source: Any, timeout: Optional[Any] = ..., metadata: Optional[Any] = ..., tier: Optional[Any] = ..., request_id: Optional[Any] = ..., source_modified_access_conditions: Optional[Any] = ..., modified_access_conditions: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def abort_copy_from_url(self, copy_id: Any, timeout: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def set_tier(self, tier: Any, timeout: Optional[Any] = ..., rehydrate_priority: Optional[Any] = ..., request_id: Optional[Any] = ..., lease_access_conditions: Optional[Any] = ..., cls: Optional[Any] = ..., **kwargs: Any): ...
    def get_account_info(self, cls: Optional[Any] = ..., **kwargs: Any): ...
