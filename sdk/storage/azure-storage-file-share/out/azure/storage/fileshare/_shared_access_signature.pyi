# Stubs for azure.storage.fileshare._shared_access_signature (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ._shared import sign_string
from ._shared.constants import X_MS_VERSION
from ._shared.models import Services
from ._shared.parser import _str
from ._shared.shared_access_signature import QueryStringConstants, SharedAccessSignature, _SharedAccessHelper
from azure.storage.fileshare import AccountSasPermissions, FileSasPermissions, ResourceTypes, ShareSasPermissions
from datetime import datetime
from typing import Any, List, Optional, Union

class FileSharedAccessSignature(SharedAccessSignature):
    def __init__(self, account_name: Any, account_key: Any) -> None: ...
    def generate_file(self, share_name: Any, directory_name: Optional[Any] = ..., file_name: Optional[Any] = ..., permission: Optional[Any] = ..., expiry: Optional[Any] = ..., start: Optional[Any] = ..., policy_id: Optional[Any] = ..., ip: Optional[Any] = ..., protocol: Optional[Any] = ..., cache_control: Optional[Any] = ..., content_disposition: Optional[Any] = ..., content_encoding: Optional[Any] = ..., content_language: Optional[Any] = ..., content_type: Optional[Any] = ...): ...
    def generate_share(self, share_name: Any, permission: Optional[Any] = ..., expiry: Optional[Any] = ..., start: Optional[Any] = ..., policy_id: Optional[Any] = ..., ip: Optional[Any] = ..., protocol: Optional[Any] = ..., cache_control: Optional[Any] = ..., content_disposition: Optional[Any] = ..., content_encoding: Optional[Any] = ..., content_language: Optional[Any] = ..., content_type: Optional[Any] = ...): ...

class _FileSharedAccessHelper(_SharedAccessHelper):
    def add_resource_signature(self, account_name: Any, account_key: Any, path: Any): ...

def generate_account_sas(account_name: str, account_key: str, resource_types: Union[ResourceTypes, str], permission: Union[AccountSasPermissions, str], expiry: Optional[Union[datetime, str]], start: Optional[Union[datetime, str]]=..., ip: Optional[str]=..., **kwargs: Any) -> str: ...
def generate_share_sas(account_name: str, share_name: str, account_key: str, permission: Optional[Union[ShareSasPermissions, str]]=..., expiry: Optional[Union[datetime, str]]=..., start: Optional[Union[datetime, str]]=..., policy_id: Optional[str]=..., ip: Optional[str]=..., **kwargs: Any) -> str: ...
def generate_file_sas(account_name: str, share_name: str, file_path: List[str], account_key: str, permission: Optional[Union[FileSasPermissions, str]]=..., expiry: Optional[Union[datetime, str]]=..., start: Optional[Union[datetime, str]]=..., policy_id: Optional[str]=..., ip: Optional[str]=..., **kwargs: Any) -> str: ...
