# Stubs for azure.storage.fileshare.aio._share_service_client_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .._generated.aio import AzureFileStorage
from .._generated.models import StorageErrorException, StorageServiceProperties
from .._generated.version import VERSION
from .._models import CorsRule, Metrics, ShareProperties, service_properties_deserialize
from .._share_service_client import ShareServiceClient as ShareServiceClientBase
from .._shared.base_client_async import AsyncStorageAccountHostsMixin, AsyncTransportWrapper
from .._shared.models import AccountSasPermissions, ResourceTypes
from .._shared.policies_async import ExponentialRetry
from .._shared.response_handlers import process_storage_error
from ._models import SharePropertiesPaged
from ._share_client_async import ShareClient
from azure.core.async_paging import AsyncItemPaged
from typing import Any, Dict, List, Optional, Union

class ShareServiceClient(AsyncStorageAccountHostsMixin, ShareServiceClientBase):
    def __init__(self, account_url: str, credential: Optional[Any]=..., **kwargs: Any) -> None: ...
    async def get_service_properties(self, **kwargs: Any) -> Dict[str, Any]: ...
    async def set_service_properties(self, hour_metrics: Optional[Metrics]=..., minute_metrics: Optional[Metrics]=..., cors: Optional[List[CorsRule]]=..., **kwargs: Any) -> None: ...
    def list_shares(self, name_starts_with: Optional[str]=..., include_metadata: Optional[bool]=..., include_snapshots: Optional[bool]=..., **kwargs: Any) -> AsyncItemPaged: ...
    async def create_share(self, share_name: str, **kwargs: Any) -> ShareClient: ...
    async def delete_share(self, share_name: Union[ShareProperties, str], delete_snapshots: Optional[bool]=..., **kwargs: Any) -> None: ...
    def get_share_client(self, share: Union[ShareProperties, str], snapshot: Optional[Union[Dict[str, Any], str]]=...) -> ShareClient: ...
