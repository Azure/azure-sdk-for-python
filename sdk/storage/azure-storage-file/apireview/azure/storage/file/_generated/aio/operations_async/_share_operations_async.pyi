# Stubs for azure.storage.file._generated.aio.operations_async._share_operations_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class ShareOperations:
    models: Any = ...
    restype: str = ...
    def __init__(self, client: Any, config: Any, serializer: Any, deserializer: Any) -> None: ...
    async def create(self, timeout: Optional[Any] = ..., metadata: Optional[Any] = ..., quota: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def get_properties(self, sharesnapshot: Optional[Any] = ..., timeout: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def delete(self, sharesnapshot: Optional[Any] = ..., timeout: Optional[Any] = ..., delete_snapshots: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def create_snapshot(self, timeout: Optional[Any] = ..., metadata: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def create_permission(self, share_permission: Any, timeout: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def get_permission(self, file_permission_key: Optional[Any] = ..., timeout: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def set_quota(self, timeout: Optional[Any] = ..., quota: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def set_metadata(self, timeout: Optional[Any] = ..., metadata: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def get_access_policy(self, timeout: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def set_access_policy(self, share_acl: Optional[Any] = ..., timeout: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
    async def get_statistics(self, timeout: Optional[Any] = ..., *, cls: Optional[Any] = ..., **kwargs: Any): ...
