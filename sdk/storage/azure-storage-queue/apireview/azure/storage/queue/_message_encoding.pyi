# Stubs for azure.storage.queue._message_encoding (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ._shared.encryption import decrypt_queue_message, encrypt_queue_message
from typing import Any

class MessageEncodePolicy:
    require_encryption: bool = ...
    key_encryption_key: Any = ...
    resolver: Any = ...
    def __init__(self) -> None: ...
    def __call__(self, content: Any): ...
    def configure(self, require_encryption: Any, key_encryption_key: Any, resolver: Any) -> None: ...
    def encode(self, content: Any) -> None: ...

class MessageDecodePolicy:
    require_encryption: bool = ...
    key_encryption_key: Any = ...
    resolver: Any = ...
    def __init__(self) -> None: ...
    def __call__(self, response: Any, obj: Any, headers: Any): ...
    def configure(self, require_encryption: Any, key_encryption_key: Any, resolver: Any) -> None: ...
    def decode(self, content: Any, response: Any) -> None: ...

class TextBase64EncodePolicy(MessageEncodePolicy):
    def encode(self, content: Any): ...

class TextBase64DecodePolicy(MessageDecodePolicy):
    def decode(self, content: Any, response: Any): ...

class BinaryBase64EncodePolicy(MessageEncodePolicy):
    def encode(self, content: Any): ...

class BinaryBase64DecodePolicy(MessageDecodePolicy):
    def decode(self, content: Any, response: Any): ...

class TextXMLEncodePolicy(MessageEncodePolicy):
    def encode(self, content: Any): ...

class TextXMLDecodePolicy(MessageDecodePolicy):
    def decode(self, content: Any, response: Any): ...

class NoEncodePolicy(MessageEncodePolicy):
    def encode(self, content: Any): ...

class NoDecodePolicy(MessageDecodePolicy):
    def decode(self, content: Any, response: Any): ...
