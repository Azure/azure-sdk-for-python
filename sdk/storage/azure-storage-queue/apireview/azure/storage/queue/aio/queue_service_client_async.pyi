# Stubs for azure.storage.queue.aio.queue_service_client_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .queue_client_async import QueueClient
from azure.core.async_paging import AsyncItemPaged
from azure.storage.queue._shared.base_client_async import AsyncStorageAccountHostsMixin
from azure.storage.queue.aio.models import QueueProperties
from azure.storage.queue.models import CorsRule, Logging, Metrics
from azure.storage.queue.queue_service_client import QueueServiceClient as QueueServiceClientBase
from typing import Any, Dict, List, Optional, Union

class QueueServiceClient(AsyncStorageAccountHostsMixin, QueueServiceClientBase):
    def __init__(self, account_url: str, credential: Optional[Any]=..., loop: Any=..., **kwargs: Any) -> None: ...
    async def get_service_stats(self, timeout: Optional[int]=..., **kwargs: Optional[Any]) -> Dict[str, Any]: ...
    async def get_service_properties(self, timeout: Optional[int]=..., **kwargs: Optional[Any]) -> Dict[str, Any]: ...
    async def set_service_properties(self, logging: Optional[Logging]=..., hour_metrics: Optional[Metrics]=..., minute_metrics: Optional[Metrics]=..., cors: Optional[List[CorsRule]]=..., timeout: Optional[int]=..., **kwargs: Any) -> None: ...
    def list_queues(self, name_starts_with: Optional[str]=..., include_metadata: Optional[bool]=..., results_per_page: Optional[int]=..., timeout: Optional[int]=..., **kwargs: Any) -> AsyncItemPaged: ...
    async def create_queue(self, name: str, metadata: Optional[Dict[str, str]]=..., timeout: Optional[int]=..., **kwargs: Any) -> QueueClient: ...
    async def delete_queue(self, queue: Union[QueueProperties, str], timeout: Optional[int]=..., **kwargs: Any) -> None: ...
    def get_queue_client(self, queue: Union[QueueProperties, str], **kwargs: Optional[Any]) -> QueueClient: ...
