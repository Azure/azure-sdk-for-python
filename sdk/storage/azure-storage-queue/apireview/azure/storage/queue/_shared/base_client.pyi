# Stubs for azure.storage.queue._shared.base_client (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .authentication import SharedKeyCredentialPolicy
from .constants import DEFAULT_SOCKET_TIMEOUT, SERVICE_HOST_BASE, STORAGE_OAUTH_SCOPE
from .models import LocationMode
from .policies import ExponentialRetry, QueueMessagePolicy, StorageContentValidation, StorageHeadersPolicy, StorageHosts, StorageLoggingPolicy, StorageRequestHook, StorageResponseHook, StorageUserAgentPolicy
from .shared_access_signature import QueryStringConstants
from azure.core import Configuration
from typing import Any, Optional

class StorageAccountHostsMixin:
    scheme: Any = ...
    credential: Any = ...
    require_encryption: Any = ...
    key_encryption_key: Any = ...
    key_resolver_function: Any = ...
    def __init__(self, parsed_url: Any, service: str, credential: Optional[Any]=..., **kwargs: Any) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *args: Any) -> None: ...
    @property
    def url(self): ...
    @property
    def primary_endpoint(self): ...
    @property
    def primary_hostname(self): ...
    @property
    def secondary_endpoint(self): ...
    @property
    def secondary_hostname(self): ...
    @property
    def location_mode(self): ...
    @location_mode.setter
    def location_mode(self, value: Any) -> None: ...

def format_shared_key_credential(account: Any, credential: Any): ...
def parse_connection_str(conn_str: Any, credential: Any, service: Any): ...
def create_configuration(**kwargs: Any) -> Configuration: ...
def parse_query(query_str: Any): ...
def is_credential_sastoken(credential: Any): ...
