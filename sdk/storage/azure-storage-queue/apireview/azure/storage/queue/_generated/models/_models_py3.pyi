# Stubs for azure.storage.queue._generated.models._models_py3 (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from azure.core import HttpResponseError
from msrest.serialization import Model
from typing import Any

class AccessPolicy(Model):
    start: Any = ...
    expiry: Any = ...
    permission: Any = ...
    def __init__(self, start: str, expiry: str, permission: str, **kwargs: Any) -> None: ...

class CorsRule(Model):
    allowed_origins: Any = ...
    allowed_methods: Any = ...
    allowed_headers: Any = ...
    exposed_headers: Any = ...
    max_age_in_seconds: Any = ...
    def __init__(self, allowed_origins: str, allowed_methods: str, allowed_headers: str, exposed_headers: str, max_age_in_seconds: int, **kwargs: Any) -> None: ...

class DequeuedMessageItem(Model):
    message_id: Any = ...
    insertion_time: Any = ...
    expiration_time: Any = ...
    pop_receipt: Any = ...
    time_next_visible: Any = ...
    dequeue_count: Any = ...
    message_text: Any = ...
    def __init__(self, message_id: str, insertion_time: Any, expiration_time: Any, pop_receipt: str, time_next_visible: Any, dequeue_count: int, message_text: str, **kwargs: Any) -> None: ...

class EnqueuedMessage(Model):
    message_id: Any = ...
    insertion_time: Any = ...
    expiration_time: Any = ...
    pop_receipt: Any = ...
    time_next_visible: Any = ...
    def __init__(self, message_id: str, insertion_time: Any, expiration_time: Any, pop_receipt: str, time_next_visible: Any, **kwargs: Any) -> None: ...

class GeoReplication(Model):
    status: Any = ...
    last_sync_time: Any = ...
    def __init__(self, status: Any, last_sync_time: Any, **kwargs: Any) -> None: ...

class ListQueuesSegmentResponse(Model):
    service_endpoint: Any = ...
    prefix: Any = ...
    marker: Any = ...
    max_results: Any = ...
    queue_items: Any = ...
    next_marker: Any = ...
    def __init__(self, service_endpoint: str, prefix: str, max_results: int, next_marker: str, *, marker: str=..., queue_items: Any=..., **kwargs: Any) -> None: ...

class Logging(Model):
    version: Any = ...
    delete: Any = ...
    read: Any = ...
    write: Any = ...
    retention_policy: Any = ...
    def __init__(self, version: str, delete: bool, read: bool, write: bool, retention_policy: Any, **kwargs: Any) -> None: ...

class Metrics(Model):
    version: Any = ...
    enabled: Any = ...
    include_apis: Any = ...
    retention_policy: Any = ...
    def __init__(self, enabled: bool, *, version: str=..., include_apis: bool=..., retention_policy: Any=..., **kwargs: Any) -> None: ...

class PeekedMessageItem(Model):
    message_id: Any = ...
    insertion_time: Any = ...
    expiration_time: Any = ...
    dequeue_count: Any = ...
    message_text: Any = ...
    def __init__(self, message_id: str, insertion_time: Any, expiration_time: Any, dequeue_count: int, message_text: str, **kwargs: Any) -> None: ...

class QueueItem(Model):
    name: Any = ...
    metadata: Any = ...
    def __init__(self, name: str, *, metadata: Any=..., **kwargs: Any) -> None: ...

class QueueMessage(Model):
    message_text: Any = ...
    def __init__(self, message_text: str, **kwargs: Any) -> None: ...

class RetentionPolicy(Model):
    enabled: Any = ...
    days: Any = ...
    def __init__(self, enabled: bool, *, days: int=..., **kwargs: Any) -> None: ...

class SignedIdentifier(Model):
    id: Any = ...
    access_policy: Any = ...
    def __init__(self, id: str, *, access_policy: Any=..., **kwargs: Any) -> None: ...

class StorageError(Model):
    message: Any = ...
    def __init__(self, *, message: str=..., **kwargs: Any) -> None: ...

class StorageErrorException(HttpResponseError):
    error: Any = ...
    def __init__(self, response: Any, deserialize: Any, *args: Any) -> None: ...

class StorageServiceProperties(Model):
    logging: Any = ...
    hour_metrics: Any = ...
    minute_metrics: Any = ...
    cors: Any = ...
    def __init__(self, *, logging: Any=..., hour_metrics: Any=..., minute_metrics: Any=..., cors: Any=..., **kwargs: Any) -> None: ...

class StorageServiceStats(Model):
    geo_replication: Any = ...
    def __init__(self, *, geo_replication: Any=..., **kwargs: Any) -> None: ...
