# Stubs for azure.storage.filedatalake._path_client (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ._data_lake_lease import DataLakeLeaseClient
from ._deserialize import process_storage_error
from ._generated import DataLakeStorageClient
from ._generated.models import StorageErrorException
from ._models import DirectoryProperties, LocationMode
from ._serialize import add_metadata_headers, convert_dfs_url_to_blob_url, get_access_conditions, get_lease_id, get_mod_conditions, get_path_http_headers, get_source_mod_conditions
from ._shared.base_client import StorageAccountHostsMixin, parse_query
from ._shared.response_handlers import return_response_headers
from typing import Any, Optional

class PathClient(StorageAccountHostsMixin):
    file_system_name: Any = ...
    path_name: Any = ...
    def __init__(self, account_url: str, file_system_name: str, path_name: str, credential: Optional[Any]=..., **kwargs: Any) -> None: ...
    def set_access_control(self, owner: Optional[str]=..., group: Optional[str]=..., permissions: Optional[str]=..., acl: Optional[str]=..., **kwargs: Any) -> Dict[str, Union[str, datetime]]: ...
    def get_access_control(self, upn: Optional[bool]=..., **kwargs: Any) -> Dict[str, Any]: ...
    def set_metadata(self, metadata: Optional[Dict[str, str]]=..., **kwargs: Any) -> Dict[str, Union[str, datetime]]: ...
    def set_http_headers(self, content_settings: Optional[ContentSettings]=..., **kwargs: Any) -> Dict[str, Any]: ...
    def acquire_lease(self, lease_duration: Optional[int]=..., lease_id: Optional[str]=..., **kwargs: Any) -> DataLakeLeaseClient: ...
