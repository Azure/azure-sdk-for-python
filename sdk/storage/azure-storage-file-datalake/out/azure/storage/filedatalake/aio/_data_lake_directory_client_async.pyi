# Stubs for azure.storage.filedatalake.aio._data_lake_directory_client_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .._data_lake_directory_client import DataLakeDirectoryClient as DataLakeDirectoryClientBase
from .._models import DirectoryProperties
from ._data_lake_file_client_async import DataLakeFileClient
from ._path_client_async import PathClient
from typing import Any, Optional

class DataLakeDirectoryClient(PathClient, DataLakeDirectoryClientBase):
    def __init__(self, account_url: str, file_system_name: str, directory_name: str, credential: Optional[Any]=..., **kwargs: Any) -> None: ...
    async def create_directory(self, metadata: Optional[Dict[str, str]]=..., **kwargs: Any) -> Dict[str, Union[str, datetime]]: ...
    async def delete_directory(self, **kwargs: Any) -> None: ...
    async def get_directory_properties(self, **kwargs: Any) -> DirectoryProperties: ...
    async def rename_directory(self, rename_destination: Any, **kwargs: Any): ...
    async def create_sub_directory(self, sub_directory: Union[DirectoryProperties, str], metadata: Optional[Dict[str, str]]=..., **kwargs: Any) -> DataLakeDirectoryClient: ...
    async def delete_sub_directory(self, sub_directory: Union[DirectoryProperties, str], **kwargs: Any) -> DataLakeDirectoryClient: ...
    async def create_file(self, file: Union[FileProperties, str], **kwargs: Any) -> DataLakeFileClient: ...
    def get_file_client(self, file: Union[FileProperties, str]) -> DataLakeFileClient: ...
    def get_sub_directory_client(self, sub_directory: Union[DirectoryProperties, str]) -> DataLakeDirectoryClient: ...
