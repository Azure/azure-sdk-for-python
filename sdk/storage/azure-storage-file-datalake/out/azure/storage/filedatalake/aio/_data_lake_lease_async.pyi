# Stubs for azure.storage.filedatalake.aio._data_lake_lease_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .._data_lake_lease import DataLakeLeaseClient as DataLakeLeaseClientBase
from typing import Any, Optional, TypeVar, Union

FileSystemClient = TypeVar('FileSystemClient')
DataLakeDirectoryClient = TypeVar('DataLakeDirectoryClient')
DataLakeFileClient = TypeVar('DataLakeFileClient')

class DataLakeLeaseClient(DataLakeLeaseClientBase):
    def __init__(self, client: Union[FileSystemClient, DataLakeDirectoryClient, DataLakeFileClient], lease_id: Optional[str]=...) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, *args: Any) -> None: ...
    async def __aenter__(self): ...
    async def __aexit__(self, *args: Any) -> None: ...
    async def acquire(self, lease_duration: Optional[int]=..., **kwargs: Any) -> None: ...
    async def renew(self, **kwargs: Any) -> None: ...
    async def release(self, **kwargs: Any) -> None: ...
    async def change(self, proposed_lease_id: str, **kwargs: Any) -> None: ...
    async def break_lease(self, lease_break_period: Optional[int]=..., **kwargs: Any) -> int: ...
