# Stubs for azure.storage.filedatalake.aio._data_lake_service_client_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .._data_lake_service_client import DataLakeServiceClient as DataLakeServiceClientBase
from .._generated.aio import DataLakeStorageClient
from .._models import UserDelegationKey
from .._shared.base_client_async import AsyncStorageAccountHostsMixin
from .._shared.policies_async import ExponentialRetry
from ._data_lake_directory_client_async import DataLakeDirectoryClient
from ._data_lake_file_client_async import DataLakeFileClient
from ._file_system_client_async import FileSystemClient
from ._models import FileSystemPropertiesPaged
from azure.core.paging import ItemPaged
from typing import Any, Optional

class DataLakeServiceClient(AsyncStorageAccountHostsMixin, DataLakeServiceClientBase):
    def __init__(self, account_url: str, credential: Optional[Any]=..., **kwargs: Any) -> None: ...
    async def get_user_delegation_key(self, key_start_time: datetime, key_expiry_time: datetime, **kwargs: Any) -> UserDelegationKey: ...
    def list_file_systems(self, name_starts_with: Optional[str]=..., include_metadata: Optional[bool]=..., **kwargs: Any) -> ItemPaged[FileSystemProperties]: ...
    async def create_file_system(self, file_system: Union[FileSystemProperties, str], metadata: Optional[Dict[str, str]]=..., public_access: Optional[PublicAccess]=..., **kwargs: Any) -> FileSystemClient: ...
    async def delete_file_system(self, file_system: Union[FileSystemProperties, str], **kwargs: Any) -> FileSystemClient: ...
    def get_file_system_client(self, file_system: Union[FileSystemProperties, str]) -> FileSystemClient: ...
    def get_directory_client(self, file_system: Union[FileSystemProperties, str], directory: Union[DirectoryProperties, str]) -> DataLakeDirectoryClient: ...
    def get_file_client(self, file_system: Union[FileSystemProperties, str], file_path: Union[FileProperties, str]) -> DataLakeFileClient: ...
