# Stubs for azure.storage.filedatalake.aio._path_client_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .._deserialize import process_storage_error
from .._generated.aio import DataLakeStorageClient
from .._generated.models import StorageErrorException
from .._models import DirectoryProperties
from .._path_client import PathClient as PathClientBase
from .._shared.base_client_async import AsyncStorageAccountHostsMixin
from .._shared.policies_async import ExponentialRetry
from ._data_lake_lease_async import DataLakeLeaseClient
from typing import Any, Optional

class PathClient(AsyncStorageAccountHostsMixin, PathClientBase):
    def __init__(self, account_url: str, file_system_name: str, path_name: str, credential: Optional[Any]=..., **kwargs: Any) -> None: ...
    async def set_access_control(self, owner: Optional[str]=..., group: Optional[str]=..., permissions: Optional[str]=..., acl: Optional[str]=..., **kwargs: Any) -> Dict[str, Union[str, datetime]]: ...
    async def get_access_control(self, upn: Optional[bool]=..., **kwargs: Any) -> Dict[str, Any]: ...
    async def set_metadata(self, metadata: Optional[Dict[str, str]]=..., **kwargs: Any) -> Dict[str, Union[str, datetime]]: ...
    async def set_http_headers(self, content_settings: Optional[ContentSettings]=..., **kwargs: Any) -> Dict[str, Any]: ...
    async def acquire_lease(self, lease_duration: Optional[int]=..., lease_id: Optional[str]=..., **kwargs: Any) -> DataLakeLeaseClient: ...
