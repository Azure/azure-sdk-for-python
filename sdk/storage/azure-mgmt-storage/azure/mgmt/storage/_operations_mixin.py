# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
from msrest import Serializer, Deserializer


class StorageManagementClientOperationsMixin(object):


    def delete_queue(self, resource_group_name, account_name, queue_name, custom_headers=None, raw=False, **operation_config):
        """Deletes the queue with the specified queue name, under the specified
        account if it exists.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param queue_name: A queue name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of lowercase alphanumeric and dash(-) characters only, it should begin
         and end with an alphanumeric character and it cannot have two
         consecutive dash(-) characters.
        :type queue_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: None or ClientRawResponse if raw=true
        :rtype: None or ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('delete_queue')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.delete_queue(resource_group_name, account_name, queue_name, custom_headers, raw, **operation_config)

    def delete_table(self, resource_group_name, account_name, table_name, custom_headers=None, raw=False, **operation_config):
        """Deletes the table with the specified table name, under the specified
        account if it exists.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param table_name: A table name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of only alphanumeric characters and it cannot begin with a numeric
         character.
        :type table_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: None or ClientRawResponse if raw=true
        :rtype: None or ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('delete_table')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.delete_table(resource_group_name, account_name, table_name, custom_headers, raw, **operation_config)

    def get_queue(self, resource_group_name, account_name, queue_name, custom_headers=None, raw=False, **operation_config):
        """Gets the queue with the specified queue name, under the specified
        account if it exists.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param queue_name: A queue name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of lowercase alphanumeric and dash(-) characters only, it should begin
         and end with an alphanumeric character and it cannot have two
         consecutive dash(-) characters.
        :type queue_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: StorageQueue or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.StorageQueue or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('get_queue')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.get_queue(resource_group_name, account_name, queue_name, custom_headers, raw, **operation_config)

    def get_table(self, resource_group_name, account_name, table_name, custom_headers=None, raw=False, **operation_config):
        """Gets the table with the specified table name, under the specified
        account if it exists.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param table_name: A table name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of only alphanumeric characters and it cannot begin with a numeric
         character.
        :type table_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: Table or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.Table or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('get_table')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.get_table(resource_group_name, account_name, table_name, custom_headers, raw, **operation_config)

    def list_queue_method(self, resource_group_name, account_name, maxpagesize=None, filter=None, custom_headers=None, raw=False, **operation_config):
        """Gets a list of all the queues under the specified storage account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param maxpagesize: Optional, a maximum number of queues that should
         be included in a list queue response
        :type maxpagesize: str
        :param filter: Optional, When specified, only the queues with a name
         starting with the given filter will be listed.
        :type filter: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: An iterator like instance of ListQueue
        :rtype:
         ~azure.mgmt.storage.v2019_06_01.models.ListQueuePaged[~azure.mgmt.storage.v2019_06_01.models.ListQueue]
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('list_queue_method')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.list_queue_method(resource_group_name, account_name, maxpagesize, filter, custom_headers, raw, **operation_config)

    def list_queue_service(self, resource_group_name, account_name, custom_headers=None, raw=False, **operation_config):
        """List all queue services for the storage account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: ListQueueServices or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.ListQueueServices or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('list_queue_service')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.list_queue_service(resource_group_name, account_name, custom_headers, raw, **operation_config)

    def list_table_service(self, resource_group_name, account_name, custom_headers=None, raw=False, **operation_config):
        """List all table services for the storage account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: ListTableServices or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.ListTableServices or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('list_table_service')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.list_table_service(resource_group_name, account_name, custom_headers, raw, **operation_config)

    def patch_queue(self, resource_group_name, account_name, queue_name, metadata=None, custom_headers=None, raw=False, **operation_config):
        """Creates a new queue with the specified queue name, under the specified
        account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param queue_name: A queue name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of lowercase alphanumeric and dash(-) characters only, it should begin
         and end with an alphanumeric character and it cannot have two
         consecutive dash(-) characters.
        :type queue_name: str
        :param metadata: A name-value pair that represents queue metadata.
        :type metadata: dict[str, str]
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: StorageQueue or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.StorageQueue or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('patch_queue')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.patch_queue(resource_group_name, account_name, queue_name, metadata, custom_headers, raw, **operation_config)

    def patch_table(self, resource_group_name, account_name, table_name, custom_headers=None, raw=False, **operation_config):
        """Creates a new table with the specified table name, under the specified
        account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param table_name: A table name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of only alphanumeric characters and it cannot begin with a numeric
         character.
        :type table_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: Table or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.Table or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('patch_table')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.patch_table(resource_group_name, account_name, table_name, custom_headers, raw, **operation_config)

    def put_queue(self, resource_group_name, account_name, queue_name, metadata=None, custom_headers=None, raw=False, **operation_config):
        """Creates a new queue with the specified queue name, under the specified
        account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param queue_name: A queue name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of lowercase alphanumeric and dash(-) characters only, it should begin
         and end with an alphanumeric character and it cannot have two
         consecutive dash(-) characters.
        :type queue_name: str
        :param metadata: A name-value pair that represents queue metadata.
        :type metadata: dict[str, str]
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: StorageQueue or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.StorageQueue or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('put_queue')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.put_queue(resource_group_name, account_name, queue_name, metadata, custom_headers, raw, **operation_config)

    def put_table(self, resource_group_name, account_name, table_name, custom_headers=None, raw=False, **operation_config):
        """Creates a new table with the specified table name, under the specified
        account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param table_name: A table name must be unique within a storage
         account and must be between 3 and 63 characters.The name must comprise
         of only alphanumeric characters and it cannot begin with a numeric
         character.
        :type table_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: Table or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.storage.v2019_06_01.models.Table or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('put_table')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.put_table(resource_group_name, account_name, table_name, custom_headers, raw, **operation_config)

    def query_table(self, resource_group_name, account_name, custom_headers=None, raw=False, **operation_config):
        """Gets a list of all the tables under the specified storage account.

        :param resource_group_name: The name of the resource group within the
         user's subscription. The name is case insensitive.
        :type resource_group_name: str
        :param account_name: The name of the storage account within the
         specified resource group. Storage account names must be between 3 and
         24 characters in length and use numbers and lower-case letters only.
        :type account_name: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: An iterator like instance of Table
        :rtype:
         ~azure.mgmt.storage.v2019_06_01.models.TablePaged[~azure.mgmt.storage.v2019_06_01.models.Table]
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        
        """
        api_version = self._get_api_version('query_table')
        if api_version == '2019-06-01':
            from .v2019_06_01.operations import StorageManagementClientOperationsMixin as OperationClass
        else:
            raise NotImplementedError("APIVersion {} is not available".format(api_version))
        mixin_instance = OperationClass()
        mixin_instance._client = self._client
        mixin_instance.config = self.config
        mixin_instance._serialize = Serializer(self._models_dict(api_version))
        mixin_instance._deserialize = Deserializer(self._models_dict(api_version))
        mixin_instance.api_version = api_version
        return mixin_instance.query_table(resource_group_name, account_name, custom_headers, raw, **operation_config)
