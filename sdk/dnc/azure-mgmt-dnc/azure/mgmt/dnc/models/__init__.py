# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

try:
    from ._models_py3 import ControllerDetails
    from ._models_py3 import ControllerResource
    from ._models_py3 import ControllerResourceUpdateParameters
    from ._models_py3 import DelegatedController
    from ._models_py3 import DelegatedControllerProperties
    from ._models_py3 import DelegatedControllers
    from ._models_py3 import DelegatedSubnet
    from ._models_py3 import DelegatedSubnetProperties
    from ._models_py3 import DelegatedSubnetResource
    from ._models_py3 import DelegatedSubnets
    from ._models_py3 import ErrorAdditionalInfo
    from ._models_py3 import ErrorDetail
    from ._models_py3 import ErrorResponse
    from ._models_py3 import Operation
    from ._models_py3 import OperationDisplay
    from ._models_py3 import OperationListResult
    from ._models_py3 import Orchestrator
    from ._models_py3 import OrchestratorIdentity
    from ._models_py3 import OrchestratorResource
    from ._models_py3 import OrchestratorResourceProperties
    from ._models_py3 import OrchestratorResourceUpdateParameters
    from ._models_py3 import Orchestrators
    from ._models_py3 import ResourceUpdateParameters
    from ._models_py3 import SubnetDetails
except (SyntaxError, ImportError):
    from ._models import ControllerDetails  # type: ignore
    from ._models import ControllerResource  # type: ignore
    from ._models import ControllerResourceUpdateParameters  # type: ignore
    from ._models import DelegatedController  # type: ignore
    from ._models import DelegatedControllerProperties  # type: ignore
    from ._models import DelegatedControllers  # type: ignore
    from ._models import DelegatedSubnet  # type: ignore
    from ._models import DelegatedSubnetProperties  # type: ignore
    from ._models import DelegatedSubnetResource  # type: ignore
    from ._models import DelegatedSubnets  # type: ignore
    from ._models import ErrorAdditionalInfo  # type: ignore
    from ._models import ErrorDetail  # type: ignore
    from ._models import ErrorResponse  # type: ignore
    from ._models import Operation  # type: ignore
    from ._models import OperationDisplay  # type: ignore
    from ._models import OperationListResult  # type: ignore
    from ._models import Orchestrator  # type: ignore
    from ._models import OrchestratorIdentity  # type: ignore
    from ._models import OrchestratorResource  # type: ignore
    from ._models import OrchestratorResourceProperties  # type: ignore
    from ._models import OrchestratorResourceUpdateParameters  # type: ignore
    from ._models import Orchestrators  # type: ignore
    from ._models import ResourceUpdateParameters  # type: ignore
    from ._models import SubnetDetails  # type: ignore

from ._dnc_enums import (
    ActionType,
    ControllerState,
    DelegatedSubnetState,
    OrchestratorInstanceState,
    OrchestratorKind,
    Origin,
    ResourceIdentityType,
)

__all__ = [
    'ControllerDetails',
    'ControllerResource',
    'ControllerResourceUpdateParameters',
    'DelegatedController',
    'DelegatedControllerProperties',
    'DelegatedControllers',
    'DelegatedSubnet',
    'DelegatedSubnetProperties',
    'DelegatedSubnetResource',
    'DelegatedSubnets',
    'ErrorAdditionalInfo',
    'ErrorDetail',
    'ErrorResponse',
    'Operation',
    'OperationDisplay',
    'OperationListResult',
    'Orchestrator',
    'OrchestratorIdentity',
    'OrchestratorResource',
    'OrchestratorResourceProperties',
    'OrchestratorResourceUpdateParameters',
    'Orchestrators',
    'ResourceUpdateParameters',
    'SubnetDetails',
    'ActionType',
    'ControllerState',
    'DelegatedSubnetState',
    'OrchestratorInstanceState',
    'OrchestratorKind',
    'Origin',
    'ResourceIdentityType',
]
