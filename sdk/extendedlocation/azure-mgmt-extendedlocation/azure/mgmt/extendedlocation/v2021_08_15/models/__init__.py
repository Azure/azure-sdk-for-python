# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import CustomLocation
from ._models_py3 import CustomLocationListResult
from ._models_py3 import CustomLocationOperation
from ._models_py3 import CustomLocationOperationsList
from ._models_py3 import CustomLocationPropertiesAuthentication
from ._models_py3 import EnabledResourceType
from ._models_py3 import EnabledResourceTypePropertiesTypesMetadataItem
from ._models_py3 import EnabledResourceTypesListResult
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import ErrorDetail
from ._models_py3 import ErrorResponse
from ._models_py3 import Identity
from ._models_py3 import PatchableCustomLocations
from ._models_py3 import ProxyResource
from ._models_py3 import Resource
from ._models_py3 import SystemData
from ._models_py3 import TrackedResource

from ._custom_locations_enums import CreatedByType
from ._custom_locations_enums import HostType
from ._custom_locations_enums import ResourceIdentityType
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "CustomLocation",
    "CustomLocationListResult",
    "CustomLocationOperation",
    "CustomLocationOperationsList",
    "CustomLocationPropertiesAuthentication",
    "EnabledResourceType",
    "EnabledResourceTypePropertiesTypesMetadataItem",
    "EnabledResourceTypesListResult",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "Identity",
    "PatchableCustomLocations",
    "ProxyResource",
    "Resource",
    "SystemData",
    "TrackedResource",
    "CreatedByType",
    "HostType",
    "ResourceIdentityType",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
