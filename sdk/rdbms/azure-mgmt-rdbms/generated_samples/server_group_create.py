# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential
from azure.mgmt.rdbms import MicrosoftPostgreSQLHyperscale

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-mgmt-rdbms
# USAGE
    python server_group_create.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = MicrosoftPostgreSQLHyperscale(
        credential=DefaultAzureCredential(),
        subscription_id="ffffffff-ffff-ffff-ffff-ffffffffffff",
    )

    response = client.server_groups.begin_create_or_update(
        resource_group_name="TestGroup",
        server_group_name="hsctestsg",
        parameters={
            "location": "westus",
            "properties": {
                "administratorLogin": "citus",
                "administratorLoginPassword": "password",
                "availabilityZone": "1",
                "backupRetentionDays": 35,
                "citusVersion": "9.5",
                "delegatedSubnetArguments": {
                    "subnetArmResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/test-vnet-subnet"
                },
                "enableMx": True,
                "enableZfs": False,
                "postgresqlVersion": "12",
                "privateDnsZoneArguments": {
                    "privateDnsZoneArmResourceId": "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.Network/privateDnsZones/test-private-dns-zone"
                },
                "serverRoleGroups": [
                    {
                        "enableHa": True,
                        "name": "",
                        "role": "Coordinator",
                        "serverCount": 1,
                        "serverEdition": "GeneralPurpose",
                        "storageQuotaInMb": 524288,
                        "vCores": 4,
                    },
                    {
                        "enableHa": False,
                        "name": "",
                        "role": "Worker",
                        "serverCount": 3,
                        "serverEdition": "MemoryOptimized",
                        "storageQuotaInMb": 524288,
                        "vCores": 4,
                    },
                ],
                "standbyAvailabilityZone": "2",
            },
            "tags": {"ElasticServer": "1"},
        },
    ).result()
    print(response)


# x-ms-original-file: specification/postgresqlhsc/resource-manager/Microsoft.DBforPostgreSQL/preview/2020-10-05-privatepreview/examples/ServerGroupCreate.json
if __name__ == "__main__":
    main()
