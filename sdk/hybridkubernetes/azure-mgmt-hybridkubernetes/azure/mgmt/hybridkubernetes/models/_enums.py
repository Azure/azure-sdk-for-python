# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ActionType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Extensible enum. Indicates the action type. "Internal" refers to actions that are for internal
    only APIs.
    """

    INTERNAL = "Internal"
    """Actions are for internal-only APIs."""


class AuthenticationMethod(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The mode of client authentication."""

    TOKEN = "Token"
    AAD = "AAD"


class AutoUpgradeOptions(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates whether the Arc agents on the be upgraded automatically to the latest version.
    Defaults to Enabled.
    """

    ENABLED = "Enabled"
    DISABLED = "Disabled"


class AzureHybridBenefit(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates whether Azure Hybrid Benefit is opted in."""

    TRUE = "True"
    FALSE = "False"
    NOT_APPLICABLE = "NotApplicable"


class ConnectedClusterKind(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Indicates the kind of Arc connected cluster based on host infrastructure."""

    PROVISIONED_CLUSTER = "ProvisionedCluster"
    AWS = "AWS"


class ConnectivityStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Represents the connectivity status of the connected cluster."""

    CONNECTING = "Connecting"
    CONNECTED = "Connected"
    OFFLINE = "Offline"
    EXPIRED = "Expired"
    AGENT_NOT_INSTALLED = "AgentNotInstalled"


class CreatedByType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The kind of entity that created the resource."""

    USER = "User"
    """The entity was created by a user."""
    APPLICATION = "Application"
    """The entity was created by an application."""
    MANAGED_IDENTITY = "ManagedIdentity"
    """The entity was created by a managed identity."""
    KEY = "Key"
    """The entity was created by a key."""


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit
    logs UX. Default value is "user,system".
    """

    USER = "user"
    """Indicates the operation is initiated by a user."""
    SYSTEM = "system"
    """Indicates the operation is initiated by a system."""
    USER_SYSTEM = "user,system"
    """Indicates the operation is initiated by a user or system."""


class PrivateLinkState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Property which describes the state of private link on a connected cluster resource."""

    ENABLED = "Enabled"
    DISABLED = "Disabled"


class ProvisioningState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The current deployment state of connectedClusters."""

    SUCCEEDED = "Succeeded"
    FAILED = "Failed"
    CANCELED = "Canceled"
    PROVISIONING = "Provisioning"
    UPDATING = "Updating"
    DELETING = "Deleting"
    ACCEPTED = "Accepted"


class ResourceIdentityType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of identity used for the connected cluster. The type 'SystemAssigned, includes a
    system created identity. The type 'None' means no identity is assigned to the connected
    cluster.
    """

    NONE = "None"
    SYSTEM_ASSIGNED = "SystemAssigned"
