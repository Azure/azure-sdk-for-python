# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import


from ._models import (  # type: ignore
    AddOrUpdateTextBlocklistItemsOptions,
    AddOrUpdateTextBlocklistItemsResult,
    AnalyzeImageOptions,
    AnalyzeImageResult,
    AnalyzeTextOptions,
    AnalyzeTextResult,
    DetectTextProtectedMaterialOptions,
    DetectTextProtectedMaterialResult,
    DocumentInjectionAnalysisResult,
    ImageCategoriesAnalysis,
    ImageData,
    RemoveTextBlocklistItemsOptions,
    ShieldPromptOptions,
    ShieldPromptResult,
    TextBlocklist,
    TextBlocklistItem,
    TextBlocklistMatch,
    TextCategoriesAnalysis,
    TextProtectedMaterialAnalysisResult,
    UserPromptInjectionAnalysisResult,
)

from ._enums import (  # type: ignore
    AnalyzeImageOutputType,
    AnalyzeTextOutputType,
    ImageCategory,
    TextCategory,
)
from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AddOrUpdateTextBlocklistItemsOptions",
    "AddOrUpdateTextBlocklistItemsResult",
    "AnalyzeImageOptions",
    "AnalyzeImageResult",
    "AnalyzeTextOptions",
    "AnalyzeTextResult",
    "DetectTextProtectedMaterialOptions",
    "DetectTextProtectedMaterialResult",
    "DocumentInjectionAnalysisResult",
    "ImageCategoriesAnalysis",
    "ImageData",
    "RemoveTextBlocklistItemsOptions",
    "ShieldPromptOptions",
    "ShieldPromptResult",
    "TextBlocklist",
    "TextBlocklistItem",
    "TextBlocklistMatch",
    "TextCategoriesAnalysis",
    "TextProtectedMaterialAnalysisResult",
    "UserPromptInjectionAnalysisResult",
    "AnalyzeImageOutputType",
    "AnalyzeTextOutputType",
    "ImageCategory",
    "TextCategory",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
