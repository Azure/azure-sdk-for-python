# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.identity import DefaultAzureCredential

from azure.batch import BatchClient

"""
# PREREQUISITES
    pip install azure-identity
    pip install azure-batch
# USAGE
    python pools_create_pool_mount_configuration.py

    Before run the sample, please set the values of the client ID, tenant ID and client secret
    of the AAD application as environment variables: AZURE_CLIENT_ID, AZURE_TENANT_ID,
    AZURE_CLIENT_SECRET. For more info about how to get the value, please see:
    https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal
"""


def main():
    client = BatchClient(
        endpoint="ENDPOINT",
        credential=DefaultAzureCredential(),
    )

    client.create_pool(
        pool={
            "enableAutoScale": False,
            "id": "pool2",
            "mountConfiguration": [
                {
                    "azureBlobFileSystemConfiguration": {
                        "accountKey": "accountKey",
                        "accountName": "accountName",
                        "containerName": "blobContainerName",
                        "relativeMountPath": "bfusepath",
                    }
                },
                {
                    "azureFileShareConfiguration": {
                        "accountKey": "accountKey",
                        "accountName": "accountName",
                        "azureFileUrl": "https://myaccount.file.core.windows.net/fileshare",
                        "mountOptions": "mount options ver=1.0",
                        "relativeMountPath": "filesharepath",
                    }
                },
                {
                    "nfsMountConfiguration": {
                        "mountOptions": "mount options ver=1.0",
                        "relativeMountPath": "mountpath",
                        "source": "somesource nfs url",
                    }
                },
                {
                    "cifsMountConfiguration": {
                        "mountOptions": "mount options ver=1.0",
                        "password": "password",
                        "relativeMountPath": "mountpath",
                        "source": "//myaccount.file.core.windows.net/file",
                        "username": "accountName",
                    }
                },
            ],
            "resizeTimeout": "PT15M",
            "targetDedicatedNodes": 5,
            "targetLowPriorityNodes": 0,
            "taskSchedulingPolicy": {"nodeFillType": "spread"},
            "taskSlotsPerNode": 3,
            "virtualMachineConfiguration": {
                "imageReference": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "20_04-lts"},
                "nodeAgentSKUId": "batch.node.ubuntu 20.04",
            },
            "vmSize": "standard_a1",
        },
    )


# x-ms-original-file: 2024-07-01.20.0/Pools_CreatePool_MountConfiguration.json
if __name__ == "__main__":
    main()
