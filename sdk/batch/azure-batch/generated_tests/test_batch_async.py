# pylint: disable=too-many-lines
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import pytest
from devtools_testutils.aio import recorded_by_proxy_async
from testpreparer import BatchPreparer
from testpreparer_async import BatchClientTestBaseAsync


@pytest.mark.skip("you may need to update the auto-generated test case before run it")
class TestBatchAsync(BatchClientTestBaseAsync):
    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_applications(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_applications()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_application(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_application(
            application_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_pool_usage_metrics(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_pool_usage_metrics()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_create_pool(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.create_pool(
            pool={
                "id": "str",
                "vmSize": "str",
                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                "autoScaleEvaluationInterval": "1 day, 0:00:00",
                "autoScaleFormula": "str",
                "displayName": "str",
                "enableAutoScale": bool,
                "enableInterNodeCommunication": bool,
                "metadata": [{"name": "str", "value": "str"}],
                "mountConfiguration": [
                    {
                        "azureBlobFileSystemConfiguration": {
                            "accountName": "str",
                            "containerName": "str",
                            "relativeMountPath": "str",
                            "accountKey": "str",
                            "blobfuseOptions": "str",
                            "identityReference": {"resourceId": "str"},
                            "sasKey": "str",
                        },
                        "azureFileShareConfiguration": {
                            "accountKey": "str",
                            "accountName": "str",
                            "azureFileUrl": "str",
                            "relativeMountPath": "str",
                            "mountOptions": "str",
                        },
                        "cifsMountConfiguration": {
                            "password": "str",
                            "relativeMountPath": "str",
                            "source": "str",
                            "username": "str",
                            "mountOptions": "str",
                        },
                        "nfsMountConfiguration": {"relativeMountPath": "str", "source": "str", "mountOptions": "str"},
                    }
                ],
                "networkConfiguration": {
                    "dynamicVNetAssignmentScope": "str",
                    "enableAcceleratedNetworking": bool,
                    "endpointConfiguration": {
                        "inboundNATPools": [
                            {
                                "backendPort": 0,
                                "frontendPortRangeEnd": 0,
                                "frontendPortRangeStart": 0,
                                "name": "str",
                                "protocol": "str",
                                "networkSecurityGroupRules": [
                                    {
                                        "access": "str",
                                        "priority": 0,
                                        "sourceAddressPrefix": "str",
                                        "sourcePortRanges": ["str"],
                                    }
                                ],
                            }
                        ]
                    },
                    "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                    "subnetId": "str",
                },
                "resizeTimeout": "1 day, 0:00:00",
                "resourceTags": {"str": "str"},
                "startTask": {
                    "commandLine": "str",
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "maxTaskRetryCount": 0,
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    "waitForSuccess": bool,
                },
                "targetDedicatedNodes": 0,
                "targetLowPriorityNodes": 0,
                "targetNodeCommunicationMode": "str",
                "taskSchedulingPolicy": {"nodeFillType": "str"},
                "taskSlotsPerNode": 0,
                "upgradePolicy": {
                    "mode": "str",
                    "automaticOSUpgradePolicy": {
                        "disableAutomaticRollback": bool,
                        "enableAutomaticOSUpgrade": bool,
                        "osRollingUpgradeDeferral": bool,
                        "useRollingUpgradePolicy": bool,
                    },
                    "rollingUpgradePolicy": {
                        "enableCrossZoneUpgrade": bool,
                        "maxBatchInstancePercent": 0,
                        "maxUnhealthyInstancePercent": 0,
                        "maxUnhealthyUpgradedInstancePercent": 0,
                        "pauseTimeBetweenBatches": "1 day, 0:00:00",
                        "prioritizeUnhealthyInstances": bool,
                        "rollbackFailedInstancesOnPolicyBreach": bool,
                    },
                },
                "userAccounts": [
                    {
                        "name": "str",
                        "password": "str",
                        "elevationLevel": "str",
                        "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                        "windowsUserConfiguration": {"loginMode": "str"},
                    }
                ],
                "virtualMachineConfiguration": {
                    "imageReference": {
                        "communityGalleryImageId": "str",
                        "exactVersion": "str",
                        "offer": "str",
                        "publisher": "str",
                        "sharedGalleryImageId": "str",
                        "sku": "str",
                        "version": "str",
                        "virtualMachineImageId": "str",
                    },
                    "nodeAgentSKUId": "str",
                    "containerConfiguration": {
                        "type": "str",
                        "containerImageNames": ["str"],
                        "containerRegistries": [
                            {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            }
                        ],
                    },
                    "dataDisks": [{"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}],
                    "diskEncryptionConfiguration": {"targets": ["str"]},
                    "extensions": [
                        {
                            "name": "str",
                            "publisher": "str",
                            "type": "str",
                            "autoUpgradeMinorVersion": bool,
                            "enableAutomaticUpgrade": bool,
                            "protectedSettings": {"str": "str"},
                            "provisionAfterExtensions": ["str"],
                            "settings": {"str": "str"},
                            "typeHandlerVersion": "str",
                        }
                    ],
                    "licenseType": "str",
                    "nodePlacementConfiguration": {"policy": "str"},
                    "osDisk": {
                        "caching": "str",
                        "diskSizeGB": 0,
                        "ephemeralOSDiskSettings": {"placement": "str"},
                        "managedDisk": {
                            "securityProfile": {"securityEncryptionType": "str"},
                            "storageAccountType": "str",
                        },
                        "writeAcceleratorEnabled": bool,
                    },
                    "securityProfile": {
                        "encryptionAtHost": bool,
                        "securityType": "str",
                        "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                    },
                    "serviceArtifactReference": {"id": "str"},
                    "windowsConfiguration": {"enableAutomaticUpdates": bool},
                },
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_pools(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_pools()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_delete_pool(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.delete_pool(
            pool_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_pool_exists(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.pool_exists(
            pool_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_pool(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_pool(
            pool_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_update_pool(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.update_pool(
            pool_id="str",
            pool={
                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                "displayName": "str",
                "enableInterNodeCommunication": bool,
                "metadata": [{"name": "str", "value": "str"}],
                "mountConfiguration": [
                    {
                        "azureBlobFileSystemConfiguration": {
                            "accountName": "str",
                            "containerName": "str",
                            "relativeMountPath": "str",
                            "accountKey": "str",
                            "blobfuseOptions": "str",
                            "identityReference": {"resourceId": "str"},
                            "sasKey": "str",
                        },
                        "azureFileShareConfiguration": {
                            "accountKey": "str",
                            "accountName": "str",
                            "azureFileUrl": "str",
                            "relativeMountPath": "str",
                            "mountOptions": "str",
                        },
                        "cifsMountConfiguration": {
                            "password": "str",
                            "relativeMountPath": "str",
                            "source": "str",
                            "username": "str",
                            "mountOptions": "str",
                        },
                        "nfsMountConfiguration": {"relativeMountPath": "str", "source": "str", "mountOptions": "str"},
                    }
                ],
                "networkConfiguration": {
                    "dynamicVNetAssignmentScope": "str",
                    "enableAcceleratedNetworking": bool,
                    "endpointConfiguration": {
                        "inboundNATPools": [
                            {
                                "backendPort": 0,
                                "frontendPortRangeEnd": 0,
                                "frontendPortRangeStart": 0,
                                "name": "str",
                                "protocol": "str",
                                "networkSecurityGroupRules": [
                                    {
                                        "access": "str",
                                        "priority": 0,
                                        "sourceAddressPrefix": "str",
                                        "sourcePortRanges": ["str"],
                                    }
                                ],
                            }
                        ]
                    },
                    "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                    "subnetId": "str",
                },
                "resourceTags": {"str": "str"},
                "startTask": {
                    "commandLine": "str",
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "maxTaskRetryCount": 0,
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    "waitForSuccess": bool,
                },
                "targetNodeCommunicationMode": "str",
                "taskSchedulingPolicy": {"nodeFillType": "str"},
                "taskSlotsPerNode": 0,
                "upgradePolicy": {
                    "mode": "str",
                    "automaticOSUpgradePolicy": {
                        "disableAutomaticRollback": bool,
                        "enableAutomaticOSUpgrade": bool,
                        "osRollingUpgradeDeferral": bool,
                        "useRollingUpgradePolicy": bool,
                    },
                    "rollingUpgradePolicy": {
                        "enableCrossZoneUpgrade": bool,
                        "maxBatchInstancePercent": 0,
                        "maxUnhealthyInstancePercent": 0,
                        "maxUnhealthyUpgradedInstancePercent": 0,
                        "pauseTimeBetweenBatches": "1 day, 0:00:00",
                        "prioritizeUnhealthyInstances": bool,
                        "rollbackFailedInstancesOnPolicyBreach": bool,
                    },
                },
                "userAccounts": [
                    {
                        "name": "str",
                        "password": "str",
                        "elevationLevel": "str",
                        "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                        "windowsUserConfiguration": {"loginMode": "str"},
                    }
                ],
                "virtualMachineConfiguration": {
                    "imageReference": {
                        "communityGalleryImageId": "str",
                        "exactVersion": "str",
                        "offer": "str",
                        "publisher": "str",
                        "sharedGalleryImageId": "str",
                        "sku": "str",
                        "version": "str",
                        "virtualMachineImageId": "str",
                    },
                    "nodeAgentSKUId": "str",
                    "containerConfiguration": {
                        "type": "str",
                        "containerImageNames": ["str"],
                        "containerRegistries": [
                            {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            }
                        ],
                    },
                    "dataDisks": [{"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}],
                    "diskEncryptionConfiguration": {"targets": ["str"]},
                    "extensions": [
                        {
                            "name": "str",
                            "publisher": "str",
                            "type": "str",
                            "autoUpgradeMinorVersion": bool,
                            "enableAutomaticUpgrade": bool,
                            "protectedSettings": {"str": "str"},
                            "provisionAfterExtensions": ["str"],
                            "settings": {"str": "str"},
                            "typeHandlerVersion": "str",
                        }
                    ],
                    "licenseType": "str",
                    "nodePlacementConfiguration": {"policy": "str"},
                    "osDisk": {
                        "caching": "str",
                        "diskSizeGB": 0,
                        "ephemeralOSDiskSettings": {"placement": "str"},
                        "managedDisk": {
                            "securityProfile": {"securityEncryptionType": "str"},
                            "storageAccountType": "str",
                        },
                        "writeAcceleratorEnabled": bool,
                    },
                    "securityProfile": {
                        "encryptionAtHost": bool,
                        "securityType": "str",
                        "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                    },
                    "serviceArtifactReference": {"id": "str"},
                    "windowsConfiguration": {"enableAutomaticUpdates": bool},
                },
                "vmSize": "str",
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_disable_pool_auto_scale(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.disable_pool_auto_scale(
            pool_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_enable_pool_auto_scale(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.enable_pool_auto_scale(
            pool_id="str",
            content={"autoScaleEvaluationInterval": "1 day, 0:00:00", "autoScaleFormula": "str"},
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_evaluate_pool_auto_scale(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.evaluate_pool_auto_scale(
            pool_id="str",
            content={"autoScaleFormula": "str"},
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_resize_pool(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.resize_pool(
            pool_id="str",
            content={
                "nodeDeallocationOption": "str",
                "resizeTimeout": "1 day, 0:00:00",
                "targetDedicatedNodes": 0,
                "targetLowPriorityNodes": 0,
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_stop_pool_resize(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.stop_pool_resize(
            pool_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_replace_pool_properties(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.replace_pool_properties(
            pool_id="str",
            pool={
                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                "metadata": [{"name": "str", "value": "str"}],
                "startTask": {
                    "commandLine": "str",
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "maxTaskRetryCount": 0,
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    "waitForSuccess": bool,
                },
                "targetNodeCommunicationMode": "str",
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_remove_nodes(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.remove_nodes(
            pool_id="str",
            content={"nodeList": ["str"], "nodeDeallocationOption": "str", "resizeTimeout": "1 day, 0:00:00"},
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_supported_images(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_supported_images()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_pool_node_counts(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_pool_node_counts()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_delete_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.delete_job(
            job_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_job(
            job_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_update_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.update_job(
            job_id="str",
            job={
                "allowTaskPreemption": bool,
                "constraints": {"maxTaskRetryCount": 0, "maxWallClockTime": "1 day, 0:00:00"},
                "maxParallelTasks": 0,
                "metadata": [{"name": "str", "value": "str"}],
                "networkConfiguration": {"skipWithdrawFromVNet": bool, "subnetId": "str"},
                "onAllTasksComplete": "str",
                "poolInfo": {
                    "autoPoolSpecification": {
                        "poolLifetimeOption": "str",
                        "autoPoolIdPrefix": "str",
                        "keepAlive": bool,
                        "pool": {
                            "vmSize": "str",
                            "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                            "autoScaleEvaluationInterval": "1 day, 0:00:00",
                            "autoScaleFormula": "str",
                            "displayName": "str",
                            "enableAutoScale": bool,
                            "enableInterNodeCommunication": bool,
                            "metadata": [{"name": "str", "value": "str"}],
                            "mountConfiguration": [
                                {
                                    "azureBlobFileSystemConfiguration": {
                                        "accountName": "str",
                                        "containerName": "str",
                                        "relativeMountPath": "str",
                                        "accountKey": "str",
                                        "blobfuseOptions": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "sasKey": "str",
                                    },
                                    "azureFileShareConfiguration": {
                                        "accountKey": "str",
                                        "accountName": "str",
                                        "azureFileUrl": "str",
                                        "relativeMountPath": "str",
                                        "mountOptions": "str",
                                    },
                                    "cifsMountConfiguration": {
                                        "password": "str",
                                        "relativeMountPath": "str",
                                        "source": "str",
                                        "username": "str",
                                        "mountOptions": "str",
                                    },
                                    "nfsMountConfiguration": {
                                        "relativeMountPath": "str",
                                        "source": "str",
                                        "mountOptions": "str",
                                    },
                                }
                            ],
                            "networkConfiguration": {
                                "dynamicVNetAssignmentScope": "str",
                                "enableAcceleratedNetworking": bool,
                                "endpointConfiguration": {
                                    "inboundNATPools": [
                                        {
                                            "backendPort": 0,
                                            "frontendPortRangeEnd": 0,
                                            "frontendPortRangeStart": 0,
                                            "name": "str",
                                            "protocol": "str",
                                            "networkSecurityGroupRules": [
                                                {
                                                    "access": "str",
                                                    "priority": 0,
                                                    "sourceAddressPrefix": "str",
                                                    "sourcePortRanges": ["str"],
                                                }
                                            ],
                                        }
                                    ]
                                },
                                "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                                "subnetId": "str",
                            },
                            "resizeTimeout": "1 day, 0:00:00",
                            "resourceTags": "str",
                            "startTask": {
                                "commandLine": "str",
                                "containerSettings": {
                                    "imageName": "str",
                                    "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                                    "containerRunOptions": "str",
                                    "registry": {
                                        "identityReference": {"resourceId": "str"},
                                        "password": "str",
                                        "registryServer": "str",
                                        "username": "str",
                                    },
                                    "workingDirectory": "str",
                                },
                                "environmentSettings": [{"name": "str", "value": "str"}],
                                "maxTaskRetryCount": 0,
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",
                                        "blobPrefix": "str",
                                        "fileMode": "str",
                                        "filePath": "str",
                                        "httpUrl": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "storageContainerUrl": "str",
                                    }
                                ],
                                "userIdentity": {
                                    "autoUser": {"elevationLevel": "str", "scope": "str"},
                                    "username": "str",
                                },
                                "waitForSuccess": bool,
                            },
                            "targetDedicatedNodes": 0,
                            "targetLowPriorityNodes": 0,
                            "targetNodeCommunicationMode": "str",
                            "taskSchedulingPolicy": {"nodeFillType": "str"},
                            "taskSlotsPerNode": 0,
                            "upgradePolicy": {
                                "mode": "str",
                                "automaticOSUpgradePolicy": {
                                    "disableAutomaticRollback": bool,
                                    "enableAutomaticOSUpgrade": bool,
                                    "osRollingUpgradeDeferral": bool,
                                    "useRollingUpgradePolicy": bool,
                                },
                                "rollingUpgradePolicy": {
                                    "enableCrossZoneUpgrade": bool,
                                    "maxBatchInstancePercent": 0,
                                    "maxUnhealthyInstancePercent": 0,
                                    "maxUnhealthyUpgradedInstancePercent": 0,
                                    "pauseTimeBetweenBatches": "1 day, 0:00:00",
                                    "prioritizeUnhealthyInstances": bool,
                                    "rollbackFailedInstancesOnPolicyBreach": bool,
                                },
                            },
                            "userAccounts": [
                                {
                                    "name": "str",
                                    "password": "str",
                                    "elevationLevel": "str",
                                    "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                                    "windowsUserConfiguration": {"loginMode": "str"},
                                }
                            ],
                            "virtualMachineConfiguration": {
                                "imageReference": {
                                    "communityGalleryImageId": "str",
                                    "exactVersion": "str",
                                    "offer": "str",
                                    "publisher": "str",
                                    "sharedGalleryImageId": "str",
                                    "sku": "str",
                                    "version": "str",
                                    "virtualMachineImageId": "str",
                                },
                                "nodeAgentSKUId": "str",
                                "containerConfiguration": {
                                    "type": "str",
                                    "containerImageNames": ["str"],
                                    "containerRegistries": [
                                        {
                                            "identityReference": {"resourceId": "str"},
                                            "password": "str",
                                            "registryServer": "str",
                                            "username": "str",
                                        }
                                    ],
                                },
                                "dataDisks": [
                                    {"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}
                                ],
                                "diskEncryptionConfiguration": {"targets": ["str"]},
                                "extensions": [
                                    {
                                        "name": "str",
                                        "publisher": "str",
                                        "type": "str",
                                        "autoUpgradeMinorVersion": bool,
                                        "enableAutomaticUpgrade": bool,
                                        "protectedSettings": {"str": "str"},
                                        "provisionAfterExtensions": ["str"],
                                        "settings": {"str": "str"},
                                        "typeHandlerVersion": "str",
                                    }
                                ],
                                "licenseType": "str",
                                "nodePlacementConfiguration": {"policy": "str"},
                                "osDisk": {
                                    "caching": "str",
                                    "diskSizeGB": 0,
                                    "ephemeralOSDiskSettings": {"placement": "str"},
                                    "managedDisk": {
                                        "securityProfile": {"securityEncryptionType": "str"},
                                        "storageAccountType": "str",
                                    },
                                    "writeAcceleratorEnabled": bool,
                                },
                                "securityProfile": {
                                    "encryptionAtHost": bool,
                                    "securityType": "str",
                                    "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                                },
                                "serviceArtifactReference": {"id": "str"},
                                "windowsConfiguration": {"enableAutomaticUpdates": bool},
                            },
                        },
                    },
                    "poolId": "str",
                },
                "priority": 0,
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_replace_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.replace_job(
            job_id="str",
            job={
                "poolInfo": {
                    "autoPoolSpecification": {
                        "poolLifetimeOption": "str",
                        "autoPoolIdPrefix": "str",
                        "keepAlive": bool,
                        "pool": {
                            "vmSize": "str",
                            "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                            "autoScaleEvaluationInterval": "1 day, 0:00:00",
                            "autoScaleFormula": "str",
                            "displayName": "str",
                            "enableAutoScale": bool,
                            "enableInterNodeCommunication": bool,
                            "metadata": [{"name": "str", "value": "str"}],
                            "mountConfiguration": [
                                {
                                    "azureBlobFileSystemConfiguration": {
                                        "accountName": "str",
                                        "containerName": "str",
                                        "relativeMountPath": "str",
                                        "accountKey": "str",
                                        "blobfuseOptions": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "sasKey": "str",
                                    },
                                    "azureFileShareConfiguration": {
                                        "accountKey": "str",
                                        "accountName": "str",
                                        "azureFileUrl": "str",
                                        "relativeMountPath": "str",
                                        "mountOptions": "str",
                                    },
                                    "cifsMountConfiguration": {
                                        "password": "str",
                                        "relativeMountPath": "str",
                                        "source": "str",
                                        "username": "str",
                                        "mountOptions": "str",
                                    },
                                    "nfsMountConfiguration": {
                                        "relativeMountPath": "str",
                                        "source": "str",
                                        "mountOptions": "str",
                                    },
                                }
                            ],
                            "networkConfiguration": {
                                "dynamicVNetAssignmentScope": "str",
                                "enableAcceleratedNetworking": bool,
                                "endpointConfiguration": {
                                    "inboundNATPools": [
                                        {
                                            "backendPort": 0,
                                            "frontendPortRangeEnd": 0,
                                            "frontendPortRangeStart": 0,
                                            "name": "str",
                                            "protocol": "str",
                                            "networkSecurityGroupRules": [
                                                {
                                                    "access": "str",
                                                    "priority": 0,
                                                    "sourceAddressPrefix": "str",
                                                    "sourcePortRanges": ["str"],
                                                }
                                            ],
                                        }
                                    ]
                                },
                                "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                                "subnetId": "str",
                            },
                            "resizeTimeout": "1 day, 0:00:00",
                            "resourceTags": "str",
                            "startTask": {
                                "commandLine": "str",
                                "containerSettings": {
                                    "imageName": "str",
                                    "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                                    "containerRunOptions": "str",
                                    "registry": {
                                        "identityReference": {"resourceId": "str"},
                                        "password": "str",
                                        "registryServer": "str",
                                        "username": "str",
                                    },
                                    "workingDirectory": "str",
                                },
                                "environmentSettings": [{"name": "str", "value": "str"}],
                                "maxTaskRetryCount": 0,
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",
                                        "blobPrefix": "str",
                                        "fileMode": "str",
                                        "filePath": "str",
                                        "httpUrl": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "storageContainerUrl": "str",
                                    }
                                ],
                                "userIdentity": {
                                    "autoUser": {"elevationLevel": "str", "scope": "str"},
                                    "username": "str",
                                },
                                "waitForSuccess": bool,
                            },
                            "targetDedicatedNodes": 0,
                            "targetLowPriorityNodes": 0,
                            "targetNodeCommunicationMode": "str",
                            "taskSchedulingPolicy": {"nodeFillType": "str"},
                            "taskSlotsPerNode": 0,
                            "upgradePolicy": {
                                "mode": "str",
                                "automaticOSUpgradePolicy": {
                                    "disableAutomaticRollback": bool,
                                    "enableAutomaticOSUpgrade": bool,
                                    "osRollingUpgradeDeferral": bool,
                                    "useRollingUpgradePolicy": bool,
                                },
                                "rollingUpgradePolicy": {
                                    "enableCrossZoneUpgrade": bool,
                                    "maxBatchInstancePercent": 0,
                                    "maxUnhealthyInstancePercent": 0,
                                    "maxUnhealthyUpgradedInstancePercent": 0,
                                    "pauseTimeBetweenBatches": "1 day, 0:00:00",
                                    "prioritizeUnhealthyInstances": bool,
                                    "rollbackFailedInstancesOnPolicyBreach": bool,
                                },
                            },
                            "userAccounts": [
                                {
                                    "name": "str",
                                    "password": "str",
                                    "elevationLevel": "str",
                                    "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                                    "windowsUserConfiguration": {"loginMode": "str"},
                                }
                            ],
                            "virtualMachineConfiguration": {
                                "imageReference": {
                                    "communityGalleryImageId": "str",
                                    "exactVersion": "str",
                                    "offer": "str",
                                    "publisher": "str",
                                    "sharedGalleryImageId": "str",
                                    "sku": "str",
                                    "version": "str",
                                    "virtualMachineImageId": "str",
                                },
                                "nodeAgentSKUId": "str",
                                "containerConfiguration": {
                                    "type": "str",
                                    "containerImageNames": ["str"],
                                    "containerRegistries": [
                                        {
                                            "identityReference": {"resourceId": "str"},
                                            "password": "str",
                                            "registryServer": "str",
                                            "username": "str",
                                        }
                                    ],
                                },
                                "dataDisks": [
                                    {"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}
                                ],
                                "diskEncryptionConfiguration": {"targets": ["str"]},
                                "extensions": [
                                    {
                                        "name": "str",
                                        "publisher": "str",
                                        "type": "str",
                                        "autoUpgradeMinorVersion": bool,
                                        "enableAutomaticUpgrade": bool,
                                        "protectedSettings": {"str": "str"},
                                        "provisionAfterExtensions": ["str"],
                                        "settings": {"str": "str"},
                                        "typeHandlerVersion": "str",
                                    }
                                ],
                                "licenseType": "str",
                                "nodePlacementConfiguration": {"policy": "str"},
                                "osDisk": {
                                    "caching": "str",
                                    "diskSizeGB": 0,
                                    "ephemeralOSDiskSettings": {"placement": "str"},
                                    "managedDisk": {
                                        "securityProfile": {"securityEncryptionType": "str"},
                                        "storageAccountType": "str",
                                    },
                                    "writeAcceleratorEnabled": bool,
                                },
                                "securityProfile": {
                                    "encryptionAtHost": bool,
                                    "securityType": "str",
                                    "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                                },
                                "serviceArtifactReference": {"id": "str"},
                                "windowsConfiguration": {"enableAutomaticUpdates": bool},
                            },
                        },
                    },
                    "poolId": "str",
                },
                "allowTaskPreemption": bool,
                "commonEnvironmentSettings": [{"name": "str", "value": "str"}],
                "constraints": {"maxTaskRetryCount": 0, "maxWallClockTime": "1 day, 0:00:00"},
                "creationTime": "2020-02-20 00:00:00",
                "displayName": "str",
                "eTag": "str",
                "executionInfo": {
                    "startTime": "2020-02-20 00:00:00",
                    "endTime": "2020-02-20 00:00:00",
                    "poolId": "str",
                    "schedulingError": {
                        "category": "str",
                        "code": "str",
                        "details": [{"name": "str", "value": "str"}],
                        "message": "str",
                    },
                    "terminateReason": "str",
                },
                "id": "str",
                "jobManagerTask": {
                    "commandLine": "str",
                    "id": "str",
                    "allowLowPriorityNode": bool,
                    "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                    "authenticationTokenSettings": {"access": ["str"]},
                    "constraints": {
                        "maxTaskRetryCount": 0,
                        "maxWallClockTime": "1 day, 0:00:00",
                        "retentionTime": "1 day, 0:00:00",
                    },
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "displayName": "str",
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "killJobOnCompletion": bool,
                    "outputFiles": [
                        {
                            "destination": {
                                "container": {
                                    "containerUrl": "str",
                                    "identityReference": {"resourceId": "str"},
                                    "path": "str",
                                    "uploadHeaders": [{"name": "str", "value": "str"}],
                                }
                            },
                            "filePattern": "str",
                            "uploadOptions": {"uploadCondition": "str"},
                        }
                    ],
                    "requiredSlots": 0,
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "runExclusive": bool,
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                },
                "jobPreparationTask": {
                    "commandLine": "str",
                    "constraints": {
                        "maxTaskRetryCount": 0,
                        "maxWallClockTime": "1 day, 0:00:00",
                        "retentionTime": "1 day, 0:00:00",
                    },
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "id": "str",
                    "rerunOnNodeRebootAfterSuccess": bool,
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    "waitForSuccess": bool,
                },
                "jobReleaseTask": {
                    "commandLine": "str",
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "id": "str",
                    "maxWallClockTime": "1 day, 0:00:00",
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "retentionTime": "1 day, 0:00:00",
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                },
                "lastModified": "2020-02-20 00:00:00",
                "maxParallelTasks": 0,
                "metadata": [{"name": "str", "value": "str"}],
                "networkConfiguration": {"skipWithdrawFromVNet": bool, "subnetId": "str"},
                "onAllTasksComplete": "str",
                "onTaskFailure": "str",
                "previousState": "str",
                "previousStateTransitionTime": "2020-02-20 00:00:00",
                "priority": 0,
                "state": "str",
                "stateTransitionTime": "2020-02-20 00:00:00",
                "stats": {
                    "kernelCPUTime": "1 day, 0:00:00",
                    "lastUpdateTime": "2020-02-20 00:00:00",
                    "numFailedTasks": 0,
                    "numSucceededTasks": 0,
                    "numTaskRetries": 0,
                    "readIOGiB": 0.0,
                    "readIOps": 0,
                    "startTime": "2020-02-20 00:00:00",
                    "url": "str",
                    "userCPUTime": "1 day, 0:00:00",
                    "waitTime": "1 day, 0:00:00",
                    "wallClockTime": "1 day, 0:00:00",
                    "writeIOGiB": 0.0,
                    "writeIOps": 0,
                },
                "url": "str",
                "usesTaskDependencies": bool,
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_disable_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.disable_job(
            job_id="str",
            content={"disableTasks": "str"},
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_enable_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.enable_job(
            job_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_terminate_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.terminate_job(
            job_id="str",
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_create_job(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.create_job(
            job={
                "id": "str",
                "poolInfo": {
                    "autoPoolSpecification": {
                        "poolLifetimeOption": "str",
                        "autoPoolIdPrefix": "str",
                        "keepAlive": bool,
                        "pool": {
                            "vmSize": "str",
                            "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                            "autoScaleEvaluationInterval": "1 day, 0:00:00",
                            "autoScaleFormula": "str",
                            "displayName": "str",
                            "enableAutoScale": bool,
                            "enableInterNodeCommunication": bool,
                            "metadata": [{"name": "str", "value": "str"}],
                            "mountConfiguration": [
                                {
                                    "azureBlobFileSystemConfiguration": {
                                        "accountName": "str",
                                        "containerName": "str",
                                        "relativeMountPath": "str",
                                        "accountKey": "str",
                                        "blobfuseOptions": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "sasKey": "str",
                                    },
                                    "azureFileShareConfiguration": {
                                        "accountKey": "str",
                                        "accountName": "str",
                                        "azureFileUrl": "str",
                                        "relativeMountPath": "str",
                                        "mountOptions": "str",
                                    },
                                    "cifsMountConfiguration": {
                                        "password": "str",
                                        "relativeMountPath": "str",
                                        "source": "str",
                                        "username": "str",
                                        "mountOptions": "str",
                                    },
                                    "nfsMountConfiguration": {
                                        "relativeMountPath": "str",
                                        "source": "str",
                                        "mountOptions": "str",
                                    },
                                }
                            ],
                            "networkConfiguration": {
                                "dynamicVNetAssignmentScope": "str",
                                "enableAcceleratedNetworking": bool,
                                "endpointConfiguration": {
                                    "inboundNATPools": [
                                        {
                                            "backendPort": 0,
                                            "frontendPortRangeEnd": 0,
                                            "frontendPortRangeStart": 0,
                                            "name": "str",
                                            "protocol": "str",
                                            "networkSecurityGroupRules": [
                                                {
                                                    "access": "str",
                                                    "priority": 0,
                                                    "sourceAddressPrefix": "str",
                                                    "sourcePortRanges": ["str"],
                                                }
                                            ],
                                        }
                                    ]
                                },
                                "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                                "subnetId": "str",
                            },
                            "resizeTimeout": "1 day, 0:00:00",
                            "resourceTags": "str",
                            "startTask": {
                                "commandLine": "str",
                                "containerSettings": {
                                    "imageName": "str",
                                    "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                                    "containerRunOptions": "str",
                                    "registry": {
                                        "identityReference": {"resourceId": "str"},
                                        "password": "str",
                                        "registryServer": "str",
                                        "username": "str",
                                    },
                                    "workingDirectory": "str",
                                },
                                "environmentSettings": [{"name": "str", "value": "str"}],
                                "maxTaskRetryCount": 0,
                                "resourceFiles": [
                                    {
                                        "autoStorageContainerName": "str",
                                        "blobPrefix": "str",
                                        "fileMode": "str",
                                        "filePath": "str",
                                        "httpUrl": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "storageContainerUrl": "str",
                                    }
                                ],
                                "userIdentity": {
                                    "autoUser": {"elevationLevel": "str", "scope": "str"},
                                    "username": "str",
                                },
                                "waitForSuccess": bool,
                            },
                            "targetDedicatedNodes": 0,
                            "targetLowPriorityNodes": 0,
                            "targetNodeCommunicationMode": "str",
                            "taskSchedulingPolicy": {"nodeFillType": "str"},
                            "taskSlotsPerNode": 0,
                            "upgradePolicy": {
                                "mode": "str",
                                "automaticOSUpgradePolicy": {
                                    "disableAutomaticRollback": bool,
                                    "enableAutomaticOSUpgrade": bool,
                                    "osRollingUpgradeDeferral": bool,
                                    "useRollingUpgradePolicy": bool,
                                },
                                "rollingUpgradePolicy": {
                                    "enableCrossZoneUpgrade": bool,
                                    "maxBatchInstancePercent": 0,
                                    "maxUnhealthyInstancePercent": 0,
                                    "maxUnhealthyUpgradedInstancePercent": 0,
                                    "pauseTimeBetweenBatches": "1 day, 0:00:00",
                                    "prioritizeUnhealthyInstances": bool,
                                    "rollbackFailedInstancesOnPolicyBreach": bool,
                                },
                            },
                            "userAccounts": [
                                {
                                    "name": "str",
                                    "password": "str",
                                    "elevationLevel": "str",
                                    "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                                    "windowsUserConfiguration": {"loginMode": "str"},
                                }
                            ],
                            "virtualMachineConfiguration": {
                                "imageReference": {
                                    "communityGalleryImageId": "str",
                                    "exactVersion": "str",
                                    "offer": "str",
                                    "publisher": "str",
                                    "sharedGalleryImageId": "str",
                                    "sku": "str",
                                    "version": "str",
                                    "virtualMachineImageId": "str",
                                },
                                "nodeAgentSKUId": "str",
                                "containerConfiguration": {
                                    "type": "str",
                                    "containerImageNames": ["str"],
                                    "containerRegistries": [
                                        {
                                            "identityReference": {"resourceId": "str"},
                                            "password": "str",
                                            "registryServer": "str",
                                            "username": "str",
                                        }
                                    ],
                                },
                                "dataDisks": [
                                    {"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}
                                ],
                                "diskEncryptionConfiguration": {"targets": ["str"]},
                                "extensions": [
                                    {
                                        "name": "str",
                                        "publisher": "str",
                                        "type": "str",
                                        "autoUpgradeMinorVersion": bool,
                                        "enableAutomaticUpgrade": bool,
                                        "protectedSettings": {"str": "str"},
                                        "provisionAfterExtensions": ["str"],
                                        "settings": {"str": "str"},
                                        "typeHandlerVersion": "str",
                                    }
                                ],
                                "licenseType": "str",
                                "nodePlacementConfiguration": {"policy": "str"},
                                "osDisk": {
                                    "caching": "str",
                                    "diskSizeGB": 0,
                                    "ephemeralOSDiskSettings": {"placement": "str"},
                                    "managedDisk": {
                                        "securityProfile": {"securityEncryptionType": "str"},
                                        "storageAccountType": "str",
                                    },
                                    "writeAcceleratorEnabled": bool,
                                },
                                "securityProfile": {
                                    "encryptionAtHost": bool,
                                    "securityType": "str",
                                    "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                                },
                                "serviceArtifactReference": {"id": "str"},
                                "windowsConfiguration": {"enableAutomaticUpdates": bool},
                            },
                        },
                    },
                    "poolId": "str",
                },
                "allowTaskPreemption": bool,
                "commonEnvironmentSettings": [{"name": "str", "value": "str"}],
                "constraints": {"maxTaskRetryCount": 0, "maxWallClockTime": "1 day, 0:00:00"},
                "displayName": "str",
                "jobManagerTask": {
                    "commandLine": "str",
                    "id": "str",
                    "allowLowPriorityNode": bool,
                    "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                    "authenticationTokenSettings": {"access": ["str"]},
                    "constraints": {
                        "maxTaskRetryCount": 0,
                        "maxWallClockTime": "1 day, 0:00:00",
                        "retentionTime": "1 day, 0:00:00",
                    },
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "displayName": "str",
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "killJobOnCompletion": bool,
                    "outputFiles": [
                        {
                            "destination": {
                                "container": {
                                    "containerUrl": "str",
                                    "identityReference": {"resourceId": "str"},
                                    "path": "str",
                                    "uploadHeaders": [{"name": "str", "value": "str"}],
                                }
                            },
                            "filePattern": "str",
                            "uploadOptions": {"uploadCondition": "str"},
                        }
                    ],
                    "requiredSlots": 0,
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "runExclusive": bool,
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                },
                "jobPreparationTask": {
                    "commandLine": "str",
                    "constraints": {
                        "maxTaskRetryCount": 0,
                        "maxWallClockTime": "1 day, 0:00:00",
                        "retentionTime": "1 day, 0:00:00",
                    },
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "id": "str",
                    "rerunOnNodeRebootAfterSuccess": bool,
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    "waitForSuccess": bool,
                },
                "jobReleaseTask": {
                    "commandLine": "str",
                    "containerSettings": {
                        "imageName": "str",
                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                        "containerRunOptions": "str",
                        "registry": {
                            "identityReference": {"resourceId": "str"},
                            "password": "str",
                            "registryServer": "str",
                            "username": "str",
                        },
                        "workingDirectory": "str",
                    },
                    "environmentSettings": [{"name": "str", "value": "str"}],
                    "id": "str",
                    "maxWallClockTime": "1 day, 0:00:00",
                    "resourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "retentionTime": "1 day, 0:00:00",
                    "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                },
                "maxParallelTasks": 0,
                "metadata": [{"name": "str", "value": "str"}],
                "networkConfiguration": {"skipWithdrawFromVNet": bool, "subnetId": "str"},
                "onAllTasksComplete": "str",
                "onTaskFailure": "str",
                "priority": 0,
                "usesTaskDependencies": bool,
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_jobs(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_jobs()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_jobs_from_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_jobs_from_schedule(
            job_schedule_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_job_preparation_and_release_task_status(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_job_preparation_and_release_task_status(
            job_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_job_task_counts(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_job_task_counts(
            job_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_job_schedule_exists(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.job_schedule_exists(
            job_schedule_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_delete_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.delete_job_schedule(
            job_schedule_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_job_schedule(
            job_schedule_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_update_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.update_job_schedule(
            job_schedule_id="str",
            job_schedule={
                "jobSpecification": {
                    "poolInfo": {
                        "autoPoolSpecification": {
                            "poolLifetimeOption": "str",
                            "autoPoolIdPrefix": "str",
                            "keepAlive": bool,
                            "pool": {
                                "vmSize": "str",
                                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                                "autoScaleEvaluationInterval": "1 day, 0:00:00",
                                "autoScaleFormula": "str",
                                "displayName": "str",
                                "enableAutoScale": bool,
                                "enableInterNodeCommunication": bool,
                                "metadata": [{"name": "str", "value": "str"}],
                                "mountConfiguration": [
                                    {
                                        "azureBlobFileSystemConfiguration": {
                                            "accountName": "str",
                                            "containerName": "str",
                                            "relativeMountPath": "str",
                                            "accountKey": "str",
                                            "blobfuseOptions": "str",
                                            "identityReference": {"resourceId": "str"},
                                            "sasKey": "str",
                                        },
                                        "azureFileShareConfiguration": {
                                            "accountKey": "str",
                                            "accountName": "str",
                                            "azureFileUrl": "str",
                                            "relativeMountPath": "str",
                                            "mountOptions": "str",
                                        },
                                        "cifsMountConfiguration": {
                                            "password": "str",
                                            "relativeMountPath": "str",
                                            "source": "str",
                                            "username": "str",
                                            "mountOptions": "str",
                                        },
                                        "nfsMountConfiguration": {
                                            "relativeMountPath": "str",
                                            "source": "str",
                                            "mountOptions": "str",
                                        },
                                    }
                                ],
                                "networkConfiguration": {
                                    "dynamicVNetAssignmentScope": "str",
                                    "enableAcceleratedNetworking": bool,
                                    "endpointConfiguration": {
                                        "inboundNATPools": [
                                            {
                                                "backendPort": 0,
                                                "frontendPortRangeEnd": 0,
                                                "frontendPortRangeStart": 0,
                                                "name": "str",
                                                "protocol": "str",
                                                "networkSecurityGroupRules": [
                                                    {
                                                        "access": "str",
                                                        "priority": 0,
                                                        "sourceAddressPrefix": "str",
                                                        "sourcePortRanges": ["str"],
                                                    }
                                                ],
                                            }
                                        ]
                                    },
                                    "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                                    "subnetId": "str",
                                },
                                "resizeTimeout": "1 day, 0:00:00",
                                "resourceTags": "str",
                                "startTask": {
                                    "commandLine": "str",
                                    "containerSettings": {
                                        "imageName": "str",
                                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                                        "containerRunOptions": "str",
                                        "registry": {
                                            "identityReference": {"resourceId": "str"},
                                            "password": "str",
                                            "registryServer": "str",
                                            "username": "str",
                                        },
                                        "workingDirectory": "str",
                                    },
                                    "environmentSettings": [{"name": "str", "value": "str"}],
                                    "maxTaskRetryCount": 0,
                                    "resourceFiles": [
                                        {
                                            "autoStorageContainerName": "str",
                                            "blobPrefix": "str",
                                            "fileMode": "str",
                                            "filePath": "str",
                                            "httpUrl": "str",
                                            "identityReference": {"resourceId": "str"},
                                            "storageContainerUrl": "str",
                                        }
                                    ],
                                    "userIdentity": {
                                        "autoUser": {"elevationLevel": "str", "scope": "str"},
                                        "username": "str",
                                    },
                                    "waitForSuccess": bool,
                                },
                                "targetDedicatedNodes": 0,
                                "targetLowPriorityNodes": 0,
                                "targetNodeCommunicationMode": "str",
                                "taskSchedulingPolicy": {"nodeFillType": "str"},
                                "taskSlotsPerNode": 0,
                                "upgradePolicy": {
                                    "mode": "str",
                                    "automaticOSUpgradePolicy": {
                                        "disableAutomaticRollback": bool,
                                        "enableAutomaticOSUpgrade": bool,
                                        "osRollingUpgradeDeferral": bool,
                                        "useRollingUpgradePolicy": bool,
                                    },
                                    "rollingUpgradePolicy": {
                                        "enableCrossZoneUpgrade": bool,
                                        "maxBatchInstancePercent": 0,
                                        "maxUnhealthyInstancePercent": 0,
                                        "maxUnhealthyUpgradedInstancePercent": 0,
                                        "pauseTimeBetweenBatches": "1 day, 0:00:00",
                                        "prioritizeUnhealthyInstances": bool,
                                        "rollbackFailedInstancesOnPolicyBreach": bool,
                                    },
                                },
                                "userAccounts": [
                                    {
                                        "name": "str",
                                        "password": "str",
                                        "elevationLevel": "str",
                                        "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                                        "windowsUserConfiguration": {"loginMode": "str"},
                                    }
                                ],
                                "virtualMachineConfiguration": {
                                    "imageReference": {
                                        "communityGalleryImageId": "str",
                                        "exactVersion": "str",
                                        "offer": "str",
                                        "publisher": "str",
                                        "sharedGalleryImageId": "str",
                                        "sku": "str",
                                        "version": "str",
                                        "virtualMachineImageId": "str",
                                    },
                                    "nodeAgentSKUId": "str",
                                    "containerConfiguration": {
                                        "type": "str",
                                        "containerImageNames": ["str"],
                                        "containerRegistries": [
                                            {
                                                "identityReference": {"resourceId": "str"},
                                                "password": "str",
                                                "registryServer": "str",
                                                "username": "str",
                                            }
                                        ],
                                    },
                                    "dataDisks": [
                                        {"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}
                                    ],
                                    "diskEncryptionConfiguration": {"targets": ["str"]},
                                    "extensions": [
                                        {
                                            "name": "str",
                                            "publisher": "str",
                                            "type": "str",
                                            "autoUpgradeMinorVersion": bool,
                                            "enableAutomaticUpgrade": bool,
                                            "protectedSettings": {"str": "str"},
                                            "provisionAfterExtensions": ["str"],
                                            "settings": {"str": "str"},
                                            "typeHandlerVersion": "str",
                                        }
                                    ],
                                    "licenseType": "str",
                                    "nodePlacementConfiguration": {"policy": "str"},
                                    "osDisk": {
                                        "caching": "str",
                                        "diskSizeGB": 0,
                                        "ephemeralOSDiskSettings": {"placement": "str"},
                                        "managedDisk": {
                                            "securityProfile": {"securityEncryptionType": "str"},
                                            "storageAccountType": "str",
                                        },
                                        "writeAcceleratorEnabled": bool,
                                    },
                                    "securityProfile": {
                                        "encryptionAtHost": bool,
                                        "securityType": "str",
                                        "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                                    },
                                    "serviceArtifactReference": {"id": "str"},
                                    "windowsConfiguration": {"enableAutomaticUpdates": bool},
                                },
                            },
                        },
                        "poolId": "str",
                    },
                    "allowTaskPreemption": bool,
                    "commonEnvironmentSettings": [{"name": "str", "value": "str"}],
                    "constraints": {"maxTaskRetryCount": 0, "maxWallClockTime": "1 day, 0:00:00"},
                    "displayName": "str",
                    "jobManagerTask": {
                        "commandLine": "str",
                        "id": "str",
                        "allowLowPriorityNode": bool,
                        "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                        "authenticationTokenSettings": {"access": ["str"]},
                        "constraints": {
                            "maxTaskRetryCount": 0,
                            "maxWallClockTime": "1 day, 0:00:00",
                            "retentionTime": "1 day, 0:00:00",
                        },
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "displayName": "str",
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "killJobOnCompletion": bool,
                        "outputFiles": [
                            {
                                "destination": {
                                    "container": {
                                        "containerUrl": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "path": "str",
                                        "uploadHeaders": [{"name": "str", "value": "str"}],
                                    }
                                },
                                "filePattern": "str",
                                "uploadOptions": {"uploadCondition": "str"},
                            }
                        ],
                        "requiredSlots": 0,
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "runExclusive": bool,
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    },
                    "jobPreparationTask": {
                        "commandLine": "str",
                        "constraints": {
                            "maxTaskRetryCount": 0,
                            "maxWallClockTime": "1 day, 0:00:00",
                            "retentionTime": "1 day, 0:00:00",
                        },
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "id": "str",
                        "rerunOnNodeRebootAfterSuccess": bool,
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                        "waitForSuccess": bool,
                    },
                    "jobReleaseTask": {
                        "commandLine": "str",
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "id": "str",
                        "maxWallClockTime": "1 day, 0:00:00",
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "retentionTime": "1 day, 0:00:00",
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    },
                    "maxParallelTasks": 0,
                    "metadata": [{"name": "str", "value": "str"}],
                    "networkConfiguration": {"skipWithdrawFromVNet": bool, "subnetId": "str"},
                    "onAllTasksComplete": "str",
                    "onTaskFailure": "str",
                    "priority": 0,
                    "usesTaskDependencies": bool,
                },
                "metadata": [{"name": "str", "value": "str"}],
                "schedule": {
                    "doNotRunAfter": "2020-02-20 00:00:00",
                    "doNotRunUntil": "2020-02-20 00:00:00",
                    "recurrenceInterval": "1 day, 0:00:00",
                    "startWindow": "1 day, 0:00:00",
                },
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_replace_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.replace_job_schedule(
            job_schedule_id="str",
            job_schedule={
                "jobSpecification": {
                    "poolInfo": {
                        "autoPoolSpecification": {
                            "poolLifetimeOption": "str",
                            "autoPoolIdPrefix": "str",
                            "keepAlive": bool,
                            "pool": {
                                "vmSize": "str",
                                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                                "autoScaleEvaluationInterval": "1 day, 0:00:00",
                                "autoScaleFormula": "str",
                                "displayName": "str",
                                "enableAutoScale": bool,
                                "enableInterNodeCommunication": bool,
                                "metadata": [{"name": "str", "value": "str"}],
                                "mountConfiguration": [
                                    {
                                        "azureBlobFileSystemConfiguration": {
                                            "accountName": "str",
                                            "containerName": "str",
                                            "relativeMountPath": "str",
                                            "accountKey": "str",
                                            "blobfuseOptions": "str",
                                            "identityReference": {"resourceId": "str"},
                                            "sasKey": "str",
                                        },
                                        "azureFileShareConfiguration": {
                                            "accountKey": "str",
                                            "accountName": "str",
                                            "azureFileUrl": "str",
                                            "relativeMountPath": "str",
                                            "mountOptions": "str",
                                        },
                                        "cifsMountConfiguration": {
                                            "password": "str",
                                            "relativeMountPath": "str",
                                            "source": "str",
                                            "username": "str",
                                            "mountOptions": "str",
                                        },
                                        "nfsMountConfiguration": {
                                            "relativeMountPath": "str",
                                            "source": "str",
                                            "mountOptions": "str",
                                        },
                                    }
                                ],
                                "networkConfiguration": {
                                    "dynamicVNetAssignmentScope": "str",
                                    "enableAcceleratedNetworking": bool,
                                    "endpointConfiguration": {
                                        "inboundNATPools": [
                                            {
                                                "backendPort": 0,
                                                "frontendPortRangeEnd": 0,
                                                "frontendPortRangeStart": 0,
                                                "name": "str",
                                                "protocol": "str",
                                                "networkSecurityGroupRules": [
                                                    {
                                                        "access": "str",
                                                        "priority": 0,
                                                        "sourceAddressPrefix": "str",
                                                        "sourcePortRanges": ["str"],
                                                    }
                                                ],
                                            }
                                        ]
                                    },
                                    "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                                    "subnetId": "str",
                                },
                                "resizeTimeout": "1 day, 0:00:00",
                                "resourceTags": "str",
                                "startTask": {
                                    "commandLine": "str",
                                    "containerSettings": {
                                        "imageName": "str",
                                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                                        "containerRunOptions": "str",
                                        "registry": {
                                            "identityReference": {"resourceId": "str"},
                                            "password": "str",
                                            "registryServer": "str",
                                            "username": "str",
                                        },
                                        "workingDirectory": "str",
                                    },
                                    "environmentSettings": [{"name": "str", "value": "str"}],
                                    "maxTaskRetryCount": 0,
                                    "resourceFiles": [
                                        {
                                            "autoStorageContainerName": "str",
                                            "blobPrefix": "str",
                                            "fileMode": "str",
                                            "filePath": "str",
                                            "httpUrl": "str",
                                            "identityReference": {"resourceId": "str"},
                                            "storageContainerUrl": "str",
                                        }
                                    ],
                                    "userIdentity": {
                                        "autoUser": {"elevationLevel": "str", "scope": "str"},
                                        "username": "str",
                                    },
                                    "waitForSuccess": bool,
                                },
                                "targetDedicatedNodes": 0,
                                "targetLowPriorityNodes": 0,
                                "targetNodeCommunicationMode": "str",
                                "taskSchedulingPolicy": {"nodeFillType": "str"},
                                "taskSlotsPerNode": 0,
                                "upgradePolicy": {
                                    "mode": "str",
                                    "automaticOSUpgradePolicy": {
                                        "disableAutomaticRollback": bool,
                                        "enableAutomaticOSUpgrade": bool,
                                        "osRollingUpgradeDeferral": bool,
                                        "useRollingUpgradePolicy": bool,
                                    },
                                    "rollingUpgradePolicy": {
                                        "enableCrossZoneUpgrade": bool,
                                        "maxBatchInstancePercent": 0,
                                        "maxUnhealthyInstancePercent": 0,
                                        "maxUnhealthyUpgradedInstancePercent": 0,
                                        "pauseTimeBetweenBatches": "1 day, 0:00:00",
                                        "prioritizeUnhealthyInstances": bool,
                                        "rollbackFailedInstancesOnPolicyBreach": bool,
                                    },
                                },
                                "userAccounts": [
                                    {
                                        "name": "str",
                                        "password": "str",
                                        "elevationLevel": "str",
                                        "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                                        "windowsUserConfiguration": {"loginMode": "str"},
                                    }
                                ],
                                "virtualMachineConfiguration": {
                                    "imageReference": {
                                        "communityGalleryImageId": "str",
                                        "exactVersion": "str",
                                        "offer": "str",
                                        "publisher": "str",
                                        "sharedGalleryImageId": "str",
                                        "sku": "str",
                                        "version": "str",
                                        "virtualMachineImageId": "str",
                                    },
                                    "nodeAgentSKUId": "str",
                                    "containerConfiguration": {
                                        "type": "str",
                                        "containerImageNames": ["str"],
                                        "containerRegistries": [
                                            {
                                                "identityReference": {"resourceId": "str"},
                                                "password": "str",
                                                "registryServer": "str",
                                                "username": "str",
                                            }
                                        ],
                                    },
                                    "dataDisks": [
                                        {"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}
                                    ],
                                    "diskEncryptionConfiguration": {"targets": ["str"]},
                                    "extensions": [
                                        {
                                            "name": "str",
                                            "publisher": "str",
                                            "type": "str",
                                            "autoUpgradeMinorVersion": bool,
                                            "enableAutomaticUpgrade": bool,
                                            "protectedSettings": {"str": "str"},
                                            "provisionAfterExtensions": ["str"],
                                            "settings": {"str": "str"},
                                            "typeHandlerVersion": "str",
                                        }
                                    ],
                                    "licenseType": "str",
                                    "nodePlacementConfiguration": {"policy": "str"},
                                    "osDisk": {
                                        "caching": "str",
                                        "diskSizeGB": 0,
                                        "ephemeralOSDiskSettings": {"placement": "str"},
                                        "managedDisk": {
                                            "securityProfile": {"securityEncryptionType": "str"},
                                            "storageAccountType": "str",
                                        },
                                        "writeAcceleratorEnabled": bool,
                                    },
                                    "securityProfile": {
                                        "encryptionAtHost": bool,
                                        "securityType": "str",
                                        "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                                    },
                                    "serviceArtifactReference": {"id": "str"},
                                    "windowsConfiguration": {"enableAutomaticUpdates": bool},
                                },
                            },
                        },
                        "poolId": "str",
                    },
                    "allowTaskPreemption": bool,
                    "commonEnvironmentSettings": [{"name": "str", "value": "str"}],
                    "constraints": {"maxTaskRetryCount": 0, "maxWallClockTime": "1 day, 0:00:00"},
                    "displayName": "str",
                    "jobManagerTask": {
                        "commandLine": "str",
                        "id": "str",
                        "allowLowPriorityNode": bool,
                        "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                        "authenticationTokenSettings": {"access": ["str"]},
                        "constraints": {
                            "maxTaskRetryCount": 0,
                            "maxWallClockTime": "1 day, 0:00:00",
                            "retentionTime": "1 day, 0:00:00",
                        },
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "displayName": "str",
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "killJobOnCompletion": bool,
                        "outputFiles": [
                            {
                                "destination": {
                                    "container": {
                                        "containerUrl": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "path": "str",
                                        "uploadHeaders": [{"name": "str", "value": "str"}],
                                    }
                                },
                                "filePattern": "str",
                                "uploadOptions": {"uploadCondition": "str"},
                            }
                        ],
                        "requiredSlots": 0,
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "runExclusive": bool,
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    },
                    "jobPreparationTask": {
                        "commandLine": "str",
                        "constraints": {
                            "maxTaskRetryCount": 0,
                            "maxWallClockTime": "1 day, 0:00:00",
                            "retentionTime": "1 day, 0:00:00",
                        },
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "id": "str",
                        "rerunOnNodeRebootAfterSuccess": bool,
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                        "waitForSuccess": bool,
                    },
                    "jobReleaseTask": {
                        "commandLine": "str",
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "id": "str",
                        "maxWallClockTime": "1 day, 0:00:00",
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "retentionTime": "1 day, 0:00:00",
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    },
                    "maxParallelTasks": 0,
                    "metadata": [{"name": "str", "value": "str"}],
                    "networkConfiguration": {"skipWithdrawFromVNet": bool, "subnetId": "str"},
                    "onAllTasksComplete": "str",
                    "onTaskFailure": "str",
                    "priority": 0,
                    "usesTaskDependencies": bool,
                },
                "creationTime": "2020-02-20 00:00:00",
                "displayName": "str",
                "eTag": "str",
                "executionInfo": {
                    "endTime": "2020-02-20 00:00:00",
                    "nextRunTime": "2020-02-20 00:00:00",
                    "recentJob": {"id": "str", "url": "str"},
                },
                "id": "str",
                "lastModified": "2020-02-20 00:00:00",
                "metadata": [{"name": "str", "value": "str"}],
                "previousState": "str",
                "previousStateTransitionTime": "2020-02-20 00:00:00",
                "schedule": {
                    "doNotRunAfter": "2020-02-20 00:00:00",
                    "doNotRunUntil": "2020-02-20 00:00:00",
                    "recurrenceInterval": "1 day, 0:00:00",
                    "startWindow": "1 day, 0:00:00",
                },
                "state": "str",
                "stateTransitionTime": "2020-02-20 00:00:00",
                "stats": {
                    "kernelCPUTime": "1 day, 0:00:00",
                    "lastUpdateTime": "2020-02-20 00:00:00",
                    "numFailedTasks": 0,
                    "numSucceededTasks": 0,
                    "numTaskRetries": 0,
                    "readIOGiB": 0.0,
                    "readIOps": 0,
                    "startTime": "2020-02-20 00:00:00",
                    "url": "str",
                    "userCPUTime": "1 day, 0:00:00",
                    "waitTime": "1 day, 0:00:00",
                    "wallClockTime": "1 day, 0:00:00",
                    "writeIOGiB": 0.0,
                    "writeIOps": 0,
                },
                "url": "str",
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_disable_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.disable_job_schedule(
            job_schedule_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_enable_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.enable_job_schedule(
            job_schedule_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_terminate_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.terminate_job_schedule(
            job_schedule_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_create_job_schedule(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.create_job_schedule(
            job_schedule={
                "id": "str",
                "jobSpecification": {
                    "poolInfo": {
                        "autoPoolSpecification": {
                            "poolLifetimeOption": "str",
                            "autoPoolIdPrefix": "str",
                            "keepAlive": bool,
                            "pool": {
                                "vmSize": "str",
                                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                                "autoScaleEvaluationInterval": "1 day, 0:00:00",
                                "autoScaleFormula": "str",
                                "displayName": "str",
                                "enableAutoScale": bool,
                                "enableInterNodeCommunication": bool,
                                "metadata": [{"name": "str", "value": "str"}],
                                "mountConfiguration": [
                                    {
                                        "azureBlobFileSystemConfiguration": {
                                            "accountName": "str",
                                            "containerName": "str",
                                            "relativeMountPath": "str",
                                            "accountKey": "str",
                                            "blobfuseOptions": "str",
                                            "identityReference": {"resourceId": "str"},
                                            "sasKey": "str",
                                        },
                                        "azureFileShareConfiguration": {
                                            "accountKey": "str",
                                            "accountName": "str",
                                            "azureFileUrl": "str",
                                            "relativeMountPath": "str",
                                            "mountOptions": "str",
                                        },
                                        "cifsMountConfiguration": {
                                            "password": "str",
                                            "relativeMountPath": "str",
                                            "source": "str",
                                            "username": "str",
                                            "mountOptions": "str",
                                        },
                                        "nfsMountConfiguration": {
                                            "relativeMountPath": "str",
                                            "source": "str",
                                            "mountOptions": "str",
                                        },
                                    }
                                ],
                                "networkConfiguration": {
                                    "dynamicVNetAssignmentScope": "str",
                                    "enableAcceleratedNetworking": bool,
                                    "endpointConfiguration": {
                                        "inboundNATPools": [
                                            {
                                                "backendPort": 0,
                                                "frontendPortRangeEnd": 0,
                                                "frontendPortRangeStart": 0,
                                                "name": "str",
                                                "protocol": "str",
                                                "networkSecurityGroupRules": [
                                                    {
                                                        "access": "str",
                                                        "priority": 0,
                                                        "sourceAddressPrefix": "str",
                                                        "sourcePortRanges": ["str"],
                                                    }
                                                ],
                                            }
                                        ]
                                    },
                                    "publicIPAddressConfiguration": {"ipAddressIds": ["str"], "provision": "str"},
                                    "subnetId": "str",
                                },
                                "resizeTimeout": "1 day, 0:00:00",
                                "resourceTags": "str",
                                "startTask": {
                                    "commandLine": "str",
                                    "containerSettings": {
                                        "imageName": "str",
                                        "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                                        "containerRunOptions": "str",
                                        "registry": {
                                            "identityReference": {"resourceId": "str"},
                                            "password": "str",
                                            "registryServer": "str",
                                            "username": "str",
                                        },
                                        "workingDirectory": "str",
                                    },
                                    "environmentSettings": [{"name": "str", "value": "str"}],
                                    "maxTaskRetryCount": 0,
                                    "resourceFiles": [
                                        {
                                            "autoStorageContainerName": "str",
                                            "blobPrefix": "str",
                                            "fileMode": "str",
                                            "filePath": "str",
                                            "httpUrl": "str",
                                            "identityReference": {"resourceId": "str"},
                                            "storageContainerUrl": "str",
                                        }
                                    ],
                                    "userIdentity": {
                                        "autoUser": {"elevationLevel": "str", "scope": "str"},
                                        "username": "str",
                                    },
                                    "waitForSuccess": bool,
                                },
                                "targetDedicatedNodes": 0,
                                "targetLowPriorityNodes": 0,
                                "targetNodeCommunicationMode": "str",
                                "taskSchedulingPolicy": {"nodeFillType": "str"},
                                "taskSlotsPerNode": 0,
                                "upgradePolicy": {
                                    "mode": "str",
                                    "automaticOSUpgradePolicy": {
                                        "disableAutomaticRollback": bool,
                                        "enableAutomaticOSUpgrade": bool,
                                        "osRollingUpgradeDeferral": bool,
                                        "useRollingUpgradePolicy": bool,
                                    },
                                    "rollingUpgradePolicy": {
                                        "enableCrossZoneUpgrade": bool,
                                        "maxBatchInstancePercent": 0,
                                        "maxUnhealthyInstancePercent": 0,
                                        "maxUnhealthyUpgradedInstancePercent": 0,
                                        "pauseTimeBetweenBatches": "1 day, 0:00:00",
                                        "prioritizeUnhealthyInstances": bool,
                                        "rollbackFailedInstancesOnPolicyBreach": bool,
                                    },
                                },
                                "userAccounts": [
                                    {
                                        "name": "str",
                                        "password": "str",
                                        "elevationLevel": "str",
                                        "linuxUserConfiguration": {"gid": 0, "sshPrivateKey": "str", "uid": 0},
                                        "windowsUserConfiguration": {"loginMode": "str"},
                                    }
                                ],
                                "virtualMachineConfiguration": {
                                    "imageReference": {
                                        "communityGalleryImageId": "str",
                                        "exactVersion": "str",
                                        "offer": "str",
                                        "publisher": "str",
                                        "sharedGalleryImageId": "str",
                                        "sku": "str",
                                        "version": "str",
                                        "virtualMachineImageId": "str",
                                    },
                                    "nodeAgentSKUId": "str",
                                    "containerConfiguration": {
                                        "type": "str",
                                        "containerImageNames": ["str"],
                                        "containerRegistries": [
                                            {
                                                "identityReference": {"resourceId": "str"},
                                                "password": "str",
                                                "registryServer": "str",
                                                "username": "str",
                                            }
                                        ],
                                    },
                                    "dataDisks": [
                                        {"diskSizeGB": 0, "lun": 0, "caching": "str", "storageAccountType": "str"}
                                    ],
                                    "diskEncryptionConfiguration": {"targets": ["str"]},
                                    "extensions": [
                                        {
                                            "name": "str",
                                            "publisher": "str",
                                            "type": "str",
                                            "autoUpgradeMinorVersion": bool,
                                            "enableAutomaticUpgrade": bool,
                                            "protectedSettings": {"str": "str"},
                                            "provisionAfterExtensions": ["str"],
                                            "settings": {"str": "str"},
                                            "typeHandlerVersion": "str",
                                        }
                                    ],
                                    "licenseType": "str",
                                    "nodePlacementConfiguration": {"policy": "str"},
                                    "osDisk": {
                                        "caching": "str",
                                        "diskSizeGB": 0,
                                        "ephemeralOSDiskSettings": {"placement": "str"},
                                        "managedDisk": {
                                            "securityProfile": {"securityEncryptionType": "str"},
                                            "storageAccountType": "str",
                                        },
                                        "writeAcceleratorEnabled": bool,
                                    },
                                    "securityProfile": {
                                        "encryptionAtHost": bool,
                                        "securityType": "str",
                                        "uefiSettings": {"secureBootEnabled": bool, "vTpmEnabled": bool},
                                    },
                                    "serviceArtifactReference": {"id": "str"},
                                    "windowsConfiguration": {"enableAutomaticUpdates": bool},
                                },
                            },
                        },
                        "poolId": "str",
                    },
                    "allowTaskPreemption": bool,
                    "commonEnvironmentSettings": [{"name": "str", "value": "str"}],
                    "constraints": {"maxTaskRetryCount": 0, "maxWallClockTime": "1 day, 0:00:00"},
                    "displayName": "str",
                    "jobManagerTask": {
                        "commandLine": "str",
                        "id": "str",
                        "allowLowPriorityNode": bool,
                        "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                        "authenticationTokenSettings": {"access": ["str"]},
                        "constraints": {
                            "maxTaskRetryCount": 0,
                            "maxWallClockTime": "1 day, 0:00:00",
                            "retentionTime": "1 day, 0:00:00",
                        },
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "displayName": "str",
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "killJobOnCompletion": bool,
                        "outputFiles": [
                            {
                                "destination": {
                                    "container": {
                                        "containerUrl": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "path": "str",
                                        "uploadHeaders": [{"name": "str", "value": "str"}],
                                    }
                                },
                                "filePattern": "str",
                                "uploadOptions": {"uploadCondition": "str"},
                            }
                        ],
                        "requiredSlots": 0,
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "runExclusive": bool,
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    },
                    "jobPreparationTask": {
                        "commandLine": "str",
                        "constraints": {
                            "maxTaskRetryCount": 0,
                            "maxWallClockTime": "1 day, 0:00:00",
                            "retentionTime": "1 day, 0:00:00",
                        },
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "id": "str",
                        "rerunOnNodeRebootAfterSuccess": bool,
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                        "waitForSuccess": bool,
                    },
                    "jobReleaseTask": {
                        "commandLine": "str",
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "id": "str",
                        "maxWallClockTime": "1 day, 0:00:00",
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "retentionTime": "1 day, 0:00:00",
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    },
                    "maxParallelTasks": 0,
                    "metadata": [{"name": "str", "value": "str"}],
                    "networkConfiguration": {"skipWithdrawFromVNet": bool, "subnetId": "str"},
                    "onAllTasksComplete": "str",
                    "onTaskFailure": "str",
                    "priority": 0,
                    "usesTaskDependencies": bool,
                },
                "schedule": {
                    "doNotRunAfter": "2020-02-20 00:00:00",
                    "doNotRunUntil": "2020-02-20 00:00:00",
                    "recurrenceInterval": "1 day, 0:00:00",
                    "startWindow": "1 day, 0:00:00",
                },
                "displayName": "str",
                "metadata": [{"name": "str", "value": "str"}],
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_job_schedules(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_job_schedules()
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_create_task(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.create_task(
            job_id="str",
            task={
                "commandLine": "str",
                "id": "str",
                "affinityInfo": {"affinityId": "str"},
                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                "authenticationTokenSettings": {"access": ["str"]},
                "constraints": {
                    "maxTaskRetryCount": 0,
                    "maxWallClockTime": "1 day, 0:00:00",
                    "retentionTime": "1 day, 0:00:00",
                },
                "containerSettings": {
                    "imageName": "str",
                    "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                    "containerRunOptions": "str",
                    "registry": {
                        "identityReference": {"resourceId": "str"},
                        "password": "str",
                        "registryServer": "str",
                        "username": "str",
                    },
                    "workingDirectory": "str",
                },
                "dependsOn": {"taskIdRanges": [{"end": 0, "start": 0}], "taskIds": ["str"]},
                "displayName": "str",
                "environmentSettings": [{"name": "str", "value": "str"}],
                "exitConditions": {
                    "default": {"dependencyAction": "str", "jobAction": "str"},
                    "exitCodeRanges": [
                        {"end": 0, "exitOptions": {"dependencyAction": "str", "jobAction": "str"}, "start": 0}
                    ],
                    "exitCodes": [{"code": 0, "exitOptions": {"dependencyAction": "str", "jobAction": "str"}}],
                    "fileUploadError": {"dependencyAction": "str", "jobAction": "str"},
                    "preProcessingError": {"dependencyAction": "str", "jobAction": "str"},
                },
                "multiInstanceSettings": {
                    "coordinationCommandLine": "str",
                    "commonResourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "numberOfInstances": 0,
                },
                "outputFiles": [
                    {
                        "destination": {
                            "container": {
                                "containerUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "path": "str",
                                "uploadHeaders": [{"name": "str", "value": "str"}],
                            }
                        },
                        "filePattern": "str",
                        "uploadOptions": {"uploadCondition": "str"},
                    }
                ],
                "requiredSlots": 0,
                "resourceFiles": [
                    {
                        "autoStorageContainerName": "str",
                        "blobPrefix": "str",
                        "fileMode": "str",
                        "filePath": "str",
                        "httpUrl": "str",
                        "identityReference": {"resourceId": "str"},
                        "storageContainerUrl": "str",
                    }
                ],
                "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_tasks(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_tasks(
            job_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_create_task_collection(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.create_task_collection(
            job_id="str",
            task_collection={
                "value": [
                    {
                        "commandLine": "str",
                        "id": "str",
                        "affinityInfo": {"affinityId": "str"},
                        "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                        "authenticationTokenSettings": {"access": ["str"]},
                        "constraints": {
                            "maxTaskRetryCount": 0,
                            "maxWallClockTime": "1 day, 0:00:00",
                            "retentionTime": "1 day, 0:00:00",
                        },
                        "containerSettings": {
                            "imageName": "str",
                            "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                            "containerRunOptions": "str",
                            "registry": {
                                "identityReference": {"resourceId": "str"},
                                "password": "str",
                                "registryServer": "str",
                                "username": "str",
                            },
                            "workingDirectory": "str",
                        },
                        "dependsOn": {"taskIdRanges": [{"end": 0, "start": 0}], "taskIds": ["str"]},
                        "displayName": "str",
                        "environmentSettings": [{"name": "str", "value": "str"}],
                        "exitConditions": {
                            "default": {"dependencyAction": "str", "jobAction": "str"},
                            "exitCodeRanges": [
                                {"end": 0, "exitOptions": {"dependencyAction": "str", "jobAction": "str"}, "start": 0}
                            ],
                            "exitCodes": [{"code": 0, "exitOptions": {"dependencyAction": "str", "jobAction": "str"}}],
                            "fileUploadError": {"dependencyAction": "str", "jobAction": "str"},
                            "preProcessingError": {"dependencyAction": "str", "jobAction": "str"},
                        },
                        "multiInstanceSettings": {
                            "coordinationCommandLine": "str",
                            "commonResourceFiles": [
                                {
                                    "autoStorageContainerName": "str",
                                    "blobPrefix": "str",
                                    "fileMode": "str",
                                    "filePath": "str",
                                    "httpUrl": "str",
                                    "identityReference": {"resourceId": "str"},
                                    "storageContainerUrl": "str",
                                }
                            ],
                            "numberOfInstances": 0,
                        },
                        "outputFiles": [
                            {
                                "destination": {
                                    "container": {
                                        "containerUrl": "str",
                                        "identityReference": {"resourceId": "str"},
                                        "path": "str",
                                        "uploadHeaders": [{"name": "str", "value": "str"}],
                                    }
                                },
                                "filePattern": "str",
                                "uploadOptions": {"uploadCondition": "str"},
                            }
                        ],
                        "requiredSlots": 0,
                        "resourceFiles": [
                            {
                                "autoStorageContainerName": "str",
                                "blobPrefix": "str",
                                "fileMode": "str",
                                "filePath": "str",
                                "httpUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "storageContainerUrl": "str",
                            }
                        ],
                        "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
                    }
                ]
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_delete_task(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.delete_task(
            job_id="str",
            task_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_task(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_task(
            job_id="str",
            task_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_replace_task(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.replace_task(
            job_id="str",
            task_id="str",
            task={
                "affinityInfo": {"affinityId": "str"},
                "applicationPackageReferences": [{"applicationId": "str", "version": "str"}],
                "authenticationTokenSettings": {"access": ["str"]},
                "commandLine": "str",
                "constraints": {
                    "maxTaskRetryCount": 0,
                    "maxWallClockTime": "1 day, 0:00:00",
                    "retentionTime": "1 day, 0:00:00",
                },
                "containerSettings": {
                    "imageName": "str",
                    "containerHostBatchBindMounts": [{"isReadOnly": bool, "source": "str"}],
                    "containerRunOptions": "str",
                    "registry": {
                        "identityReference": {"resourceId": "str"},
                        "password": "str",
                        "registryServer": "str",
                        "username": "str",
                    },
                    "workingDirectory": "str",
                },
                "creationTime": "2020-02-20 00:00:00",
                "dependsOn": {"taskIdRanges": [{"end": 0, "start": 0}], "taskIds": ["str"]},
                "displayName": "str",
                "eTag": "str",
                "environmentSettings": [{"name": "str", "value": "str"}],
                "executionInfo": {
                    "requeueCount": 0,
                    "retryCount": 0,
                    "containerInfo": {"containerId": "str", "error": "str", "state": "str"},
                    "endTime": "2020-02-20 00:00:00",
                    "exitCode": 0,
                    "failureInfo": {
                        "category": "str",
                        "code": "str",
                        "details": [{"name": "str", "value": "str"}],
                        "message": "str",
                    },
                    "lastRequeueTime": "2020-02-20 00:00:00",
                    "lastRetryTime": "2020-02-20 00:00:00",
                    "result": "str",
                    "startTime": "2020-02-20 00:00:00",
                },
                "exitConditions": {
                    "default": {"dependencyAction": "str", "jobAction": "str"},
                    "exitCodeRanges": [
                        {"end": 0, "exitOptions": {"dependencyAction": "str", "jobAction": "str"}, "start": 0}
                    ],
                    "exitCodes": [{"code": 0, "exitOptions": {"dependencyAction": "str", "jobAction": "str"}}],
                    "fileUploadError": {"dependencyAction": "str", "jobAction": "str"},
                    "preProcessingError": {"dependencyAction": "str", "jobAction": "str"},
                },
                "id": "str",
                "lastModified": "2020-02-20 00:00:00",
                "multiInstanceSettings": {
                    "coordinationCommandLine": "str",
                    "commonResourceFiles": [
                        {
                            "autoStorageContainerName": "str",
                            "blobPrefix": "str",
                            "fileMode": "str",
                            "filePath": "str",
                            "httpUrl": "str",
                            "identityReference": {"resourceId": "str"},
                            "storageContainerUrl": "str",
                        }
                    ],
                    "numberOfInstances": 0,
                },
                "nodeInfo": {
                    "affinityId": "str",
                    "nodeId": "str",
                    "nodeUrl": "str",
                    "poolId": "str",
                    "taskRootDirectory": "str",
                    "taskRootDirectoryUrl": "str",
                },
                "outputFiles": [
                    {
                        "destination": {
                            "container": {
                                "containerUrl": "str",
                                "identityReference": {"resourceId": "str"},
                                "path": "str",
                                "uploadHeaders": [{"name": "str", "value": "str"}],
                            }
                        },
                        "filePattern": "str",
                        "uploadOptions": {"uploadCondition": "str"},
                    }
                ],
                "previousState": "str",
                "previousStateTransitionTime": "2020-02-20 00:00:00",
                "requiredSlots": 0,
                "resourceFiles": [
                    {
                        "autoStorageContainerName": "str",
                        "blobPrefix": "str",
                        "fileMode": "str",
                        "filePath": "str",
                        "httpUrl": "str",
                        "identityReference": {"resourceId": "str"},
                        "storageContainerUrl": "str",
                    }
                ],
                "state": "str",
                "stateTransitionTime": "2020-02-20 00:00:00",
                "stats": {
                    "kernelCPUTime": "1 day, 0:00:00",
                    "lastUpdateTime": "2020-02-20 00:00:00",
                    "readIOGiB": 0.0,
                    "readIOps": 0,
                    "startTime": "2020-02-20 00:00:00",
                    "url": "str",
                    "userCPUTime": "1 day, 0:00:00",
                    "waitTime": "1 day, 0:00:00",
                    "wallClockTime": "1 day, 0:00:00",
                    "writeIOGiB": 0.0,
                    "writeIOps": 0,
                },
                "url": "str",
                "userIdentity": {"autoUser": {"elevationLevel": "str", "scope": "str"}, "username": "str"},
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_sub_tasks(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_sub_tasks(
            job_id="str",
            task_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_terminate_task(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.terminate_task(
            job_id="str",
            task_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_reactivate_task(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.reactivate_task(
            job_id="str",
            task_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_delete_task_file(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.delete_task_file(
            job_id="str",
            task_id="str",
            file_path="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_task_file(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_task_file(
            job_id="str",
            task_id="str",
            file_path="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_task_file_properties(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_task_file_properties(
            job_id="str",
            task_id="str",
            file_path="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_task_files(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_task_files(
            job_id="str",
            task_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_create_node_user(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.create_node_user(
            pool_id="str",
            node_id="str",
            user={
                "name": "str",
                "expiryTime": "2020-02-20 00:00:00",
                "isAdmin": bool,
                "password": "str",
                "sshPublicKey": "str",
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_delete_node_user(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.delete_node_user(
            pool_id="str",
            node_id="str",
            user_name="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_replace_node_user(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.replace_node_user(
            pool_id="str",
            node_id="str",
            user_name="str",
            content={"expiryTime": "2020-02-20 00:00:00", "password": "str", "sshPublicKey": "str"},
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_node(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_node(
            pool_id="str",
            node_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_reboot_node(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.reboot_node(
            pool_id="str",
            node_id="str",
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_start_node(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.start_node(
            pool_id="str",
            node_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_reimage_node(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.reimage_node(
            pool_id="str",
            node_id="str",
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_deallocate_node(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.deallocate_node(
            pool_id="str",
            node_id="str",
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_disable_node_scheduling(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.disable_node_scheduling(
            pool_id="str",
            node_id="str",
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_enable_node_scheduling(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.enable_node_scheduling(
            pool_id="str",
            node_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_node_remote_login_settings(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_node_remote_login_settings(
            pool_id="str",
            node_id="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_upload_node_logs(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.upload_node_logs(
            pool_id="str",
            node_id="str",
            content={
                "containerUrl": "str",
                "startTime": "2020-02-20 00:00:00",
                "endTime": "2020-02-20 00:00:00",
                "identityReference": {"resourceId": "str"},
            },
            content_type="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_nodes(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_nodes(
            pool_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_node_extension(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_node_extension(
            pool_id="str",
            node_id="str",
            extension_name="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_node_extensions(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_node_extensions(
            pool_id="str",
            node_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_delete_node_file(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.delete_node_file(
            pool_id="str",
            node_id="str",
            file_path="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_node_file(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_node_file(
            pool_id="str",
            node_id="str",
            file_path="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_get_node_file_properties(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = await client.get_node_file_properties(
            pool_id="str",
            node_id="str",
            file_path="str",
        )

        # please add some check logic here by yourself
        # ...

    @BatchPreparer()
    @recorded_by_proxy_async
    async def test_list_node_files(self, batch_endpoint):
        client = self.create_async_client(endpoint=batch_endpoint)
        response = client.list_node_files(
            pool_id="str",
            node_id="str",
        )
        result = [r async for r in response]
        # please add some check logic here by yourself
        # ...
