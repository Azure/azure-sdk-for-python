# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import AdmCredential
from ._models_py3 import ApnsCredential
from ._models_py3 import BaiduCredential
from ._models_py3 import CheckAvailabilityParameters
from ._models_py3 import CheckAvailabilityResult
from ._models_py3 import DebugSendResponse
from ._models_py3 import ErrorResponse
from ._models_py3 import GcmCredential
from ._models_py3 import MpnsCredential
from ._models_py3 import NamespaceCreateOrUpdateParameters
from ._models_py3 import NamespaceListResult
from ._models_py3 import NamespacePatchParameters
from ._models_py3 import NamespaceResource
from ._models_py3 import NotificationHubCreateOrUpdateParameters
from ._models_py3 import NotificationHubListResult
from ._models_py3 import NotificationHubPatchParameters
from ._models_py3 import NotificationHubResource
from ._models_py3 import Operation
from ._models_py3 import OperationDisplay
from ._models_py3 import OperationListResult
from ._models_py3 import PnsCredentialsResource
from ._models_py3 import PolicykeyResource
from ._models_py3 import Resource
from ._models_py3 import ResourceListKeys
from ._models_py3 import SharedAccessAuthorizationRuleCreateOrUpdateParameters
from ._models_py3 import SharedAccessAuthorizationRuleListResult
from ._models_py3 import SharedAccessAuthorizationRuleProperties
from ._models_py3 import SharedAccessAuthorizationRuleResource
from ._models_py3 import Sku
from ._models_py3 import SubResource
from ._models_py3 import WnsCredential

from ._notification_hubs_management_client_enums import AccessRights
from ._notification_hubs_management_client_enums import NamespaceType
from ._notification_hubs_management_client_enums import SkuName
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AdmCredential",
    "ApnsCredential",
    "BaiduCredential",
    "CheckAvailabilityParameters",
    "CheckAvailabilityResult",
    "DebugSendResponse",
    "ErrorResponse",
    "GcmCredential",
    "MpnsCredential",
    "NamespaceCreateOrUpdateParameters",
    "NamespaceListResult",
    "NamespacePatchParameters",
    "NamespaceResource",
    "NotificationHubCreateOrUpdateParameters",
    "NotificationHubListResult",
    "NotificationHubPatchParameters",
    "NotificationHubResource",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "PnsCredentialsResource",
    "PolicykeyResource",
    "Resource",
    "ResourceListKeys",
    "SharedAccessAuthorizationRuleCreateOrUpdateParameters",
    "SharedAccessAuthorizationRuleListResult",
    "SharedAccessAuthorizationRuleProperties",
    "SharedAccessAuthorizationRuleResource",
    "Sku",
    "SubResource",
    "WnsCredential",
    "AccessRights",
    "NamespaceType",
    "SkuName",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
