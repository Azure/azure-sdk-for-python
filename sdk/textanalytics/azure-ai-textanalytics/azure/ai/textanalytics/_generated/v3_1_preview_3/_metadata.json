{
    "chosen_version": "v3.1-preview.3",
    "total_api_version_list": ["v3.1-preview.3"],
    "client": {
        "name": "TextAnalyticsClient",
        "filename": "_text_analytics_client",
        "description": "The Text Analytics API is a suite of natural language processing (NLP)  services built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis,  key phrase extraction and language detection. Further documentation can be found in :code:`\u003ca href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\"\u003ehttps://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\u003c/a\u003e`.",
        "base_url": null,
        "custom_base_url": "\u0027{Endpoint}/text/analytics/v3.1-preview.3\u0027",
        "azure_arm": false,
        "has_lro_operations": true,
        "client_side_validation": false,
        "sync_imports": "{\"typing\": {\"azurecore\": {\"azure.core.credentials\": [\"TokenCredential\"]}}, \"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.core\": [\"PipelineClient\"]}, \"local\": {\"._configuration\": [\"TextAnalyticsClientConfiguration\"], \"._operations_mixin\": [\"TextAnalyticsClientOperationsMixin\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}}}",
        "async_imports": "{\"typing\": {\"azurecore\": {\"azure.core.credentials_async\": [\"AsyncTokenCredential\"]}}, \"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.core\": [\"AsyncPipelineClient\"]}, \"local\": {\"._configuration\": [\"TextAnalyticsClientConfiguration\"], \"._operations_mixin\": [\"TextAnalyticsClientOperationsMixin\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}}}"
    },
    "global_parameters": {
        "sync": {
            "credential": {
                "signature": "credential,  # type: \"TokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials.TokenCredential",
                "required": true
            },
            "endpoint": {
                "signature": "endpoint,  # type: str",
                "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
                "docstring_type": "str",
                "required": true
            }
        },
        "async": {
            "credential": {
                "signature": "credential: \"AsyncTokenCredential\",",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials_async.AsyncTokenCredential",
                "required": true
            },
            "endpoint": {
                "signature": "endpoint: str,",
                "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
                "docstring_type": "str",
                "required": true
            }
        },
        "constant": {
        },
        "call": "credential, endpoint"
    },
    "config": {
        "credential": true,
        "credential_scopes": ["https://cognitiveservices.azure.com/.default"],
        "credential_default_policy_type": "BearerTokenCredentialPolicy",
        "credential_default_policy_type_has_async_version": true,
        "credential_key_header_name": null,
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"]}, \"local\": {\"._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"typing\": {\"azurecore\": {\"azure.core.credentials\": [\"TokenCredential\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"]}, \"local\": {\".._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"typing\": {\"azurecore\": {\"azure.core.credentials_async\": [\"AsyncTokenCredential\"]}}}"
    },
    "operation_groups": {
    },
    "operation_mixins": {
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"], \"azure.core.polling\": [\"LROPoller\", \"NoPolling\", \"PollingMethod\"], \"azure.core.polling.base_polling\": [\"LROBasePolling\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"List\", \"Optional\", \"TypeVar\", \"Union\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"ClientAuthenticationError\", \"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"], \"azure.core.polling\": [\"AsyncLROPoller\", \"AsyncNoPolling\", \"AsyncPollingMethod\"], \"azure.core.polling.async_base_polling\": [\"AsyncLROBasePolling\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"List\", \"Optional\", \"TypeVar\", \"Union\"]}}}",
        "operations": {
            "_analyze_initial" : {
                "sync": {
                    "signature": "def _analyze_initial(\n    self,\n    body=None,  # type: Optional[\"_models.AnalyzeBatchInput\"]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"\n\n:param body: Collection of documents to analyze and tasks to execute.\n:type body: ~azure.ai.textanalytics.v3_1_preview_3.models.AnalyzeBatchInput\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: None, or the result of cls(response)\n:rtype: None\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def _analyze_initial(\n    self,\n    body: Optional[\"_models.AnalyzeBatchInput\"] = None,\n    **kwargs\n) -\u003e None:\n",
                    "doc": "\"\"\"\n\n:param body: Collection of documents to analyze and tasks to execute.\n:type body: ~azure.ai.textanalytics.v3_1_preview_3.models.AnalyzeBatchInput\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: None, or the result of cls(response)\n:rtype: None\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "body"
            },
            "begin_analyze" : {
                "sync": {
                    "signature": "def begin_analyze(\n    self,\n    body=None,  # type: Optional[\"_models.AnalyzeBatchInput\"]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Submit analysis job.\n\nSubmit a collection of text documents for analysis. Specify one or more unique tasks to be\nexecuted.\n\n:param body: Collection of documents to analyze and tasks to execute.\n:type body: ~azure.ai.textanalytics.v3_1_preview_3.models.AnalyzeBatchInput\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: Pass in True if you\u0027d like the LROBasePolling polling method,\n False for no polling, or your own initialized polling object for a personal polling strategy.\n:paramtype polling: bool or ~azure.core.polling.PollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.\n:return: An instance of LROPoller that returns either None or the result of cls(response)\n:rtype: ~azure.core.polling.LROPoller[None]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def begin_analyze(\n    self,\n    body: Optional[\"_models.AnalyzeBatchInput\"] = None,\n    **kwargs\n) -\u003e AsyncLROPoller[None]:\n",
                    "doc": "\"\"\"Submit analysis job.\n\nSubmit a collection of text documents for analysis. Specify one or more unique tasks to be\nexecuted.\n\n:param body: Collection of documents to analyze and tasks to execute.\n:type body: ~azure.ai.textanalytics.v3_1_preview_3.models.AnalyzeBatchInput\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: Pass in True if you\u0027d like the AsyncLROBasePolling polling method,\n False for no polling, or your own initialized polling object for a personal polling strategy.\n:paramtype polling: bool or ~azure.core.polling.AsyncPollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.\n:return: An instance of AsyncLROPoller that returns either None or the result of cls(response)\n:rtype: ~azure.core.polling.AsyncLROPoller[None]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\""
                },
                "call": "body"
            },
            "analyze_status" : {
                "sync": {
                    "signature": "def analyze_status(\n    self,\n    job_id,  # type: str\n    show_stats=None,  # type: Optional[bool]\n    top=20,  # type: Optional[int]\n    skip=0,  # type: Optional[int]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Get analysis status and results.\n\nGet the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are\ncompleted, the job will transition to the completed state and results will be available for\neach task.\n\n:param job_id: Job ID for Analyze.\n:type job_id: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param top: (Optional) Set the maximum number of results per task. When both $top and $skip are\n specified, $skip is applied first.\n:type top: int\n:param skip: (Optional) Set the number of elements to offset in the response. When both $top\n and $skip are specified, $skip is applied first.\n:type skip: int\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: AnalyzeJobState, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.AnalyzeJobState\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def analyze_status(\n    self,\n    job_id: str,\n    show_stats: Optional[bool] = None,\n    top: Optional[int] = 20,\n    skip: Optional[int] = 0,\n    **kwargs\n) -\u003e \"_models.AnalyzeJobState\":\n",
                    "doc": "\"\"\"Get analysis status and results.\n\nGet the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are\ncompleted, the job will transition to the completed state and results will be available for\neach task.\n\n:param job_id: Job ID for Analyze.\n:type job_id: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param top: (Optional) Set the maximum number of results per task. When both $top and $skip are\n specified, $skip is applied first.\n:type top: int\n:param skip: (Optional) Set the number of elements to offset in the response. When both $top\n and $skip are specified, $skip is applied first.\n:type skip: int\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: AnalyzeJobState, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.AnalyzeJobState\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "job_id, show_stats, top, skip"
            },
            "health_status" : {
                "sync": {
                    "signature": "def health_status(\n    self,\n    job_id,  # type: str\n    top=20,  # type: Optional[int]\n    skip=0,  # type: Optional[int]\n    show_stats=None,  # type: Optional[bool]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Get healthcare analysis job status and results.\n\nGet details of the healthcare prediction job specified by the jobId.\n\n:param job_id: Job ID.\n:type job_id: str\n:param top: (Optional) Set the maximum number of results per task. When both $top and $skip are\n specified, $skip is applied first.\n:type top: int\n:param skip: (Optional) Set the number of elements to offset in the response. When both $top\n and $skip are specified, $skip is applied first.\n:type skip: int\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: HealthcareJobState, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.HealthcareJobState\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def health_status(\n    self,\n    job_id: str,\n    top: Optional[int] = 20,\n    skip: Optional[int] = 0,\n    show_stats: Optional[bool] = None,\n    **kwargs\n) -\u003e \"_models.HealthcareJobState\":\n",
                    "doc": "\"\"\"Get healthcare analysis job status and results.\n\nGet details of the healthcare prediction job specified by the jobId.\n\n:param job_id: Job ID.\n:type job_id: str\n:param top: (Optional) Set the maximum number of results per task. When both $top and $skip are\n specified, $skip is applied first.\n:type top: int\n:param skip: (Optional) Set the number of elements to offset in the response. When both $top\n and $skip are specified, $skip is applied first.\n:type skip: int\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: HealthcareJobState, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.HealthcareJobState\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "job_id, top, skip, show_stats"
            },
            "_cancel_health_job_initial" : {
                "sync": {
                    "signature": "def _cancel_health_job_initial(\n    self,\n    job_id,  # type: str\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"\n\n:param job_id: Job ID.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: None, or the result of cls(response)\n:rtype: None\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def _cancel_health_job_initial(\n    self,\n    job_id: str,\n    **kwargs\n) -\u003e None:\n",
                    "doc": "\"\"\"\n\n:param job_id: Job ID.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: None, or the result of cls(response)\n:rtype: None\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "job_id"
            },
            "begin_cancel_health_job" : {
                "sync": {
                    "signature": "def begin_cancel_health_job(\n    self,\n    job_id,  # type: str\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Cancel healthcare prediction job.\n\nCancel healthcare prediction job.\n\n:param job_id: Job ID.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: Pass in True if you\u0027d like the LROBasePolling polling method,\n False for no polling, or your own initialized polling object for a personal polling strategy.\n:paramtype polling: bool or ~azure.core.polling.PollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.\n:return: An instance of LROPoller that returns either None or the result of cls(response)\n:rtype: ~azure.core.polling.LROPoller[None]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def begin_cancel_health_job(\n    self,\n    job_id: str,\n    **kwargs\n) -\u003e AsyncLROPoller[None]:\n",
                    "doc": "\"\"\"Cancel healthcare prediction job.\n\nCancel healthcare prediction job.\n\n:param job_id: Job ID.\n:type job_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: Pass in True if you\u0027d like the AsyncLROBasePolling polling method,\n False for no polling, or your own initialized polling object for a personal polling strategy.\n:paramtype polling: bool or ~azure.core.polling.AsyncPollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.\n:return: An instance of AsyncLROPoller that returns either None or the result of cls(response)\n:rtype: ~azure.core.polling.AsyncLROPoller[None]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\""
                },
                "call": "job_id"
            },
            "_health_initial" : {
                "sync": {
                    "signature": "def _health_initial(\n    self,\n    documents,  # type: List[\"_models.MultiLanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    string_index_type=\"TextElements_v8\",  # type: Optional[Union[str, \"_models.StringIndexType\"]]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: None, or the result of cls(response)\n:rtype: None\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def _health_initial(\n    self,\n    documents: List[\"_models.MultiLanguageInput\"],\n    model_version: Optional[str] = None,\n    string_index_type: Optional[Union[str, \"_models.StringIndexType\"]] = \"TextElements_v8\",\n    **kwargs\n) -\u003e None:\n",
                    "doc": "\"\"\"\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: None, or the result of cls(response)\n:rtype: None\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "documents, model_version, string_index_type"
            },
            "begin_health" : {
                "sync": {
                    "signature": "def begin_health(\n    self,\n    documents,  # type: List[\"_models.MultiLanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    string_index_type=\"TextElements_v8\",  # type: Optional[Union[str, \"_models.StringIndexType\"]]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Submit healthcare analysis job.\n\nStart a healthcare analysis job to recognize healthcare related entities (drugs, conditions,\nsymptoms, etc) and their relations.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: Pass in True if you\u0027d like the LROBasePolling polling method,\n False for no polling, or your own initialized polling object for a personal polling strategy.\n:paramtype polling: bool or ~azure.core.polling.PollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.\n:return: An instance of LROPoller that returns either None or the result of cls(response)\n:rtype: ~azure.core.polling.LROPoller[None]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def begin_health(\n    self,\n    documents: List[\"_models.MultiLanguageInput\"],\n    model_version: Optional[str] = None,\n    string_index_type: Optional[Union[str, \"_models.StringIndexType\"]] = \"TextElements_v8\",\n    **kwargs\n) -\u003e AsyncLROPoller[None]:\n",
                    "doc": "\"\"\"Submit healthcare analysis job.\n\nStart a healthcare analysis job to recognize healthcare related entities (drugs, conditions,\nsymptoms, etc) and their relations.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:keyword str continuation_token: A continuation token to restart a poller from a saved state.\n:keyword polling: Pass in True if you\u0027d like the AsyncLROBasePolling polling method,\n False for no polling, or your own initialized polling object for a personal polling strategy.\n:paramtype polling: bool or ~azure.core.polling.AsyncPollingMethod\n:keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.\n:return: An instance of AsyncLROPoller that returns either None or the result of cls(response)\n:rtype: ~azure.core.polling.AsyncLROPoller[None]\n:raises ~azure.core.exceptions.HttpResponseError:\n\"\"\""
                },
                "call": "documents, model_version, string_index_type"
            },
            "entities_recognition_general" : {
                "sync": {
                    "signature": "def entities_recognition_general(\n    self,\n    documents,  # type: List[\"_models.MultiLanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    show_stats=None,  # type: Optional[bool]\n    string_index_type=\"TextElements_v8\",  # type: Optional[Union[str, \"_models.StringIndexType\"]]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Named Entity Recognition.\n\nThe API returns a list of general named entities in a given document. For the list of supported\nentity types, check :code:`\u003ca href=\"https://aka.ms/taner\"\u003eSupported Entity Types in Text\nAnalytics API\u003c/a\u003e`. See the :code:`\u003ca href=\"https://aka.ms/talangs\"\u003eSupported languages in Text\nAnalytics API\u003c/a\u003e` for the list of enabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: EntitiesResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.EntitiesResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def entities_recognition_general(\n    self,\n    documents: List[\"_models.MultiLanguageInput\"],\n    model_version: Optional[str] = None,\n    show_stats: Optional[bool] = None,\n    string_index_type: Optional[Union[str, \"_models.StringIndexType\"]] = \"TextElements_v8\",\n    **kwargs\n) -\u003e \"_models.EntitiesResult\":\n",
                    "doc": "\"\"\"Named Entity Recognition.\n\nThe API returns a list of general named entities in a given document. For the list of supported\nentity types, check :code:`\u003ca href=\"https://aka.ms/taner\"\u003eSupported Entity Types in Text\nAnalytics API\u003c/a\u003e`. See the :code:`\u003ca href=\"https://aka.ms/talangs\"\u003eSupported languages in Text\nAnalytics API\u003c/a\u003e` for the list of enabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: EntitiesResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.EntitiesResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "documents, model_version, show_stats, string_index_type"
            },
            "entities_recognition_pii" : {
                "sync": {
                    "signature": "def entities_recognition_pii(\n    self,\n    documents,  # type: List[\"_models.MultiLanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    show_stats=None,  # type: Optional[bool]\n    domain=None,  # type: Optional[str]\n    string_index_type=\"TextElements_v8\",  # type: Optional[Union[str, \"_models.StringIndexType\"]]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Entities containing personal information.\n\nThe API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in\nthe document. For the list of supported entity types, check :code:`\u003ca\nhref=\"https://aka.ms/tanerpii\"\u003eSupported Entity Types in Text Analytics API\u003c/a\u003e`. See the\n:code:`\u003ca href=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for the\nlist of enabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param domain: (Optional) if specified, will set the PII domain to include only a subset of the\n entity categories. Possible values include: \u0027PHI\u0027, \u0027none\u0027.\n:type domain: str\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: PiiResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.PiiResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def entities_recognition_pii(\n    self,\n    documents: List[\"_models.MultiLanguageInput\"],\n    model_version: Optional[str] = None,\n    show_stats: Optional[bool] = None,\n    domain: Optional[str] = None,\n    string_index_type: Optional[Union[str, \"_models.StringIndexType\"]] = \"TextElements_v8\",\n    **kwargs\n) -\u003e \"_models.PiiResult\":\n",
                    "doc": "\"\"\"Entities containing personal information.\n\nThe API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in\nthe document. For the list of supported entity types, check :code:`\u003ca\nhref=\"https://aka.ms/tanerpii\"\u003eSupported Entity Types in Text Analytics API\u003c/a\u003e`. See the\n:code:`\u003ca href=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for the\nlist of enabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param domain: (Optional) if specified, will set the PII domain to include only a subset of the\n entity categories. Possible values include: \u0027PHI\u0027, \u0027none\u0027.\n:type domain: str\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: PiiResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.PiiResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "documents, model_version, show_stats, domain, string_index_type"
            },
            "entities_linking" : {
                "sync": {
                    "signature": "def entities_linking(\n    self,\n    documents,  # type: List[\"_models.MultiLanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    show_stats=None,  # type: Optional[bool]\n    string_index_type=\"TextElements_v8\",  # type: Optional[Union[str, \"_models.StringIndexType\"]]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Linked entities from a well-known knowledge base.\n\nThe API returns a list of recognized entities with links to a well-known knowledge base. See\nthe :code:`\u003ca href=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for\nthe list of enabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: EntityLinkingResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.EntityLinkingResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def entities_linking(\n    self,\n    documents: List[\"_models.MultiLanguageInput\"],\n    model_version: Optional[str] = None,\n    show_stats: Optional[bool] = None,\n    string_index_type: Optional[Union[str, \"_models.StringIndexType\"]] = \"TextElements_v8\",\n    **kwargs\n) -\u003e \"_models.EntityLinkingResult\":\n",
                    "doc": "\"\"\"Linked entities from a well-known knowledge base.\n\nThe API returns a list of recognized entities with links to a well-known knowledge base. See\nthe :code:`\u003ca href=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for\nthe list of enabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: EntityLinkingResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.EntityLinkingResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "documents, model_version, show_stats, string_index_type"
            },
            "key_phrases" : {
                "sync": {
                    "signature": "def key_phrases(\n    self,\n    documents,  # type: List[\"_models.MultiLanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    show_stats=None,  # type: Optional[bool]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Key Phrases.\n\nThe API returns a list of strings denoting the key phrases in the input text. See the :code:`\u003ca\nhref=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for the list of\nenabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: KeyPhraseResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.KeyPhraseResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def key_phrases(\n    self,\n    documents: List[\"_models.MultiLanguageInput\"],\n    model_version: Optional[str] = None,\n    show_stats: Optional[bool] = None,\n    **kwargs\n) -\u003e \"_models.KeyPhraseResult\":\n",
                    "doc": "\"\"\"Key Phrases.\n\nThe API returns a list of strings denoting the key phrases in the input text. See the :code:`\u003ca\nhref=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for the list of\nenabled languages.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: KeyPhraseResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.KeyPhraseResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "documents, model_version, show_stats"
            },
            "languages" : {
                "sync": {
                    "signature": "def languages(\n    self,\n    documents,  # type: List[\"_models.LanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    show_stats=None,  # type: Optional[bool]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Detect Language.\n\nThe API returns the detected language and a numeric score between 0 and 1. Scores close to 1\nindicate 100% certainty that the identified language is true. See the :code:`\u003ca\nhref=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for the list of\nenabled languages.\n\n:param documents:\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.LanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: LanguageResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.LanguageResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def languages(\n    self,\n    documents: List[\"_models.LanguageInput\"],\n    model_version: Optional[str] = None,\n    show_stats: Optional[bool] = None,\n    **kwargs\n) -\u003e \"_models.LanguageResult\":\n",
                    "doc": "\"\"\"Detect Language.\n\nThe API returns the detected language and a numeric score between 0 and 1. Scores close to 1\nindicate 100% certainty that the identified language is true. See the :code:`\u003ca\nhref=\"https://aka.ms/talangs\"\u003eSupported languages in Text Analytics API\u003c/a\u003e` for the list of\nenabled languages.\n\n:param documents:\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.LanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: LanguageResult, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.LanguageResult\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "documents, model_version, show_stats"
            },
            "sentiment" : {
                "sync": {
                    "signature": "def sentiment(\n    self,\n    documents,  # type: List[\"_models.MultiLanguageInput\"]\n    model_version=None,  # type: Optional[str]\n    show_stats=None,  # type: Optional[bool]\n    opinion_mining=None,  # type: Optional[bool]\n    string_index_type=\"TextElements_v8\",  # type: Optional[Union[str, \"_models.StringIndexType\"]]\n    **kwargs  # type: Any\n):\n",
                    "doc": "\"\"\"Sentiment.\n\nThe API returns a detailed sentiment analysis for the input text. The analysis is done in\nmultiple levels of granularity, start from the a document level, down to sentence and key terms\n(aspects) and opinions.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param opinion_mining: (Optional) if set to true, response will contain input and document\n level statistics including aspect-based sentiment analysis results.\n:type opinion_mining: bool\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: SentimentResponse, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.SentimentResponse\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "async": {
                    "coroutine": true,
                    "signature": "async def sentiment(\n    self,\n    documents: List[\"_models.MultiLanguageInput\"],\n    model_version: Optional[str] = None,\n    show_stats: Optional[bool] = None,\n    opinion_mining: Optional[bool] = None,\n    string_index_type: Optional[Union[str, \"_models.StringIndexType\"]] = \"TextElements_v8\",\n    **kwargs\n) -\u003e \"_models.SentimentResponse\":\n",
                    "doc": "\"\"\"Sentiment.\n\nThe API returns a detailed sentiment analysis for the input text. The analysis is done in\nmultiple levels of granularity, start from the a document level, down to sentence and key terms\n(aspects) and opinions.\n\n:param documents: The set of documents to process as part of this batch.\n:type documents: list[~azure.ai.textanalytics.v3_1_preview_3.models.MultiLanguageInput]\n:param model_version: (Optional) This value indicates which model will be used for scoring. If\n a model-version is not specified, the API should default to the latest, non-preview version.\n:type model_version: str\n:param show_stats: (Optional) if set to true, response will contain request and document level\n statistics.\n:type show_stats: bool\n:param opinion_mining: (Optional) if set to true, response will contain input and document\n level statistics including aspect-based sentiment analysis results.\n:type opinion_mining: bool\n:param string_index_type: (Optional) Specifies the method used to interpret string offsets.\n Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information\n see https://aka.ms/text-analytics-offsets.\n:type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_3.models.StringIndexType\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: SentimentResponse, or the result of cls(response)\n:rtype: ~azure.ai.textanalytics.v3_1_preview_3.models.SentimentResponse\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\""
                },
                "call": "documents, model_version, show_stats, opinion_mining, string_index_type"
            }
        }
    }
}