# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Literal, Optional
from azure.core.pipeline.transport import HttpRequest

StringIndexTypes = Literal["TextElements_v8", "UnicodeCodePoint", "Utf16CodeUnit"]
TextAnalyticsApiVersions = Literal["v3.0", "v3.1-preview.1"]
PiiTextAnalyticsApiVersions = Literal["v3.1-preview.1"]

class TextAnalyticsPreparers:

    @staticmethod
    def prepare_entities_recognition_general(
        api_version: TextAnalyticsApiVersions,
        *,
        body: Any,
        model_version: Optional[str] = None,
        show_stats: Optional[bool] = None,
        string_index_type: Optional[StringIndexTypes] = "TextElements_v8",
        **kwargs: Any
    ) -> HttpRequest:
        """Named Entity Recognition.

        The API returns a list of general named entities in a given document. For the list of supported
        entity types, check :code:`<a href="https://aka.ms/taner">Supported Entity Types in Text
        Analytics API</a>`. See the :code:`<a href="https://aka.ms/talangs">Supported languages in Text
        Analytics API</a>` for the list of enabled languages.

        :param api_version: REST API's service version to use. Required. Possible values are
         'v3.0' or 'v3.1-preview.1'.
        :param body: JSON body containing the set of documents to process as part of this batch.
        :param model_version: (Optional) This value indicates which model will be used for scoring. If
         a model-version is not specified, the API should default to the latest, non-preview version.
        :type model_version: str
        :param show_stats: (Optional) if set to true, response will contain request and document level
         statistics.
        :type show_stats: bool
        :param string_index_type: (Optional) Specifies the method used to interpret string offsets.
         Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information
         see https://aka.ms/text-analytics-offsets.
        :type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_1.models.StringIndexType
        :return: HTTPRequest that can be passed to the client's `send_request` caller.
        :rtype: ~azure.core.pipeline.transport.HttpRequest

        **New in API version v3.1-preview.1**
            The parameter *string_index_type*
        """
        if api_version == "v3.0":
            from .v3_0 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_entities_recognition_general(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                **kwargs
            )
        elif api_version == "v3.1-preview.1":
            from .v3_1_preview_1 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_entities_recognition_general(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                string_index_type=string_index_type,
                **kwargs
            )
        raise ValueError(f"API version {api_version} does not have operation 'prepare_entities_recognition_general'")

    @staticmethod
    def prepare_entities_recognition_pii(
        api_version: PiiTextAnalyticsApiVersions,
        *,
        body: Any,
        model_version: Optional[str] = None,
        show_stats: Optional[bool] = None,
        domain: Optional[str] = None,
        string_index_type: Optional[StringIndexTypes] = "TextElements_v8",
        **kwargs: Any
    ) -> HttpRequest:
        """Entities containing personal information.

        The API returns a list of entities with personal information (\"SSN\", \"Bank Account\" etc) in
        the document. For the list of supported entity types, check :code:`<a
        href="https://aka.ms/tanerpii">Supported Entity Types in Text Analytics API</a>`. See the
        :code:`<a href="https://aka.ms/talangs">Supported languages in Text Analytics API</a>` for the
        list of enabled languages.

        :param api_version: REST API's service version to use. Required. Possible values are
         'v3.1-preview.1'.
        :param body: JSON body containing the set of documents to process as part of this batch.
        :param model_version: (Optional) This value indicates which model will be used for scoring. If
         a model-version is not specified, the API should default to the latest, non-preview version.
        :type model_version: str
        :param show_stats: (Optional) if set to true, response will contain request and document level
         statistics.
        :type show_stats: bool
        :param domain: (Optional) if set to 'PHI', response will contain only PHI entities.
        :type domain: str
        :param string_index_type: (Optional) Specifies the method used to interpret string offsets.
         Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information
         see https://aka.ms/text-analytics-offsets.
        :type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_1.models.StringIndexType
        :return: HTTPRequest that can be passed to the client's `send_request` caller.
        :rtype: ~azure.core.pipeline.transport.HttpRequest
        """
        if api_version == "v3.1-preview.1":
            from .v3_1_preview_1 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_entities_recognition_pii(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                string_index_type=string_index_type,
                **kwargs
            )
        raise ValueError(f"API version {api_version} does not have operation 'prepare_entities_recognition_pii'")

    @staticmethod
    def prepare_entities_linking(
        api_version: TextAnalyticsApiVersions,
        *,
        body: Any,
        model_version: Optional[str] = None,
        show_stats: Optional[bool] = None,
        string_index_type: Optional[StringIndexTypes] = "TextElements_v8",
        **kwargs: Any
    ) -> HttpRequest:
        """Linked entities from a well-known knowledge base.

        The API returns a list of recognized entities with links to a well-known knowledge base. See
        the :code:`<a href="https://aka.ms/talangs">Supported languages in Text Analytics API</a>` for
        the list of enabled languages.

        :param api_version: REST API's service version to use. Required. Possible values are
         'v3.0' or 'v3.1-preview.1'.
        :param body: JSON body containing the set of documents to process as part of this batch.
        :param model_version: (Optional) This value indicates which model will be used for scoring. If
         a model-version is not specified, the API should default to the latest, non-preview version.
        :type model_version: str
        :param show_stats: (Optional) if set to true, response will contain request and document level
         statistics.
        :type show_stats: bool
        :param string_index_type: (Optional) Specifies the method used to interpret string offsets.
         Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information
         see https://aka.ms/text-analytics-offsets.
        :type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_1.models.StringIndexType
        :return: HTTPRequest that can be passed to the client's `send_request` caller.
        :rtype: ~azure.core.pipeline.transport.HttpRequest

        **New in API version v3.1-preview.1**
            The parameter *string_index_type*
        """
        if api_version == "v3.0":
            from .v3_0 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_entities_linking(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                **kwargs
            )
        elif api_version == "v3.1-preview.1":
            from .v3_1_preview_1 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_entities_linking(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                string_index_type=string_index_type,
                **kwargs
            )
        raise ValueError(f"API version {api_version} does not have operation 'prepare_entities_linking'")

    @staticmethod
    def prepare_key_phrases(
        api_version: TextAnalyticsApiVersions,
        *,
        body: Any,
        model_version: Optional[str] = None,
        show_stats: Optional[bool] = None,
        **kwargs: Any
    ) -> HttpRequest:
        """Key Phrases.

        The API returns a list of strings denoting the key phrases in the input text. See the :code:`<a
        href="https://aka.ms/talangs">Supported languages in Text Analytics API</a>` for the list of
        enabled languages.

        :param api_version: REST API's service version to use. Required. Possible values are
         'v3.0' or 'v3.1-preview.1'.
        :param body: JSON body containing the set of documents to process as part of this batch.
        :param model_version: (Optional) This value indicates which model will be used for scoring. If
         a model-version is not specified, the API should default to the latest, non-preview version.
        :type model_version: str
        :param show_stats: (Optional) if set to true, response will contain request and document level
         statistics.
        :type show_stats: bool
        :return: HTTPRequest that can be passed to the client's `send_request` caller.
        :rtype: ~azure.core.pipeline.transport.HttpRequest
        """
        if api_version == "v3.0":
            from .v3_0 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_key_phrases(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                **kwargs
            )
        elif api_version == "v3.1-preview.1":
            from .v3_1_preview_1 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_key_phrases(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                **kwargs
            )
        raise ValueError(f"API version {api_version} does not have operation 'prepare_key_phrases'")

    @staticmethod
    def prepare_languages(
        api_version: TextAnalyticsApiVersions,
        *,
        body: Any,
        model_version: Optional[str] = None,
        show_stats: Optional[bool] = None,
        **kwargs: Any
    ) -> HttpRequest:
        """Detect Language.

        The API returns the detected language and a numeric score between 0 and 1. Scores close to 1
        indicate 100% certainty that the identified language is true. See the :code:`<a
        href="https://aka.ms/talangs">Supported languages in Text Analytics API</a>` for the list of
        enabled languages.

        :param api_version: REST API's service version to use. Required. Possible values are
         'v3.0' or 'v3.1-preview.1'.
        :param body: JSON body containing the set of documents to process as part of this batch.
        :param model_version: (Optional) This value indicates which model will be used for scoring. If
         a model-version is not specified, the API should default to the latest, non-preview version.
        :type model_version: str
        :param show_stats: (Optional) if set to true, response will contain request and document level
         statistics.
        :type show_stats: bool
        :return: HTTPRequest that can be passed to the client's `send_request` caller.
        :rtype: ~azure.core.pipeline.transport.HttpRequest
        """
        if api_version == "v3.0":
            from .v3_0 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_languages(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                **kwargs
            )
        elif api_version == "v3.1-preview.1":
            from .v3_1_preview_1 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_languages(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                **kwargs
            )
        raise ValueError(f"API version {api_version} does not have operation 'prepare_languages'")

    @staticmethod
    def prepare_sentiment(
        api_version: TextAnalyticsApiVersions,
        *,
        body: Any,
        model_version: Optional[str] = None,
        show_stats: Optional[bool] = None,
        opinion_mining: Optional[bool] = None,
        string_index_type: Optional[StringIndexTypes] = "TextElements_v8",
        **kwargs: Any
    ) -> HttpRequest:
        """Linked entities from a well-known knowledge base.

        The API returns a list of recognized entities with links to a well-known knowledge base. See
        the :code:`<a href="https://aka.ms/talangs">Supported languages in Text Analytics API</a>` for
        the list of enabled languages.

        :param api_version: REST API's service version to use. Required. Possible values are
         'v3.0' or 'v3.1-preview.1'.
        :param body: JSON body containing the set of documents to process as part of this batch.
        :param model_version: (Optional) This value indicates which model will be used for scoring. If
         a model-version is not specified, the API should default to the latest, non-preview version.
        :type model_version: str
        :param show_stats: (Optional) if set to true, response will contain request and document level
         statistics.
        :type show_stats: bool
        :param string_index_type: (Optional) Specifies the method used to interpret string offsets.
         Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information
         see https://aka.ms/text-analytics-offsets.
        :type string_index_type: str or ~azure.ai.textanalytics.v3_1_preview_1.models.StringIndexType
        :return: HTTPRequest that can be passed to the client's `send_request` caller.
        :rtype: ~azure.core.pipeline.transport.HttpRequest

        **New in API version v3.1-preview.1**
            The parameters *string_index_type* and *opinion_mining*
        """
        if api_version == "v3.0":
            from .v3_0 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_sentiment(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                **kwargs
            )
        elif api_version == "v3.1-preview.1":
            from .v3_1_preview_1 import TextAnalyticsPreparers as PreparersClass
            return PreparersClass.prepare_sentiment(
                body=body,
                model_version=model_version,
                show_stats=show_stats,
                opinion_mining=opinion_mining,
                string_index_type=string_index_type,
                **kwargs
            )
        raise ValueError(f"API version {api_version} does not have operation 'prepare_sentiment'")
