# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models import Alignment
from ._models import BackTranslation
from ._models import BreakSentenceElement
from ._models import CommonScriptModel
from ._models import DetectedLanguage
from ._models import DictionaryExampleElement
from ._models import DictionaryExampleTextElement
from ._models import DictionaryLookupElement
from ._models import DictionaryTranslation
from ._models import ErrorDetails
from ._models import ErrorResponse
from ._models import Example
from ._models import GetLanguagesResult
from ._models import InputTextElement
from ._models import SentenceLength
from ._models import SourceDictionaryLanguage
from ._models import SourceText
from ._models import TargetDictionaryLanguage
from ._models import TranslatedTextElement
from ._models import Translation
from ._models import TranslationLanguage
from ._models import TransliterableScript
from ._models import TransliteratedText
from ._models import Transliteration
from ._models import TransliterationLanguage

from ._enums import ProfanityActions
from ._enums import ProfanityMarkers
from ._enums import TextTypes
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Alignment",
    "BackTranslation",
    "BreakSentenceElement",
    "CommonScriptModel",
    "DetectedLanguage",
    "DictionaryExampleElement",
    "DictionaryExampleTextElement",
    "DictionaryLookupElement",
    "DictionaryTranslation",
    "ErrorDetails",
    "ErrorResponse",
    "Example",
    "GetLanguagesResult",
    "InputTextElement",
    "SentenceLength",
    "SourceDictionaryLanguage",
    "SourceText",
    "TargetDictionaryLanguage",
    "TranslatedTextElement",
    "Translation",
    "TranslationLanguage",
    "TransliterableScript",
    "TransliteratedText",
    "Transliteration",
    "TransliterationLanguage",
    "ProfanityActions",
    "ProfanityMarkers",
    "TextTypes",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
