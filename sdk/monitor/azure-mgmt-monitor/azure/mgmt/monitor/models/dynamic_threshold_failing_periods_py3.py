# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DynamicThresholdFailingPeriods(Model):
    """The minimum number of violations required within the selected lookback time
    window required to raise an alert.

    All required parameters must be populated in order to send to Azure.

    :param number_of_evaluation_periods: Required. The number of aggregated
     lookback points. The lookback time window is calculated based on the
     aggregation granularity (windowSize) and the selected number of aggregated
     points.
    :type number_of_evaluation_periods: float
    :param min_failing_periods_to_alert: Required. The number of violations to
     trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods.
    :type min_failing_periods_to_alert: float
    """

    _validation = {
        'number_of_evaluation_periods': {'required': True},
        'min_failing_periods_to_alert': {'required': True},
    }

    _attribute_map = {
        'number_of_evaluation_periods': {'key': 'numberOfEvaluationPeriods', 'type': 'float'},
        'min_failing_periods_to_alert': {'key': 'minFailingPeriodsToAlert', 'type': 'float'},
    }

    def __init__(self, *, number_of_evaluation_periods: float, min_failing_periods_to_alert: float, **kwargs) -> None:
        super(DynamicThresholdFailingPeriods, self).__init__(**kwargs)
        self.number_of_evaluation_periods = number_of_evaluation_periods
        self.min_failing_periods_to_alert = min_failing_periods_to_alert
