{
    "chosen_version": "2022-01-01-preview",
    "total_api_version_list": ["2022-01-01-preview"],
    "client": {
        "name": "SecurityInsights",
        "filename": "_security_insights",
        "description": "API spec for Microsoft.SecurityInsights (Azure Security Insights) resource provider.",
        "host_value": "\"https://management.azure.com\"",
        "parameterized_host_template": null,
        "azure_arm": true,
        "has_lro_operations": false,
        "client_side_validation": false,
        "sync_imports": "{\"typing\": {\"azurecore\": {\"azure.core.credentials\": [\"TokenCredential\"]}}, \"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.mgmt.core\": [\"ARMPipelineClient\"]}, \"local\": {\"._configuration\": [\"SecurityInsightsConfiguration\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}}}",
        "async_imports": "{\"typing\": {\"azurecore\": {\"azure.core.credentials_async\": [\"AsyncTokenCredential\"], \"azure.core.credentials\": [\"TokenCredential\"]}}, \"regular\": {\"azurecore\": {\"azure.profiles\": [\"KnownProfiles\", \"ProfileDefinition\"], \"azure.profiles.multiapiclient\": [\"MultiApiClientMixin\"], \"msrest\": [\"Deserializer\", \"Serializer\"], \"azure.mgmt.core\": [\"AsyncARMPipelineClient\"]}, \"local\": {\"._configuration\": [\"SecurityInsightsConfiguration\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Optional\"]}}}"
    },
    "global_parameters": {
        "sync": {
            "credential": {
                "signature": "credential,  # type: \"TokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials.TokenCredential",
                "required": true
            },
            "subscription_id": {
                "signature": "subscription_id,  # type: str",
                "description": "The ID of the target subscription.",
                "docstring_type": "str",
                "required": true
            }
        },
        "async": {
            "credential": {
                "signature": "credential: \"AsyncTokenCredential\",",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials_async.AsyncTokenCredential",
                "required": true
            },
            "subscription_id": {
                "signature": "subscription_id: str,",
                "description": "The ID of the target subscription.",
                "docstring_type": "str",
                "required": true
            }
        },
        "constant": {
        },
        "call": "credential, subscription_id",
        "service_client_specific": {
            "sync": {
                "api_version": {
                    "signature": "api_version=None, # type: Optional[str]",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "base_url": {
                    "signature": "base_url=\"https://management.azure.com\",  # type: str",
                    "description": "Service URL",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile=KnownProfiles.default, # type: KnownProfiles",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            },
            "async": {
                "api_version": {
                    "signature": "api_version: Optional[str] = None,",
                    "description": "API version to use if no profile is provided, or if missing in profile.",
                    "docstring_type": "str",
                    "required": false
                },
                "base_url": {
                    "signature": "base_url: str = \"https://management.azure.com\",",
                    "description": "Service URL",
                    "docstring_type": "str",
                    "required": false
                },
                "profile": {
                    "signature": "profile: KnownProfiles = KnownProfiles.default,",
                    "description": "A profile definition, from KnownProfiles to dict.",
                    "docstring_type": "azure.profiles.KnownProfiles",
                    "required": false
                }
            }
        }
    },
    "config": {
        "credential": true,
        "credential_scopes": ["https://management.azure.com/.default"],
        "credential_call_sync": "ARMChallengeAuthenticationPolicy(self.credential, *self.credential_scopes, **kwargs)",
        "credential_call_async": "AsyncARMChallengeAuthenticationPolicy(self.credential, *self.credential_scopes, **kwargs)",
        "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"], \"azure.mgmt.core.policies\": [\"ARMChallengeAuthenticationPolicy\", \"ARMHttpLoggingPolicy\"]}, \"local\": {\"._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"typing\": {\"azurecore\": {\"azure.core.credentials\": [\"TokenCredential\"]}}}",
        "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.configuration\": [\"Configuration\"], \"azure.core.pipeline\": [\"policies\"], \"azure.mgmt.core.policies\": [\"ARMHttpLoggingPolicy\", \"AsyncARMChallengeAuthenticationPolicy\"]}, \"local\": {\".._version\": [\"VERSION\"]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\"]}}, \"typing\": {\"azurecore\": {\"azure.core.credentials_async\": [\"AsyncTokenCredential\"]}}}"
    },
    "operation_groups": {
        "alert_rules": "AlertRulesOperations",
        "actions": "ActionsOperations",
        "alert_rule_templates": "AlertRuleTemplatesOperations",
        "automation_rules": "AutomationRulesOperations",
        "incidents": "IncidentsOperations",
        "bookmarks": "BookmarksOperations",
        "bookmark_relations": "BookmarkRelationsOperations",
        "bookmark": "BookmarkOperations",
        "ip_geodata": "IPGeodataOperations",
        "domain_whois": "DomainWhoisOperations",
        "entities": "EntitiesOperations",
        "entities_get_timeline": "EntitiesGetTimelineOperations",
        "entities_relations": "EntitiesRelationsOperations",
        "entity_relations": "EntityRelationsOperations",
        "entity_queries": "EntityQueriesOperations",
        "entity_query_templates": "EntityQueryTemplatesOperations",
        "incident_comments": "IncidentCommentsOperations",
        "incident_relations": "IncidentRelationsOperations",
        "metadata": "MetadataOperations",
        "office_consents": "OfficeConsentsOperations",
        "sentinel_onboarding_states": "SentinelOnboardingStatesOperations",
        "product_settings": "ProductSettingsOperations",
        "source_control": "SourceControlOperations",
        "source_controls": "SourceControlsOperations",
        "threat_intelligence_indicator": "ThreatIntelligenceIndicatorOperations",
        "threat_intelligence_indicators": "ThreatIntelligenceIndicatorsOperations",
        "threat_intelligence_indicator_metrics": "ThreatIntelligenceIndicatorMetricsOperations",
        "watchlists": "WatchlistsOperations",
        "watchlist_items": "WatchlistItemsOperations",
        "data_connectors": "DataConnectorsOperations",
        "data_connectors_check_requirements": "DataConnectorsCheckRequirementsOperations",
        "operations": "Operations"
    }
}