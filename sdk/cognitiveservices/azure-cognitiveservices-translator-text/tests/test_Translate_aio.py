# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from azure.ai.translator.aio import TranslatorClient, TranslatorCredential, TranslatorCustomEndpoint
from azure.ai.translator.models import InputTextElement
from azure.core.credentials import ( TokenCredential, AzureKeyCredential, AccessToken )

from devtools_testutils.cognitiveservices_testcase import CognitiveServiceTest

class MTTokenCredential(TokenCredential):
    def __init__(self, token: str):
        self.token = AccessToken(token, 0)

    def get_token(self, *args):
        return self.token

class TextAnalyticsTest(CognitiveServiceTest):

    async def test_translate_global(self):
        credentials = TranslatorCredential("", "westus2")
        text_translator = TranslatorClient("https://api.cognitive.microsofttranslator.com", credentials)

        traInput = [ InputTextElement(text = "This is a test") ]
        targetLanguages = ["cs"]
        tra = await text_translator.translate(content = traInput, to = targetLanguages)

        self.assertEqual(tra[0].detected_language.language, "en")
        self.assertEqual(tra[0].translations[0].text, "Tohle je test")

    async def test_translate_custom(self):
        credentials = AzureKeyCredential("")
        endpoint = TranslatorCustomEndpoint("https://mimat-cus-white.cognitiveservices.azure.com")
        text_translator = TranslatorClient(endpoint, credentials)

        traInput = [ InputTextElement(text = "This is a test") ]
        targetLanguages = ["cs"]
        tra = await text_translator.translate(content = traInput, to = targetLanguages)

        self.assertEqual(tra[0].detected_language.language, "en")
        self.assertEqual(tra[0].translations[0].text, "Tohle je test")

    async def test_translate_token(self):
        credentials = MTTokenCredential("")
        text_translator = TranslatorClient("https://api.cognitive.microsofttranslator.com", credentials)

        traInput = [ InputTextElement(text = "This is a test") ]
        targetLanguages = ["cs"]
        tra = await text_translator.translate(content = traInput, to = targetLanguages)

        self.assertEqual(tra[0].detected_language.language, "en")
        self.assertEqual(tra[0].translations[0].text, "Tohle je test")
