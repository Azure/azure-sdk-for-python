# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ReadResult(Model):
    """Text extracted from a page in the input document.

    All required parameters must be populated in order to send to Azure.

    :param page: Required. The 1-based page number in the input document.
    :type page: int
    :param angle: Required. The general orientation of the text in clockwise
     direction, measured in degrees between (-180, 180].
    :type angle: float
    :param width: Required. The width of the image/PDF in pixels/inches,
     respectively.
    :type width: float
    :param height: Required. The height of the image/PDF in pixels/inches,
     respectively.
    :type height: float
    :param unit: Required. The unit used by the width, height and boundingBox
     properties. For images, the unit is "pixel". For PDF, the unit is "inch".
     Possible values include: 'pixel', 'inch'
    :type unit: str or
     ~azure.cognitiveservices.formrecognizer.models.LengthUnit
    :param language: The detected language on the page overall. Possible
     values include: 'en', 'es'
    :type language: str or
     ~azure.cognitiveservices.formrecognizer.models.Language
    :param lines: When includeTextDetails is set to true, a list of recognized
     text lines. The maximum number of lines returned is 300 per page. The
     lines are sorted top to bottom, left to right, although in certain cases
     proximity is treated with higher priority. As the sorting order depends on
     the detected text, it may change across images and OCR version updates.
     Thus, business logic should be built upon the actual line location instead
     of order.
    :type lines: list[~azure.cognitiveservices.formrecognizer.models.TextLine]
    """

    _validation = {
        'page': {'required': True, 'minimum': 1},
        'angle': {'required': True, 'maximum': 180, 'minimum_ex': -180},
        'width': {'required': True, 'minimum': 0},
        'height': {'required': True, 'minimum': 0},
        'unit': {'required': True},
    }

    _attribute_map = {
        'page': {'key': 'page', 'type': 'int'},
        'angle': {'key': 'angle', 'type': 'float'},
        'width': {'key': 'width', 'type': 'float'},
        'height': {'key': 'height', 'type': 'float'},
        'unit': {'key': 'unit', 'type': 'LengthUnit'},
        'language': {'key': 'language', 'type': 'str'},
        'lines': {'key': 'lines', 'type': '[TextLine]'},
    }

    def __init__(self, **kwargs):
        super(ReadResult, self).__init__(**kwargs)
        self.page = kwargs.get('page', None)
        self.angle = kwargs.get('angle', None)
        self.width = kwargs.get('width', None)
        self.height = kwargs.get('height', None)
        self.unit = kwargs.get('unit', None)
        self.language = kwargs.get('language', None)
        self.lines = kwargs.get('lines', None)
