# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from enum import Enum


class SkuTier(str, Enum):

    free = "Free"
    basic = "Basic"
    standard = "Standard"
    premium = "Premium"
    enterprise = "Enterprise"


class ResourceIdentityType(str, Enum):

    none = "None"
    system_assigned = "SystemAssigned"
    user_assigned = "UserAssigned"
    system_assigned_user_assigned = "SystemAssigned, UserAssigned"


class CreatedByType(str, Enum):

    user = "User"
    application = "Application"
    managed_identity = "ManagedIdentity"
    key = "Key"


class ProvisioningState(str, Enum):

    accepted = "Accepted"
    creating = "Creating"
    deleting = "Deleting"
    moving = "Moving"
    failed = "Failed"
    succeeded = "Succeeded"
    resolving_dns = "ResolvingDNS"


class NetworkRuleAction(str, Enum):

    allow = "Allow"
    deny = "Deny"


class KeySource(str, Enum):

    microsoft_cognitive_services = "Microsoft.CognitiveServices"
    microsoft_key_vault = "Microsoft.KeyVault"


class PrivateEndpointServiceConnectionStatus(str, Enum):

    pending = "Pending"
    approved = "Approved"
    rejected = "Rejected"


class PrivateEndpointConnectionProvisioningState(str, Enum):

    succeeded = "Succeeded"
    creating = "Creating"
    deleting = "Deleting"
    failed = "Failed"


class PublicNetworkAccess(str, Enum):

    enabled = "Enabled"
    disabled = "Disabled"


class KeyName(str, Enum):

    key1 = "Key1"
    key2 = "Key2"


class UnitType(str, Enum):

    count = "Count"
    bytes = "Bytes"
    seconds = "Seconds"
    percent = "Percent"
    count_per_second = "CountPerSecond"
    bytes_per_second = "BytesPerSecond"
    milliseconds = "Milliseconds"


class QuotaUsageStatus(str, Enum):

    included = "Included"
    blocked = "Blocked"
    in_overage = "InOverage"
    unknown = "Unknown"


class ResourceSkuRestrictionsType(str, Enum):

    location = "Location"
    zone = "Zone"


class ResourceSkuRestrictionsReasonCode(str, Enum):

    quota_id = "QuotaId"
    not_available_for_subscription = "NotAvailableForSubscription"


class Origin(str, Enum):

    user = "user"
    system = "system"
    usersystem = "user,system"


class ActionType(str, Enum):

    internal = "Internal"
