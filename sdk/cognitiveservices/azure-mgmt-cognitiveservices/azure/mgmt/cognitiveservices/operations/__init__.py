# pylint: disable=line-too-long,useless-suppression
# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._accounts_operations import AccountsOperations  # type: ignore
from ._deleted_accounts_operations import DeletedAccountsOperations  # type: ignore
from ._resource_skus_operations import ResourceSkusOperations  # type: ignore
from ._usages_operations import UsagesOperations  # type: ignore
from ._operations import Operations  # type: ignore
from ._cognitive_services_management_client_operations import CognitiveServicesManagementClientOperationsMixin  # type: ignore
from ._commitment_tiers_operations import CommitmentTiersOperations  # type: ignore
from ._models_operations import ModelsOperations  # type: ignore
from ._location_based_model_capacities_operations import LocationBasedModelCapacitiesOperations  # type: ignore
from ._model_capacities_operations import ModelCapacitiesOperations  # type: ignore
from ._private_endpoint_connections_operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._private_link_resources_operations import PrivateLinkResourcesOperations  # type: ignore
from ._deployments_operations import DeploymentsOperations  # type: ignore
from ._commitment_plans_operations import CommitmentPlansOperations  # type: ignore
from ._encryption_scopes_operations import EncryptionScopesOperations  # type: ignore
from ._rai_policies_operations import RaiPoliciesOperations  # type: ignore
from ._rai_blocklists_operations import RaiBlocklistsOperations  # type: ignore
from ._rai_blocklist_items_operations import RaiBlocklistItemsOperations  # type: ignore
from ._rai_content_filters_operations import RaiContentFiltersOperations  # type: ignore
from ._network_security_perimeter_configurations_operations import NetworkSecurityPerimeterConfigurationsOperations  # type: ignore
from ._defender_for_ai_settings_operations import DefenderForAISettingsOperations  # type: ignore
from ._projects_operations import ProjectsOperations  # type: ignore
from ._account_connection_operations import AccountConnectionOperations  # type: ignore
from ._project_connection_operations import ProjectConnectionOperations  # type: ignore
from ._account_capability_hosts_operations import AccountCapabilityHostsOperations  # type: ignore
from ._project_capability_hosts_operations import ProjectCapabilityHostsOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AccountsOperations",
    "DeletedAccountsOperations",
    "ResourceSkusOperations",
    "UsagesOperations",
    "Operations",
    "CognitiveServicesManagementClientOperationsMixin",
    "CommitmentTiersOperations",
    "ModelsOperations",
    "LocationBasedModelCapacitiesOperations",
    "ModelCapacitiesOperations",
    "PrivateEndpointConnectionsOperations",
    "PrivateLinkResourcesOperations",
    "DeploymentsOperations",
    "CommitmentPlansOperations",
    "EncryptionScopesOperations",
    "RaiPoliciesOperations",
    "RaiBlocklistsOperations",
    "RaiBlocklistItemsOperations",
    "RaiContentFiltersOperations",
    "NetworkSecurityPerimeterConfigurationsOperations",
    "DefenderForAISettingsOperations",
    "ProjectsOperations",
    "AccountConnectionOperations",
    "ProjectConnectionOperations",
    "AccountCapabilityHostsOperations",
    "ProjectCapabilityHostsOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
