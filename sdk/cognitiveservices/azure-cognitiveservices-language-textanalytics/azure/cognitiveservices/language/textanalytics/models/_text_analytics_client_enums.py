# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from enum import Enum


class StringIndexTypeResponse(str, Enum):

    text_elements_v8 = "TextElements_v8"  #: Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo.
    unicode_code_point = "UnicodeCodePoint"  #: Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python.
    utf16_code_unit = "Utf16CodeUnit"  #: Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript.


class ErrorCodeValue(str, Enum):

    invalid_request = "InvalidRequest"
    invalid_argument = "InvalidArgument"
    internal_server_error = "InternalServerError"
    service_unavailable = "ServiceUnavailable"
    not_found = "NotFound"


class InnerErrorCodeValue(str, Enum):

    invalid_parameter_value = "InvalidParameterValue"
    invalid_request_body_format = "InvalidRequestBodyFormat"
    empty_request = "EmptyRequest"
    missing_input_records = "MissingInputRecords"
    invalid_document = "InvalidDocument"
    model_version_incorrect = "ModelVersionIncorrect"
    invalid_document_batch = "InvalidDocumentBatch"
    unsupported_language_code = "UnsupportedLanguageCode"
    invalid_country_hint = "InvalidCountryHint"


class WarningCodeValue(str, Enum):

    long_words_in_document = "LongWordsInDocument"
    document_truncated = "DocumentTruncated"


class State(str, Enum):

    not_started = "notStarted"
    running = "running"
    succeeded = "succeeded"
    failed = "failed"
    cancelled = "cancelled"
    cancelling = "cancelling"
    partially_completed = "partiallyCompleted"


class DocumentSentimentValue(str, Enum):

    positive = "positive"
    neutral = "neutral"
    negative = "negative"
    mixed = "mixed"


class SentenceSentimentValue(str, Enum):

    positive = "positive"
    neutral = "neutral"
    negative = "negative"


class TokenSentimentValue(str, Enum):

    positive = "positive"
    mixed = "mixed"
    negative = "negative"


class AspectRelationType(str, Enum):

    opinion = "opinion"
    aspect = "aspect"


class StringIndexType(str, Enum):

    text_elements_v8 = "TextElements_v8"  #: Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo.
    unicode_code_point = "UnicodeCodePoint"  #: Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python.
    utf16_code_unit = "Utf16CodeUnit"  #: Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript.
