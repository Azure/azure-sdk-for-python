# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional, TYPE_CHECKING

from azure.core.pipeline.transport import AsyncHttpResponse, HttpRequest
from azure.mgmt.core import AsyncARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials_async import AsyncTokenCredential

from ._configuration import PrivateLinkServicesForPowerBIClientConfiguration
from .operations import Operations
from .operations import PrivateLinkServicesForPowerBIOperations
from .operations import PrivateLinkServiceResourceOperationResultsOperations
from .operations import PrivateLinkServicesOperations
from .operations import PowerBIResourcesOperations
from .operations import PrivateLinkResourcesOperations
from .operations import PrivateEndpointConnectionsOperations
from .. import models


class PrivateLinkServicesForPowerBIClient(object):
    """Client to manage Power BI Private Link Service resources and connection members.

    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.powerbiprivatelinks.aio.operations.Operations
    :ivar private_link_services_for_power_bi: PrivateLinkServicesForPowerBIOperations operations
    :vartype private_link_services_for_power_bi: azure.mgmt.powerbiprivatelinks.aio.operations.PrivateLinkServicesForPowerBIOperations
    :ivar private_link_service_resource_operation_results: PrivateLinkServiceResourceOperationResultsOperations operations
    :vartype private_link_service_resource_operation_results: azure.mgmt.powerbiprivatelinks.aio.operations.PrivateLinkServiceResourceOperationResultsOperations
    :ivar private_link_services: PrivateLinkServicesOperations operations
    :vartype private_link_services: azure.mgmt.powerbiprivatelinks.aio.operations.PrivateLinkServicesOperations
    :ivar power_bi_resources: PowerBIResourcesOperations operations
    :vartype power_bi_resources: azure.mgmt.powerbiprivatelinks.aio.operations.PowerBIResourcesOperations
    :ivar private_link_resources: PrivateLinkResourcesOperations operations
    :vartype private_link_resources: azure.mgmt.powerbiprivatelinks.aio.operations.PrivateLinkResourcesOperations
    :ivar private_endpoint_connections: PrivateEndpointConnectionsOperations operations
    :vartype private_endpoint_connections: azure.mgmt.powerbiprivatelinks.aio.operations.PrivateEndpointConnectionsOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param subscription_id: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
    :type subscription_id: str
    :param resource_group_name: The name of the resource group.
    :type resource_group_name: str
    :param azure_resource_name: The name of the Azure resource.
    :type azure_resource_name: str
    :param private_endpoint_name: The name of the private endpoint.
    :type private_endpoint_name: str
    :param operation_id: The id of Azure async operation.
    :type operation_id: str
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        subscription_id: str,
        resource_group_name: str,
        azure_resource_name: str,
        private_endpoint_name: str,
        operation_id: str,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://management.azure.com'
        self._config = PrivateLinkServicesForPowerBIClientConfiguration(credential, subscription_id, resource_group_name, azure_resource_name, private_endpoint_name, operation_id, **kwargs)
        self._client = AsyncARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.operations = Operations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_link_services_for_power_bi = PrivateLinkServicesForPowerBIOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_link_service_resource_operation_results = PrivateLinkServiceResourceOperationResultsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_link_services = PrivateLinkServicesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.power_bi_resources = PowerBIResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_link_resources = PrivateLinkResourcesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.private_endpoint_connections = PrivateEndpointConnectionsOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def _send_request(self, http_request: HttpRequest, **kwargs: Any) -> AsyncHttpResponse:
        """Runs the network request through the client's chained policies.

        :param http_request: The network request you want to make. Required.
        :type http_request: ~azure.core.pipeline.transport.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to True.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.pipeline.transport.AsyncHttpResponse
        """
        path_format_arguments = {
            'subscriptionId': self._serialize.url("self._config.subscription_id", self._config.subscription_id, 'str'),
            'resourceGroupName': self._serialize.url("self._config.resource_group_name", self._config.resource_group_name, 'str'),
            'azureResourceName': self._serialize.url("self._config.azure_resource_name", self._config.azure_resource_name, 'str'),
            'privateEndpointName': self._serialize.url("self._config.private_endpoint_name", self._config.private_endpoint_name, 'str'),
            'operationId': self._serialize.url("self._config.operation_id", self._config.operation_id, 'str'),
        }
        http_request.url = self._client.format_url(http_request.url, **path_format_arguments)
        stream = kwargs.pop("stream", True)
        pipeline_response = await self._client._pipeline.run(http_request, stream=stream, **kwargs)
        return pipeline_response.http_response

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "PrivateLinkServicesForPowerBIClient":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
