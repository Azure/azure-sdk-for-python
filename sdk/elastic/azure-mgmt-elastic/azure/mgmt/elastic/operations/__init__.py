# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._monitors_operations import MonitorsOperations  # type: ignore
from ._elastic_versions_operations import ElasticVersionsOperations  # type: ignore
from ._monitored_subscriptions_operations import MonitoredSubscriptionsOperations  # type: ignore
from ._monitored_resources_operations import MonitoredResourcesOperations  # type: ignore
from ._deployment_info_operations import DeploymentInfoOperations  # type: ignore
from ._external_user_operations import ExternalUserOperations  # type: ignore
from ._billing_info_operations import BillingInfoOperations  # type: ignore
from ._connected_partner_resources_operations import ConnectedPartnerResourcesOperations  # type: ignore
from ._open_ai_operations import OpenAIOperations  # type: ignore
from ._tag_rules_operations import TagRulesOperations  # type: ignore
from ._vm_host_operations import VMHostOperations  # type: ignore
from ._vm_ingestion_operations import VMIngestionOperations  # type: ignore
from ._vm_collection_operations import VMCollectionOperations  # type: ignore
from ._upgradable_versions_operations import UpgradableVersionsOperations  # type: ignore
from ._monitor_operations import MonitorOperations  # type: ignore
from ._all_traffic_filters_operations import AllTrafficFiltersOperations  # type: ignore
from ._list_associated_traffic_filters_operations import ListAssociatedTrafficFiltersOperations  # type: ignore
from ._create_and_associate_ip_filter_operations import CreateAndAssociateIPFilterOperations  # type: ignore
from ._create_and_associate_pl_filter_operations import CreateAndAssociatePLFilterOperations  # type: ignore
from ._associate_traffic_filter_operations import AssociateTrafficFilterOperations  # type: ignore
from ._detach_and_delete_traffic_filter_operations import DetachAndDeleteTrafficFilterOperations  # type: ignore
from ._detach_traffic_filter_operations import DetachTrafficFilterOperations  # type: ignore
from ._traffic_filters_operations import TrafficFiltersOperations  # type: ignore
from ._organizations_operations import OrganizationsOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "MonitorsOperations",
    "ElasticVersionsOperations",
    "MonitoredSubscriptionsOperations",
    "MonitoredResourcesOperations",
    "DeploymentInfoOperations",
    "ExternalUserOperations",
    "BillingInfoOperations",
    "ConnectedPartnerResourcesOperations",
    "OpenAIOperations",
    "TagRulesOperations",
    "VMHostOperations",
    "VMIngestionOperations",
    "VMCollectionOperations",
    "UpgradableVersionsOperations",
    "MonitorOperations",
    "AllTrafficFiltersOperations",
    "ListAssociatedTrafficFiltersOperations",
    "CreateAndAssociateIPFilterOperations",
    "CreateAndAssociatePLFilterOperations",
    "AssociateTrafficFilterOperations",
    "DetachAndDeleteTrafficFilterOperations",
    "DetachTrafficFilterOperations",
    "TrafficFiltersOperations",
    "OrganizationsOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
