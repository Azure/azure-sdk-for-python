{
    "chosen_version": "2020-02-01-preview",
    "total_api_version_list": ["2020-02-01-preview"],
    "client": {
        "name": "AccessControlClient",
        "filename": "_access_control_client",
        "description": "AccessControlClient."
    },
    "global_parameters": {
        "sync_method": {
            "credential": {
                "method_signature": "credential,  # type: \"TokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials.TokenCredential",
                "required": true
            },
            "endpoint": {
                "method_signature": "endpoint,  # type: str",
                "description": "The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net.",
                "docstring_type": "str",
                "required": true
            }
        },
        "async_method": {
            "credential": {
                "method_signature": "credential,  # type: \"AsyncTokenCredential\"",
                "description": "Credential needed for the client to connect to Azure.",
                "docstring_type": "~azure.core.credentials_async.AsyncTokenCredential",
                "required": true
            },
            "endpoint": {
                "method_signature": "endpoint,  # type: str",
                "description": "The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net.",
                "docstring_type": "str",
                "required": true
            }
        },
        "constant": {
        },
        "call": "credential, endpoint"
    },
    "config": {
        "credential": true,
        "credential_scopes": ["https://dev.azuresynapse.net/.default"]
    },
    "operation_groups": {
    },
    "operation_mixins": {
        "get_role_definitions" : {
            "sync": {
                "signature": "def get_role_definitions(\n    self,\n    **kwargs  # type: Any\n):\n"
            },
            "async": {
                "signature": "def get_role_definitions(\n    self,\n    **kwargs\n) -\u003e AsyncItemPaged[\"models.RolesListResponse\"]:\n",
                "coroutine": false
            },
            "doc": "    \"\"\"List roles.\n\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: RolesListResponse, or the result of cls(response)\n:rtype: ~azure.synapse.accesscontrol.models.RolesListResponse\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\"",
            "call": ""
        },
        "get_role_definition_by_id" : {
            "sync": {
                "signature": "def get_role_definition_by_id(\n    self,\n    role_id,  # type: str\n    **kwargs  # type: Any\n):\n"
            },
            "async": {
                "signature": "async def get_role_definition_by_id(\n    self,\n    role_id: str,\n    **kwargs\n) -\u003e \"models.SynapseRole\":\n",
                "coroutine": true
            },
            "doc": "    \"\"\"Get role by role Id.\n\n:param role_id: Synapse Built-In Role Id.\n:type role_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: SynapseRole, or the result of cls(response)\n:rtype: ~azure.synapse.accesscontrol.models.SynapseRole\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\"",
            "call": "role_id"
        },
        "create_role_assignment" : {
            "sync": {
                "signature": "def create_role_assignment(\n    self,\n    create_role_assignment_options,  # type: \"models.RoleAssignmentOptions\"\n    **kwargs  # type: Any\n):\n"
            },
            "async": {
                "signature": "async def create_role_assignment(\n    self,\n    create_role_assignment_options: \"models.RoleAssignmentOptions\",\n    **kwargs\n) -\u003e \"models.RoleAssignmentDetails\":\n",
                "coroutine": true
            },
            "doc": "    \"\"\"Create role assignment.\n\n:param create_role_assignment_options: Details of role id and object id.\n:type create_role_assignment_options: ~azure.synapse.accesscontrol.models.RoleAssignmentOptions\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: RoleAssignmentDetails, or the result of cls(response)\n:rtype: ~azure.synapse.accesscontrol.models.RoleAssignmentDetails\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\"",
            "call": "create_role_assignment_options"
        },
        "get_role_assignments" : {
            "sync": {
                "signature": "def get_role_assignments(\n    self,\n    role_id=None,  # type: Optional[str]\n    principal_id=None,  # type: Optional[str]\n    continuation_token_parameter=None,  # type: Optional[str]\n    **kwargs  # type: Any\n):\n"
            },
            "async": {
                "signature": "async def get_role_assignments(\n    self,\n    role_id: Optional[str] = None,\n    principal_id: Optional[str] = None,\n    continuation_token_parameter: Optional[str] = None,\n    **kwargs\n) -\u003e List[\"models.RoleAssignmentDetails\"]:\n",
                "coroutine": true
            },
            "doc": "    \"\"\"List role assignments.\n\n:param role_id: Synapse Built-In Role Id.\n:type role_id: str\n:param principal_id: Object ID of the AAD principal or security-group.\n:type principal_id: str\n:param continuation_token_parameter: Continuation token.\n:type continuation_token_parameter: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: list of RoleAssignmentDetails, or the result of cls(response)\n:rtype: list[~azure.synapse.accesscontrol.models.RoleAssignmentDetails]\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\"",
            "call": "role_id, principal_id, continuation_token_parameter"
        },
        "get_role_assignment_by_id" : {
            "sync": {
                "signature": "def get_role_assignment_by_id(\n    self,\n    role_assignment_id,  # type: str\n    **kwargs  # type: Any\n):\n"
            },
            "async": {
                "signature": "async def get_role_assignment_by_id(\n    self,\n    role_assignment_id: str,\n    **kwargs\n) -\u003e \"models.RoleAssignmentDetails\":\n",
                "coroutine": true
            },
            "doc": "    \"\"\"Get role assignment by role assignment Id.\n\n:param role_assignment_id: The ID of the role assignment.\n:type role_assignment_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: RoleAssignmentDetails, or the result of cls(response)\n:rtype: ~azure.synapse.accesscontrol.models.RoleAssignmentDetails\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\"",
            "call": "role_assignment_id"
        },
        "delete_role_assignment_by_id" : {
            "sync": {
                "signature": "def delete_role_assignment_by_id(\n    self,\n    role_assignment_id,  # type: str\n    **kwargs  # type: Any\n):\n"
            },
            "async": {
                "signature": "async def delete_role_assignment_by_id(\n    self,\n    role_assignment_id: str,\n    **kwargs\n) -\u003e None:\n",
                "coroutine": true
            },
            "doc": "    \"\"\"Delete role assignment by role assignment Id.\n\n:param role_assignment_id: The ID of the role assignment.\n:type role_assignment_id: str\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: None, or the result of cls(response)\n:rtype: None\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\"",
            "call": "role_assignment_id"
        },
        "get_caller_role_assignments" : {
            "sync": {
                "signature": "def get_caller_role_assignments(\n    self,\n    **kwargs  # type: Any\n):\n"
            },
            "async": {
                "signature": "async def get_caller_role_assignments(\n    self,\n    **kwargs\n) -\u003e List[str]:\n",
                "coroutine": true
            },
            "doc": "    \"\"\"List role assignments of the caller.\n\n:keyword callable cls: A custom type or function that will be passed the direct response\n:return: list of str, or the result of cls(response)\n:rtype: list[str]\n:raises: ~azure.core.exceptions.HttpResponseError\n\"\"\"",
            "call": ""
        }
    },
    "sync_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"HttpRequest\", \"HttpResponse\"], \"azure.core.paging\": [\"ItemPaged\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"Callable\", \"Dict\", \"Generic\", \"Iterable\", \"List\", \"Optional\", \"TypeVar\"]}}}",
    "async_imports": "{\"regular\": {\"azurecore\": {\"azure.core.exceptions\": [\"HttpResponseError\", \"ResourceExistsError\", \"ResourceNotFoundError\", \"map_error\"], \"azure.core.pipeline\": [\"PipelineResponse\"], \"azure.core.pipeline.transport\": [\"AsyncHttpResponse\", \"HttpRequest\"], \"azure.core.async_paging\": [\"AsyncItemPaged\", \"AsyncList\"]}, \"stdlib\": {\"warnings\": [null]}}, \"conditional\": {\"stdlib\": {\"typing\": [\"Any\", \"AsyncIterable\", \"Callable\", \"Dict\", \"Generic\", \"List\", \"Optional\", \"TypeVar\"]}}}"
}