# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._client import JobRouterAdministrationClient
from ._client import JobRouterClient
from ._version import VERSION
from .models import *  # pylint: disable=unused-wildcard-import

__version__ = VERSION

try:
    from ._patch import __all__ as _patch_all
    from ._patch import *  # pylint: disable=unused-wildcard-import
except ImportError:
    _patch_all = []
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "JobRouterAdministrationClient",
    "JobRouterClient",
    "AcceptJobOfferResult",
    "BestWorkerMode",
    "CancelExceptionAction",
    "CancelJobRequest",
    "ChannelConfiguration",
    "ClassificationPolicy",
    "ClassificationPolicyItem",
    "CloseJobRequest",
    "CompleteJobRequest",
    "ConditionalQueueSelectorAttachment",
    "ConditionalWorkerSelectorAttachment",
    "DeclineJobOfferRequest",
    "DirectMapRouterRule",
    "DistributionMode",
    "DistributionPolicy",
    "DistributionPolicyItem",
    "ExceptionAction",
    "ExceptionPolicy",
    "ExceptionPolicyItem",
    "ExceptionRule",
    "ExceptionTrigger",
    "ExpressionRouterRule",
    "FunctionRouterRule",
    "FunctionRouterRuleCredential",
    "JobMatchingMode",
    "LongestIdleMode",
    "ManualReclassifyExceptionAction",
    "Oauth2ClientCredential",
    "PassThroughQueueSelectorAttachment",
    "PassThroughWorkerSelectorAttachment",
    "QueueAndMatchMode",
    "QueueLengthExceptionTrigger",
    "QueueSelectorAttachment",
    "QueueWeightedAllocation",
    "ReclassifyExceptionAction",
    "ReclassifyJobRequest",
    "RoundRobinMode",
    "RouterJob",
    "RouterJobAssignment",
    "RouterJobItem",
    "RouterJobOffer",
    "RouterJobPositionDetails",
    "RouterQueue",
    "RouterQueueAssignment",
    "RouterQueueItem",
    "RouterQueueSelector",
    "RouterQueueStatistics",
    "RouterRule",
    "RouterWorker",
    "RouterWorkerAssignment",
    "RouterWorkerItem",
    "RouterWorkerSelector",
    "RuleEngineQueueSelectorAttachment",
    "RuleEngineWorkerSelectorAttachment",
    "ScheduleAndSuspendMode",
    "ScoringRuleOptions",
    "StaticQueueSelectorAttachment",
    "StaticRouterRule",
    "StaticWorkerSelectorAttachment",
    "SuspendMode",
    "UnassignJobRequest",
    "UnassignJobResult",
    "WaitTimeExceptionTrigger",
    "WebhookRouterRule",
    "WeightedAllocationQueueSelectorAttachment",
    "WeightedAllocationWorkerSelectorAttachment",
    "WorkerSelectorAttachment",
    "WorkerWeightedAllocation",
    "ExpressionRouterRuleLanguage",
    "LabelOperator",
    "RouterJobStatus",
    "RouterJobStatusSelector",
    "RouterWorkerSelectorStatus",
    "RouterWorkerState",
    "RouterWorkerStateSelector",
    "ScoringRuleParameterSelector",
]
__all__.extend([p for p in _patch_all if p not in __all__])

_patch_sdk()
