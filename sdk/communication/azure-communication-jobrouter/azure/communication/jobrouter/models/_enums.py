# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class ExpressionRouterRuleLanguage(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The available expression languages that can be configured."""

    POWER_FX = "powerFx"
    """PowerFx"""


class LabelOperator(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Describes supported operations on label values."""

    EQUAL = "equal"
    """Equal"""
    NOT_EQUAL = "notEqual"
    """Not Equal"""
    LESS_THAN = "lessThan"
    """Less than"""
    LESS_THAN_EQUAL = "lessThanEqual"
    """Less than or equal"""
    GREATER_THAN = "greaterThan"
    """Greater than"""
    GREATER_THAN_EQUAL = "greaterThanEqual"
    """Greater than or equal"""


class RouterJobStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of the Job."""

    PENDING_CLASSIFICATION = "pendingClassification"
    """Job is waiting to be classified."""
    QUEUED = "queued"
    """Job has been queued."""
    ASSIGNED = "assigned"
    """Job has been assigned to a worker."""
    COMPLETED = "completed"
    """Job has been completed by a worker."""
    CLOSED = "closed"
    """Job has been closed by a worker."""
    CANCELLED = "cancelled"
    """Job has been cancelled."""
    CLASSIFICATION_FAILED = "classificationFailed"
    """Classification process failed for the job."""
    CREATED = "created"
    """Job has been created."""
    PENDING_SCHEDULE = "pendingSchedule"
    """Job has been created but not been scheduled yet."""
    SCHEDULED = "scheduled"
    """Job has been scheduled successfully."""
    SCHEDULE_FAILED = "scheduleFailed"
    """Job scheduling failed."""
    WAITING_FOR_ACTIVATION = "waitingForActivation"
    """Job is in a suspended state and waiting for an update."""


class RouterJobStatusSelector(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enums used to filters jobs by state."""

    ALL = "all"
    """Default"""
    PENDING_CLASSIFICATION = "pendingClassification"
    """Job is waiting to be classified."""
    QUEUED = "queued"
    """Job has been queued."""
    ASSIGNED = "assigned"
    """Job has been assigned to a worker."""
    COMPLETED = "completed"
    """Job has been completed by a worker."""
    CLOSED = "closed"
    """Job has been closed by a worker."""
    CANCELLED = "cancelled"
    """Job has been cancelled."""
    CLASSIFICATION_FAILED = "classificationFailed"
    """Classification process failed for the job."""
    CREATED = "created"
    """Job has been created."""
    PENDING_SCHEDULE = "pendingSchedule"
    """Job has been created but not been scheduled yet."""
    SCHEDULED = "scheduled"
    """Job has been scheduled successfully."""
    SCHEDULE_FAILED = "scheduleFailed"
    """Job scheduling failed."""
    WAITING_FOR_ACTIVATION = "waitingForActivation"
    """Job is in a suspended state and waiting for an update."""
    ACTIVE = "active"
    """Job is in a state of PendingClassification or Queued or Assigned or ClassificationFailed or
    #: Completed or PendingSchedule or Scheduled or ScheduleFailed or WaitingForActivation."""


class RouterWorkerSelectorStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of the worker selector."""

    ACTIVE = "active"
    """Active"""
    EXPIRED = "expired"
    """Expired"""


class RouterWorkerState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enums for worker status."""

    ACTIVE = "active"
    """Worker is active and available to take offers."""
    DRAINING = "draining"
    """Worker is not active, if there are existing offers they are being revoked. No new offers are
    #: sent."""
    INACTIVE = "inactive"
    """Worker is not active. No new offers are sent."""


class RouterWorkerStateSelector(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enums used to filters workers by state."""

    ACTIVE = "active"
    """Worker is active and available to take offers."""
    DRAINING = "draining"
    """Worker is not active, if there are existing offers they are being revoked. No new offers are
    #: sent."""
    INACTIVE = "inactive"
    """Worker is not active. No new offers are sent."""
    ALL = "all"
    """Worker is active or draining or inactive."""


class ScoringRuleParameterSelector(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Supported parameters for scoring workers."""

    JOB_LABELS = "jobLabels"
    """Parameter to add job labels to scoring payload.  Property is sent as ``job``."""
    WORKER_SELECTORS = "workerSelectors"
    """Parameter to add worker selectors from the job to scoring payload.  Property is sent as
    #: ``selectors``."""
