# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.3, generator: @autorest/python@6.4.7)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CommunicationError(_serialization.Model):
    """The Communication Services error.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar code: The error code. Required.
    :vartype code: str
    :ivar message: The error message. Required.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: Further details about specific errors that led to this error.
    :vartype details: list[~azure.communication.rooms.models.CommunicationError]
    :ivar inner_error: The inner error if any.
    :vartype inner_error: ~azure.communication.rooms.models.CommunicationError
    """

    _validation = {
        "code": {"required": True},
        "message": {"required": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "inner_error": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[CommunicationError]"},
        "inner_error": {"key": "innererror", "type": "CommunicationError"},
    }

    def __init__(self, *, code: str, message: str, **kwargs: Any) -> None:
        """
        :keyword code: The error code. Required.
        :paramtype code: str
        :keyword message: The error message. Required.
        :paramtype message: str
        """
        super().__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = None
        self.details = None
        self.inner_error = None


class CommunicationErrorResponse(_serialization.Model):
    """The Communication Services error.

    All required parameters must be populated in order to send to Azure.

    :ivar error: The Communication Services error. Required.
    :vartype error: ~azure.communication.rooms.models.CommunicationError
    """

    _validation = {
        "error": {"required": True},
    }

    _attribute_map = {
        "error": {"key": "error", "type": "CommunicationError"},
    }

    def __init__(self, *, error: "_models.CommunicationError", **kwargs: Any) -> None:
        """
        :keyword error: The Communication Services error. Required.
        :paramtype error: ~azure.communication.rooms.models.CommunicationError
        """
        super().__init__(**kwargs)
        self.error = error


class CommunicationRoom(_serialization.Model):
    """The meeting room.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Unique identifier of a room. This id is server generated. Required.
    :vartype id: str
    :ivar created_at: The timestamp when the room was created at the server. The timestamp is in
     RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. Required.
    :vartype created_at: ~datetime.datetime
    :ivar valid_from: The timestamp from when the room is open for joining. The timestamp is in
     RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. Required.
    :vartype valid_from: ~datetime.datetime
    :ivar valid_until: The timestamp from when the room can no longer be joined. The timestamp is
     in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. Required.
    :vartype valid_until: ~datetime.datetime
    """

    _validation = {
        "id": {"required": True},
        "created_at": {"required": True},
        "valid_from": {"required": True},
        "valid_until": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "valid_from": {"key": "validFrom", "type": "iso-8601"},
        "valid_until": {"key": "validUntil", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        created_at: datetime.datetime,
        valid_from: datetime.datetime,
        valid_until: datetime.datetime,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: Unique identifier of a room. This id is server generated. Required.
        :paramtype id: str
        :keyword created_at: The timestamp when the room was created at the server. The timestamp is in
         RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. Required.
        :paramtype created_at: ~datetime.datetime
        :keyword valid_from: The timestamp from when the room is open for joining. The timestamp is in
         RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. Required.
        :paramtype valid_from: ~datetime.datetime
        :keyword valid_until: The timestamp from when the room can no longer be joined. The timestamp
         is in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. Required.
        :paramtype valid_until: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.id = id
        self.created_at = created_at
        self.valid_from = valid_from
        self.valid_until = valid_until


class CreateRoomRequest(_serialization.Model):
    """Request payload for creating new room.

    :ivar valid_from: The timestamp from when the room is open for joining. The timestamp is in
     RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. The default value is the current date time.
    :vartype valid_from: ~datetime.datetime
    :ivar valid_until: The timestamp from when the room can no longer be joined. The timestamp is
     in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. The default value is the current date time plus
     180 days.
    :vartype valid_until: ~datetime.datetime
    :ivar participants: (Optional) Participants to be invited to the room.
    :vartype participants: dict[str, ~azure.communication.rooms.models.ParticipantProperties]
    """

    _attribute_map = {
        "valid_from": {"key": "validFrom", "type": "iso-8601"},
        "valid_until": {"key": "validUntil", "type": "iso-8601"},
        "participants": {"key": "participants", "type": "{ParticipantProperties}"},
    }

    def __init__(
        self,
        *,
        valid_from: Optional[datetime.datetime] = None,
        valid_until: Optional[datetime.datetime] = None,
        participants: Optional[Dict[str, "_models.ParticipantProperties"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword valid_from: The timestamp from when the room is open for joining. The timestamp is in
         RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. The default value is the current date time.
        :paramtype valid_from: ~datetime.datetime
        :keyword valid_until: The timestamp from when the room can no longer be joined. The timestamp
         is in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``. The default value is the current date time plus
         180 days.
        :paramtype valid_until: ~datetime.datetime
        :keyword participants: (Optional) Participants to be invited to the room.
        :paramtype participants: dict[str, ~azure.communication.rooms.models.ParticipantProperties]
        """
        super().__init__(**kwargs)
        self.valid_from = valid_from
        self.valid_until = valid_until
        self.participants = participants


class ParticipantProperties(_serialization.Model):
    """ParticipantProperties.

    :ivar role: The role of a room participant. The default value is Attendee. Known values are:
     "Presenter", "Attendee", and "Consumer".
    :vartype role: str or ~azure.communication.rooms.models.ParticipantRole
    """

    _attribute_map = {
        "role": {"key": "role", "type": "str"},
    }

    def __init__(self, *, role: Optional[Union[str, "_models.ParticipantRole"]] = None, **kwargs: Any) -> None:
        """
        :keyword role: The role of a room participant. The default value is Attendee. Known values are:
         "Presenter", "Attendee", and "Consumer".
        :paramtype role: str or ~azure.communication.rooms.models.ParticipantRole
        """
        super().__init__(**kwargs)
        self.role = role


class ParticipantsCollection(_serialization.Model):
    """A collection of participants in a room.

    All required parameters must be populated in order to send to Azure.

    :ivar value: A collection of participants. Required.
    :vartype value: list[~azure.communication.rooms.models.RoomParticipant]
    :ivar next_link: If there are more participants that can be retrieved, the next link will be
     populated.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[RoomParticipant]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.RoomParticipant"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: A collection of participants. Required.
        :paramtype value: list[~azure.communication.rooms.models.RoomParticipant]
        :keyword next_link: If there are more participants that can be retrieved, the next link will be
         populated.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class RoomParticipant(_serialization.Model):
    """A participant of the room.

    All required parameters must be populated in order to send to Azure.

    :ivar raw_id: Raw ID representation of the communication identifier. Please refer to the
     following document for additional information on Raw ID. :code:`<br>`
     https://learn.microsoft.com/azure/communication-services/concepts/identifiers?pivots=programming-language-rest#raw-id-representation.
     Required.
    :vartype raw_id: str
    :ivar role: The role of a room participant. The default value is Attendee. Required. Known
     values are: "Presenter", "Attendee", and "Consumer".
    :vartype role: str or ~azure.communication.rooms.models.ParticipantRole
    """

    _validation = {
        "raw_id": {"required": True},
        "role": {"required": True},
    }

    _attribute_map = {
        "raw_id": {"key": "rawId", "type": "str"},
        "role": {"key": "role", "type": "str"},
    }

    def __init__(self, *, raw_id: str, role: Union[str, "_models.ParticipantRole"], **kwargs: Any) -> None:
        """
        :keyword raw_id: Raw ID representation of the communication identifier. Please refer to the
         following document for additional information on Raw ID. :code:`<br>`
         https://learn.microsoft.com/azure/communication-services/concepts/identifiers?pivots=programming-language-rest#raw-id-representation.
         Required.
        :paramtype raw_id: str
        :keyword role: The role of a room participant. The default value is Attendee. Required. Known
         values are: "Presenter", "Attendee", and "Consumer".
        :paramtype role: str or ~azure.communication.rooms.models.ParticipantRole
        """
        super().__init__(**kwargs)
        self.raw_id = raw_id
        self.role = role


class RoomsCollection(_serialization.Model):
    """A collection of rooms.

    All required parameters must be populated in order to send to Azure.

    :ivar value: A collection of rooms. Required.
    :vartype value: list[~azure.communication.rooms.models.CommunicationRoom]
    :ivar next_link: If there are more rooms that can be retrieved, the next link will be
     populated.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[CommunicationRoom]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.CommunicationRoom"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: A collection of rooms. Required.
        :paramtype value: list[~azure.communication.rooms.models.CommunicationRoom]
        :keyword next_link: If there are more rooms that can be retrieved, the next link will be
         populated.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class UpdateParticipantsRequest(_serialization.Model):
    """Participants to be updated in the room.

    :ivar participants: Participants to be updated.
    :vartype participants: dict[str, ~azure.communication.rooms.models.ParticipantProperties]
    """

    _attribute_map = {
        "participants": {"key": "participants", "type": "{ParticipantProperties}"},
    }

    def __init__(
        self, *, participants: Optional[Dict[str, "_models.ParticipantProperties"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword participants: Participants to be updated.
        :paramtype participants: dict[str, ~azure.communication.rooms.models.ParticipantProperties]
        """
        super().__init__(**kwargs)
        self.participants = participants


class UpdateRoomRequest(_serialization.Model):
    """Request payload for updating a room.

    :ivar valid_from: (Optional) The timestamp from when the room is open for joining. The
     timestamp is in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``.
    :vartype valid_from: ~datetime.datetime
    :ivar valid_until: (Optional) The timestamp from when the room can no longer be joined. The
     timestamp is in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``.
    :vartype valid_until: ~datetime.datetime
    """

    _attribute_map = {
        "valid_from": {"key": "validFrom", "type": "iso-8601"},
        "valid_until": {"key": "validUntil", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        valid_from: Optional[datetime.datetime] = None,
        valid_until: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword valid_from: (Optional) The timestamp from when the room is open for joining. The
         timestamp is in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``.
        :paramtype valid_from: ~datetime.datetime
        :keyword valid_until: (Optional) The timestamp from when the room can no longer be joined. The
         timestamp is in RFC3339 format: ``yyyy-MM-ddTHH:mm:ssZ``.
        :paramtype valid_until: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.valid_from = valid_from
        self.valid_until = valid_until
