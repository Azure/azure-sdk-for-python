# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class AcquiredPhoneNumber(msrest.serialization.Model):
    """The acquired phone number and its metadata and configuration.

    All required parameters must be populated in order to send to Azure.

    :param id: Required. The id, this is the same as the phone number in E.164 format.
    :type id: str
    :param phone_number: Required. The phoneNumber in E.164 format.
    :type phone_number: str
    :param country_code: Required. The ISO 3166-2 country code of the country that the phone number
     belongs to.
    :type country_code: str
    :param number_type: Required. The type of the phone number. Possible values include:
     "tollFree", "geographic".
    :type number_type: str or ~azure.communication.administration.models.PhoneNumberType
    :param assignment_type: Required. The assignment type of the phone number, people or
     application. Possible values include: "person", "application".
    :type assignment_type: str or ~azure.communication.administration.models.AssignmentType
    :param purchase_date: Required. The purchase date of the phone number.
    :type purchase_date: ~datetime.datetime
    :param capabilities: Required. The phone number's capabilities.
    :type capabilities: ~azure.communication.administration.models.Capabilities
    :param callback_url: Required. The webhook URL for receiving incoming events.
    :type callback_url: str
    :param application_id: Required. The application id the number has been assigned to.
    :type application_id: str
    :param monthly_rate: Required. The monthly cost of the phone number.
    :type monthly_rate: ~azure.communication.administration.models.MonthlyRate
    """

    _validation = {
        'id': {'required': True},
        'phone_number': {'required': True},
        'country_code': {'required': True},
        'number_type': {'required': True},
        'assignment_type': {'required': True},
        'purchase_date': {'required': True},
        'capabilities': {'required': True},
        'callback_url': {'required': True},
        'application_id': {'required': True},
        'monthly_rate': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'phone_number': {'key': 'phoneNumber', 'type': 'str'},
        'country_code': {'key': 'countryCode', 'type': 'str'},
        'number_type': {'key': 'numberType', 'type': 'str'},
        'assignment_type': {'key': 'assignmentType', 'type': 'str'},
        'purchase_date': {'key': 'purchaseDate', 'type': 'iso-8601'},
        'capabilities': {'key': 'capabilities', 'type': 'Capabilities'},
        'callback_url': {'key': 'callbackUrl', 'type': 'str'},
        'application_id': {'key': 'applicationId', 'type': 'str'},
        'monthly_rate': {'key': 'monthlyRate', 'type': 'MonthlyRate'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(AcquiredPhoneNumber, self).__init__(**kwargs)
        self.id = kwargs['id']
        self.phone_number = kwargs['phone_number']
        self.country_code = kwargs['country_code']
        self.number_type = kwargs['number_type']
        self.assignment_type = kwargs['assignment_type']
        self.purchase_date = kwargs['purchase_date']
        self.capabilities = kwargs['capabilities']
        self.callback_url = kwargs['callback_url']
        self.application_id = kwargs['application_id']
        self.monthly_rate = kwargs['monthly_rate']


class AcquiredPhoneNumbers(msrest.serialization.Model):
    """The list of acquired phone numbers.

    All required parameters must be populated in order to send to Azure.

    :param value: Required. Represents a list of acquired phone numbers.
    :type value: list[~azure.communication.administration.models.AcquiredPhoneNumber]
    :param next_link: Represents the URL link to the next page.
    :type next_link: str
    """

    _validation = {
        'value': {'required': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': '[AcquiredPhoneNumber]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(AcquiredPhoneNumbers, self).__init__(**kwargs)
        self.value = kwargs['value']
        self.next_link = kwargs.get('next_link', None)


class AcquiredPhoneNumberUpdate(msrest.serialization.Model):
    """The properties of a phone number that can be changed.

    :param callback_url: The webhook URL for receiving incoming events.
    :type callback_url: str
    :param application_id: The application id the number has been assigned to.
    :type application_id: str
    :param capabilities: The new set of enabled capabilities.
    :type capabilities: ~azure.communication.administration.models.Capabilities
    """

    _attribute_map = {
        'callback_url': {'key': 'callbackUrl', 'type': 'str'},
        'application_id': {'key': 'applicationId', 'type': 'str'},
        'capabilities': {'key': 'capabilities', 'type': 'Capabilities'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(AcquiredPhoneNumberUpdate, self).__init__(**kwargs)
        self.callback_url = kwargs.get('callback_url', None)
        self.application_id = kwargs.get('application_id', None)
        self.capabilities = kwargs.get('capabilities', None)


class Capabilities(msrest.serialization.Model):
    """The capabilities of a phone number.

    All required parameters must be populated in order to send to Azure.

    :param sms: Required. Available Sms capabilities. Possible values include: "inbound",
     "outbound", "inbound+outbound", "none". Default value: "none".
    :type sms: str or ~azure.communication.administration.models.CapabilityValue
    :param calling: Required. Available Calling capabilities. Possible values include: "inbound",
     "outbound", "inbound+outbound", "none". Default value: "none".
    :type calling: str or ~azure.communication.administration.models.CapabilityValue
    """

    _validation = {
        'sms': {'required': True},
        'calling': {'required': True},
    }

    _attribute_map = {
        'sms': {'key': 'sms', 'type': 'str'},
        'calling': {'key': 'calling', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Capabilities, self).__init__(**kwargs)
        self.sms = kwargs.get('sms', "none")
        self.calling = kwargs.get('calling', "none")


class Error(msrest.serialization.Model):
    """Represents a service error response body.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to Azure.

    :param code: Required. The error code in the error response.
    :type code: str
    :param message: Required. The error message in the error response.
    :type message: str
    :ivar inner_error: Represents a service error response body.
    :vartype inner_error: ~azure.communication.administration.models.Error
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
        'inner_error': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'inner_error': {'key': 'innererror', 'type': 'Error'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Error, self).__init__(**kwargs)
        self.code = kwargs['code']
        self.message = kwargs['message']
        self.inner_error = None


class ErrorResponse(msrest.serialization.Model):
    """Represents a service error response.

    All required parameters must be populated in order to send to Azure.

    :param error: Required. Represents a service error response body.
    :type error: ~azure.communication.administration.models.Error
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'error': {'key': 'error', 'type': 'Error'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = kwargs['error']


class MonthlyRate(msrest.serialization.Model):
    """The monthly incurred cost for a single phone number.

    All required parameters must be populated in order to send to Azure.

    :param value: Required. The cost amount.
    :type value: float
    :param currency: Required. The currency of the cost amount.
    :type currency: str
    """

    _validation = {
        'value': {'required': True},
        'currency': {'required': True},
    }

    _attribute_map = {
        'value': {'key': 'value', 'type': 'float'},
        'currency': {'key': 'currency', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MonthlyRate, self).__init__(**kwargs)
        self.value = kwargs['value']
        self.currency = kwargs['currency']


class Operation(msrest.serialization.Model):
    """Long running operation.

    All required parameters must be populated in order to send to Azure.

    :param status: Required. Status of operation. Possible values include: "notStarted", "running",
     "succeeded", "failed".
    :type status: str or ~azure.communication.administration.models.OperationStatusCodes
    :param id: Required. Id of the operation.
    :type id: str
    :param kind: Required. Kind of the operation. Possible values include: "search", "purchase",
     "releasePhoneNumber", "updatePhoneNumber".
    :type kind: str or ~azure.communication.administration.models.OperationKind
    :param created_date_time: Required. The date that the operation was created.
    :type created_date_time: ~datetime.datetime
    :param last_action_date_time: Required. The most recent date that the operation was changed.
    :type last_action_date_time: ~datetime.datetime
    :param resource_location: Url for retrieving the result of the operation if any.
    :type resource_location: str
    :param error: Represents a service error response body.
    :type error: ~azure.communication.administration.models.Error
    """

    _validation = {
        'status': {'required': True},
        'id': {'required': True},
        'kind': {'required': True},
        'created_date_time': {'required': True},
        'last_action_date_time': {'required': True},
    }

    _attribute_map = {
        'status': {'key': 'status', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'last_action_date_time': {'key': 'lastActionDateTime', 'type': 'iso-8601'},
        'resource_location': {'key': 'resourceLocation', 'type': 'str'},
        'error': {'key': 'error', 'type': 'Error'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Operation, self).__init__(**kwargs)
        self.status = kwargs['status']
        self.id = kwargs['id']
        self.kind = kwargs['kind']
        self.created_date_time = kwargs['created_date_time']
        self.last_action_date_time = kwargs['last_action_date_time']
        self.resource_location = kwargs.get('resource_location', None)
        self.error = kwargs.get('error', None)


class PurchaseRequest(msrest.serialization.Model):
    """Request to purchase phone numbers.

    :param search_id: The id of the search result to purchase.
    :type search_id: str
    """

    _attribute_map = {
        'search_id': {'key': 'searchId', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(PurchaseRequest, self).__init__(**kwargs)
        self.search_id = kwargs.get('search_id', None)


class SearchCapabilities(msrest.serialization.Model):
    """The capabilities of a phone number.

    :param sms: Available Sms capabilities. Possible values include: "inbound", "outbound",
     "inbound+outbound", "none". Default value: "none".
    :type sms: str or ~azure.communication.administration.models.CapabilityValue
    :param calling: Available Calling capabilities. Possible values include: "inbound", "outbound",
     "inbound+outbound", "none". Default value: "none".
    :type calling: str or ~azure.communication.administration.models.CapabilityValue
    """

    _attribute_map = {
        'sms': {'key': 'sms', 'type': 'str'},
        'calling': {'key': 'calling', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(SearchCapabilities, self).__init__(**kwargs)
        self.sms = kwargs.get('sms', "none")
        self.calling = kwargs.get('calling', "none")


class SearchRequest(msrest.serialization.Model):
    """The desired properties of a phone number for search.

    All required parameters must be populated in order to send to Azure.

    :param number_type: Required. The phone number type. Possible values include: "tollFree",
     "geographic".
    :type number_type: str or ~azure.communication.administration.models.PhoneNumberType
    :param assignment_type: Required. The phone number's assignment type. Possible values include:
     "person", "application".
    :type assignment_type: str or ~azure.communication.administration.models.AssignmentType
    :param capabilities: Required. The phone number's capabilities.
    :type capabilities: ~azure.communication.administration.models.SearchCapabilities
    :param area_code: The desired area code.
    :type area_code: str
    :param quantity: The desired quantity of phone numbers.
    :type quantity: int
    """

    _validation = {
        'number_type': {'required': True},
        'assignment_type': {'required': True},
        'capabilities': {'required': True},
    }

    _attribute_map = {
        'number_type': {'key': 'numberType', 'type': 'str'},
        'assignment_type': {'key': 'assignmentType', 'type': 'str'},
        'capabilities': {'key': 'capabilities', 'type': 'SearchCapabilities'},
        'area_code': {'key': 'areaCode', 'type': 'str'},
        'quantity': {'key': 'quantity', 'type': 'int'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(SearchRequest, self).__init__(**kwargs)
        self.number_type = kwargs['number_type']
        self.assignment_type = kwargs['assignment_type']
        self.capabilities = kwargs['capabilities']
        self.area_code = kwargs.get('area_code', None)
        self.quantity = kwargs.get('quantity', 1)


class SearchResult(msrest.serialization.Model):
    """The result of a phone number search operation.

    All required parameters must be populated in order to send to Azure.

    :param id: Required. The search id.
    :type id: str
    :param phone_numbers: Required. The phone numbers that are available. Can be fewer than the
     desired search quantity.
    :type phone_numbers: list[str]
    :param number_type: Required. The phoner number type. Possible values include: "tollFree",
     "geographic".
    :type number_type: str or ~azure.communication.administration.models.PhoneNumberType
    :param assignment_type: Required. The phone number's assignment type. Possible values include:
     "person", "application".
    :type assignment_type: str or ~azure.communication.administration.models.AssignmentType
    :param capabilities: Required. The phone number's capabilities.
    :type capabilities: ~azure.communication.administration.models.Capabilities
    :param monthly_rate: Required. The monthly cost for an individual phone number.
    :type monthly_rate: ~azure.communication.administration.models.MonthlyRate
    :param search_expires_by: Required. The date that this search result expires and phone numbers
     are no longer on hold. A search result expires in less than 15min.
    :type search_expires_by: ~datetime.datetime
    """

    _validation = {
        'id': {'required': True},
        'phone_numbers': {'required': True},
        'number_type': {'required': True},
        'assignment_type': {'required': True},
        'capabilities': {'required': True},
        'monthly_rate': {'required': True},
        'search_expires_by': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'phone_numbers': {'key': 'phoneNumbers', 'type': '[str]'},
        'number_type': {'key': 'numberType', 'type': 'str'},
        'assignment_type': {'key': 'assignmentType', 'type': 'str'},
        'capabilities': {'key': 'capabilities', 'type': 'Capabilities'},
        'monthly_rate': {'key': 'monthlyRate', 'type': 'MonthlyRate'},
        'search_expires_by': {'key': 'searchExpiresBy', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(SearchResult, self).__init__(**kwargs)
        self.id = kwargs['id']
        self.phone_numbers = kwargs['phone_numbers']
        self.number_type = kwargs['number_type']
        self.assignment_type = kwargs['assignment_type']
        self.capabilities = kwargs['capabilities']
        self.monthly_rate = kwargs['monthly_rate']
        self.search_expires_by = kwargs['search_expires_by']
