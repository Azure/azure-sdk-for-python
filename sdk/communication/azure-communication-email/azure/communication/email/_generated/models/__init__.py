# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

try:
    from ._models_py3 import CommunicationError
    from ._models_py3 import CommunicationErrorResponse
    from ._models_py3 import EmailAddress
    from ._models_py3 import EmailAttachment
    from ._models_py3 import EmailContent
    from ._models_py3 import EmailCustomHeader
    from ._models_py3 import EmailMessage
    from ._models_py3 import EmailRecipients
    from ._models_py3 import SendStatusResult
except (SyntaxError, ImportError):
    from ._models import CommunicationError  # type: ignore
    from ._models import CommunicationErrorResponse  # type: ignore
    from ._models import EmailAddress  # type: ignore
    from ._models import EmailAttachment  # type: ignore
    from ._models import EmailContent  # type: ignore
    from ._models import EmailCustomHeader  # type: ignore
    from ._models import EmailMessage  # type: ignore
    from ._models import EmailRecipients  # type: ignore
    from ._models import SendStatusResult  # type: ignore

from ._azure_communication_email_service_enums import EmailAttachmentType
from ._azure_communication_email_service_enums import EmailImportance
from ._azure_communication_email_service_enums import SendStatus
from ._patch import __all__ as _patch_all
from ._patch import *  # type: ignore # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk
__all__ = [
    'CommunicationError',
    'CommunicationErrorResponse',
    'EmailAddress',
    'EmailAttachment',
    'EmailContent',
    'EmailCustomHeader',
    'EmailMessage',
    'EmailRecipients',
    'SendStatusResult',
    'EmailAttachmentType',
    'EmailImportance',
    'SendStatus',
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()