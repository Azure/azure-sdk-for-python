# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
# pylint: disable=wrong-import-position

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from ._patch import *  # pylint: disable=unused-wildcard-import

from ._operations import Operations  # type: ignore
from ._operations import EmailConfigurationOperations  # type: ignore
from ._operations import VaultOperations  # type: ignore
from ._operations import EventOperations  # type: ignore
from ._operations import FabricOperations  # type: ignore
from ._operations import FabricAgentOperations  # type: ignore
from ._operations import JobOperations  # type: ignore
from ._operations import PolicyOperations  # type: ignore
from ._operations import PrivateEndpointConnectionsOperations  # type: ignore
from ._operations import PrivateEndpointConnectionProxiesOperations  # type: ignore
from ._operations import PrivateLinkResourcesOperations  # type: ignore
from ._operations import ProtectedItemOperations  # type: ignore
from ._operations import RecoveryPointOperations  # type: ignore
from ._operations import ReplicationExtensionOperations  # type: ignore
from ._operations import CheckNameAvailabilityOperations  # type: ignore
from ._operations import DeploymentPreflightOperations  # type: ignore
from ._operations import OperationResultsOperations  # type: ignore
from ._operations import LocationBasedOperationResultsOperations  # type: ignore

from ._patch import __all__ as _patch_all
from ._patch import *
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "EmailConfigurationOperations",
    "VaultOperations",
    "EventOperations",
    "FabricOperations",
    "FabricAgentOperations",
    "JobOperations",
    "PolicyOperations",
    "PrivateEndpointConnectionsOperations",
    "PrivateEndpointConnectionProxiesOperations",
    "PrivateLinkResourcesOperations",
    "ProtectedItemOperations",
    "RecoveryPointOperations",
    "ReplicationExtensionOperations",
    "CheckNameAvailabilityOperations",
    "DeploymentPreflightOperations",
    "OperationResultsOperations",
    "LocationBasedOperationResultsOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])  # pyright: ignore
_patch_sdk()
