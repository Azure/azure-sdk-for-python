{
  "swagger": "2.0",
  "info": {
    "version": "2017_04",
    "title": "ServiceBusManagementClient",
    "description": "Azure Service Bus client for managing Queues, Topics, and Subscriptions.",
    "x-ms-code-generation-settings": {
      "internalConstructors": true,
      "name": "ServiceBusManagementClient"
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/xml"
  ],
  "consumes": [
    "application/xml"
  ],
  "tags": [
    {
      "name": "Queue Operations"
    },
    {
      "name": "Topic Operations"
    },
    {
      "name": "Subscription Operations"
    }
  ],
  "parameters": {
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "type": "string",
      "default": "2017-04",
      "description": "Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.",
      "minLength": 1,
      "x-ms-parameter-location": "client"
    },
    "Endpoint": {
      "in": "path",
      "name": "endpoint",
      "description": "The Service Bus fully qualified domain name.",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    },
    "Enrich": {
      "name": "enrich",
      "in": "query",
      "description": "A query parameter that sets enrich to true or false.",
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AccessRights": {
      "description": "Access rights of the entity",
      "type": "string",
      "xml": {
        "name": "AccessRights",
        "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
      },
      "enum": [
        "Manage",
        "Send",
        "Listen"
      ]
    },
    "AuthorizationRule": {
      "description": "Authorization rule of an entity",
      "type": "object",
      "xml": {
        "name": "AuthorizationRule",
        "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
      },
      "properties": {
        "type": {
          "type": "string",
          "xml": {
            "attribute": true,
            "prefix": "i",
            "namespace": "http://www.w3.org/2001/XMLSchema-instance"
          }
        },
        "ClaimType": {
          "type": "string",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "ClaimValue": {
          "type": "string",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "Rights": {
          "description": "Access rights of the entity. Values are 'Send', 'Listen', or 'Manage'",
          "type": "array",
          "xml": {
            "wrapped": true,
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          },
          "items": {
            "type": "string",
            "xml": {
              "name": "AccessRights",
              "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
            }
          }
        },
        "CreatedTime": {
          "description": "The date and time when the authorization rule was created.",
          "type": "string",
          "format": "date-time",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "ModifiedTime": {
          "description": "The date and time when the authorization rule was modified.",
          "type": "string",
          "format": "date-time",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "KeyName": {
          "description": "The authorization rule key name",
          "type": "string",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "PrimaryKey": {
          "description": "The primary key of the authorization rule",
          "type": "string",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "SecondaryKey": {
          "description": "The primary key of the authorization rule",
          "type": "string",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        }
      }
    },
    "CreateQueueBody": {
      "description": "The request body for creating a queue.",
      "type": "object",
      "xml": {
        "name": "entry",
        "namespace": "http://www.w3.org/2005/Atom"
      },
      "properties": {
        "content": {
          "description": "QueueDescription for the new queue.",
          "type": "object",
          "xml": {
            "namespace": "http://www.w3.org/2005/Atom"
          },
          "properties": {
            "type": {
              "description": "MIME type of content.",
              "type": "string",
              "default": "application/xml",
              "xml": {
                "attribute": true
              }
            },
            "QueueDescription": {
              "description": "Properties of the new queue.",
              "$ref": "#/definitions/QueueDescription"
            }
          }
        }
      }
    },
    "CreateTopicBody": {
      "description": "The request body for creating a topic.",
      "type": "object",
      "xml": {
        "name": "entry",
        "namespace": "http://www.w3.org/2005/Atom"
      },
      "properties": {
        "content": {
          "description": "TopicDescription for the new topic.",
          "type": "object",
          "xml": {
            "namespace": "http://www.w3.org/2005/Atom"
          },
          "properties": {
            "type": {
              "description": "MIME type of content.",
              "type": "string",
              "default": "application/xml",
              "xml": {
                "attribute": true
              }
            },
            "TopicDescription": {
              "description": "Topic information to create.",
              "$ref": "#/definitions/TopicDescription"
            }
          }
        }
      }
    },
    "EntityAvailabilityStatus": {
      "description": "Availibility status of the entity",
      "type": "string",
      "xml": {
        "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
      },
      "enum": [
        "Available",
        "Limited",
        "Renaming",
        "Restoring",
        "Unknown"
      ]
    },
    "EntityStatus": {
      "description": "Status of a Service Bus resource",
      "type": "string",
      "xml": {
        "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
      },
      "enum": [
        "Active",
        "Creating",
        "Deleting",
        "Disabled",
        "ReceiveDisabled",
        "Renaming",
        "Restoring",
        "SendDisabled",
        "Unknown"
      ]
    },
    "MessageCountDetails": {
      "description": "Details about the message counts in queue.",
      "type": "object",
      "properties": {
        "ActiveMessageCount": {
          "description": "Number of active messages in the queue, topic, or subscription.",
          "type": "integer",
          "xml": {
            "prefix": "d2p1",
            "namespace": "http://schemas.microsoft.com/netservices/2011/06/servicebus"
          }
        },
        "DeadLetterMessageCount": {
          "description": "Number of messages that are dead lettered.",
          "type": "integer",
          "xml": {
            "prefix": "d2p1",
            "namespace": "http://schemas.microsoft.com/netservices/2011/06/servicebus"
          }
        },
        "ScheduledMessageCount": {
          "description": "Number of scheduled messages.",
          "type": "integer",
          "xml": {
            "prefix": "d2p1",
            "namespace": "http://schemas.microsoft.com/netservices/2011/06/servicebus"
          }
        },
        "TransferDeadLetterMessageCount": {
          "description": "Number of messages transferred into dead letters.",
          "type": "integer",
          "xml": {
            "prefix": "d2p1",
            "namespace": "http://schemas.microsoft.com/netservices/2011/06/servicebus"
          }
        },
        "TransferMessageCount": {
          "description": "Number of messages transferred to another queue, topic, or subscription.",
          "type": "integer",
          "xml": {
            "prefix": "d2p1",
            "namespace": "http://schemas.microsoft.com/netservices/2011/06/servicebus"
          }
        }
      },
      "xml": {
        "name": "CountDetails",
        "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
      }
    },
    "QueueDescription": {
      "description": "Description of a Service Bus queue resource.",
      "type": "object",
      "xml": {
        "name": "QueueDescription",
        "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
      },
      "properties": {
        "AuthorizationRules": {
          "description": "Authorization rules for resource.",
          "type": "array",
          "xml": {
            "name": "AuthorizationRules",
            "wrapped": true,
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          },
          "items": {
            "$ref": "#/definitions/AuthorizationRule"
          }
        },
        "AutoDeleteOnIdle": {
          "description": "ISO 8601 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string",
          "format": "duration",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "CreatedAt": {
          "description": "The exact time the queue was created.",
          "type": "string",
          "format": "date-time",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "DeadLetteringOnMessageExpiration": {
          "description": "A value that indicates whether this queue has dead letter support when a message expires.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "DefaultMessageTimeToLive": {
          "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string",
          "format": "duration",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "DuplicateDetectionHistoryTimeWindow": {
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
          "type": "string",
          "format": "duration",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "EntityAvailabilityStatus": {
          "$ref": "#/definitions/EntityAvailabilityStatus"
        },
        "EnableBatchedOperations": {
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "EnableExpress": {
          "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "EnablePartitioning": {
          "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "IsAnonymousAccessible": {
          "description": "A value indicating if the resource can be accessed without authorization.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "LockDuration": {
          "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
          "type": "string",
          "format": "duration",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "MaxDeliveryCount": {
          "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. Default value is 10.",
          "type": "integer",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "MaxSizeInMegabytes": {
          "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue.",
          "type": "integer",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "RequiresDuplicateDetection": {
          "description": "A value indicating if this queue requires duplicate detection.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "RequiresSession": {
          "description": "A value that indicates whether the queue supports the concept of sessions.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "Status": {
          "$ref": "#/definitions/EntityStatus"
        },
        "SupportOrdering": {
          "description": "A value that indicates whether the queue supports ordering.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "AccessedAt": {
          "description": "Last time a message was sent, or the last time there was a receive request to this queue.",
          "type": "string",
          "format": "date-time",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "UpdatedAt": {
          "description": "The exact time a message was updated in the queue.",
          "type": "string",
          "format": "date-time",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "SizeInBytes": {
          "description": "The size of the queue, in bytes.",
          "type": "integer",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "MessageCount": {
          "description": "The number of messages in the queue.",
          "type": "integer",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "MessageCountDetails": {
          "$ref": "#/definitions/MessageCountDetails"
        }
      }
    },
    "QueueDescriptionEntry": {
      "description": "Represents an entry in the feed when querying queues",
      "type": "object",
      "properties": {
        "base": {
          "description": "Base URL for the query.",
          "type": "string",
          "xml": {
            "name": "base",
            "attribute": true,
            "prefix": "xml"
          }
        },
        "id": {
          "description": "The URL of the GET request",
          "type": "string"
        },
        "title": {
          "description": "The name of the queue",
          "$ref": "#/definitions/ResponseTitle"
        },
        "published": {
          "description": "The timestamp for when this queue was published",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "The timestamp for when this queue was last updated",
          "type": "string",
          "format": "date-time"
        },
        "author": {
          "$ref": "#/definitions/ResponseAuthor"
        },
        "link": {
          "$ref": "#/definitions/ResponseLink"
        },
        "content": {
          "description": "The QueueDescription",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of content in queue response",
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "QueueDescription": {
              "$ref": "#/definitions/QueueDescription"
            }
          }
        }
      },
      "xml": {
        "name": "entry",
        "namespace": "http://www.w3.org/2005/Atom"
      }
    },
    "QueueDescriptionFeed": {
      "description": "Response from listing Service Bus queues.",
      "type": "object",
      "xml": {
        "name": "feed",
        "namespace": "http://www.w3.org/2005/Atom"
      },
      "properties": {
        "id": {
          "description": "URL of the list queues query.",
          "type": "string"
        },
        "title": {
          "description": "The entity type for the feed.",
          "type": "string"
        },
        "updated": {
          "description": "Datetime of the query.",
          "type": "string",
          "format": "date-time"
        },
        "link": {
          "description": "Links to paginated response.",
          "type":"array",
          "items": {
            "$ref": "#/definitions/ResponseLink"
          }
        },
        "entry": {
          "description": "Queue entries.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueueDescriptionEntry"
          }
        }
      }
    },
    "QueueDescriptionResponse": {
      "description": "The response from a Queue_Get operation",
      "type": "object",
      "properties": {
        "id": {
          "description": "The URL of the GET request",
          "type": "string"
        },
        "title": {
          "description": "The name of the queue",
          "type": "string"
        },
        "published": {
          "description": "The timestamp for when this queue was published",
          "type": "string"
        },
        "updated": {
          "description": "The timestamp for when this queue was last updated",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ResponseAuthor"
        },
        "link": {
          "$ref": "#/definitions/ResponseLink"
        },
        "content": {
          "description": "Contents of a Queue_Get response",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of content in queue response",
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "QueueDescription": {
              "$ref": "#/definitions/QueueDescription"
            }
          }
        }
      },
      "xml": {
        "name": "entry",
        "namespace": "http://www.w3.org/2005/Atom"
      }
    },
    "ResponseAuthor": {
      "description": "The author that created this resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Service Bus namespace",
          "type": "string"
        }
      }
    },
    "ResponseLink": {
      "description": "The URL for the HTTP request",
      "type": "object",
      "properties": {
        "href": {
          "description": "The URL of the GET request",
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "rel": {
          "description": "What the link href is relative to",
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      },
      "xml": {
        "name": "link",
        "namespace": "http://www.w3.org/2005/Atom"
      }
    },
    "ResponseTitle": {
      "description": "The title of the response",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of value",
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "title": {
          "description": "Contents of the title.",
          "type": "string"
        }
      }
    },
    "ServiceBusManagementError": {
      "description": "The error response from Service Bus.",
      "type": "object",
      "properties": {
        "Code": {
          "description": "The service error code.",
          "type": "integer"
        },
        "Detail": {
          "description": "The service error message.",
          "type": "string"
        }
      }
    },
    "TopicDescription": {
      "description": "Description of a Service Bus topic resource.",
      "type": "object",
      "xml": {
        "name": "TopicDescription",
        "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
      },
      "properties": {
        "TopicName": {
          "description": "Name of the topic",
          "type": "string"
        },
        "AuthorizationRules": {
          "description": "Authorization rules for resource.",
          "type": "array",
          "xml": {
            "wrapped": true,
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          },
          "items": {
            "$ref": "#/definitions/AuthorizationRule"
          }
        },
        "AutoDeleteOnIdle": {
          "description": "ISO 8601 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string",
          "format": "duration",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "DefaultMessageTimeToLive": {
          "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string",
          "format": "duration",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "DuplicateDetectionHistoryTimeWindow": {
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
          "type": "string",
          "format": "duration",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "EnableBatchedOperations": {
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "EnablePartitioning": {
          "description": "A value that indicates whether the topic is to be partitioned across multiple message brokers.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "MaxSizeInMegabytes": {
          "description": "The maximum size of the topic in megabytes, which is the size of memory allocated for the topic.",
          "type": "integer",
          "format": "int64"
        },
        "RequiresDuplicateDetection": {
          "description": "A value indicating if this topic requires duplicate detection.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "Status": {
          "$ref": "#/definitions/EntityStatus"
        },
        "SupportOrdering": {
          "description": "A value that indicates whether the topic supports ordering.",
          "type": "boolean",
          "xml": {
            "namespace": "http://schemas.microsoft.com/netservices/2010/10/servicebus/connect"
          }
        },
        "UserMetadata": {
          "description": "Metadata associated with the topic.",
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "ServiceBusManagementErrorResponse": {
      "description": "An error occurred. The possible HTTP status, code, and message strings are listed below",
      "headers": {
        "x-ms-request-id": {
          "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
          "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
          "type": "string"
        },
        "x-ms-version": {
          "description": "The version of the REST protocol used to process the request.",
          "type": "string"
        }
      },
      "schema": {
        "$ref": "#/definitions/ServiceBusManagementError"
      }
    }
  },
  "paths": {
    "/{queueName}": {
      "parameters": [
        {
          "name": "queueName",
          "in": "path",
          "description": "The name of the queue relative to the Service Bus namespace.",
          "minLength": 1,
          "x-ms-parameter-location": "method",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "Queue_Get",
        "summary": "Get Queue",
        "description": "Get the details about the Queue with the given queueName.",
        "tags": [
          "Queue Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Enrich"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "$ref": "#/responses/ServiceBusManagementErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Queue Operations"
        ],
        "operationId": "Queue_Put",
        "description": "Create or update a queue at the provided queuePath",
        "parameters": [
          {
            "name": "requestBody",
            "in": "body",
            "schema": {
              "type": "object"
            },
            "required": true,
            "description": "Parameters required to make or edit a queue.",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a replace will be performed if an existing entity is found.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Update -- Update Queue operation completed successfully.",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created -- Create Queue operation completed successfully.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "$ref": "#/responses/ServiceBusManagementErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "Queue_Delete",
        "summary": "Delete Queue",
        "description": "Delete the Queue with the given queueName.",
        "tags": [
          "Queue Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "$ref": "#/responses/ServiceBusManagementErrorResponse"
          }
        }
      }
    },
    "/$Resources/{entityType}": {
      "parameters": [
        {
          "name": "entityType",
          "in": "path",
          "description": "List all queues or all topics of the service bus. Value can be \"queues\" or \"topics\" ",
          "minLength": 1,
          "x-ms-parameter-location": "method",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "listEntities",
        "summary": "Get Queues or topics",
        "description": "Get the details about the entities of the given Service Bus namespace.",
        "tags": [
          "Queue Operations",
          "Topic Operations"
        ],
        "parameters": [
          {
            "name": "$skip",
            "type": "integer",
            "in": "query",
            "default": 0
          },
          {
            "name": "$top",
            "type": "integer",
            "in": "query",
            "default": 100
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "$ref": "#/responses/ServiceBusManagementErrorResponse"
          }
        }
      }
    }
  }
}