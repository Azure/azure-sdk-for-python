# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class Application(Resource):
    """Application entity for Intune MAM.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id
    :vartype id: str
    :ivar name: Resource name
    :vartype name: str
    :ivar type: Resource type
    :vartype type: str
    :param tags: Resource Tags
    :type tags: dict
    :param location: Resource Location
    :type location: str
    :param friendly_name:
    :type friendly_name: str
    :param platform: Possible values include: 'ios', 'android', 'windows'.
     Default value: "ios" .
    :type platform: str or :class:`enum <azure.mgmt.intune.models.enum>`
    :param app_id:
    :type app_id: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'friendly_name': {'required': True},
        'platform': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'location': {'key': 'location', 'type': 'str'},
        'friendly_name': {'key': 'properties.friendlyName', 'type': 'str'},
        'platform': {'key': 'properties.platform', 'type': 'str'},
        'app_id': {'key': 'properties.appId', 'type': 'str'},
    }

    def __init__(self, friendly_name, tags=None, location=None, platform="ios", app_id=None):
        super(Application, self).__init__(tags=tags, location=location)
        self.friendly_name = friendly_name
        self.platform = platform
        self.app_id = app_id
