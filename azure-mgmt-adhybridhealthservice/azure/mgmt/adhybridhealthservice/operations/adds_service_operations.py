# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import uuid
from msrest.pipeline import ClientRawResponse
from msrestazure.azure_exceptions import CloudError

from .. import models


class AddsServiceOperations(object):
    """AddsServiceOperations operations.

    :param client: Client for service requests.
    :param config: Configuration of service client.
    :param serializer: An object model serializer.
    :param deserializer: An object model deserializer.
    :ivar api_version: The version of the API to be used with the client request. Constant value: "2014-01-01".
    """

    models = models

    def __init__(self, client, config, serializer, deserializer):

        self._client = client
        self._serialize = serializer
        self._deserialize = deserializer
        self.api_version = "2014-01-01"

        self.config = config

    def get_metrics(
            self, service_name, metric_name, group_name, group_key=None, from_date=None, to_date=None, custom_headers=None, raw=False, **operation_config):
        """Gets the server related metrics for a given metric and group
        combination.

        :param service_name: The name of the service.
        :type service_name: str
        :param metric_name: The metric name
        :type metric_name: str
        :param group_name: The group name
        :type group_name: str
        :param group_key: The group key
        :type group_key: str
        :param from_date: The start date.
        :type from_date: datetime
        :param to_date: The end date.
        :type to_date: datetime
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: MetricSets or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.adhybridhealthservice.models.MetricSets or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        """
        # Construct URL
        url = self.get_metrics.metadata['url']
        path_format_arguments = {
            'serviceName': self._serialize.url("service_name", service_name, 'str'),
            'metricName': self._serialize.url("metric_name", metric_name, 'str'),
            'groupName': self._serialize.url("group_name", group_name, 'str')
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}
        if group_key is not None:
            query_parameters['groupKey'] = self._serialize.query("group_key", group_key, 'str')
        if from_date is not None:
            query_parameters['fromDate'] = self._serialize.query("from_date", from_date, 'iso-8601')
        if to_date is not None:
            query_parameters['toDate'] = self._serialize.query("to_date", to_date, 'iso-8601')
        query_parameters['api-version'] = self._serialize.query("self.api_version", self.api_version, 'str')

        # Construct headers
        header_parameters = {}
        header_parameters['Accept'] = 'application/json'
        if self.config.generate_client_request_id:
            header_parameters['x-ms-client-request-id'] = str(uuid.uuid1())
        if custom_headers:
            header_parameters.update(custom_headers)
        if self.config.accept_language is not None:
            header_parameters['accept-language'] = self._serialize.header("self.config.accept_language", self.config.accept_language, 'str')

        # Construct and send request
        request = self._client.get(url, query_parameters, header_parameters)
        response = self._client.send(request, stream=False, **operation_config)

        if response.status_code not in [200]:
            exp = CloudError(response)
            exp.request_id = response.headers.get('x-ms-request-id')
            raise exp

        deserialized = None

        if response.status_code == 200:
            deserialized = self._deserialize('MetricSets', response)

        if raw:
            client_raw_response = ClientRawResponse(deserialized, response)
            return client_raw_response

        return deserialized
    get_metrics.metadata = {'url': '/providers/Microsoft.ADHybridHealthService/addsservices/{serviceName}/metrics/{metricName}/groups/{groupName}'}
