# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class InboundReplicationNeighbor(Model):
    """The replication summary for the domain controller inbound neighbor.

    :param source_domain_controller: The name of the source domain controller.
    :type source_domain_controller: str
    :param consecutive_failure_count: The number of consecutive faulire
     counts.
    :type consecutive_failure_count: int
    :param naming_context: The naming context.
    :type naming_context: str
    :param status: The health status for the domain controller
    :type status: int
    :param last_attempted_sync: The last time a sync was attempted on the
     domain controller.
    :type last_attempted_sync: datetime
    :param last_successful_sync: The last time when a successful sync
     happened.
    :type last_successful_sync: datetime
    :param last_error_code: The last error code.
    :type last_error_code: int
    :param last_error_message: The error message of the last error.
    :type last_error_message: str
    :param error_title: The error title.
    :type error_title: str
    :param error_description: The error description.
    :type error_description: str
    :param fix_link: The link for the fix of the error.
    :type fix_link: str
    :param fix_details: The details of the fix.
    :type fix_details: str
    :param additional_info: The additional details.
    :type additional_info: str
    """

    _attribute_map = {
        'source_domain_controller': {'key': 'sourceDomainController', 'type': 'str'},
        'consecutive_failure_count': {'key': 'consecutiveFailureCount', 'type': 'int'},
        'naming_context': {'key': 'namingContext', 'type': 'str'},
        'status': {'key': 'status', 'type': 'int'},
        'last_attempted_sync': {'key': 'lastAttemptedSync', 'type': 'iso-8601'},
        'last_successful_sync': {'key': 'lastSuccessfulSync', 'type': 'iso-8601'},
        'last_error_code': {'key': 'lastErrorCode', 'type': 'int'},
        'last_error_message': {'key': 'lastErrorMessage', 'type': 'str'},
        'error_title': {'key': 'errorTitle', 'type': 'str'},
        'error_description': {'key': 'errorDescription', 'type': 'str'},
        'fix_link': {'key': 'fixLink', 'type': 'str'},
        'fix_details': {'key': 'fixDetails', 'type': 'str'},
        'additional_info': {'key': 'additionalInfo', 'type': 'str'},
    }

    def __init__(self, *, source_domain_controller: str=None, consecutive_failure_count: int=None, naming_context: str=None, status: int=None, last_attempted_sync=None, last_successful_sync=None, last_error_code: int=None, last_error_message: str=None, error_title: str=None, error_description: str=None, fix_link: str=None, fix_details: str=None, additional_info: str=None, **kwargs) -> None:
        super(InboundReplicationNeighbor, self).__init__(**kwargs)
        self.source_domain_controller = source_domain_controller
        self.consecutive_failure_count = consecutive_failure_count
        self.naming_context = naming_context
        self.status = status
        self.last_attempted_sync = last_attempted_sync
        self.last_successful_sync = last_successful_sync
        self.last_error_code = last_error_code
        self.last_error_message = last_error_message
        self.error_title = error_title
        self.error_description = error_description
        self.fix_link = fix_link
        self.fix_details = fix_details
        self.additional_info = additional_info
