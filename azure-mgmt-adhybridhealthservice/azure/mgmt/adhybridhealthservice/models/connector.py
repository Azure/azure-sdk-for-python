# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Connector(Model):
    """The connect details.

    :param connector_id: The connector Id.
    :type connector_id: str
    :param id: The connector Id.
    :type id: str
    :param name: The connector name.
    :type name: str
    :param version: The connector version
    :type version: int
    :param type: The connector type.
    :type type: str
    :param description: The connector description.
    :type description: str
    :param schema_xml: The schema xml for the connector.
    :type schema_xml: str
    :param password_management_settings: The password management settings of
     the connector.
    :type password_management_settings: object
    :param password_hash_sync_configuration: The password hash synchronization
     configuration of the connector.
    :type password_hash_sync_configuration: object
    :param time_created: The date and time when this connector was created.
    :type time_created: datetime
    :param time_last_modified: The date and time when this connector was last
     modified.
    :type time_last_modified: datetime
    :param partitions: The partitions of the connector.
    :type partitions: list[~azure.mgmt.adhybridhealthservice.models.Partition]
    :param run_profiles: The run profiles of the connector.
    :type run_profiles:
     list[~azure.mgmt.adhybridhealthservice.models.RunProfile]
    :param classes_included: The class inclusion list of the connector.
    :type classes_included: list[str]
    :param attributes_included: The attribute inclusion list of the connector.
    :type attributes_included: list[str]
    """

    _attribute_map = {
        'connector_id': {'key': 'connectorId', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'version': {'key': 'version', 'type': 'int'},
        'type': {'key': 'type', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'schema_xml': {'key': 'schemaXml', 'type': 'str'},
        'password_management_settings': {'key': 'passwordManagementSettings', 'type': 'object'},
        'password_hash_sync_configuration': {'key': 'passwordHashSyncConfiguration', 'type': 'object'},
        'time_created': {'key': 'timeCreated', 'type': 'iso-8601'},
        'time_last_modified': {'key': 'timeLastModified', 'type': 'iso-8601'},
        'partitions': {'key': 'partitions', 'type': '[Partition]'},
        'run_profiles': {'key': 'runProfiles', 'type': '[RunProfile]'},
        'classes_included': {'key': 'classesIncluded', 'type': '[str]'},
        'attributes_included': {'key': 'attributesIncluded', 'type': '[str]'},
    }

    def __init__(self, **kwargs):
        super(Connector, self).__init__(**kwargs)
        self.connector_id = kwargs.get('connector_id', None)
        self.id = kwargs.get('id', None)
        self.name = kwargs.get('name', None)
        self.version = kwargs.get('version', None)
        self.type = kwargs.get('type', None)
        self.description = kwargs.get('description', None)
        self.schema_xml = kwargs.get('schema_xml', None)
        self.password_management_settings = kwargs.get('password_management_settings', None)
        self.password_hash_sync_configuration = kwargs.get('password_hash_sync_configuration', None)
        self.time_created = kwargs.get('time_created', None)
        self.time_last_modified = kwargs.get('time_last_modified', None)
        self.partitions = kwargs.get('partitions', None)
        self.run_profiles = kwargs.get('run_profiles', None)
        self.classes_included = kwargs.get('classes_included', None)
        self.attributes_included = kwargs.get('attributes_included', None)
