# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ImportError(Model):
    """The import error details.

    :param id: The error Id.
    :type id: str
    :param run_step_result_id: The run step result Id.
    :type run_step_result_id: str
    :param connector_id: The connector Id.
    :type connector_id: str
    :param type: The type of error.
    :type type: str
    :param time_occurred: The time when the import error occurred.
    :type time_occurred: datetime
    :param time_first_occurred: The time when the import error first occurred.
    :type time_first_occurred: datetime
    :param retry_count: The retry count.
    :type retry_count: int
    :param algorithm_step_type: The operation type specific  to error
     reporting. Possible values include: 'Undefined', 'Staging',
     'ConnectorFilter', 'Join', 'Projection', 'ImportFlow', 'Provisioning',
     'ValidateConnectorFilter', 'Deprovisioning', 'ExportFlow', 'MvDeletion',
     'Recall', 'MvObjectTypeChange'
    :type algorithm_step_type: str or
     ~azure.mgmt.adhybridhealthservice.models.AlgorithmStepType
    :param change_not_reimported: The change details that is not re-imported.
    :type change_not_reimported:
     ~azure.mgmt.adhybridhealthservice.models.ChangeNotReimported
    :param extension_error_info: The extension error information.
    :type extension_error_info:
     ~azure.mgmt.adhybridhealthservice.models.ExtensionErrorInfo
    :param rule_error_info: The error details in legacy rule processing.
    :type rule_error_info:
     ~azure.mgmt.adhybridhealthservice.models.RuleErrorInfo
    :param cs_object_id: The object Id.
    :type cs_object_id: str
    :param dn: The distinguished name.
    :type dn: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'run_step_result_id': {'key': 'runStepResultId', 'type': 'str'},
        'connector_id': {'key': 'connectorId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'time_occurred': {'key': 'timeOccurred', 'type': 'iso-8601'},
        'time_first_occurred': {'key': 'timeFirstOccurred', 'type': 'iso-8601'},
        'retry_count': {'key': 'retryCount', 'type': 'int'},
        'algorithm_step_type': {'key': 'algorithmStepType', 'type': 'str'},
        'change_not_reimported': {'key': 'changeNotReimported', 'type': 'ChangeNotReimported'},
        'extension_error_info': {'key': 'extensionErrorInfo', 'type': 'ExtensionErrorInfo'},
        'rule_error_info': {'key': 'ruleErrorInfo', 'type': 'RuleErrorInfo'},
        'cs_object_id': {'key': 'csObjectId', 'type': 'str'},
        'dn': {'key': 'dn', 'type': 'str'},
    }

    def __init__(self, *, id: str=None, run_step_result_id: str=None, connector_id: str=None, type: str=None, time_occurred=None, time_first_occurred=None, retry_count: int=None, algorithm_step_type=None, change_not_reimported=None, extension_error_info=None, rule_error_info=None, cs_object_id: str=None, dn: str=None, **kwargs) -> None:
        super(ImportError, self).__init__(**kwargs)
        self.id = id
        self.run_step_result_id = run_step_result_id
        self.connector_id = connector_id
        self.type = type
        self.time_occurred = time_occurred
        self.time_first_occurred = time_first_occurred
        self.retry_count = retry_count
        self.algorithm_step_type = algorithm_step_type
        self.change_not_reimported = change_not_reimported
        self.extension_error_info = extension_error_info
        self.rule_error_info = rule_error_info
        self.cs_object_id = cs_object_id
        self.dn = dn
