# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .heat_map_property_base_py3 import HeatMapPropertyBase


class HeatMapProperties(HeatMapPropertyBase):
    """Sub-class representing default Traffic Manager HeatMap properties.

    All required parameters must be populated in order to send to Azure.

    :param heat_map_type: Required. Constant filled by server.
    :type heat_map_type: str
    :param start_time: The beginning of the time window for this HeatMap,
     inclusive.
    :type start_time: datetime
    :param end_time: The ending of the time window for this HeatMap,
     exclusive.
    :type end_time: datetime
    :param endpoints: The endpoints used in this HeatMap calculation.
    :type endpoints: list[~azure.mgmt.trafficmanager.models.HeatMapEndpoint]
    :param traffic_flows: The traffic flows produced in this HeatMap
     calculation.
    :type traffic_flows: list[~azure.mgmt.trafficmanager.models.TrafficFlow]
    """

    _validation = {
        'heat_map_type': {'required': True},
    }

    _attribute_map = {
        'heat_map_type': {'key': 'heatMapType', 'type': 'str'},
        'start_time': {'key': 'startTime', 'type': 'iso-8601'},
        'end_time': {'key': 'endTime', 'type': 'iso-8601'},
        'endpoints': {'key': 'endpoints', 'type': '[HeatMapEndpoint]'},
        'traffic_flows': {'key': 'trafficFlows', 'type': '[TrafficFlow]'},
    }

    def __init__(self, *, start_time=None, end_time=None, endpoints=None, traffic_flows=None, **kwargs) -> None:
        super(HeatMapProperties, self).__init__(**kwargs)
        self.start_time = start_time
        self.end_time = end_time
        self.endpoints = endpoints
        self.traffic_flows = traffic_flows
        self.heat_map_type = 'Microsoft.Network/trafficManagerProfiles/heatMaps/latencyVolumeByLocation'
