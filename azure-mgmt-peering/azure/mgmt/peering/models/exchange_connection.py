# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ExchangeConnection(Model):
    """The properties that define an exchange connection.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param peering_db_facility_id: The PeeringDB.com ID of the facility at
     which the connection has to be set up.
    :type peering_db_facility_id: int
    :ivar connection_state: The state of the connection. Possible values
     include: 'None', 'PendingApproval', 'Approved', 'ProvisioningStarted',
     'ProvisioningFailed', 'ProvisioningCompleted', 'Validating', 'Active'
    :vartype connection_state: str or
     ~azure.mgmt.peering.models.ConnectionState
    :param bgp_session: The BGP session associated with the connection.
    :type bgp_session: ~azure.mgmt.peering.models.BgpSession
    """

    _validation = {
        'connection_state': {'readonly': True},
    }

    _attribute_map = {
        'peering_db_facility_id': {'key': 'peeringDBFacilityId', 'type': 'int'},
        'connection_state': {'key': 'connectionState', 'type': 'str'},
        'bgp_session': {'key': 'bgpSession', 'type': 'BgpSession'},
    }

    def __init__(self, **kwargs):
        super(ExchangeConnection, self).__init__(**kwargs)
        self.peering_db_facility_id = kwargs.get('peering_db_facility_id', None)
        self.connection_state = None
        self.bgp_session = kwargs.get('bgp_session', None)
