# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PeerAsnProperties(Model):
    """The properties that define a peer's ASN.

    :param peer_asn: The Autonomous System Number (ASN) of the peer.
    :type peer_asn: int
    :param peer_contact_info: The contact information of the peer.
    :type peer_contact_info: ~azure.mgmt.peering.models.ContactInfo
    :param peer_name: The name of the peer.
    :type peer_name: str
    :param validation_state: The validation state of the ASN associated with
     the peer. Possible values include: 'None', 'Pending', 'Approved', 'Failed'
    :type validation_state: str or ~azure.mgmt.peering.models.ValidationState
    """

    _attribute_map = {
        'peer_asn': {'key': 'peerAsn', 'type': 'int'},
        'peer_contact_info': {'key': 'peerContactInfo', 'type': 'ContactInfo'},
        'peer_name': {'key': 'peerName', 'type': 'str'},
        'validation_state': {'key': 'validationState', 'type': 'str'},
    }

    def __init__(self, *, peer_asn: int=None, peer_contact_info=None, peer_name: str=None, validation_state=None, **kwargs) -> None:
        super(PeerAsnProperties, self).__init__(**kwargs)
        self.peer_asn = peer_asn
        self.peer_contact_info = peer_contact_info
        self.peer_name = peer_name
        self.validation_state = validation_state
