# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_py3 import Resource


class PeerAsn(Resource):
    """The essential information related to the peer's ASN.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar name: The name of the resource.
    :vartype name: str
    :ivar id: The ID of the resource.
    :vartype id: str
    :ivar type: The type of the resource.
    :vartype type: str
    :param peer_asn: The Autonomous System Number (ASN) of the peer.
    :type peer_asn: int
    :param peer_contact_info: The contact information of the peer.
    :type peer_contact_info: ~azure.mgmt.peering.models.ContactInfo
    :param peer_name: The name of the peer.
    :type peer_name: str
    :param validation_state: The validation state of the ASN associated with
     the peer. Possible values include: 'None', 'Pending', 'Approved', 'Failed'
    :type validation_state: str or ~azure.mgmt.peering.models.ValidationState
    """

    _validation = {
        'name': {'readonly': True},
        'id': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'peer_asn': {'key': 'properties.peerAsn', 'type': 'int'},
        'peer_contact_info': {'key': 'properties.peerContactInfo', 'type': 'ContactInfo'},
        'peer_name': {'key': 'properties.peerName', 'type': 'str'},
        'validation_state': {'key': 'properties.validationState', 'type': 'str'},
    }

    def __init__(self, *, peer_asn: int=None, peer_contact_info=None, peer_name: str=None, validation_state=None, **kwargs) -> None:
        super(PeerAsn, self).__init__(**kwargs)
        self.peer_asn = peer_asn
        self.peer_contact_info = peer_contact_info
        self.peer_name = peer_name
        self.validation_state = validation_state
