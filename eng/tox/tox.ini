[tox]
# note that this envlist is the default set of environments that will run if a target environment is not selected.
envlist = whl,sdist


[tools]
deps =
  -r ../../../eng/test_tools.txt
  

[coverage:paths]
source =
    azure
    **/azure


[base]
deps =
  -rdev_requirements.txt
  {[tools]deps}


[testenv]
default_pytest_params = --junitxml={toxinidir}/test-junit-{envname}.xml --verbose --durations=10 --ignore=azure
parallel_show_output =True
pre-deps =
  wheel
skip_install = true
skipsdist = true
usedevelop = false
platform = linux: linux
           macos: darwin
           windows: win32
passenv = *
setenv =
  SPHINX_APIDOC_OPTIONS=members,undoc-members,inherited-members
deps = {[base]deps}
changedir = {toxinidir}
commands = 
    {envbindir}/python {toxinidir}/../../../eng/tox/create_wheel_and_install.py -d {envtmpdir} -p {toxinidir}
    pip freeze
    pytest \
      {[testenv]default_pytest_params} \
      --ignore=.tox \
      {posargs} \
      {toxinidir}


[testenv:lint]
skipsdist = false
skip_install = false
usedevelop = true
changedir = {toxinidir}
deps =
  {[base]deps}
  pylint==2.3.1; python_version >= '3.4'
  pylint==1.8.4; python_version < '3.4'
  -e {toxinidir}/../../scripts/pylint_custom_plugin
commands = 
    {envbindir}/python {toxinidir}/../../../eng/tox/run_pylint.py -t {toxinidir}


[testenv:mypy]
skipsdist = false
skip_install = false
usedevelop = true
changedir = {toxinidir}
deps =
  {[base]deps}
  mypy; python_version >= '3.5'
commands = 
    {envbindir}/python {toxinidir}/../../../eng/tox/run_mypy.py -t {toxinidir}


[testenv:sdist]
skipsdist = false
skip_install = false
install_command = python -m pip install {opts} {packages} --cache-dir {toxinidir}/../.tox_pip_cache
changedir = {toxinidir}
deps = 
  {[base]deps}
commands =
    pip freeze
    pytest \
      {posargs} \
      --no-cov \
      --ignore=.tox \
      {toxinidir}


[testenv:develop]
skipsdist = false
skip_install = false
usedevelop = true
changedir = {toxinidir}
deps = 
  {[base]deps}
commands =
    pytest \
      {posargs} \
      --ignore=.tox \
      {toxinidir}


[testenv:sphinx]
skipsdist = false
skip_install = false
changedir = {toxinidir}
passenv = *
deps = 
  {[base]deps}
  sphinx
  sphinx_rtd_theme
  recommonmark
  m2r
commands =
  {envbindir}/python {toxinidir}/../../../eng/tox/prep_sphinx_env.py -d {distdir} -t {toxinidir}
  {envbindir}/python {toxinidir}/../../../eng/tox/run_sphinx_apidoc.py \
    -w {distdir} \
    -r {toxinidir}

  {envbindir}/python {toxinidir}/../../../eng/tox/run_sphinx_build.py \
    -w {distdir}/unzipped/docgen \
    -o {distdir}/site \
    -r {toxinidir}


[testenv:depends]
pre-deps =
  wheel
platform = linux: linux
           macos: darwin
           windows: win32
changedir = {toxinidir}
deps =
  {[tools]deps}
commands = 
    {envbindir}/python {toxinidir}/../../../eng/tox/create_wheel_and_install.py \
      -d {envtmpdir} \
      -p {toxinidir} \
      -e https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-python/pypi/simple \
      --install-preview true
    {envbindir}/python {toxinidir}/../../../eng/tox/import_all.py -t {toxinidir}


[testenv:verifywhl]
skipsdist = true
skip_install = true
changedir = {toxinidir}
deps = 
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/create_wheel_and_install.py -d {envtmpdir} -p {toxinidir} --skip-install True
    {envbindir}/python {toxinidir}/../../../eng/tox/verify_whl.py -d {envtmpdir} -t {toxinidir}


[testenv:verifysdist]
skipsdist = true
skip_install = true
changedir = {toxinidir}
deps = 
commands =
    {envbindir}/python {toxinidir}/setup.py --q sdist --format zip -d {envtmpdir}
    {envbindir}/python {toxinidir}/../../../eng/tox/verify_sdist.py -d {envtmpdir} -t {toxinidir}


[testenv:devtest]
pre-deps =
  wheel
deps = {[base]deps}
changedir = {toxinidir}
commands = 
    {envbindir}/python {toxinidir}/../../../eng/tox/create_wheel_and_install.py -d {envtmpdir} -p {toxinidir}
    {envbindir}/python {toxinidir}/../../../eng/tox/install_dev_build_dependency.py -t {toxinidir}
    pytest \
      {[testenv]default_pytest_params} \
      --ignore=.tox \
      {posargs} \
      {toxinidir}


[deptestcommands]
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/install_depend_packages.py -t {toxinidir} -d {env:DEPENDENCY_TYPE:} -w {envtmpdir}
    {envbindir}/python {toxinidir}/../../../eng/tox/create_wheel_and_install.py -d {envtmpdir} -p {toxinidir}
    pip freeze
    {envbindir}/python {toxinidir}/../../../eng/tox/verify_installed_packages.py --packages-file {envtmpdir}/packages.txt
    pytest {[testenv]default_pytest_params} {posargs} {toxinidir}


[testenv:latestdependency]
pre-deps =
  wheel packaging
deps = {[tools]deps}
changedir = {toxinidir}
passenv = *
setenv =
  DEPENDENCY_TYPE=Latest
commands = 
    {[deptestcommands]commands}


[testenv:minimumdependency]
pre-deps =
  wheel packaging
deps = {[tools]deps}
changedir = {toxinidir}
passenv = *
setenv =
  DEPENDENCY_TYPE=Minimum
commands = 
    {[deptestcommands]commands}
