
# This tox file is intended for use with any generic development feed. The only requirement is that the development feed
# contain azure* prefixed packages. It does this by assuming that `PIP_INDEX_URL` environment variable is set to target the dev feed
# specifically. Notice that in the [testenv] config, we explicitly set PIP_EXTRA_INDEX_URL to pypi.

# In all cases, whenever we install an azure-* package from a requirement (read: not a specific file), the only source will be from the dev feed.
# once we've downloaded these dependencies, only then do we install other packages from pypi. 
[tox]
# note that this envlist is the default set of environments that will run if a target environment is not selected.
envlist = whl,sdist


[tools]
deps =
  -r ../../../eng/test_tools.txt


[coverage:paths]
source =
    azure
    **/azure
    microsoft
    **/microsoft


[base]
deps =
  -rdev_requirements.txt
  {[tools]deps}


[dependencytools]
deps =
    -r ../../../eng/dependency_tools.txt


[packaging]
pkgs =
    wheel==0.37.0
    packaging==20.4


[testenv]
ignore_args=--ignore=.tox --ignore=build --ignore=.eggs
default_pytest_params = --junitxml={toxinidir}/test-junit-{envname}.xml --verbose --durations=10 --ignore=azure {[testenv]ignore_args}
parallel_show_output =True
skip_install = true
skipsdist = true
usedevelop = false
platform = linux: linux
           macos: darwin
           windows: win32
passenv = *
download=true
requires=
  {[packaging]pkgs}
setenv =
  SPHINX_APIDOC_OPTIONS=members,undoc-members,inherited-members
  PIP_EXTRA_INDEX_URL=https://pypi.python.org/simple
  PROXY_URL=http://localhost:5001
  VIRTUALENV_WHEEL=0.37.0
  VIRTUALENV_PIP=20.3.3
  VIRTUALENV_SETUPTOOLS=59.6.0
deps = {[base]deps}
changedir = {toxinidir}
install_command = python -m pip install {opts} {packages} --cache-dir {toxinidir}/../.tox_pip_cache_{envname} --ignore-installed
commands =
    {envbindir}/python -m pip --version
    {envbindir}/python {toxinidir}/../../../eng/tox/create_package_and_install.py -d {envtmpdir} -p {toxinidir} -w {envtmpdir}
    {envbindir}/python -m pip freeze
    pytest \
      {[testenv]default_pytest_params} \
      {posargs} \
      {toxinidir}


[testenv:lint]
skipsdist = false
skip_install = false
usedevelop = true
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5002
deps =
  {[base]deps}
  -e {toxinidir}/../../scripts/pylint_custom_plugin
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/run_pylint.py -t {toxinidir}


[testenv:mypy]
skipsdist = false
skip_install = false
usedevelop = true
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5003
deps =
  {[base]deps}
  mypy==0.931
  types-chardet==4.0.3
  types-requests==2.27.9
  types-six==1.16.10
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/run_mypy.py -t {toxinidir}


[testenv:whl_no_aio]
skipsdist = true
skip_install = true
changedir = {toxinidir}
deps =
  {[base]deps}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5004
commands =
    - {envbindir}/python -m pip uninstall aiohttp --yes
    {envbindir}/python {toxinidir}/../../../eng/tox/create_package_and_install.py -d {envtmpdir} -p {toxinidir} -w {envtmpdir}
    {envbindir}/python {toxinidir}/../../../eng/tox/try_import.py aiohttp -p {toxinidir}
    {envbindir}/python -m pip freeze
    pytest \
      {[testenv]default_pytest_params} \
      --ignore-glob='*async*.py' \
      {posargs} \
      {toxinidir}


[testenv:sdist]
skipsdist = true
skip_install = true
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5005
deps =
  {[base]deps}
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/create_package_and_install.py \
      -d {envtmpdir} \
      -p {toxinidir} \
      -w {envtmpdir} \
      --package-type sdist
    {envbindir}/python -m pip freeze
    pytest \
      {posargs} \
      --no-cov \
      {[testenv]ignore_args} \
      {toxinidir}


[testenv:develop]
skipsdist = false
skip_install = false
usedevelop = true
changedir = {toxinidir}
deps =
  {[base]deps}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5006
commands =
    pytest \
      {posargs} \
      --ignore=.tox \
      {toxinidir}


[testenv:sphinx]
skipsdist = false
skip_install = false
changedir = {toxinidir}
passenv = *
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5007
deps =
  {[base]deps}
  sphinx==3.5.4
  sphinx_rtd_theme==1.0.0
  recommonmark==0.6.0
  mistune<2.0.0
  m2r==0.2.1
commands =
  {envbindir}/python {toxinidir}/../../../eng/tox/prep_sphinx_env.py -d {distdir} -t {toxinidir}
  {envbindir}/python {toxinidir}/../../../eng/tox/run_sphinx_apidoc.py \
    -w {distdir} \
    -r {toxinidir}

  {envbindir}/python {toxinidir}/../../../eng/tox/run_sphinx_build.py \
    -w {distdir}/unzipped/docgen \
    -o {distdir}/site \
    -r {toxinidir}


[testenv:depends]
platform = linux: linux
           macos: darwin
           windows: win32
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5008
deps =
  {[packaging]pkgs}
  requests
  cryptography<4
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/sanitize_setup.py -t {toxinidir}
    {envbindir}/python {toxinidir}/../../../eng/tox/create_package_and_install.py \
      -d {envtmpdir} \
      -p {toxinidir} \
      -w {envtmpdir} \
      --force-create true
    {envbindir}/python -m pip freeze
    {envbindir}/python {toxinidir}/../../../eng/tox/import_all.py -t {toxinidir}


[testenv:verifywhl]
skipsdist = true
skip_install = true
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5009
deps =
    {[packaging]pkgs}
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/create_package_and_install.py -d {envtmpdir} -p {toxinidir} --skip-install True
    {envbindir}/python {toxinidir}/../../../eng/tox/verify_whl.py -d {envtmpdir} -t {toxinidir}


[testenv:verifysdist]
skipsdist = true
skip_install = true
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5010
deps =
    {[packaging]pkgs}
commands =
    {envbindir}/python {toxinidir}/setup.py --q sdist --format zip -d {envtmpdir}
    {envbindir}/python {toxinidir}/../../../eng/tox/verify_sdist.py -d {envtmpdir} -t {toxinidir}


[testenv:devtest]
deps = {[base]deps}
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5011
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/create_package_and_install.py -d {envtmpdir} -p {toxinidir}
    {envbindir}/python {toxinidir}/../../../eng/tox/install_dev_build_dependency.py -t {toxinidir}
    pytest \
      {[testenv]default_pytest_params} \
      --ignore=.tox \
      {posargs} \
      {toxinidir}


[deptestcommands]
commands =
    {envbindir}/python {toxinidir}/../../../eng/tox/install_depend_packages.py -t {toxinidir} -d {env:DEPENDENCY_TYPE:} -w {envtmpdir}
    {envbindir}/python {toxinidir}/../../../eng/tox/create_package_and_install.py -d {envtmpdir} -p {toxinidir} -w {envtmpdir} --pre-download-disabled
    {envbindir}/python -m pip freeze
    {envbindir}/python {toxinidir}/../../../eng/tox/verify_installed_packages.py --packages-file {envtmpdir}/packages.txt
    pytest {[testenv]default_pytest_params} {posargs} --no-cov {toxinidir}


[testenv:latestdependency]
deps =
  {[dependencytools]deps}
  {[tools]deps}
changedir =
  {toxinidir}
passenv = *
setenv =
  {[testenv]setenv}
  DEPENDENCY_TYPE=Latest
  PROXY_URL=http://localhost:5012
commands =
    {[deptestcommands]commands}


[testenv:mindependency]
deps =
  azure-mgmt-keyvault<7.0.0
  azure-mgmt-resource<15.0.0
  azure-mgmt-storage<15.0.0
  {[dependencytools]deps}
  {[tools]deps}
changedir = {toxinidir}
passenv = *
setenv =
  {[testenv]setenv}
  DEPENDENCY_TYPE=Minimum
  PROXY_URL=http://localhost:5013
commands =
    {[deptestcommands]commands}


[testenv:apistub]
skipsdist = true
skip_install = true
usedevelop = false
changedir = {envtmpdir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5014
deps =
  {[base]deps}
commands =
    # install API stub generator
    {envbindir}/python -m pip install "git+https://github.com/azure/azure-sdk-tools.git#subdirectory=packages/python-packages/api-stub-generator&egg=api-stub-generator"
    {envbindir}/python -m pip freeze
    {envbindir}/python {toxinidir}/../../../eng/tox/run_apistubgen.py -t {toxinidir} -w {envtmpdir} {posargs}


[testenv:bandit]
skipsdist = false
skip_install = false
usedevelop = false
changedir = {envtmpdir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5015
deps =
  {[base]deps}
commands =
    {envbindir}/python -m pip freeze
    {envbindir}/python {toxinidir}/../../../eng/tox/run_bandit.py -t {toxinidir}


[testenv:samples]
skipsdist = false
skip_install = false
usedevelop = false
changedir = {envtmpdir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5016
deps =
  {[base]deps}
  subprocess32; python_version < '3.5'
commands =
    {envbindir}/python -m pip freeze
    {envbindir}/python {toxinidir}/../../../scripts/devops_tasks/test_run_samples.py -t {toxinidir}


[testenv:breaking]
skipsdist = false
skip_install = false
usedevelop = true
changedir = {toxinidir}
setenv =
  {[testenv]setenv}
  PROXY_URL=http://localhost:5017
deps =
  {[base]deps}
  jsondiff==1.2.0
  -e {toxinidir}/../../scripts/breaking_changes_checker
commands =
    {envbindir}/python {toxinidir}/../../../scripts/breaking_changes_checker/detect_breaking_changes.py -t {toxinidir}