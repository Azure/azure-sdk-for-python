trigger: none
variables:
  - template: /eng/pipelines/templates/variables/globals.yml
jobs:
  - template: /eng/common/pipelines/templates/jobs/docindex.yml

  - job: UpdateDocsMsBuildConfig
    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: Ubuntu20.04
    variables:
      DocRepoLocation: $(Pipeline.Workspace)/docs
      DocRepoOwner: MicrosoftDocs
      DocRepoName: azure-docs-sdk-python
      DocValidationImageId: azuresdkimages.azurecr.io/pyrefautocr:latest
    steps:
      # Docs CI uses Python 3.9.13
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.9.13'
        inputs:
          versionSpec: '3.9.13'

      # Docs CI upgrades pip, wheel, and setuptools
      - pwsh: python -m pip install --upgrade pip wheel setuptools
        displayName: Update python tools for package verification

      # Pull and build the docker image.
      - template: /eng/common/pipelines/templates/steps/docker-pull-image.yml
        parameters:
          ContainerRegistryClientId: $(azuresdkimages-cr-clientid)
          ContainerRegistryClientSecret: $(azuresdkimages-cr-clientsecret)
          ImageId: "$(DocValidationImageId)"
      # Sync docs repo onboarding files/folders
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          SkipCheckoutNone: true
          Paths:
            - ci-configs/
            - metadata/
            - docs-ref-mapping/
            - docs-ref-services/
          Repositories:
            - Name: $(DocRepoOwner)/$(DocRepoName)
              WorkingDirectory: $(DocRepoLocation)

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackageMonikers.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Move deprecated packages to legacy moniker
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: -DocRepoLocation $(DocRepoLocation) -ImageId '$(DocValidationImageId)'
        displayName: Update Docs Onboarding for main branch
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Service-Level-Readme-Automation.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Generate Service Level Readme for main branch
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsToc.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
            -OutputLocation $(DocRepoLocation)/docs-ref-mapping/reference-unified.yml
        displayName: Generate ToC for main branch
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Verify-RequiredDocsJsonMembers.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
        displayName: Verify Required Docs Json Members

      # Push changes to docs repo
      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        parameters:
          WorkingDirectory: $(DocRepoLocation)

      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DefaultBranch)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update docs CI configuration"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)

      # Prepare daily docs CI
      - template: /eng/common/pipelines/templates/steps/set-daily-docs-branch-name.yml
        parameters:
          DailyBranchVariableName: DailyDocsBranchName
      - pwsh: |
          $ErrorActionPreference = "Continue"
          git checkout "origin/$(DailyDocsBranchName)" 2>&1 | Out-Null
          $LASTEXITCODE = 0 # This ignores any error from git checkout
          git status
        displayName: Checkout daily branch if it exists
        workingDirectory: $(DocRepoLocation)

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackageMonikers.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Move deprecated packages to legacy moniker
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
            -PackageSourceOverride "https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-python/pypi/simple/"
        displayName: Update Docs Onboarding for Daily docs
      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Service-Level-Readme-Automation.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Generate Service Level Readme for Daily docs
      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsToc.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
            -OutputLocation $(DocRepoLocation)/docs-ref-mapping/reference-unified.yml
        displayName: Generate ToC for Daily Docs

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Verify-RequiredDocsJsonMembers.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
        displayName: Verify Required Docs Json Members

      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DailyDocsBranchName)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update targeting packages based on release metadata. (Daily docs)"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)
          ScriptDirectory: $(Build.SourcesDirectory)/eng/common/scripts
          PushArgs: -f

      - task: PowerShell@2
        displayName: Queue Docs CI build
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Queue-Pipeline.ps1
          arguments: >
            -Organization "apidrop"
            -Project "Content%20CI"
            -DefinitionId 3453
            -AuthToken "$(azuresdk-apidrop-devops-queue-build-pat)"
            -BuildParametersJson (@{ params = (Get-Content ./eng/dailydocsconfig.json -Raw) -replace '%%DailyDocsBranchName%%', "$(DailyDocsBranchName)" } | ConvertTo-Json)
