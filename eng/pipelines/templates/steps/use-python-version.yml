parameters:
  versionSpec: ''

steps:
  # use python 3.8 for tooling. packaging. platform.
  - task: UsePythonVersion@0
    displayName: "Use Python 3.8"
    inputs:
      versionSpec: 3.8

  - pwsh: |
      python -m pip install packaging==23.1
    displayName: Prep Environment

  # select the appropriate version from manifest if present
  - task: PythonScript@0
    displayName: 'Install ${{ parameters.versionSpec }} from Python Manifest If Necessary'
    inputs:
     scriptPath: 'scripts/devops_tasks/install_python_version.py'
     arguments: '${{ parameters.versionSpec }} --installer_folder="../_pyinstaller'

  # set up bypass of standard use python version
  - pwsh: |
      $incoming = "${{ parameters.versionSpec }}"

      if($incoming.Contains("pypy3")){
        Write-Host "##vso[task.setvariable variable=ManualInstallNecessary]true"
      } 
    displayName: Check UsePythonVersion Necessity

  - task: PythonScript@0
    displayName: 'PyPy3 Specific Path Prepend'
    condition: and(succeeded(), eq(variables.ManualInstallNecessary, 'true'))
    inputs:
      scriptPath: 'scripts/devops_tasks/use_pypy_version.py'
      arguments: '${{ parameters.versionSpec }}'

  # use
  - task: UsePythonVersion@0
    displayName: "Use Python $(PythonVersion)"
    condition: and(succeeded(), not(eq(variables.ManualInstallNecessary, 'true')))
    inputs:
      versionSpec: ${{ parameters.versionSpec }}
