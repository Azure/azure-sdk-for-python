parameters:
  BuildTargetingString: 'azure-*'
  ServiceDirectory: ''
  TestMarkArgument: ''
  EnvVars: {}
  AdditionalTestArgs: ''

# Please use `$(TargetingString)` to refer to the python packages glob string. This variable is set from resolve-package-targeting.yml.
steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.9'
    inputs:
      versionSpec: '3.9'
    condition: and(succeededOrFailed(), ne(variables['Skip.MyPy'],'true'))

  # Prep Environment (Unix): PortAudio + ci tools
  - script: |
      if [ "$AGENT_OS" = "Linux" ]; then
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev libasound2-dev
      elif [ "$AGENT_OS" = "Darwin" ]; then
        brew update
        brew install portaudio
      fi
      python -m pip install -r eng/ci_tools.txt
    displayName: 'Prep Environment (Unix)'
    condition: and(succeededOrFailed(), ne(variables['Skip.MyPy'],'true'), ne(variables['Agent.OS'], 'Windows_NT'))

  # Prep Environment (Windows): ci tools only
  - script: |
      python -m pip install -r eng/ci_tools.txt
    displayName: 'Prep Environment (Windows)'
    condition: and(succeededOrFailed(), ne(variables['Skip.MyPy'],'true'), eq(variables['Agent.OS'], 'Windows_NT'))

  - task: PythonScript@0
    displayName: 'Run MyPy'
    inputs:
      scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
      arguments: >-
        "$(TargetingString)"
        --mark_arg="${{ parameters.TestMarkArgument }}"
        --service="${{ parameters.ServiceDirectory }}"
        --toxenv="mypy"
        --disablecov
        ${{ parameters.AdditionalTestArgs }}
    env: ${{ parameters.EnvVars }}
    condition: and(succeededOrFailed(), ne(variables['Skip.MyPy'],'true'))