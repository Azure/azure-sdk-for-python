parameters:
  - name: ServiceDirectory
    type: string
  - name: NodeVersion
    type: string
    default: '12.x'
  - name: PythonVersion
    type: string
    default: '$(PythonVersion)'
  - name: auto_rest_clone_url
    type: string
    default: 'https://github.com/Azure/autorest.python.git'
  - name: VerifyAutorest
    type: boolean
    default: true

steps:
  - ${{if ne(parameters.VerifyAutorest, 'true')}}:
    - template: /eng/common/pipelines/templates/steps/set-default-branch.yml

    - task: UsePythonVersion@0
      displayName: Use
      inputs:
        versionSpec: ${{ parameters.PythonVersion }}

    - task: NodeTool@0
      inputs:
        versionSpec: ${{ parameters.NodeVersion }}

    - script: |
        npm install -g autorest
        autorest --help
      displayName: "Install autorest"

    - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
      parameters:
        Paths:
          - "/*"
        Repositories:
          - Name: "Azure/autorest.python"
            Commitish: "master"
            WorkingDirectory: "$(Build.SourcesDirectory)/autorest.python"
        SkipDefaultCheckout: true

    - script: |
        python --version
        pip install -r eng/autorest_req.txt
        cd autorest.python
        npm install
      displayName: 'Prepare Environment'

    - task: PythonScript@0
      displayName: 'Verify autorest'
      inputs:
        scriptPath: 'scripts/devops_tasks/verify_autorest.py'
        arguments: >-
          --service_directory="${{ parameters.ServiceDirectory }}"

    - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
      displayName: Create PR for ${{ artifact.name}}
      condition: and(failed(), ne(variables['Build.Reason'],'PullRequest'), eq(variables['System.TeamProject'], 'internal'))
      parameters:
        CommitMsg: "Regenerated code from nightly builds"
        PRTitle: "Automated autorest generation"
        PRBranchName: 'autorest-${{ ServiceDirectory }}'

    # https://github.com/Azure/azure-sdk-for-python/blob/master/eng/common/pipelines/templates/steps/create-pull-request.yml

    # If the above fails and it's an internal run, create a PR


    # - task: Powershell@2
    #   inputs:
    #     filePath: $(Build.SourcesDirectory)/eng/common/scripts/git-branch-push.ps1
    #     arguments: >
    #       -ArtifactPath ${{parameters.ArtifactPath}}
    #       -APIViewUri $(azuresdk-apiview-uri)
    #       -APIKey $(azuresdk-apiview-apikey)
    #       -APILabel "Auto Review - $(Build.SourceVersion)"
    #       -PackageName ${{artifact.name}}
    #       -SourceBranch $(Build.SourceBranchName)
    #       -DefaultBranch $(DefaultBranch)
    #       -ConfigFileDir '${{parameters.ConfigFileDir}}'
    #     pwsh: true
    #     workingDirectory: $(Pipeline.Workspace)
    #   displayName: Create API Review for ${{ artifact.name}}
    #   condition: and(failed(), ne(variables['Build.Reason'],'PullRequest'), eq(variables['System.TeamProject'], 'internal'))
