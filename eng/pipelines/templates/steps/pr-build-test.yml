parameters:
  ServiceDirectory: ''
  BeforePublishSteps: []
  TestMarkArgument: ''
  BuildTargetingString: 'azure-*'
  TestTimeoutInMinutes: 0

jobs:
  - job: 'Test'
    condition: and(succeededOrFailed(), ne(variables['Skip.Test'], 'true'))
    timeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
    variables:
    - template: ../variables/globals.yml

    dependsOn:
      - 'Build'

    strategy:
      matrix:
        Linux_Python27:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          PythonVersion: '2.7'
          CoverageArg: ''
        Linux_Python35:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          PythonVersion: '3.5'
          CoverageArg: ''
        Linux_Python38:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          PythonVersion: '3.8'
          CoverageArg: ''

    pool:
      vmImage: '$(OSVmImage)'

    steps:
    - template: ../steps/build-test.yml
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        TestMarkArgument: ${{ parameters.TestMarkArgument }}
        AdditionalTestArgs: '--wheel_dir="$(Build.ArtifactStagingDirectory)"'
        OSName: $(OSName)
        CoverageArg: $(CoverageArg)
        PythonVersion: $(PythonVersion)
        BuildTargetingString: ${{ parameters.BuildTargetingString }}
        ToxTestEnv: 'whl,sdist'
        BeforeTestSteps: 
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: 'artifacts' 
              targetPath: $(Build.ArtifactStagingDirectory)

          - template: ../steps/set-dev-build.yml
            parameters:
              ServiceDirectory: ${{ parameters.ServiceDirectory }}
              BuildTargetingString: ${{ parameters.BuildTargetingString }}