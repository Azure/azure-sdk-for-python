parameters:
  BeforePublishSteps: []
  BuildTargetingString: 'azure-*'
  ServiceDirectory: ''

steps:
  - script: |
      echo "##vso[build.addbuildtag]Scheduled"
    displayName: 'Tag scheduled builds'
    condition: and(eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule'))

  - task: UsePythonVersion@0
    displayName: 'Use Python 2.7'
    inputs:
      versionSpec: '2.7'

  - script: |
      pip install -r eng/ci_tools.txt
    displayName: 'Prep Py2 Environment'

  - task: PythonScript@0
    displayName: 'Generate Python2 Applicable Namespace Packages'
    inputs:
      scriptPath: 'scripts/devops_tasks/build_packages.py'
      arguments: '-d "$(Build.ArtifactStagingDirectory)" "${{ parameters.BuildTargetingString }}" --pkgfilter="nspkg" --service=${{parameters.ServiceDirectory}}'

  - task: UsePythonVersion@0
    displayName: 'Use Python $(PythonVersion)'
    inputs:
      versionSpec: $(PythonVersion)

  - script: |
      pip install -r eng/ci_tools.txt
    displayName: 'Prep Environment'

  - task: PythonScript@0
    displayName: 'Generate Packages'
    inputs:
      scriptPath: 'scripts/devops_tasks/build_packages.py'
      arguments: '-d "$(Build.ArtifactStagingDirectory)" "${{ parameters.BuildTargetingString }}" --service=${{parameters.ServiceDirectory}}'

  - script: |
      twine check $(Build.ArtifactStagingDirectory)/*
    displayName: 'Verify Readme'

  - ${{ parameters.BeforePublishSteps }}

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'artifacts' 
      targetPath: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: 'Publish Artifacts'
    inputs:
      artifactName: packages