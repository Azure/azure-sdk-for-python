parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: TestResourceDirectories
    type: object
    default:
  - name: PreSteps
    type: object
    default: []
  - name: PostSteps
    type: object
    default: []
  - name: EnvVars
    type: object
    default: {}
  - name: MaxParallel
    type: number
    default: 0
  - name: BeforeTestSteps
    type: object
    default: []
  - name: AfterTestSteps
    type: object
    default: []
  - name: BuildTargetingString
    type: string
    default: 'azure-*'
  - name: AdditionalTestArgs
    type: string
    default: ''
  - name: TestMarkArgument
    type: string
    default: ''
  - name: InjectedPackages
    type: string
    default: ''
  - name: BuildDocs
    type: boolean
    default: true
  - name: JobName
    type: string
    default: 'Test'
  - name: TestTimeoutInMinutes
    type: number
    default: 120
  - name: Location
    type: string
    default: ''
  - name: Clouds
    type: string
    default: 'Public'
  - name: SupportedClouds
    type: string
    default: 'Public'
  - name: CloudConfig
    type: object
    default:
      Public:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
      Preview:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources-preview)
      Canary:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
        Location: 'centraluseuap'
      UsGov:
        SubscriptionConfiguration: $(sub-config-gov-test-resources)
      China:
        SubscriptionConfiguration: $(sub-config-cn-test-resources)
  - name: MatrixConfigs
    type: object
    default:
      - Name: Python_live_test_base
        Path: eng/pipelines/templates/stages/platform-matrix.json
        Selection: sparse
        GenerateVMJobs: true
  - name: AdditionalMatrixConfigs
    type: object
    default: []
  - name: MatrixFilters
    type: object
    default: []
  - name: MatrixReplace
    type: object
    default: []
  - name: PlatformPreSteps
    type: object
    default: []
  - name: PlatformPostSteps
    type: object
    default: []
  - name: TestProxy
    type: boolean
    default: false

stages:
- ${{ each cloud in parameters.CloudConfig }}:
  - ${{ if or(contains(parameters.Clouds, cloud.key), and(contains(variables['Build.DefinitionName'], 'tests-weekly'), contains(parameters.SupportedClouds, cloud.key))) }}:
    - ${{ if not(contains(parameters.UnsupportedClouds, cloud.key)) }}:
      - stage: ${{ cloud.key }}_${{ parameters.JobName }}
        dependsOn: []
        jobs:
        - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml
          parameters:
            SparseCheckoutPaths:
              # Python recording files are implicit excluded here since they are using '.yaml' file extension.
              - "sdk/${{ parameters.ServiceDirectory }}/**/*.json"
            JobTemplatePath: /eng/pipelines/templates/jobs/live.tests.yml
            AdditionalParameters:
              ServiceDirectory: ${{ parameters.ServiceDirectory }}
              TestResourceDirectories: ${{ parameters.TestResourceDirectories }}
              PreSteps:
                - ${{ parameters.PlatformPreSteps }}
                - ${{ parameters.PreSteps }}
              PostSteps:
                - ${{ parameters.PlatformPostSteps }}
                - ${{ parameters.PostSteps }}
              EnvVars: ${{ parameters.EnvVars }}
              MaxParallel: ${{ parameters.MaxParallel }}
              BeforeTestSteps: ${{ parameters.BeforeTestSteps }}
              AfterTestSteps: ${{ parameters.AfterTestSteps }}
              AdditionalTestArgs: ${{ parameters.AdditionalTestArgs }}
              BuildTargetingString: ${{ parameters.BuildTargetingString }}
              TestMarkArgument: ${{ parameters.TestMarkArgument }}
              InjectedPackages: ${{ parameters.InjectedPackages }}
              BuildDocs: ${{ parameters.BuildDocs }}
              TestTimeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
              TestProxy: ${{ parameters.TestProxy }}
            MatrixConfigs:
              # Enumerate platforms and additional platforms based on supported clouds (sparse platform<-->cloud matrix).
              - ${{ each config in parameters.MatrixConfigs }}:
                -  ${{ config }}
              - ${{ each config in parameters.AdditionalMatrixConfigs }}:
                -  ${{ config }}
            MatrixFilters:
              - ${{ each cloudFilter in cloud.value.MatrixFilters }}:
                - ${{ cloudFilter }}
              - ${{ parameters.MatrixFilters }}
            MatrixReplace:
              - ${{ each cloudReplace in cloud.value.MatrixReplace }}:
                - ${{ cloudReplace }}
              - ${{ parameters.MatrixReplace }}
            CloudConfig:
              SubscriptionConfiguration: ${{ cloud.value.SubscriptionConfiguration }}
              SubscriptionConfigurations: ${{ cloud.value.SubscriptionConfigurations }}
              Location: ${{ coalesce(parameters.Location, cloud.value.Location) }}
              Cloud: ${{ cloud.key }}

- ${{ if contains(variables['Build.DefinitionName'], 'tests-weekly')  }}:
  - stage:
    displayName: 'Analyze_${{ parameters.JobName }}'
    dependsOn: []
    jobs:
      - job: 'Analyze'
        timeoutInMinutes: 90

        variables:
          PythonVersion: '3.7'

        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          vmImage: MMSUbuntu20.04

        steps:
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.7'
            inputs:
             versionSpec: '3.7'
          - script: |
              python -m pip install setuptools==58.3.0
              python -m pip install -r eng/ci_tools.txt
            displayName: 'Prep Environment'
          - task: PythonScript@0
            displayName: 'Run Pylint Next'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/setup_execute_tests.py'
              arguments: >-
                "azure*" 
                --mark_arg="${{ parameters.TestMarkArgument }}" 
                --service="${{ parameters.ServiceDirectory }}" 
                --toxenv="next-pylint"
                --disablecov
                --filter-type="Omit_management"
            env: ${{ parameters.EnvVars }}

          - task: PythonScript@0
            displayName: 'Run MyPy Next'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/setup_execute_tests.py'
              arguments: >-
                "azure*" 
                --mark_arg="${{ parameters.TestMarkArgument }}" 
                --service="${{ parameters.ServiceDirectory }}" 
                --toxenv="next-mypy"
                --disablecov
            env: ${{ parameters.EnvVars }}

          - task: PythonScript@0
            displayName: 'Run Pyright Next'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/setup_execute_tests.py'
              arguments: >-
                "azure*"
                --mark_arg="${{ parameters.TestMarkArgument }}"
                --service="${{ parameters.ServiceDirectory }}"
                --toxenv="next-pyright"
                --disablecov

          - task: PythonScript@0
            displayName: 'Run Ruff'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/setup_execute_tests.py'
              arguments: >-
                "azure*" 
                --mark_arg="${{ parameters.TestMarkArgument }}" 
                --service="${{ parameters.ServiceDirectory }}" 
                --toxenv="ruff"
                --disablecov
            env: ${{ parameters.EnvVars }}
