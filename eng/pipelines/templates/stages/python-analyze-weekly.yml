parameters: 
  - name: ServiceDirectory
    type: string
    default: ''
  - name: BuildTargetingString
    type: string
    default: 'azure-*'
  - name: JobName
    type: string
    default: 'Test'

stages:
  - stage:
    displayName: 'Analyze_${{ parameters.JobName }}'
    variables:
      - template: /eng/pipelines/templates/variables/image.yml
    dependsOn: []
    jobs:
      - job: 'Analyze'
        timeoutInMinutes: 90

        pool:
          name: $(LINUXPOOL)
          image: $(LINUXVMIMAGE)
          os: linux

        steps:
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.9'
            inputs:
              versionSpec: '3.9'

          # Prep Environment (Unix) — PortAudio + ci_tools
          - script: |
              if [[ "$AGENT_OS" == "Linux" ]]; then
                sudo apt-get update
                sudo apt-get install -y portaudio19-dev libasound2-dev
              elif [[ "$AGENT_OS" == "Darwin" ]]; then
                brew update
                brew install portaudio
              fi
              python -m pip install -r eng/ci_tools.txt
            displayName: 'Prep Environment (Unix)'
            condition: ne(variables['Agent.OS'], 'Windows_NT')

          # Prep Environment (Windows) — ci_tools only
          - script: |
              python -m pip install -r eng/ci_tools.txt
            displayName: 'Prep Environment (Windows)'
            condition: eq(variables['Agent.OS'], 'Windows_NT')

          - task: PythonScript@0
            displayName: 'Run Pylint Next'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
              arguments: >-
                ${{ parameters.BuildTargetingString }}
                --service="${{ parameters.ServiceDirectory }}"
                --toxenv="next-pylint"
                --disablecov
                --filter-type="Omit_management"
            env:
              GH_TOKEN: $(azuresdk-github-pat)

          - task: PythonScript@0
            displayName: 'Run MyPy Next'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
              arguments: >-
                ${{ parameters.BuildTargetingString }}
                --service="${{ parameters.ServiceDirectory }}"
                --toxenv="next-mypy"
                --disablecov
            env:
              GH_TOKEN: $(azuresdk-github-pat)

          - task: PythonScript@0
            displayName: 'Run Pyright Next'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
              arguments: >-
                ${{ parameters.BuildTargetingString }}
                --service="${{ parameters.ServiceDirectory }}"
                --toxenv="next-pyright"
                --disablecov
            env:
              GH_TOKEN: $(azuresdk-github-pat)

          - task: PythonScript@0
            displayName: 'Run Ruff'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
              arguments: >-
                ${{ parameters.BuildTargetingString }}
                --service="${{ parameters.ServiceDirectory }}"
                --toxenv="ruff"
                --disablecov
            env:
              GH_TOKEN: $(azuresdk-github-pat)

          # Not a "Prep Environment" step: separate tool installs
          - script: |
              python -m pip install "PyGithub>=1.59.0"
              python -m pip install "requests>=2.0"
            displayName: 'Install GitHub Tools'
          
          - task: PythonScript@0
            displayName: 'Update vNext Issues with build errors'
            continueOnError: true
            inputs:
              scriptPath: 'tools/azure-sdk-tools/gh_tools/update_issue.py'
              arguments: >-
                ${{ parameters.BuildTargetingString }}
                --service="${{ parameters.ServiceDirectory }}"
                --disablecov
            env:
              GH_TOKEN: $(azuresdk-github-pat)
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)

          - task: UsePythonVersion@0
            displayName: 'Use Python 3.13 for docs generation'
            inputs:
              versionSpec: '3.13'

          # Prep Environment (Unix) — PortAudio + ci_tools (again after Python switch)
          - script: |
              if [[ "$AGENT_OS" == "Linux" ]]; then
                sudo apt-get update
                sudo apt-get install -y portaudio19-dev libasound2-dev
              elif [[ "$AGENT_OS" == "Darwin" ]]; then
                brew update
                brew install portaudio
              fi
              python -m pip install -r eng/ci_tools.txt
            displayName: 'Prep Environment (Unix)'
            condition: ne(variables['Agent.OS'], 'Windows_NT')

          # Prep Environment (Windows) — ci_tools only (again after Python switch)
          - script: |
              python -m pip install -r eng/ci_tools.txt
            displayName: 'Prep Environment (Windows)'
            condition: eq(variables['Agent.OS'], 'Windows_NT')

          - task: PythonScript@0
            displayName: 'Generate Docs Next'
            continueOnError: true
            inputs:
              scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
              arguments: >-
                ${{ parameters.BuildTargetingString }}
                --service="${{ parameters.ServiceDirectory }}"
                --toxenv="next-sphinx"
            env:
              GH_TOKEN: $(azuresdk-github-pat)