parameters:
- name: Artifacts
  type: object
  default: []
- name: ServiceDirectory
  type: string
  default: not-specified
- name: EmulatorMsiUrl
  type: string
  default: https://aka.ms/cosmosdb-emulator
- name: InjectedPackages
  type: string
  default: ''
- name: EmulatorStartParameters
  type: string
  default: ''
- name: TestProxy
  type: boolean
  default: false

stages:
  - stage: Build
    jobs:
      template: /eng/pipelines/templates/stages/archetype-sdk-client.yml
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        # Skip emulator tests in the CI run
        # TestMarkArgument: not cosmosEmulator
        InjectedPackages: ${{parameters.InjectedPackages}}
        Artifacts: ${{parameters.Artifacts}}
        
  - stage: Test_Emulator
    dependsOn: []
    jobs:
    - job: Emulator
      strategy:
        matrix:
          Windows_Python3_7:
            OSVmImage: 'windows-2022'
            PythonVersion: '3.7'
          Windows_Python3_8:
            OSVmImage: 'windows-2022'
            PythonVersion: '3.8'
          Windows_Python3_9:
            OSVmImage: 'windows-2022'
            PythonVersion: '3.9'
          Windows_Python3_10:
            OSVmImage: 'windows-2022'
            PythonVersion: '3.10'
          Windows_Python3_11:
            OSVmImage: 'windows-2022'
            PythonVersion: '3.11'
          Windows_Python3_12:
            OSVmImage: 'windows-2022'
            PythonVersion: '3.12'

      pool:
        vmImage: $(OSVmImage)

      steps:
        - template: /eng/common/pipelines/templates/steps/cosmos-emulator.yml
          parameters:
            StartParameters: '/noexplorer /noui /enablepreview /EnableSqlComputeEndpoint /SqlComputePort=9999 /disableratelimiting /partitioncount=50 /consistency=Strong'

        - template: /eng/pipelines/templates/steps/build-test.yml
          parameters:
            TestMarkArgument: not globaldb
            EnvVars:
              ACCOUNT_HOST: https://localhost:8081/
            ServiceDirectory: ${{ parameters.ServiceDirectory }}
            PythonVersion: $(PythonVersion)
            OSVmImage: $(OSVmImage)
            ToxTestEnv: 'whl,sdist'
            InjectedPackages: ${{parameters.InjectedPackages}}
