#ALL LINES BELOW ARE THE ORIGINAL FILE
parameters:
- name: Artifacts
  type: object
  default: []
- name: ServiceDirectory
  type: string
  default: not-specified
- name: EmulatorMsiUrl
  type: string
  default: https://aka.ms/cosmosdb-emulator
- name: InjectedPackages
  type: string
  default: ''
- name: EmulatorStartParameters
  type: string
  default: '/noexplorer /noui /enablepreview /EnableSqlComputeEndpoint /SqlComputePort=9999 /disableratelimiting /partitioncount=50 /consistency=Strong'
- name: TestProxy
  type: boolean
  default: false

#extends:
#  template: /eng/pipelines/templates/stages/archetype-sdk-client.yml
#  parameters:
#    ServiceDirectory: ${{ parameters.ServiceDirectory }}
#    # Skip emulator tests in the CI run
#    TestMarkArgument: not cosmosEmulator
#    InjectedPackages: ${{parameters.InjectedPackages}}
#    Artifacts: ${{parameters.Artifacts}}

jobs:
- job: Build CI
  steps:
    - template: /eng/pipelines/templates/stages/archetype-sdk-client.yml
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        # Skip emulator tests in the CI run
        TestMarkArgument: not cosmosEmulator
        InjectedPackages: ${{parameters.InjectedPackages}}
        Artifacts: ${{parameters.Artifacts}}

- job: Emulator
  strategy:
    matrix:
      Windows_Python36:
        OSVmImage: 'windows-2022'
        PythonVersion: '3.9'
  pool:
    vmImage: $(OSVmImage)

  steps:
    - template: /eng/common/pipelines/templates/steps/cosmos-emulator.yml
      parameters:
        EmulatorMsiUrl: ${{ parameters.EmulatorMsiUrl }}
        StartParameters: ${{ parameters.EmulatorStartParameters }}

    - template: /eng/pipelines/templates/steps/build-test.yml
      parameters:
        TestMarkArgument: not globaldb
        EnvVars:
          ACCOUNT_HOST: https://localhost:8081/
          ACCOUNT_KEY: C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        PythonVersion: $(PythonVersion)
        OSVmImage: $(OSVmImage)
        ToxTestEnv: 'whl,sdist'
        InjectedPackages: ${{parameters.InjectedPackages}}