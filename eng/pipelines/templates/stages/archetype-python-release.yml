parameters:
  Artifacts: []
  TestPipeline: false
  ArtifactName: 'not-specified'
  ServiceDirectory: 'not-specified'
  DependsOn: Build
  DocArtifact: 'documentation'
  DevFeedName: 'public/azure-sdk-for-python'
  TargetDocRepoOwner: ''
  TargetDocRepoName: ''
  PackageSourceOverride: "https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-python/pypi/simple/"
  DocValidationImageId: "azuresdkimages.azurecr.io/pyrefautocr:latest"

stages:
  - ${{if and(in(variables['Build.Reason'], 'Manual', ''), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage:
        displayName: 'Release: ${{artifact.name}}'
        dependsOn: ${{parameters.DependsOn}}
        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-python-pr'))
        jobs:
          - deployment: TagRepository
            displayName: "Create release tag"
            condition: ne(variables['Skip.TagRepository'], 'true')
            environment: github

            pool:
              name: azsdk-pool-mms-ubuntu-2004-general
              vmImage: MMSUbuntu20.04

            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: self
                    - template: /eng/common/pipelines/templates/steps/retain-run.yml
                    - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
                      parameters:
                        PackageName: "azure-template"
                        ServiceDirectory: "template"
                        TestPipeline: ${{ parameters.TestPipeline }}

                    - ${{if ne(artifact.skipVerifyChangeLog, 'true')}}:
                      - template: /eng/common/pipelines/templates/steps/verify-changelog.yml
                        parameters:
                          PackageName: ${{artifact.name}}
                          ServiceName: ${{parameters.ServiceDirectory}}
                          ForRelease: true

                    - task: PythonScript@0
                      displayName: Verify CI enabled
                      condition: succeeded()
                      inputs:
                        scriptPath: 'scripts/devops_tasks/verify_ci_enabled.py'
                        arguments: '--package-name ${{ artifact.name }} --service ${{ parameters.ServiceDirectory }}'

                    - pwsh: |
                        Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}
                      workingDirectory: $(Pipeline.Workspace)
                      displayName: Output Visible Artifacts

                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
                      parameters:
                        ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}
                        PackageRepository: PyPI
                        ReleaseSha: $(Build.SourceVersion)
                        RepoId: Azure/azure-sdk-for-python
                        WorkingDirectory: $(System.DefaultWorkingDirectory)

          - ${{if ne(artifact.skipPublishPackage, 'true')}}:
            - deployment: PublishPackage
              displayName: "Publish to PyPI"
              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))
              environment: pypi
              dependsOn: TagRepository

              pool:
                name: azsdk-pool-mms-ubuntu-2004-general
                vmImage: MMSUbuntu20.04

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - download: current
                        artifact: ${{parameters.ArtifactName}}
                        timeoutInMinutes: 5

                      - task: UsePythonVersion@0
                        inputs:
                          versionSpec: '3.9'

                      - script: |
                          set -e
                          python -m pip install -r eng/release_requirements.txt
                        displayName: Install Release Dependencies

                      - task: PythonScript@0
                        displayName: Verify Dependency Presence
                        condition: and(succeeded(), ne(variables['Skip.VerifyDependencies'], 'true'))
                        inputs:
                          scriptPath: 'scripts/devops_tasks/verify_dependencies_present.py'
                          arguments: '--package-name ${{ artifact.name }} --service ${{ parameters.ServiceDirectory }}'

                      - task: TwineAuthenticate@0
                        displayName: 'Authenticate to feed: ${{parameters.DevFeedName}}'
                        inputs:
                          artifactFeeds: ${{parameters.DevFeedName}}

                      - pwsh: |
                          $esrpDirectory = "$(Pipeline.Workspace)/esrp-release/${{parameters.ArtifactName}}/${{artifact.name}}"
                          New-Item -ItemType Directory -Force -Path $esrpDirectory

                          Get-ChildItem -Path "$(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}" `
                            | Where-Object { ($_.Name -like "*.tar.gz" -or $_.Name -like "*.whl") } `
                            | Copy-Item -Destination $esrpDirectory

                          Get-ChildItem $esrpDirectory
                        displayName: Isolate files for ESRP Publish

                      - task: EsrpRelease@2
                        displayName: 'Publish to ESRP'
                        inputs:
                          ConnectedServiceName: 'ESRP Release Service'
                          Intent: 'PackageDistribution'
                          ContentType: 'PyPI'
                          PackageLocation: $(Pipeline.Workspace)/esrp-release/${{parameters.ArtifactName}}/${{artifact.name}}
                          Owners: $(Build.RequestedForEmail)
                          Approvers: $(Build.RequestedForEmail)
                          ServiceEndpointUrl: 'https://api.esrp.microsoft.com'
                          MainPublisher: 'ESRPRELPACMANTEST'
                          DomainTenantId: '72f988bf-86f1-41af-91ab-2d7cd011db47'

                      - script: |
                          set -e
                          twine upload --repository ${{parameters.DevFeedName}} --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}/*.whl
                          echo "Uploaded whl to devops feed"
                          twine upload --repository ${{parameters.DevFeedName}} --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}/*.tar.gz
                          echo "Uploaded sdist to devops feed"
                        displayName: 'Publish package to feed: ${{parameters.DevFeedName}}'

          - ${{if ne(artifact.skipPublishDocs, 'true')}}:
            - deployment: PublishGitHubIODocs
              displayName: Publish Docs to GitHubIO Blob Storage
              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
              environment: githubio
              dependsOn: PublishPackage

              pool:
                name: azsdk-pool-mms-win-2022-general
                vmImage: MMS2022

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self

                      - pwsh: |
                          Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.DocArtifact}}/${{artifact.name}}
                        workingDirectory: $(Pipeline.Workspace)
                        displayName: Output Visible Artifacts

                      - template: /eng/common/pipelines/templates/steps/publish-blobs.yml
                        parameters:
                          FolderForUpload: '$(Pipeline.Workspace)/${{parameters.DocArtifact}}/${{artifact.name}}'
                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'
                          BlobName: '$(azure-sdk-docs-prod-blob-name)'
                          TargetLanguage: 'python'
                          ArtifactLocation: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}'
                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.
                          ScriptPath: 'eng/common/scripts/copy-docs-to-blobstorage.ps1'

          - ${{if ne(artifact.skipPublishDocMs, 'true')}}:
                - deployment: PublishDocs
                  displayName: Docs.MS Release
                  condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
                  environment: githubio
                  dependsOn: PublishPackage

                  pool:
                    name: azsdk-pool-mms-ubuntu-2004-general
                    vmImage: MMSUbuntu20.04

                  strategy:
                    runOnce:
                      deploy:
                        steps:
                          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                            parameters:
                              Paths:
                                - sdk/**/*.md
                                - .github/CODEOWNERS
                          - download: current
                          - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
                            parameters:
                              PackageInfoLocations:
                                - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
                              WorkingDirectory: $(System.DefaultWorkingDirectory)
                              TargetDocRepoOwner: ${{parameters.TargetDocRepoOwner}}
                              TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                              Language: 'python'
                              SparseCheckoutPaths:
                                - docs-ref-services/
                                - metadata/
                              PackageSourceOverride: ${{parameters.PackageSourceOverride}}
                              DocValidationImageId: ${{parameters.DocValidationImageId}}
          - ${{if ne(artifact.skipPublishDocGithubIo, 'true')}}:
            - deployment: UpdatePackageVersion
              displayName: "Update Package Version"
              condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
              environment: github
              dependsOn: PublishPackage

              pool:
                name: azsdk-pool-mms-ubuntu-2004-general
                vmImage: MMSUbuntu20.04

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - task: UsePythonVersion@0
                      - script: |
                          python -m pip install "./tools/azure-sdk-tools[build]"
                        displayName: Install versioning tool dependencies
                      - pwsh: |
                          sdk_increment_version --package-name ${{ artifact.name }} --service ${{ parameters.ServiceDirectory }}
                        displayName: Increment package version
                      - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                        parameters:
                          RepoName: azure-sdk-for-python
                          PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                          CommitMsg: "Increment package version after release of ${{ artifact.name }}"
                          PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"
                          CloseAfterOpenForTesting: '${{ parameters.TestPipeline }}'
          - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
            - template: /eng/pipelines/templates/jobs/smoke.tests.yml
              parameters:
                Daily: false
                ArtifactName: ${{ parameters.ArtifactName }}
                Artifact: ${{ artifact }}


  - stage: Integration
    dependsOn: ${{parameters.DependsOn}}
    condition: succeededOrFailed('${{parameters.DependsOn}}')
    jobs:
    - job: PublishPackages
      displayName: "Publish package to daily feed"
      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
      pool:
        name: azsdk-pool-mms-ubuntu-2004-general
        vmImage: MMSUbuntu20.04
      steps:
      - checkout: none
      - download: current
        artifact: ${{parameters.ArtifactName}}
        timeoutInMinutes: 5
      - task: UsePythonVersion@0
      - script: |
          set -e
          python -m pip install twine
        displayName: Install Twine

      - template: ../steps/auth-dev-feed.yml
        parameters:
          DevFeedName: ${{ parameters.DevFeedName }}

      - ${{ each artifact in parameters.Artifacts }}:
        - ${{if ne(artifact.skipPublishDevFeed, 'true')}}:

          - pwsh: |
              $fileCount = (Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}} | ? {$_.Name -match "-[0-9]*.[0-9]*.[0-9]*a[0-9]*" } | Measure-Object).Count

              if ($fileCount -eq 0) {
                Write-Host "No alpha packages for ${{artifact.name}} to publish."
                exit 0
              }

              twine upload --repository $(DevFeedName) --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}/*-*a*.whl
              echo "Uploaded whl to devops feed $(DevFeedName)"
              twine upload --repository $(DevFeedName) --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}/*-*a*.tar.gz
              echo "Uploaded sdist to devops feed $(DevFeedName)"
            displayName: 'Publish ${{artifact.name}} alpha package'

    - job: PublishDocsToNightlyBranch
      dependsOn: PublishPackages
      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
      pool:
        name: azsdk-pool-mms-ubuntu-2004-general
        vmImage: MMSUbuntu20.04
      steps:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            Paths:
              - sdk/**/*.md
              - .github/CODEOWNERS
        - download: current
        - pwsh: |
            Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.ArtifactName}}/
          displayName: Show visible artifacts

        - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
          parameters:
            PackageInfoLocations:
              - ${{ each artifact in parameters.Artifacts }}:
                - ${{if ne(artifact.skipPublishDocMs, 'true')}}:
                  - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
            WorkingDirectory: $(System.DefaultWorkingDirectory)
            TargetDocRepoOwner: ${{parameters.TargetDocRepoOwner}}
            TargetDocRepoName: ${{parameters.TargetDocRepoName}}
            Language: 'python'
            DailyDocsBuild: true
            SparseCheckoutPaths:
              - docs-ref-services/
              - metadata/
            PackageSourceOverride: ${{parameters.PackageSourceOverride}}
            DocValidationImageId: ${{parameters.DocValidationImageId}}

        - template: /eng/common/pipelines/templates/steps/docsms-ensure-validation.yml
