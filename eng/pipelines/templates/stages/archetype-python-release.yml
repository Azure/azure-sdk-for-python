parameters:
  Artifacts: []
  ArtifactName: 'not-specified'
  DependsOn: Build
  DocArtifact: 'documentation'

stages:
  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage: Release_${{artifact.safeName}}
        displayName: 'Release: ${{artifact.name}}'
        dependsOn: ${{parameters.DependsOn}}
        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-python-pr'))
        jobs:
          - deployment: TagRepository
            displayName: "Create release tag"
            condition: ne(variables['Skip.TagRepository'], 'true')
            environment: github

            pool:
              vmImage: ubuntu-16.04

            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: self
                    - pwsh: |
                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)
                        $underscorePrefix = "${{artifact.name}}"
                        $dashPrefix = "${{artifact.name}}".Replace("_", "-")
                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/$dashPrefix-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}
                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/$underscorePrefix-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}
                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}
                      displayName: Stage artifacts
                    - template: ../../../common/pipelines/templates/steps/create-tags-and-git-release.yml
                      parameters:
                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}
                        PackageRepository: PyPI
                        ReleaseSha: $(Build.SourceVersion)
                        RepoId: Azure/azure-sdk-for-python
                        WorkingDirectory: $(System.DefaultWorkingDirectory)

          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:
            - deployment: PublishPackage
              displayName: "Publish to PyPI"
              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))
              environment: pypi
              dependsOn: TagRepository

              pool:
                vmImage: ubuntu-16.04

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: none
                      - download: current
                        artifact: ${{parameters.ArtifactName}}
                        timeoutInMinutes: 5

                      - pwsh: |
                          Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                          New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)
                          $underscorePrefix = "${{artifact.name}}"
                          $dashPrefix = "${{artifact.name}}".Replace("_", "-")
                          Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/$dashPrefix-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}
                          Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/$underscorePrefix-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}
                          Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}

                      - task: UsePythonVersion@0

                      - script: |
                          set -e
                          pip install twine readme-renderer[md]
                        displayName: Install Twine

                      - task: TwineAuthenticate@1
                        displayName: 'Authenticate to registry: pypi.org'
                        inputs:
                          pythonUploadServiceConnection: 'pypi.org - azure-sdk'

                      - script: |
                          set -e
                          twine upload --repository 'pypi' --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{artifact.safeName}}/*.whl
                          echo "Uploaded whl to pypi"
                          twine upload --repository 'pypi' --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{artifact.safeName}}/*.zip
                          echo "Uploaded zip to pypi"
                        displayName: 'Publish package to registry: pypi.org'

          - ${{if ne(artifact.options.skipPublishDocs, 'true')}}:
            - deployment: PublishDocs
              displayName: Publish Docs to GitHubIO Blob Storage
              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
              environment: githubio
              dependsOn: PublishPackage

              pool:
                vmImage: windows-2019

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - pwsh: |
                          Get-ChildItem $(Pipeline.Workspace)/${{parameters.DocArtifact}}
                          New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)
                          $dashPrefix = "${{artifact.name}}".Replace("_", "-")
                          Copy-Item $(Pipeline.Workspace)/${{parameters.DocArtifact}}/$dashPrefix.zip $(Pipeline.Workspace)/${{artifact.safeName}}
                        displayName: Stage artifacts
                      - pwsh: |
                          Get-ChildItem -Recurse $(Pipeline.Workspace)/${{artifact.safeName}}
                        workingDirectory: $(Pipeline.Workspace)
                        displayName: Output Visible Artifacts
                      - template: ../../../common/pipelines/templates/steps/publish-blobs.yml
                        parameters:
                          FolderForUpload: '$(Pipeline.Workspace)/${{artifact.safeName}}'
                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'
                          BlobName: '$(azure-sdk-docs-prod-blob-name)'
                          TargetLanguage: 'python'
                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.
                          ScriptPath: 'eng/common/scripts/copy-docs-to-blobstorage.ps1'

          - ${{if ne(artifact.options.skipUpdatePackageVersion, 'true')}}:
            - deployment: UpdatePackageVersion
              displayName: "Update Package Version"
              condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
              environment: github
              dependsOn: PublishPackage

              pool:
                vmImage: ubuntu-16.04

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - task: UsePythonVersion@0
                      - script: |
                          pip install -r ./eng/versioning/requirements.txt
                        displayName: Install versioning tool dependencies
                      - task: PythonScript@0
                        displayName: Increment package version
                        inputs:
                          scriptPath: 'eng/versioning/version_increment.py'
                          arguments: '--package-name ${{ artifact.name }}'
                      - template: ../../../common/pipelines/templates/steps/create-pull-request.yml
                        parameters:
                          RepoName: azure-sdk-for-python
                          PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                          CommitMsg: "Increment package version after release of ${{ artifact.name }}"
                          PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"

  - stage: Integration
    dependsOn: ${{parameters.DependsOn}}
    jobs:
    - job: PublishPackages
      displayName: "Publish package to daily feed"
      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
      variables:
        devFeedName: public/azure-sdk-for-python
      pool:
        vmImage: ubuntu-16.04
      steps:
      - checkout: none
      - download: current
        artifact: ${{parameters.ArtifactName}}
        timeoutInMinutes: 5
      - task: UsePythonVersion@0
      - script: |
          set -e
          pip install twine
        displayName: Install Twine

      - task: TwineAuthenticate@0
        displayName: 'Authenticate to feed: $(devFeedName)'
        inputs:
          artifactFeeds: $(devFeedName)

      - ${{ each artifact in parameters.Artifacts }}:

        - pwsh: |
            Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}
            New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)
            $underscorePrefix = "${{artifact.name}}"
            $dashPrefix = "${{artifact.name}}".Replace("_", "-")
            Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/$dashPrefix-[0-9]*.[0-9]*.[0-9]*.dev* $(Pipeline.Workspace)/${{artifact.safeName}}
            Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/$underscorePrefix-[0-9]*.[0-9]*.[0-9]*.dev* $(Pipeline.Workspace)/${{artifact.safeName}}
            Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}
            $fileCount = (Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}} | Measure-Object).Count
            Write-Output "##vso[task.setvariable variable=FilesToUploadCount]$fileCount"

        - script: |
            set -e
            twine upload --repository $(devFeedName) --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{artifact.safeName}}/*.dev*.whl
            echo "Uploaded whl to devops feed"
            twine upload --repository $(devFeedName) --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{artifact.safeName}}/*.dev*.zip
            echo "Uploaded sdist to devops feed"
          displayName: 'Publish package to feed: $(devFeedName)'
          condition: gt(variables['FilesToUploadCount'], 0)