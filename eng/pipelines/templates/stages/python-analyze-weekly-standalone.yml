parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: BuildTargetingString
    type: string
    default: 'azure-*'
  - name: JobName
    type: string
    default: 'Test'

extends:
  template: /eng/pipelines/templates/stages/1es-redirect.yml@self
  parameters:
    stages:
      - ${{ if contains(variables['Build.DefinitionName'], 'tests-weekly')  }}:
        - stage:
          displayName: 'Analyze_${{ parameters.JobName }}'
          variables:
            - template: /eng/pipelines/templates/variables/image.yml
          dependsOn: []
          jobs:
            - job: 'Analyze'
              timeoutInMinutes: 90

              variables:
                - name: PythonVersion
                  value: '3.8' 

              pool:
                name: $(LINUXPOOL)
                image: $(LINUXVMIMAGE)
                os: linux

              steps:
                - task: UsePythonVersion@0
                  displayName: 'Use Python 3.8'
                  inputs:
                    versionSpec: '3.8'
                - script: |
                    python -m pip install setuptools==58.3.0
                    python -m pip install -r eng/ci_tools.txt
                  displayName: 'Prep Environment'
                - task: PythonScript@0
                  displayName: 'Run Pylint Next'
                  continueOnError: true
                  inputs:
                    scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                    arguments: >-
                      ${{ parameters.BuildTargetingString }}
                      --service="${{ parameters.ServiceDirectory }}"
                      --toxenv="next-pylint"
                      --disablecov
                      --filter-type="Omit_management"
                  env:
                    GH_TOKEN: $(azuresdk-github-pat)

                - task: PythonScript@0
                  displayName: 'Run MyPy Next'
                  continueOnError: true
                  inputs:
                    scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                    arguments: >-
                      ${{ parameters.BuildTargetingString }}
                      --service="${{ parameters.ServiceDirectory }}"
                      --toxenv="next-mypy"
                      --disablecov
                  env:
                    GH_TOKEN: $(azuresdk-github-pat)

                - task: PythonScript@0
                  displayName: 'Run Pyright Next'
                  continueOnError: true
                  inputs:
                    scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                    arguments: >-
                      ${{ parameters.BuildTargetingString }}
                      --service="${{ parameters.ServiceDirectory }}"
                      --toxenv="next-pyright"
                      --disablecov
                  env:
                    GH_TOKEN: $(azuresdk-github-pat)

                - task: PythonScript@0
                  displayName: 'Run Ruff'
                  continueOnError: true
                  inputs:
                    scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                    arguments: >-
                      ${{ parameters.BuildTargetingString }}
                      --service="${{ parameters.ServiceDirectory }}"
                      --toxenv="ruff"
                      --disablecov
                  env:
                    GH_TOKEN: $(azuresdk-github-pat)

                - task: UsePythonVersion@0
                  displayName: 'Use Python 3.11 for docs generation'
                  inputs:
                    versionSpec: '3.11'

                - script: |
                    python -m pip install setuptools==58.3.0
                    python -m pip install -r eng/ci_tools.txt
                  displayName: 'Prep Environment'

                - task: PythonScript@0
                  displayName: 'Generate Docs'
                  continueOnError: true
                  inputs:
                    scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                    arguments: >-
                      ${{ parameters.BuildTargetingString }}
                      --service="${{ parameters.ServiceDirectory }}" 
                      --toxenv="strict-sphinx"
                  env:
                    GH_TOKEN: $(azuresdk-github-pat)
