parameters:
  ServiceDirectory: ''
  BeforePublishSteps: []
  TestMarkArgument: ''
  BuildTargetingString: 'azure-*'
  TestTimeoutInMinutes: 0
  
jobs:
  - job: 'Build'
    variables:
    - template: ../variables/globals.yml

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - template: ../steps/build-artifacts.yml
      parameters: 
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}
        BeforePublishSteps: ${{ parameters.BeforePublishSteps }}

  - job: 'Analyze'
    condition: and(succeededOrFailed(), ne(variables['Skip.Analyze'], 'true'))
    variables:
    - template: ../variables/globals.yml

    dependsOn:
      - 'Build'

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - template: ../steps/analyze.yml
      parameters: 
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}

  - ${{if eq(variables['Build.Reason'], 'PullRequest')}}:
    - template: ../steps/pr-build-test.yml
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BeforePublishSteps: ${{ parameters.BeforePublishSteps }}
        TestMarkArgument: ${{ parameters.TestMarkArgument }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}        
        TestTimeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}

  - ${{if ne(variables['Build.Reason'], 'PullRequest')}}:
    - template: ../steps/ci-build-test.yml
      parameters:
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BeforePublishSteps: ${{ parameters.BeforePublishSteps }}
        TestMarkArgument: ${{ parameters.TestMarkArgument }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}        
        TestTimeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}        

  - job: 'RunMyPy'
    condition: and(succeededOrFailed(), ne(variables['Skip.MyPy'], 'true'))
    displayName: 'Run MyPy'
    variables:
    - template: ../variables/globals.yml

    dependsOn:
      - 'Build'

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - template: ../steps/run_mypy.yml
      parameters: 
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}
        TestMarkArgument: ${{ parameters.TestMarkArgument }}

  - job: 'RunPyLint'
    condition: and(succeededOrFailed(), ne(variables['Skip.Pylint'], 'true'))
    displayName: 'Run Pylint'
    variables:
    - template: ../variables/globals.yml

    dependsOn:
      - 'Build'

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - template: ../steps/run_pylint.yml
      parameters: 
        ServiceDirectory: ${{ parameters.ServiceDirectory }}
        BuildTargetingString: ${{ parameters.BuildTargetingString }}
        TestMarkArgument: ${{ parameters.TestMarkArgument }}
