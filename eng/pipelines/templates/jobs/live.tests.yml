parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: TestResourceDirectories
    type: object
    default:
  - name: PreSteps
    type: object
    default: []
  - name: PostSteps
    type: object
    default: []
  - name: EnvVars
    type: object
    default: {}
  - name: MaxParallel
    type: number
    default: 0
  - name: BeforeTestSteps
    type: object
    default: []
  - name: AfterTestSteps
    type: object
    default: []
  - name: BuildTargetingString
    type: string
    default: 'azure-*'
  - name: AdditionalTestArgs
    type: string
    default: ''
  - name: TestMarkArgument
    type: string
    default: ''
  - name: InjectedPackages
    type: string
    default: ''
  - name: BuildDocs
    type: boolean
    default: true
  - name: TestTimeoutInMinutes
    type: number
    default: 120
  - name: Location
    type: string
    default: ''
  - name: CloudConfig
    type: object
    default: {}
  - name: Matrix
    type: string
  - name: DependsOn
    type: string
    default: ''
  - name: UsePlatformContainer
    type: boolean
    default: false
  - name: TestProxy
    type: boolean
    default: false

jobs:
  - job:
    dependsOn: ${{ parameters.DependsOn }}
    condition: ne(${{ parameters.Matrix }}, '{}')
    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix: $[ ${{ parameters.Matrix }} ]

    variables:
      - template: ../variables/globals.yml

      - name: skipComponentGovernanceDetection
        value: true
      - name: ArmTemplateParameters
        value: '@{}'
      - name: AZURE_SKIP_LIVE_RECORDING
        value: true

    timeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
    continueOnError: false

    pool:
      name: $(Pool)
      vmImage: $(OSVmImage)

    ${{ if eq(parameters.UsePlatformContainer, 'true') }}:
      # Add a default so the job doesn't fail when the matrix is empty
      container: $[ variables['Container'] ]

    steps:
      - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml
        parameters:
          AgentImage: $(OSVmImage)

      - template: /eng/pipelines/templates/steps/targeting-string-resolve.yml
        parameters:
          BuildTargetingString: ${{ parameters.BuildTargetingString }}

      - template: /eng/common/TestResources/build-test-resource-config.yml
        parameters:
          SubscriptionConfiguration: ${{ parameters.CloudConfig.SubscriptionConfiguration }}
          SubscriptionConfigurations: ${{ parameters.CloudConfig.SubscriptionConfigurations }}
          EnvVars: ${{ parameters.EnvVars }}

      - ${{ if parameters.TestResourceDirectories }}:
        - ${{ each directory in parameters.TestResourceDirectories }}:
          - template: /eng/common/TestResources/deploy-test-resources.yml
            parameters:
              Location: ${{ coalesce(parameters.Location, parameters.CloudConfig.Location) }}
              ServiceDirectory: '${{ directory }}'
              SubscriptionConfiguration: $(SubscriptionConfiguration)
              ArmTemplateParameters: $(ArmTemplateParameters)
      - ${{ if not(parameters.TestResourceDirectories) }}:
          - template: /eng/common/TestResources/deploy-test-resources.yml
            parameters:
              Location: ${{ coalesce(parameters.Location, parameters.CloudConfig.Location) }}
              ServiceDirectory: '${{ parameters.ServiceDirectory }}'
              SubscriptionConfiguration: $(SubscriptionConfiguration)
              ArmTemplateParameters: $(ArmTemplateParameters)

      - template: ../steps/build-test.yml
        parameters:
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          CloudName: ${{ parameters.CloudConfig.Cloud }}
          CoverageArg: $(CoverageArg)
          EnvVars:
            AZURE_RUN_MODE: 'Live' #Record, Playback
            ${{ insert }}: ${{ parameters.EnvVars }}
          PreSteps: ${{ parameters.PreSteps }}
          PostSteps: ${{ parameters.PostSteps }}
          PythonVersion: $(PythonVersion)
          OSVmImage: $(OSVmImage)
          ToxTestEnv: "whl"
          AdditionalTestArgs: ${{ parameters.AdditionalTestArgs }}
          TestMarkArgument: ${{ parameters.TestMarkArgument }}
          InjectedPackages: ${{ parameters.InjectedPackages }}
          BuildDocs: ${{ parameters.BuildDocs }}
          TestProxy: ${{ parameters.TestProxy }}


      - ${{ if parameters.TestResourceDirectories }}:
        - ${{ each directory in parameters.TestResourceDirectories }}:
          - template: /eng/common/TestResources/remove-test-resources.yml
            parameters:
              ServiceDirectory: '${{ directory }}'
              SubscriptionConfiguration: $(SubscriptionConfiguration)
      - ${{ if not(parameters.TestResourceDirectories) }}:
        - template: /eng/common/TestResources/remove-test-resources.yml
          parameters:
            ServiceDirectory: '${{ parameters.ServiceDirectory }}'
            SubscriptionConfiguration: $(SubscriptionConfiguration)
