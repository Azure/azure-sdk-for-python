parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: TestResourceDirectories
    type: object
    default: null
  - name: PreSteps
    type: object
    default: []
  - name: PostSteps
    type: object
    default: []
  - name: EnvVars
    type: object
    default: {}
  - name: MaxParallel
    type: number
    default: 0
  - name: BeforeTestSteps
    type: object
    default: []
  - name: AfterTestSteps
    type: object
    default: []
  - name: BuildTargetingString
    type: string
    default: 'azure-*'
  - name: AdditionalTestArgs
    type: string
    default: ''
  - name: TestMarkArgument
    type: string
    default: ''
  - name: InjectedPackages
    type: string
    default: ''
  - name: BuildDocs
    type: boolean
    default: true
  - name: TestTimeoutInMinutes
    type: number
    default: 120
  - name: Location
    type: string
    default: ''
  - name: CloudConfig
    type: object
    default: {}
  - name: Matrix
    type: string
  - name: DependsOn
    type: string
    default: ''
  - name: UsePlatformContainer
    type: boolean
    default: false
  - name: TestProxy
    type: boolean
    default: false
  - name: OSName
    type: string
  - name: ToxTestEnv
    type: string
    default: 'whl'
  - name: UseFederatedAuth
    type: boolean
    default: false
  - name: PersistOidcToken
    type: boolean
    default: false

jobs:
  - job:
    dependsOn: ${{ parameters.DependsOn }}
    condition: ne(${{ parameters.Matrix }}, '{}')
    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix: $[ ${{ parameters.Matrix }} ]

    variables:
      - template: ../variables/globals.yml
      - template: ../variables/image.yml

      - name: skipComponentGovernanceDetection
        value: true
      - name: ArmTemplateParameters
        value: '@{}'
      - name: AZURE_SKIP_LIVE_RECORDING
        value: true

    timeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
    continueOnError: false

    pool:
      name: $(Pool)
      # 1es pipeline templates converts `image` to demands: ImageOverride under the hood
      # which is incompatible with image selection in the default non-1es hosted pools
      ${{ if eq(parameters.OSName, 'macOS') }}:
        vmImage: $(OSVmImage)
      ${{ else }}:
        image: $(OSVmImage)
      os: ${{ parameters.OSName }}

    ${{ if eq(parameters.UsePlatformContainer, 'true') }}:
      # Add a default so the job doesn't fail when the matrix is empty
      container: $[ variables['Container'] ]

    steps:
      - ${{ parameters.PreSteps }}

      - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml
        parameters:
          AgentImage: ${{ parameters.OSName }}

      - template: /eng/pipelines/templates/steps/resolve-package-targeting.yml
        parameters:
          BuildTargetingString: ${{ parameters.BuildTargetingString }}

      - template: /eng/common/TestResources/build-test-resource-config.yml
        parameters:
          SubscriptionConfiguration: ${{ parameters.CloudConfig.SubscriptionConfiguration }}
          SubscriptionConfigurations: ${{ parameters.CloudConfig.SubscriptionConfigurations }}
          ${{ if parameters.UseFederatedAuth }}:
            SubscriptionConfigurationFilePaths: ${{ parameters.CloudConfig.SubscriptionConfigurationFilePaths }}
          EnvVars:
            Pool: $(Pool)
            ${{ insert }}: ${{ parameters.EnvVars }}

      - ${{ each directory in coalesce(parameters.TestResourceDirectories, split(parameters.ServiceDirectory, '|')) }}:
        - template: /eng/common/TestResources/deploy-test-resources.yml
          parameters:
            Location: ${{ coalesce(parameters.Location, parameters.CloudConfig.Location) }}
            ServiceDirectory: '${{ directory }}'
            SubscriptionConfiguration: $(SubscriptionConfiguration)
            ArmTemplateParameters: $(ArmTemplateParameters)
            UseFederatedAuth: ${{ parameters.UseFederatedAuth }}
            PersistOidcToken: ${{ parameters.PersistOidcToken }}
            ServiceConnection: ${{ parameters.CloudConfig.ServiceConnection }}
            EnvVars:
              Pool: $(Pool)
              ${{ insert }}: ${{ parameters.EnvVars }}

      - template: /eng/pipelines/templates/steps/build-test.yml
        parameters:
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          CloudName: ${{ parameters.CloudConfig.Cloud }}
          CoverageArg: $(CoverageArg)
          EnvVars:
            AZURE_RUN_MODE: 'Live' #Record, Playback
            ${{ insert }}: ${{ parameters.EnvVars }}
          PythonVersion: $(PythonVersion)
          OSVmImage: $(OSVmImage)
          ToxTestEnv: ${{ parameters.ToxTestEnv }}
          AdditionalTestArgs: ${{ parameters.AdditionalTestArgs }}
          TestMarkArgument: ${{ parameters.TestMarkArgument }}
          InjectedPackages: ${{ parameters.InjectedPackages }}
          BuildDocs: ${{ parameters.BuildDocs }}
          TestProxy: ${{ parameters.TestProxy }}
          UseFederatedAuth: ${{ parameters.UseFederatedAuth }}
          ServiceConnection: ${{ parameters.CloudConfig.ServiceConnection }}

      - ${{ each directory in coalesce(parameters.TestResourceDirectories, split(parameters.ServiceDirectory, '|')) }}:
        - template: /eng/common/TestResources/remove-test-resources.yml
          parameters:
            ServiceDirectory: '${{ directory }}'
            SubscriptionConfiguration: $(SubscriptionConfiguration)
            UseFederatedAuth: ${{ parameters.UseFederatedAuth }}
            ServiceConnection: ${{ parameters.CloudConfig.ServiceConnection }}

      - ${{ parameters.PostSteps }}
