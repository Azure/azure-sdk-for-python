variables:
  InstallAsyncRequirements: true

jobs:
  - job:
    strategy:
      matrix:
        Python_27_Linux (AzureCloud):
          PythonVersion: '2.7'
          InstallAsyncRequirements: false
          OSVmImage: ubuntu-18.04
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Python_37_Linux (AzureCloud):
          PythonVersion: '3.7'
          OSVmImage: ubuntu-18.04
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Python_38_Linux (AzureCloud):
          PythonVersion: '3.8'
          OSVmImage: ubuntu-18.04
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Python_37_Windows (AzureCloud):
          PythonVersion: '3.7'
          OSVmImage: windows-2019
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Python_38_Windows (AzureCloud):
          PythonVersion: '3.8'
          OSVmImage: windows-2019
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Python_37_Mac (AzureCloud):
          PythonVersion: '3.7'
          OSVmImage: macOS-10.15
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Python_38_Mac (AzureCloud):
          PythonVersion: '3.8'
          OSVmImage: macOS-10.15
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Python_38_Linux (AzureUSGovernment):
          PythonVersion: '3.8'
          OSVmImage: ubuntu-18.04
          CloudType: AzureUSGovernment
          ArmTemplateParameters: $(azureUSGovernmentArmParameters)
        Python_37_Windows (AzureUSGovernment):
          PythonVersion: '3.7'
          OSVmImage: windows-2019
          CloudType: AzureUSGovernment
          ArmTemplateParameters: $(azureUSGovernmentArmParameters)
        Python_38_Linux (AzureChinaCloud):
          PythonVersion: '3.8'
          OSVmImage: ubuntu-18.04
          CloudType: AzureChinaCloud
          Location: 'chinanorth'
          ArmTemplateParameters: $(azureChinaCloudArmParameters)
        Python_37_Windows (AzureChinaCloud):
          PythonVersion: '3.7'
          OSVmImage: windows-2019
          CloudType: AzureChinaCloud
          Location: 'chinanorth'
          ArmTemplateParameters: $(azureChinaCloudArmParameters)

    pool:
      vmImage: $(OSVmImage)

    variables:
      Location: ''
      azureCloudArmParameters: "@{ storageEndpointSuffix = 'core.windows.net'; azureCloud = 'AzureCloud'; }"
      azureUSGovernmentArmParameters: "@{ storageEndpointSuffix = 'core.usgovcloudapi.net'; azureCloud = 'AzureUSGovernment'; }"
      azureChinaCloudArmParameters: "@{ storageEndpointSuffix = 'core.chinacloudapi.cn'; azureCloud = 'AzureChinaCloud'; }"

    steps:
      - task: UsePythonVersion@0
        displayName: "Use Python $(PythonVersion)"
        inputs:
          versionSpec: $(PythonVersion)

      - script: |
          python -m pip install pip==20.0.2
          pip --version
        displayName: pip --version

      - script: pip install -r ./common/smoketest/requirements.txt --pre --no-deps --index-url https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-python/pypi/simple
        displayName: Install requirements from dev feed without dependencies

      - script: pip install -r ./common/smoketest/requirements_async.txt
        displayName: "Install requirements_async.txt"
        condition: and(succeeded(), eq(variables['InstallAsyncRequirements'], 'true'))

      - script: python ./common/smoketest/dependencies.py -r ./common/smoketest/requirements.txt | tee ./common/smoketest/requirements_dependencies.txt
        displayName: Create dependency list from installed dev packages

      - script: pip install -r ./common/smoketest/requirements_dependencies.txt
        displayName: Install dev package dependencies from PyPI

      - script: pip freeze
        displayName: Show installed packages (pip freeze)

      - template: /eng/common/TestResources/deploy-test-resources.yml
        parameters:
          ServiceDirectory: '$(Build.SourcesDirectory)/common/smoketest/'
          CloudType: $(CloudType)
          Location: $(Location)
          ArmTemplateParameters: $(ArmTemplateParameters)

      - script: python ./common/smoketest/program.py
        displayName: Run Smoke Test

      - template: /eng/common/TestResources/remove-test-resources.yml
        parameters:
          ServiceDirectory: '$(Build.SourcesDirectory)/common/smoketest/'
