# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class AnalysisServicesServer(Resource):
    """Represents an instance of an Analysis Services resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: An identifier that represents the Analysis Services resource.
    :vartype id: str
    :ivar name: The name of the Analysis Services resource.
    :vartype name: str
    :ivar type: The type of the Analysis Services resource.
    :vartype type: str
    :param location: Location of the Analysis Services resource.
    :type location: str
    :param sku: The SKU of the Analysis Services resource.
    :type sku: :class:`ResourceSku
     <azure.mgmt.analysisservices.models.ResourceSku>`
    :param tags: Key-value pairs of additional resource provisioning
     properties.
    :type tags: dict
    :param as_administrators:
    :type as_administrators: :class:`ServerAdministrators
     <azure.mgmt.analysisservices.models.ServerAdministrators>`
    :ivar state: The current state of Analysis Services resource. The state is
     to indicate more states outside of resource provisioning. Possible values
     include: 'Deleting', 'Succeeded', 'Failed', 'Paused', 'Suspended',
     'Provisioning', 'Updating', 'Suspending', 'Pausing', 'Resuming',
     'Preparing', 'Scaling'
    :vartype state: str or :class:`State
     <azure.mgmt.analysisservices.models.State>`
    :ivar provisioning_state: The current deployment state of Analysis
     Services resource. The provisioningState is to indicate states for
     resource provisioning. Possible values include: 'Deleting', 'Succeeded',
     'Failed', 'Paused', 'Suspended', 'Provisioning', 'Updating', 'Suspending',
     'Pausing', 'Resuming', 'Preparing', 'Scaling'
    :vartype provisioning_state: str or :class:`ProvisioningState
     <azure.mgmt.analysisservices.models.ProvisioningState>`
    :ivar server_full_name: The full name of the Analysis Services resource.
    :vartype server_full_name: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'sku': {'required': True},
        'state': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'server_full_name': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'sku': {'key': 'sku', 'type': 'ResourceSku'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'as_administrators': {'key': 'properties.asAdministrators', 'type': 'ServerAdministrators'},
        'state': {'key': 'properties.state', 'type': 'str'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'server_full_name': {'key': 'properties.serverFullName', 'type': 'str'},
    }

    def __init__(self, location, sku, tags=None, as_administrators=None):
        super(AnalysisServicesServer, self).__init__(location=location, sku=sku, tags=tags)
        self.as_administrators = as_administrators
        self.state = None
        self.provisioning_state = None
        self.server_full_name = None
