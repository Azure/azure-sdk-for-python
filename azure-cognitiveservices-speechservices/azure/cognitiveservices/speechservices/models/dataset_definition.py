# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DatasetDefinition(Model):
    """DatasetDefinition.

    All required parameters must be populated in order to send to Azure.

    :param data_import_kind: Required. The kind of the dataset (e.g. acoustic
     data, language data ...). Possible values include: 'None', 'Language',
     'Acoustic', 'Pronunciation', 'CustomVoice', 'LanguageGeneration'
    :type data_import_kind: str or
     ~azure.cognitiveservices.speechservices.models.enum
    :param name: Required. The name of the object
    :type name: str
    :param description: The description of the object
    :type description: str
    :param properties: The custom properties of this entity
    :type properties: dict[str, str]
    :param locale: The locale of the contained data
    :type locale: str
    """

    _validation = {
        'data_import_kind': {'required': True},
        'name': {'required': True},
    }

    _attribute_map = {
        'data_import_kind': {'key': 'dataImportKind', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'locale': {'key': 'locale', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(DatasetDefinition, self).__init__(**kwargs)
        self.data_import_kind = kwargs.get('data_import_kind', None)
        self.name = kwargs.get('name', None)
        self.description = kwargs.get('description', None)
        self.properties = kwargs.get('properties', None)
        self.locale = kwargs.get('locale', None)
