# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class EndpointData(Model):
    """EndpointData.

    All required parameters must be populated in order to send to Azure.

    :param id: Required. The identifier of this entity
    :type id: str
    :param data_url: The resulting data Url for the model deployment
    :type data_url: str
    :param created_date_time: Required. The time-stamp when the object was
     created
    :type created_date_time: datetime
    :param last_action_date_time: Required. The time-stamp when the current
     status was entered
    :type last_action_date_time: datetime
    :param status: Required. The status of the object. Possible values
     include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
    :type status: str or ~azure.cognitiveservices.speechservices.models.enum
    :param start_date: Required. The start date of the demplyment data export
    :type start_date: datetime
    :param end_date: Required. The end date of the demplyment data export
    :type end_date: datetime
    """

    _validation = {
        'id': {'required': True},
        'created_date_time': {'required': True},
        'last_action_date_time': {'required': True},
        'status': {'required': True},
        'start_date': {'required': True},
        'end_date': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'data_url': {'key': 'dataUrl', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'last_action_date_time': {'key': 'lastActionDateTime', 'type': 'iso-8601'},
        'status': {'key': 'status', 'type': 'str'},
        'start_date': {'key': 'startDate', 'type': 'iso-8601'},
        'end_date': {'key': 'endDate', 'type': 'iso-8601'},
    }

    def __init__(self, *, id: str, created_date_time, last_action_date_time, status, start_date, end_date, data_url: str=None, **kwargs) -> None:
        super(EndpointData, self).__init__(**kwargs)
        self.id = id
        self.data_url = data_url
        self.created_date_time = created_date_time
        self.last_action_date_time = last_action_date_time
        self.status = status
        self.start_date = start_date
        self.end_date = end_date
