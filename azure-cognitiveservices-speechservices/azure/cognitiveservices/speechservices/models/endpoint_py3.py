# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Endpoint(Model):
    """Endpoint.

    All required parameters must be populated in order to send to Azure.

    :param concurrent_recognitions: The number of concurrent recognitions the
     endpoint supports
    :type concurrent_recognitions: int
    :param id: Required. The identifier of this entity
    :type id: str
    :param endpoint_kind: Required. The kind of this endpoint (e.g. custom
     speech, custom voice ...). Possible values include: 'None',
     'SpeechRecognition', 'CustomVoice', 'LanguageGeneration',
     'LanguageIdentification'
    :type endpoint_kind: str or
     ~azure.cognitiveservices.speechservices.models.enum
    :param endpoint_urls: Required. The list of endpoint urls
    :type endpoint_urls: dict[str, str]
    :param created_date_time: Required. The time-stamp when the object was
     created
    :type created_date_time: datetime
    :param last_action_date_time: Required. The time-stamp when the current
     status was entered
    :type last_action_date_time: datetime
    :param status: Required. The status of the object. Possible values
     include: 'NotStarted', 'Running', 'Succeeded', 'Failed'
    :type status: str or ~azure.cognitiveservices.speechservices.models.enum
    :param models_property: Required. Information about the deployed models
    :type models_property:
     list[~azure.cognitiveservices.speechservices.models.Model]
    :param content_logging_enabled: A value indicating whether content logging
     (audio &amp; transcriptions) is being used for a deployment.
     Suppressing content logging will result in a higher cost for the
     deployment.
     Free subscriptions can only deploy true
    :type content_logging_enabled: bool
    :param name: Required. The name of the object
    :type name: str
    :param description: The description of the object
    :type description: str
    :param properties: The custom properties of this entity
    :type properties: dict[str, str]
    :param locale: The locale of the contained data
    :type locale: str
    """

    _validation = {
        'id': {'required': True},
        'endpoint_kind': {'required': True},
        'endpoint_urls': {'required': True},
        'created_date_time': {'required': True},
        'last_action_date_time': {'required': True},
        'status': {'required': True},
        'models_property': {'required': True},
        'name': {'required': True},
    }

    _attribute_map = {
        'concurrent_recognitions': {'key': 'concurrentRecognitions', 'type': 'int'},
        'id': {'key': 'id', 'type': 'str'},
        'endpoint_kind': {'key': 'endpointKind', 'type': 'str'},
        'endpoint_urls': {'key': 'endpointUrls', 'type': '{str}'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'last_action_date_time': {'key': 'lastActionDateTime', 'type': 'iso-8601'},
        'status': {'key': 'status', 'type': 'str'},
        'models_property': {'key': 'models', 'type': '[Model]'},
        'content_logging_enabled': {'key': 'contentLoggingEnabled', 'type': 'bool'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'locale': {'key': 'locale', 'type': 'str'},
    }

    def __init__(self, *, id: str, endpoint_kind, endpoint_urls, created_date_time, last_action_date_time, status, models_property, name: str, concurrent_recognitions: int=None, content_logging_enabled: bool=None, description: str=None, properties=None, locale: str=None, **kwargs) -> None:
        super(Endpoint, self).__init__(**kwargs)
        self.concurrent_recognitions = concurrent_recognitions
        self.id = id
        self.endpoint_kind = endpoint_kind
        self.endpoint_urls = endpoint_urls
        self.created_date_time = created_date_time
        self.last_action_date_time = last_action_date_time
        self.status = status
        self.models_property = models_property
        self.content_logging_enabled = content_logging_enabled
        self.name = name
        self.description = description
        self.properties = properties
        self.locale = locale
