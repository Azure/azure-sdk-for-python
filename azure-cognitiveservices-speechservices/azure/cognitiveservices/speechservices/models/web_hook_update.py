# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class WebHookUpdate(Model):
    """WebHookUpdate.

    All required parameters must be populated in order to send to Azure.

    :param configuration: Required. The configuration of the web hook
     registration.
     If the property secret is omitted or contains an empty string in a POST or
     PATCH request,
     no signature hash will be calculated.
     When retrieving web hook registration information from the service, the
     secret is always omitted
    :type configuration:
     ~azure.cognitiveservices.speechservices.models.WebHookConfigurationSecret
    :param active: Required. A value indicating whether callbacks to the
     registered URL are made or not
    :type active: bool
    :param name: Required. The name of the object
    :type name: str
    :param description: The description of the object
    :type description: str
    """

    _validation = {
        'configuration': {'required': True},
        'active': {'required': True},
        'name': {'required': True},
    }

    _attribute_map = {
        'configuration': {'key': 'configuration', 'type': 'WebHookConfigurationSecret'},
        'active': {'key': 'active', 'type': 'bool'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(WebHookUpdate, self).__init__(**kwargs)
        self.configuration = kwargs.get('configuration', None)
        self.active = kwargs.get('active', None)
        self.name = kwargs.get('name', None)
        self.description = kwargs.get('description', None)
