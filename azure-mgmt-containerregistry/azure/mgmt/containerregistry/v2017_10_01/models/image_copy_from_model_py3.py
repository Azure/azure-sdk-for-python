# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ImageCopyFromModel(Model):
    """ImageCopyFromModel.

    All required parameters must be populated in order to send to Azure.

    :param source_repository: Required. Repository name of the source image.
    :type source_repository: str
    :param source_tag: The tag name of the source image.  When both source tag
     and source manifest are omitted the 'latest' tag will be used.
     Exclusive with SourceManifestDigest.
    :type source_tag: str
    :param source_manifest_digest: The manifest sha of the source image.
     Exclusive with SourceTag.
    :type source_manifest_digest: str
    :param source_registry_resource_id: Required. The resource id of the
     source registry.
    :type source_registry_resource_id: str
    :param target_tags: List of strings of the form repo[:tag].  When tag is
     omitted the source will be used (or 'latest' if source tag is also
     omitted.)
    :type target_tags: list[str]
    :param untagged_target_repositories: List of strings of repository names
     to do a manifest only copy.  No tag will be created.
    :type untagged_target_repositories: list[str]
    :param force: When true, any existing target tags will be overwritten.
     When false, any existing target tags will fail the operation before any
     copying begins.
    :type force: bool
    """

    _validation = {
        'source_repository': {'required': True},
        'source_registry_resource_id': {'required': True},
    }

    _attribute_map = {
        'source_repository': {'key': 'sourceRepository', 'type': 'str'},
        'source_tag': {'key': 'sourceTag', 'type': 'str'},
        'source_manifest_digest': {'key': 'sourceManifestDigest', 'type': 'str'},
        'source_registry_resource_id': {'key': 'sourceRegistryResourceId', 'type': 'str'},
        'target_tags': {'key': 'targetTags', 'type': '[str]'},
        'untagged_target_repositories': {'key': 'untaggedTargetRepositories', 'type': '[str]'},
        'force': {'key': 'force', 'type': 'bool'},
    }

    def __init__(self, *, source_repository: str, source_registry_resource_id: str, source_tag: str=None, source_manifest_digest: str=None, target_tags=None, untagged_target_repositories=None, force: bool=None, **kwargs) -> None:
        super(ImageCopyFromModel, self).__init__(**kwargs)
        self.source_repository = source_repository
        self.source_tag = source_tag
        self.source_manifest_digest = source_manifest_digest
        self.source_registry_resource_id = source_registry_resource_id
        self.target_tags = target_tags
        self.untagged_target_repositories = untagged_target_repositories
        self.force = force
