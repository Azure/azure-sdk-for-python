# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SignalRResourceResponse(Model):
    """a class represent a SignalR service.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: The unique ResourceId of SignalR
    :vartype id: str
    :param location: the location of the SignalR service.
    :type location: str
    :ivar name: name of the service
    :vartype name: str
    :ivar type: resource type of service - e.g. "Microsoft.SignalR/SignalR"
    :vartype type: str
    :param tags: Tags of the service.
    :type tags: dict[str, str]
    :param sku: SKU of the service.
    :type sku: ~azure.mgmt.signalr.models.ResourceSku
    :param provisioning_state: Provisioning state of the resource.
    :type provisioning_state: str
    :param status: Running status of the SignalR service.
    :type status: str
    :param is_suspended: Whether the service is suspended or not.
    :type is_suspended: bool
    :param external_ip: The publicly accessible IP of the SignalR service.
    :type external_ip: str
    :param fqdn: FQDN of the SignalR service instance.
    :type fqdn: str
    :param public_port: The publicly accessibly port of the SignalR service
     which is designed for browser/client side usage.
    :type public_port: int
    :param server_port: The publicly accessibly port of the SignalR service
     which is designed for customer server side usage.
    :type server_port: int
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'sku': {'key': 'sku', 'type': 'ResourceSku'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'status': {'key': 'properties.status', 'type': 'str'},
        'is_suspended': {'key': 'properties.isSuspended', 'type': 'bool'},
        'external_ip': {'key': 'properties.externalIP', 'type': 'str'},
        'fqdn': {'key': 'properties.fqdn', 'type': 'str'},
        'public_port': {'key': 'properties.publicPort', 'type': 'int'},
        'server_port': {'key': 'properties.serverPort', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(SignalRResourceResponse, self).__init__(**kwargs)
        self.id = None
        self.location = kwargs.get('location', None)
        self.name = None
        self.type = None
        self.tags = kwargs.get('tags', None)
        self.sku = kwargs.get('sku', None)
        self.provisioning_state = kwargs.get('provisioning_state', None)
        self.status = kwargs.get('status', None)
        self.is_suspended = kwargs.get('is_suspended', None)
        self.external_ip = kwargs.get('external_ip', None)
        self.fqdn = kwargs.get('fqdn', None)
        self.public_port = kwargs.get('public_port', None)
        self.server_port = kwargs.get('server_port', None)
