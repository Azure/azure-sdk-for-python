name: Test Azure SDK Tools

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths:
      - "eng/tools/azure-sdk-tools/**"
      - ".github/workflows/azure-sdk-tools.yml"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install azure-sdk-tools
        run: |
          python -m pip install -e eng/tools/azure-sdk-tools[build,ghtools,conda]
          python -m pip freeze
        shell: bash

      - name: Run tests
        run: |
          pytest ./tests
        shell: bash
        working-directory: eng/tools/azure-sdk-tools

  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install azure-sdk-tools
        run: |
          python -m pip install -e eng/tools/azure-sdk-tools[build,ghtools,conda]
          python -m pip install black==24.4.0
          python -m pip freeze
        shell: bash

      - name: Run black
        run: |
          black --check --config eng/black-pyproject.toml eng/tools/azure-sdk-tools --exclude 'templates'
        shell: bash

  check-all-azpysdk-on-uv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install azure-sdk-tools, discover azpysdk checks
        run: |
          uv pip install --system eng/tools/azure-sdk-tools[build,ghtools,conda]

          # parse .py files under `eng/tools/azure-sdk-tools/azpysdk/`, excluding `__init__.py`, `Check.py`, and any file starting with `next_`
          # everything else, get the module name without the `.py` extension, and set a comma-separated list of those module names as an environment variable
          # for later consumption in the pipeline on line 78
          CHECK_DIR="eng/tools/azure-sdk-tools/azpysdk"
          shopt -s nullglob
          MODULES=()
          for f in "$CHECK_DIR"/*.py; do
            base="$(basename "$f")"
            case "$base" in
              __init__.py|Check.py|next_*.py) continue ;;
            esac
            name="${base%.py}"
            MODULES+=("$name")
          done
          if [ ${#MODULES[@]} -eq 0 ]; then
            echo "No azpysdk check modules discovered in $CHECK_DIR" >&2
            exit 1
          fi
          IFS=',' read -r -a SORTED <<< "$(printf '%s\n' "${MODULES[@]}" | sort)"
          CHECKS="$(printf '%s,' "${SORTED[@]}" | sed 's/,$//')"
          echo "Discovered azpysdk checks: $CHECKS"
          echo "AZPYSDK_CHECKS=$CHECKS" >> "$GITHUB_ENV"
          # end discovery
        shell: bash

      - name: Run all discovered azpysdk environments against aztemplate
        run: |
          python eng/scripts/dispatch_checks.py --checks "$AZPYSDK_CHECKS" azure-template
        shell: bash
        env:
          TOX_PIP_IMPL: "uv"

      - name: Install azure-sdk-tools, discover azpysdk checks
        run: |
          python -m pip install -e eng/tools/azure-sdk-tools[build,ghtools,conda]
        shell: bash

      - name: Run all discovered azpysdk environments against aztemplate
        run: |
          python eng/scripts/dispatch_checks.py --checks "$AZPYSDK_CHECKS" azure-template
        shell: bash

  dev-setup-and-import:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Run dev_setup to install specified packages
        run: |
          python scripts/dev_setup.py --packageList azure-storage-blob,azure-appconfiguration
        shell: bash

      - name: Validate imports
        run: |
          python - <<'PY'
          from azure.storage.blob import *
          from azure.appconfiguration import *
          print("Successful Imports")
          PY
        shell: bash
