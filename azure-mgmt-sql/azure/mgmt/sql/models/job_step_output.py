# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class JobStepOutput(Model):
    """The output configuration of a job step.

    :param type: The output destination type. Possible values include:
     'SqlDatabase'. Default value: "SqlDatabase" .
    :type type: str or ~azure.mgmt.sql.models.JobStepOutputType
    :param subscription_id: The output destination subscription id.
    :type subscription_id: str
    :param resource_group: The output destination resource group.
    :type resource_group: str
    :param server: The output destination server name.
    :type server: str
    :param database: The output destination database.
    :type database: str
    :param schema: The output destination schema. Default value: "dbo" .
    :type schema: str
    :param table: The output destination table.
    :type table: str
    :param credential: The resource ID of the credential to use to connect to
     the output destination.
    :type credential: str
    """

    _validation = {
        'server': {'required': True},
        'database': {'required': True},
        'table': {'required': True},
        'credential': {'required': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'subscription_id': {'key': 'subscriptionId', 'type': 'str'},
        'resource_group': {'key': 'resourceGroup', 'type': 'str'},
        'server': {'key': 'server', 'type': 'str'},
        'database': {'key': 'database', 'type': 'str'},
        'schema': {'key': 'schema', 'type': 'str'},
        'table': {'key': 'table', 'type': 'str'},
        'credential': {'key': 'credential', 'type': 'str'},
    }

    def __init__(self, server, database, table, credential, type="SqlDatabase", subscription_id=None, resource_group=None, schema="dbo"):
        super(JobStepOutput, self).__init__()
        self.type = type
        self.subscription_id = subscription_id
        self.resource_group = resource_group
        self.server = server
        self.database = database
        self.schema = schema
        self.table = table
        self.credential = credential
