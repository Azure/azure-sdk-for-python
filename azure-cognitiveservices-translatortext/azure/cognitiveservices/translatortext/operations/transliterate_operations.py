# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.pipeline import ClientRawResponse

from .. import models


class TransliterateOperations(object):
    """TransliterateOperations operations.

    :param client: Client for service requests.
    :param config: Configuration of service client.
    :param serializer: An object model serializer.
    :param deserializer: An object model deserializer.
    """

    models = models

    def __init__(self, client, config, serializer, deserializer):

        self._client = client
        self._serialize = serializer
        self._deserialize = deserializer

        self.config = config

    def post(
            self, api_version, language, from_script, to_script, texts, ocp_apim_subscription_key=None, x_client_trace_id=None, custom_headers=None, raw=False, **operation_config):
        """Converts the text of a language in one script into another type of
        script. Example-
        Japanese script "こんにちは"
        Same word in Latin script "konnichiha"
        .

        :param api_version: Version of the API requested by the client. Value
         must be **3.0**.
        :type api_version: str
        :param language: Specifies the language of the text to convert from
         one script to another. Possible languages are listed in the
         `transliteration` scope obtained by querying the service for its
         supported languages.
        :type language: str
        :param from_script: Specifies the script used by the input text.
         Lookup supported languages using the `transliteration` scope, to find
         input scripts available for the selected language.
        :type from_script: str
        :param to_script: Specifies the output script. Lookup supported
         languages using the `transliteration` scope, to find output scripts
         available for the selected combination of input language and input
         script.
        :type to_script: str
        :param texts: # Request body
         The body of the request is a JSON array. Each array element is a JSON
         object with a string property named `Text`, which represents the
         string to convert.
         The following limitations apply:
         * The array can have at most 10 elements.
         * The text value of an array element cannot exceed 1,000 characters
         including spaces.
         * The entire text included in the request cannot exceed 5,000
         characters including spaces.
         # Response body
         A successful response is a JSON array with one result for each element
         in the input array. A result object includes the following properties:
         * `text`- A string which is the result of converting the input string
         to the output script.
         * `script`- A string specifying the script used in the output.
        :type texts:
         list[~azure.cognitiveservices.translatortext.models.TransliterateTextInput]
        :param ocp_apim_subscription_key: This is used to pass a key for auth.
         If you are passing a token for auth then use the previous header auth
         option. **ONE OF THESE METHODS MUST BE USED.**
        :type ocp_apim_subscription_key: str
        :param x_client_trace_id: A client-generated GUID to uniquely identify
         the request. You can omit this header if you include the trace ID in
         the query string using a query parameter named ClientTraceId.
        :type x_client_trace_id: str
        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: list or ClientRawResponse if raw=true
        :rtype:
         list[~azure.cognitiveservices.translatortext.models.TransliterateSuccessItem]
         or ~msrest.pipeline.ClientRawResponse
        :raises:
         :class:`ErrorMessageException<azure.cognitiveservices.translatortext.models.ErrorMessageException>`
        """
        # Construct URL
        url = self.post.metadata['url']
        path_format_arguments = {
            'Endpoint': self._serialize.url("self.config.endpoint", self.config.endpoint, 'str', skip_quote=True)
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}
        query_parameters['api-version'] = self._serialize.query("api_version", api_version, 'str')
        query_parameters['language'] = self._serialize.query("language", language, 'str')
        query_parameters['fromScript'] = self._serialize.query("from_script", from_script, 'str')
        query_parameters['toScript'] = self._serialize.query("to_script", to_script, 'str')

        # Construct headers
        header_parameters = {}
        header_parameters['Accept'] = 'application/json'
        header_parameters['Content-Type'] = 'application/json; charset=utf-8'
        if custom_headers:
            header_parameters.update(custom_headers)
        if ocp_apim_subscription_key is not None:
            header_parameters['Ocp-Apim-Subscription-Key'] = self._serialize.header("ocp_apim_subscription_key", ocp_apim_subscription_key, 'str')
        if x_client_trace_id is not None:
            header_parameters['X-ClientTraceId'] = self._serialize.header("x_client_trace_id", x_client_trace_id, 'str')

        # Construct body
        body_content = self._serialize.body(texts, '[TransliterateTextInput]')

        # Construct and send request
        request = self._client.post(url, query_parameters, header_parameters, body_content)
        response = self._client.send(request, stream=False, **operation_config)

        if response.status_code not in [200]:
            raise models.ErrorMessageException(self._deserialize, response)

        deserialized = None

        if response.status_code == 200:
            deserialized = self._deserialize('[TransliterateSuccessItem]', response)

        if raw:
            client_raw_response = ClientRawResponse(deserialized, response)
            return client_raw_response

        return deserialized
    post.metadata = {'url': '/transliterate'}
