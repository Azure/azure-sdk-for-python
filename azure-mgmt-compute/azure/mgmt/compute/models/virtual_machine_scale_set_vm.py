# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft and contributors.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class VirtualMachineScaleSetVM(Resource):
    """
    Describes a virtual machine scale set virtual machine.

    :param id: Resource Id
    :type id: str
    :param name: Resource name
    :type name: str
    :param type: Resource type
    :type type: str
    :param location: Resource location
    :type location: str
    :param tags: Resource tags
    :type tags: dict
    :param instance_id: Gets the virtual machine instance id.
    :type instance_id: str
    :param sku: Gets the virtual machine sku.
    :type sku: :class:`Sku <azure.mgmt.compute.models.Sku>`
    :param latest_model_applied: Specifies whether the latest model has been
     applied to the virtual machine.
    :type latest_model_applied: bool
    :param instance_view: Gets the virtual machine instance view.
    :type instance_view: :class:`VirtualMachineInstanceView
     <azure.mgmt.compute.models.VirtualMachineInstanceView>`
    :param hardware_profile: Gets or sets the hardware profile.
    :type hardware_profile: :class:`HardwareProfile
     <azure.mgmt.compute.models.HardwareProfile>`
    :param storage_profile: Gets or sets the storage profile.
    :type storage_profile: :class:`StorageProfile
     <azure.mgmt.compute.models.StorageProfile>`
    :param os_profile: Gets or sets the OS profile.
    :type os_profile: :class:`OSProfile <azure.mgmt.compute.models.OSProfile>`
    :param network_profile: Gets or sets the network profile.
    :type network_profile: :class:`NetworkProfile
     <azure.mgmt.compute.models.NetworkProfile>`
    :param diagnostics_profile: Gets or sets the diagnostics profile.
    :type diagnostics_profile: :class:`DiagnosticsProfile
     <azure.mgmt.compute.models.DiagnosticsProfile>`
    :param availability_set: Gets or sets the reference Id of the
     availability set to which this virtual machine belongs.
    :type availability_set: :class:`SubResource
     <azure.mgmt.compute.models.SubResource>`
    :param provisioning_state: Gets or sets the provisioning state, which
     only appears in the response.
    :type provisioning_state: str
    :param license_type: Gets or sets the license type, which is for bring
     your own license scenario.
    :type license_type: str
    :param plan: Gets or sets the purchase plan when deploying virtual
     machine from VM Marketplace images.
    :type plan: :class:`Plan <azure.mgmt.compute.models.Plan>`
    :param resources: Gets the virtual machine child extension resources.
    :type resources: list of :class:`VirtualMachineExtension
     <azure.mgmt.compute.models.VirtualMachineExtension>`
    """ 

    _validation = {
        'location': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'instance_id': {'key': 'instanceId', 'type': 'str'},
        'sku': {'key': 'sku', 'type': 'Sku'},
        'latest_model_applied': {'key': 'properties.latestModelApplied', 'type': 'bool'},
        'instance_view': {'key': 'properties.instanceView', 'type': 'VirtualMachineInstanceView'},
        'hardware_profile': {'key': 'properties.hardwareProfile', 'type': 'HardwareProfile'},
        'storage_profile': {'key': 'properties.storageProfile', 'type': 'StorageProfile'},
        'os_profile': {'key': 'properties.osProfile', 'type': 'OSProfile'},
        'network_profile': {'key': 'properties.networkProfile', 'type': 'NetworkProfile'},
        'diagnostics_profile': {'key': 'properties.diagnosticsProfile', 'type': 'DiagnosticsProfile'},
        'availability_set': {'key': 'properties.availabilitySet', 'type': 'SubResource'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'license_type': {'key': 'properties.licenseType', 'type': 'str'},
        'plan': {'key': 'plan', 'type': 'Plan'},
        'resources': {'key': 'resources', 'type': '[VirtualMachineExtension]'},
    }

    def __init__(self, location, id=None, name=None, type=None, tags=None, instance_id=None, sku=None, latest_model_applied=None, instance_view=None, hardware_profile=None, storage_profile=None, os_profile=None, network_profile=None, diagnostics_profile=None, availability_set=None, provisioning_state=None, license_type=None, plan=None, resources=None, **kwargs):
        super(VirtualMachineScaleSetVM, self).__init__(id=id, name=name, type=type, location=location, tags=tags, **kwargs)
        self.instance_id = instance_id
        self.sku = sku
        self.latest_model_applied = latest_model_applied
        self.instance_view = instance_view
        self.hardware_profile = hardware_profile
        self.storage_profile = storage_profile
        self.os_profile = os_profile
        self.network_profile = network_profile
        self.diagnostics_profile = diagnostics_profile
        self.availability_set = availability_set
        self.provisioning_state = provisioning_state
        self.license_type = license_type
        self.plan = plan
        self.resources = resources
