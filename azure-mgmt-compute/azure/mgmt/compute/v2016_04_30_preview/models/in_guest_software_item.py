# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class InGuestSoftwareItem(Resource):
    """Describes a InGuest software item.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Resource Id
    :vartype id: str
    :ivar name: Resource name
    :vartype name: str
    :ivar type: Resource type
    :vartype type: str
    :param location: Required. Resource location
    :type location: str
    :param tags: Resource tags
    :type tags: dict[str, str]
    :ivar in_guest_software_item_name: Specifies the name of the software.
    :vartype in_guest_software_item_name: str
    :ivar version: Specifies the version of the software.
    :vartype version: str
    :ivar publisher: Specifies the publisher of the software.
    :vartype publisher: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'in_guest_software_item_name': {'readonly': True},
        'version': {'readonly': True},
        'publisher': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'in_guest_software_item_name': {'key': 'properties.name', 'type': 'str'},
        'version': {'key': 'properties.version', 'type': 'str'},
        'publisher': {'key': 'properties.publisher', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(InGuestSoftwareItem, self).__init__(**kwargs)
        self.in_guest_software_item_name = None
        self.version = None
        self.publisher = None
