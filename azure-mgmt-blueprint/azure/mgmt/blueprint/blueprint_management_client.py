# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer
from msrestazure import AzureConfiguration
from .version import VERSION
from msrest.pipeline import ClientRawResponse
from msrestazure.azure_exceptions import CloudError
import uuid
from .operations.blueprints_operations import BlueprintsOperations
from .operations.artifacts_operations import ArtifactsOperations
from .operations.published_blueprints_operations import PublishedBlueprintsOperations
from .operations.published_artifacts_operations import PublishedArtifactsOperations
from .operations.assignments_operations import AssignmentsOperations
from .operations.assignment_operations import AssignmentOperations
from . import models


class BlueprintManagementClientConfiguration(AzureConfiguration):
    """Configuration for BlueprintManagementClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if not base_url:
            base_url = 'https://management.azure.com'

        super(BlueprintManagementClientConfiguration, self).__init__(base_url)

        self.add_user_agent('azure-mgmt-blueprint/{}'.format(VERSION))
        self.add_user_agent('Azure-SDK-For-Python')

        self.credentials = credentials


class BlueprintManagementClient(SDKClient):
    """Blueprint Client

    :ivar config: Configuration for client.
    :vartype config: BlueprintManagementClientConfiguration

    :ivar blueprints: Blueprints operations
    :vartype blueprints: azure.mgmt.blueprint.operations.BlueprintsOperations
    :ivar artifacts: Artifacts operations
    :vartype artifacts: azure.mgmt.blueprint.operations.ArtifactsOperations
    :ivar published_blueprints: PublishedBlueprints operations
    :vartype published_blueprints: azure.mgmt.blueprint.operations.PublishedBlueprintsOperations
    :ivar published_artifacts: PublishedArtifacts operations
    :vartype published_artifacts: azure.mgmt.blueprint.operations.PublishedArtifactsOperations
    :ivar assignments: Assignments operations
    :vartype assignments: azure.mgmt.blueprint.operations.AssignmentsOperations
    :ivar assignment_operations: AssignmentOperations operations
    :vartype assignment_operations: azure.mgmt.blueprint.operations.AssignmentOperations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, base_url=None):

        self.config = BlueprintManagementClientConfiguration(credentials, base_url)
        super(BlueprintManagementClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2018-11-01-preview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.blueprints = BlueprintsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.artifacts = ArtifactsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.published_blueprints = PublishedBlueprintsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.published_artifacts = PublishedArtifactsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.assignments = AssignmentsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.assignment_operations = AssignmentOperations(
            self._client, self.config, self._serialize, self._deserialize)

    def who_is_blueprint(
            self, custom_headers=None, raw=False, **operation_config):
        """Get Blueprints service SPN objectId.

        :param dict custom_headers: headers that will be added to the request
        :param bool raw: returns the direct response alongside the
         deserialized response
        :param operation_config: :ref:`Operation configuration
         overrides<msrest:optionsforoperations>`.
        :return: WhoIsBlueprintContract or ClientRawResponse if raw=true
        :rtype: ~azure.mgmt.blueprint.models.WhoIsBlueprintContract or
         ~msrest.pipeline.ClientRawResponse
        :raises: :class:`CloudError<msrestazure.azure_exceptions.CloudError>`
        """
        # Construct URL
        url = self.who_is_blueprint.metadata['url']

        # Construct parameters
        query_parameters = {}

        # Construct headers
        header_parameters = {}
        header_parameters['Accept'] = 'application/json'
        if self.config.generate_client_request_id:
            header_parameters['x-ms-client-request-id'] = str(uuid.uuid1())
        if custom_headers:
            header_parameters.update(custom_headers)
        if self.config.accept_language is not None:
            header_parameters['accept-language'] = self._serialize.header("self.config.accept_language", self.config.accept_language, 'str')

        # Construct and send request
        request = self._client.post(url, query_parameters, header_parameters)
        response = self._client.send(request, stream=False, **operation_config)

        if response.status_code not in [200]:
            exp = CloudError(response)
            exp.request_id = response.headers.get('x-ms-request-id')
            raise exp

        deserialized = None

        if response.status_code == 200:
            deserialized = self._deserialize('WhoIsBlueprintContract', response)

        if raw:
            client_raw_response = ClientRawResponse(deserialized, response)
            return client_raw_response

        return deserialized
    who_is_blueprint.metadata = {'url': '/{scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}'}
