# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .azure_resource_base import AzureResourceBase


class Blueprint(AzureResourceBase):
    """Represents a Blueprint definition.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: String Id used to locate any resource on Azure.
    :vartype id: str
    :ivar type: Type of this resource.
    :vartype type: str
    :ivar name: Name of this resource.
    :vartype name: str
    :param display_name: One-liner string explain this resource.
    :type display_name: str
    :param description: Multi-line explain this resource.
    :type description: str
    :ivar status: Status of the Blueprint. This field is readonly.
    :vartype status: ~azure.mgmt.blueprint.models.BlueprintStatus
    :param target_scope: The scope where this Blueprint can be applied.
     Possible values include: 'subscription', 'managementGroup'
    :type target_scope: str or
     ~azure.mgmt.blueprint.models.BlueprintTargetScope
    :param parameters: Parameters required by this Blueprint definition.
    :type parameters: dict[str,
     ~azure.mgmt.blueprint.models.ParameterDefinition]
    :param resource_groups: Resource group placeholders defined by this
     Blueprint definition.
    :type resource_groups: dict[str,
     ~azure.mgmt.blueprint.models.ResourceGroupDefinition]
    :param versions: Published versions of this blueprint.
    :type versions: object
    :param layout: Layout view of the blueprint, for UI reference.
    :type layout: object
    """

    _validation = {
        'id': {'readonly': True},
        'type': {'readonly': True},
        'name': {'readonly': True},
        'display_name': {'max_length': 256},
        'description': {'max_length': 500},
        'status': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'display_name': {'key': 'properties.displayName', 'type': 'str'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'status': {'key': 'properties.status', 'type': 'BlueprintStatus'},
        'target_scope': {'key': 'properties.targetScope', 'type': 'str'},
        'parameters': {'key': 'properties.parameters', 'type': '{ParameterDefinition}'},
        'resource_groups': {'key': 'properties.resourceGroups', 'type': '{ResourceGroupDefinition}'},
        'versions': {'key': 'properties.versions', 'type': 'object'},
        'layout': {'key': 'properties.layout', 'type': 'object'},
    }

    def __init__(self, **kwargs):
        super(Blueprint, self).__init__(**kwargs)
        self.display_name = kwargs.get('display_name', None)
        self.description = kwargs.get('description', None)
        self.status = None
        self.target_scope = kwargs.get('target_scope', None)
        self.parameters = kwargs.get('parameters', None)
        self.resource_groups = kwargs.get('resource_groups', None)
        self.versions = kwargs.get('versions', None)
        self.layout = kwargs.get('layout', None)
