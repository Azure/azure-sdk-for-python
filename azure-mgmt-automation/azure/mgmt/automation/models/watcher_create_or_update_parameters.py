# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class WatcherCreateOrUpdateParameters(Model):
    """The parameters supplied to the create or update watcher operation.

    :param name: Gets or sets the name of the watcher.
    :type name: str
    :param execution_frequency_in_seconds: Gets or sets the frequency at which
     the watcher is invoked.
    :type execution_frequency_in_seconds: long
    :param script_name: Gets or sets the name of the script the watcher is
     attached to, i.e. the name of an existing runbook.
    :type script_name: str
    :param script_parameters: Gets or sets the parameters of the script.
    :type script_parameters: dict[str, str]
    :param script_run_on: Gets or sets the name of the hybrid worker group the
     webhook job will run on.
    :type script_run_on: str
    :param description: Gets or sets the watcher's description.
    :type description: str
    """

    _validation = {
        'name': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'execution_frequency_in_seconds': {'key': 'properties.executionFrequencyInSeconds', 'type': 'long'},
        'script_name': {'key': 'properties.scriptName', 'type': 'str'},
        'script_parameters': {'key': 'properties.scriptParameters', 'type': '{str}'},
        'script_run_on': {'key': 'properties.scriptRunOn', 'type': 'str'},
        'description': {'key': 'properties.description', 'type': 'str'},
    }

    def __init__(self, name, execution_frequency_in_seconds=None, script_name=None, script_parameters=None, script_run_on=None, description=None):
        super(WatcherCreateOrUpdateParameters, self).__init__()
        self.name = name
        self.execution_frequency_in_seconds = execution_frequency_in_seconds
        self.script_name = script_name
        self.script_parameters = script_parameters
        self.script_run_on = script_run_on
        self.description = description
