# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_py3 import Resource


class CreditSummary(Resource):
    """A credit summary resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :param balance_summary: Summary of balances associated with this credit
     summary.
    :type balance_summary: ~azure.mgmt.consumption.models.CreditBalanceSummary
    :ivar pending_credit_adjustments: Pending Credit Adjustments.
    :vartype pending_credit_adjustments: ~azure.mgmt.consumption.models.Amount
    :ivar expired_credit: Expired Credit.
    :vartype expired_credit: ~azure.mgmt.consumption.models.Amount
    :ivar pending_eligible_charges: Pending Eligible Charges.
    :vartype pending_eligible_charges: ~azure.mgmt.consumption.models.Amount
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'tags': {'readonly': True},
        'pending_credit_adjustments': {'readonly': True},
        'expired_credit': {'readonly': True},
        'pending_eligible_charges': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'balance_summary': {'key': 'properties.balanceSummary', 'type': 'CreditBalanceSummary'},
        'pending_credit_adjustments': {'key': 'properties.pendingCreditAdjustments', 'type': 'Amount'},
        'expired_credit': {'key': 'properties.expiredCredit', 'type': 'Amount'},
        'pending_eligible_charges': {'key': 'properties.pendingEligibleCharges', 'type': 'Amount'},
    }

    def __init__(self, *, balance_summary=None, **kwargs) -> None:
        super(CreditSummary, self).__init__(**kwargs)
        self.balance_summary = balance_summary
        self.pending_credit_adjustments = None
        self.expired_credit = None
        self.pending_eligible_charges = None
