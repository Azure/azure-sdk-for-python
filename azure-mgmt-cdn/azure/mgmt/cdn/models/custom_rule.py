# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CustomRule(Model):
    """Defines the common attributes for a custom rule that can be included in a
    waf policy.

    All required parameters must be populated in order to send to Azure.

    :param name: Required. Defines the name of the custom rule
    :type name: str
    :param enabled_state: Describes if the custom rule is in enabled or
     disabled state. Defaults to Enabled if not specified. Possible values
     include: 'Disabled', 'Enabled'
    :type enabled_state: str or ~azure.mgmt.cdn.models.CustomRuleEnabledState
    :param priority: Required. Defines in what order this rule be evaluated in
     the overall list of custom rules
    :type priority: int
    :param match_conditions: Required. List of match conditions.
    :type match_conditions: list[~azure.mgmt.cdn.models.MatchCondition]
    :param action: Required. Describes what action to be applied when rule
     matches
    :type action: ~azure.mgmt.cdn.models.ActionType
    """

    _validation = {
        'name': {'required': True},
        'priority': {'required': True},
        'match_conditions': {'required': True},
        'action': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'enabled_state': {'key': 'enabledState', 'type': 'str'},
        'priority': {'key': 'priority', 'type': 'int'},
        'match_conditions': {'key': 'matchConditions', 'type': '[MatchCondition]'},
        'action': {'key': 'action', 'type': 'ActionType'},
    }

    def __init__(self, **kwargs):
        super(CustomRule, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.enabled_state = kwargs.get('enabled_state', None)
        self.priority = kwargs.get('priority', None)
        self.match_conditions = kwargs.get('match_conditions', None)
        self.action = kwargs.get('action', None)
