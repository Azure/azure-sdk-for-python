# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft and contributors.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .tracked_resource import TrackedResource


class Endpoint(TrackedResource):
    """
    CDN Endpoint is the entity within a CDN Profile containing configuration
    information regarding caching behaviors and origins. The CDN Endpoint is
    exposed using the URL format <endpointname>.azureedge.net by default, but
    custom domains can also be created.

    :param id: Resource Id
    :type id: str
    :param name: Resource Name
    :type name: str
    :param type: Resource type
    :type type: str
    :param location: Resource location
    :type location: str
    :param tags: Resource tags
    :type tags: dict
    :param properties:
    :type properties: :class:`EndpointProperties
     <azure.mgmt.cdn.models.EndpointProperties>`
    """ 

    _validation = {
        'location': {'required': True},
        'tags': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': 'EndpointProperties'},
    }

    def __init__(self, location, tags, id=None, name=None, type=None, properties=None, **kwargs):
        super(Endpoint, self).__init__(id=id, name=name, type=type, location=location, tags=tags, **kwargs)
        self.properties = properties
