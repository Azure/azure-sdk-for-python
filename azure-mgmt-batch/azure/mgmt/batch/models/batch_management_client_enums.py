# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from enum import Enum


class PoolAllocationMode(str, Enum):

    batch_service = "BatchService"
    user_subscription = "UserSubscription"


class ProvisioningState(str, Enum):

    invalid = "Invalid"
    creating = "Creating"
    deleting = "Deleting"
    succeeded = "Succeeded"
    failed = "Failed"
    cancelled = "Cancelled"


class AccountKeyType(str, Enum):

    primary = "Primary"
    secondary = "Secondary"


class PackageState(str, Enum):

    pending = "Pending"
    active = "Active"
    unmapped = "Unmapped"


class CertificateFormat(str, Enum):

    pfx = "Pfx"
    cer = "Cer"


class CertificateProvisioningState(str, Enum):

    succeeded = "Succeeded"
    deleting = "Deleting"
    failed = "Failed"


class PoolProvisioningState(str, Enum):

    succeeded = "Succeeded"
    deleting = "Deleting"


class AllocationState(str, Enum):

    steady = "Steady"
    resizing = "Resizing"
    stopping = "Stopping"


class CachingType(str, Enum):

    none = "None"
    read_only = "ReadOnly"
    read_write = "ReadWrite"


class StorageAccountType(str, Enum):

    standard_lrs = "Standard_LRS"
    premium_lrs = "Premium_LRS"


class ComputeNodeDeallocationOption(str, Enum):

    requeue = "Requeue"
    terminate = "Terminate"
    task_completion = "TaskCompletion"
    retained_data = "RetainedData"


class InterNodeCommunicationState(str, Enum):

    enabled = "Enabled"
    disabled = "Disabled"


class InboundEndpointProtocol(str, Enum):

    tcp = "TCP"
    udp = "UDP"


class NetworkSecurityGroupRuleAccess(str, Enum):

    allow = "Allow"
    deny = "Deny"


class ComputeNodeFillType(str, Enum):

    spread = "Spread"
    pack = "Pack"


class ElevationLevel(str, Enum):

    non_admin = "NonAdmin"
    admin = "Admin"


class AutoUserScope(str, Enum):

    task = "Task"
    pool = "Pool"


class CertificateStoreLocation(str, Enum):

    current_user = "CurrentUser"
    local_machine = "LocalMachine"


class CertificateVisibility(str, Enum):

    start_task = "StartTask"
    task = "Task"
    remote_user = "RemoteUser"


class NameAvailabilityReason(str, Enum):

    invalid = "Invalid"
    already_exists = "AlreadyExists"
