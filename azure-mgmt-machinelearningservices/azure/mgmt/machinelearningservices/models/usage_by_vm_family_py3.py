# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .dummy_object_py3 import DummyObject


class UsageByVMFamily(DummyObject):
    """Describes Batch AI Resource Usage by VM Family, broken down by Workspace
    and Cluster usage.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar unit: An enum describing the unit of usage measurement. Possible
     values include: 'Count'
    :vartype unit: str or ~azure.mgmt.machinelearningservices.models.UsageUnit
    :ivar current_value: The current usage of the resource.
    :vartype current_value: long
    :ivar limit: The maximum permitted usage of the resource.
    :vartype limit: long
    :ivar name: The name of the type of usage.
    :vartype name: ~azure.mgmt.machinelearningservices.models.UsageName
    :ivar resource_group_name: The name of the resource group this resource
     type belongs to
    :vartype resource_group_name: str
    :ivar resource_type: The type of the resource, whether its VM family,
     workspace name, or cluster
    :vartype resource_type: str
    :ivar usage_breakdown: The breakdown of usage by Workspace or Cluster
    :vartype usage_breakdown:
     list[~azure.mgmt.machinelearningservices.models.UsageByVMFamily]
    """

    _validation = {
        'unit': {'readonly': True},
        'current_value': {'readonly': True},
        'limit': {'readonly': True},
        'name': {'readonly': True},
        'resource_group_name': {'readonly': True},
        'resource_type': {'readonly': True},
        'usage_breakdown': {'readonly': True},
    }

    _attribute_map = {
        'unit': {'key': 'unit', 'type': 'str'},
        'current_value': {'key': 'currentValue', 'type': 'long'},
        'limit': {'key': 'limit', 'type': 'long'},
        'name': {'key': 'name', 'type': 'UsageName'},
        'resource_group_name': {'key': 'properties.resourceGroupName', 'type': 'str'},
        'resource_type': {'key': 'properties.resourceType', 'type': 'str'},
        'usage_breakdown': {'key': 'properties.usageBreakdown', 'type': '[UsageByVMFamily]'},
    }

    def __init__(self, **kwargs) -> None:
        super(UsageByVMFamily, self).__init__(**kwargs)
        self.resource_group_name = None
        self.resource_type = None
        self.usage_breakdown = None
