# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SystemType(Model):
    """SystemType.

    :param member_type: Possible values include: 'Constructor', 'Event',
     'Field', 'Method', 'Property', 'TypeInfo', 'Custom', 'NestedType', 'All'
    :type member_type: str or ~azure.monitor.models.enum
    :param declaring_type:
    :type declaring_type: ~azure.monitor.models.SystemType
    :param declaring_method:
    :type declaring_method: ~azure.monitor.models.SystemReflectionMethodBase
    :param reflected_type:
    :type reflected_type: ~azure.monitor.models.SystemType
    :param struct_layout_attribute:
    :type struct_layout_attribute:
     ~azure.monitor.models.SystemRuntimeInteropServicesStructLayoutAttribute
    :param guid:
    :type guid: str
    :param default_binder:
    :type default_binder: object
    :param module:
    :type module: ~azure.monitor.models.SystemReflectionModule
    :param assembly:
    :type assembly: ~azure.monitor.models.SystemReflectionAssembly
    :param type_handle:
    :type type_handle: ~azure.monitor.models.SystemRuntimeTypeHandle
    :param full_name:
    :type full_name: str
    :param namespace:
    :type namespace: str
    :param assembly_qualified_name:
    :type assembly_qualified_name: str
    :param base_type:
    :type base_type: ~azure.monitor.models.SystemType
    :param type_initializer:
    :type type_initializer:
     ~azure.monitor.models.SystemReflectionConstructorInfo
    :param is_nested:
    :type is_nested: bool
    :param attributes: Possible values include: 'NotPublic', 'AutoLayout',
     'AnsiClass', 'Class', 'Public', 'NestedPublic', 'NestedPrivate',
     'NestedFamily', 'NestedAssembly', 'NestedFamANDAssem', 'NestedFamORAssem',
     'VisibilityMask', 'SequentialLayout', 'ExplicitLayout', 'LayoutMask',
     'Interface', 'ClassSemanticsMask', 'Abstract', 'Sealed', 'SpecialName',
     'RTSpecialName', 'Import', 'Serializable', 'WindowsRuntime',
     'UnicodeClass', 'AutoClass', 'StringFormatMask', 'CustomFormatClass',
     'HasSecurity', 'ReservedMask', 'BeforeFieldInit', 'CustomFormatMask'
    :type attributes: str or ~azure.monitor.models.enum
    :param generic_parameter_attributes: Possible values include: 'None',
     'Covariant', 'Contravariant', 'VarianceMask', 'ReferenceTypeConstraint',
     'NotNullableValueTypeConstraint', 'DefaultConstructorConstraint',
     'SpecialConstraintMask'
    :type generic_parameter_attributes: str or ~azure.monitor.models.enum
    :param is_visible:
    :type is_visible: bool
    :param is_not_public:
    :type is_not_public: bool
    :param is_public:
    :type is_public: bool
    :param is_nested_public:
    :type is_nested_public: bool
    :param is_nested_private:
    :type is_nested_private: bool
    :param is_nested_family:
    :type is_nested_family: bool
    :param is_nested_assembly:
    :type is_nested_assembly: bool
    :param is_nested_fam_and_assem:
    :type is_nested_fam_and_assem: bool
    :param is_nested_fam_or_assem:
    :type is_nested_fam_or_assem: bool
    :param is_auto_layout:
    :type is_auto_layout: bool
    :param is_layout_sequential:
    :type is_layout_sequential: bool
    :param is_explicit_layout:
    :type is_explicit_layout: bool
    :param is_class:
    :type is_class: bool
    :param is_interface:
    :type is_interface: bool
    :param is_value_type:
    :type is_value_type: bool
    :param is_abstract:
    :type is_abstract: bool
    :param is_sealed:
    :type is_sealed: bool
    :param is_enum:
    :type is_enum: bool
    :param is_special_name:
    :type is_special_name: bool
    :param is_import:
    :type is_import: bool
    :param is_serializable:
    :type is_serializable: bool
    :param is_ansi_class:
    :type is_ansi_class: bool
    :param is_unicode_class:
    :type is_unicode_class: bool
    :param is_auto_class:
    :type is_auto_class: bool
    :param is_array:
    :type is_array: bool
    :param is_generic_type:
    :type is_generic_type: bool
    :param is_generic_type_definition:
    :type is_generic_type_definition: bool
    :param is_constructed_generic_type:
    :type is_constructed_generic_type: bool
    :param is_generic_parameter:
    :type is_generic_parameter: bool
    :param generic_parameter_position:
    :type generic_parameter_position: int
    :param contains_generic_parameters:
    :type contains_generic_parameters: bool
    :param is_by_ref:
    :type is_by_ref: bool
    :param is_pointer:
    :type is_pointer: bool
    :param is_primitive:
    :type is_primitive: bool
    :param is_com_object:
    :type is_com_object: bool
    :param has_element_type:
    :type has_element_type: bool
    :param is_contextful:
    :type is_contextful: bool
    :param is_marshal_by_ref:
    :type is_marshal_by_ref: bool
    :param generic_type_arguments:
    :type generic_type_arguments: list[~azure.monitor.models.SystemType]
    :param is_security_critical:
    :type is_security_critical: bool
    :param is_security_safe_critical:
    :type is_security_safe_critical: bool
    :param is_security_transparent:
    :type is_security_transparent: bool
    :param underlying_system_type:
    :type underlying_system_type: ~azure.monitor.models.SystemType
    :param name:
    :type name: str
    :param custom_attributes:
    :type custom_attributes:
     list[~azure.monitor.models.SystemReflectionCustomAttributeData]
    :param metadata_token:
    :type metadata_token: int
    """

    _attribute_map = {
        'member_type': {'key': 'MemberType', 'type': 'str'},
        'declaring_type': {'key': 'DeclaringType', 'type': 'SystemType'},
        'declaring_method': {'key': 'DeclaringMethod', 'type': 'SystemReflectionMethodBase'},
        'reflected_type': {'key': 'ReflectedType', 'type': 'SystemType'},
        'struct_layout_attribute': {'key': 'StructLayoutAttribute', 'type': 'SystemRuntimeInteropServicesStructLayoutAttribute'},
        'guid': {'key': 'GUID', 'type': 'str'},
        'default_binder': {'key': 'DefaultBinder', 'type': 'object'},
        'module': {'key': 'Module', 'type': 'SystemReflectionModule'},
        'assembly': {'key': 'Assembly', 'type': 'SystemReflectionAssembly'},
        'type_handle': {'key': 'TypeHandle', 'type': 'SystemRuntimeTypeHandle'},
        'full_name': {'key': 'FullName', 'type': 'str'},
        'namespace': {'key': 'Namespace', 'type': 'str'},
        'assembly_qualified_name': {'key': 'AssemblyQualifiedName', 'type': 'str'},
        'base_type': {'key': 'BaseType', 'type': 'SystemType'},
        'type_initializer': {'key': 'TypeInitializer', 'type': 'SystemReflectionConstructorInfo'},
        'is_nested': {'key': 'IsNested', 'type': 'bool'},
        'attributes': {'key': 'Attributes', 'type': 'str'},
        'generic_parameter_attributes': {'key': 'GenericParameterAttributes', 'type': 'str'},
        'is_visible': {'key': 'IsVisible', 'type': 'bool'},
        'is_not_public': {'key': 'IsNotPublic', 'type': 'bool'},
        'is_public': {'key': 'IsPublic', 'type': 'bool'},
        'is_nested_public': {'key': 'IsNestedPublic', 'type': 'bool'},
        'is_nested_private': {'key': 'IsNestedPrivate', 'type': 'bool'},
        'is_nested_family': {'key': 'IsNestedFamily', 'type': 'bool'},
        'is_nested_assembly': {'key': 'IsNestedAssembly', 'type': 'bool'},
        'is_nested_fam_and_assem': {'key': 'IsNestedFamANDAssem', 'type': 'bool'},
        'is_nested_fam_or_assem': {'key': 'IsNestedFamORAssem', 'type': 'bool'},
        'is_auto_layout': {'key': 'IsAutoLayout', 'type': 'bool'},
        'is_layout_sequential': {'key': 'IsLayoutSequential', 'type': 'bool'},
        'is_explicit_layout': {'key': 'IsExplicitLayout', 'type': 'bool'},
        'is_class': {'key': 'IsClass', 'type': 'bool'},
        'is_interface': {'key': 'IsInterface', 'type': 'bool'},
        'is_value_type': {'key': 'IsValueType', 'type': 'bool'},
        'is_abstract': {'key': 'IsAbstract', 'type': 'bool'},
        'is_sealed': {'key': 'IsSealed', 'type': 'bool'},
        'is_enum': {'key': 'IsEnum', 'type': 'bool'},
        'is_special_name': {'key': 'IsSpecialName', 'type': 'bool'},
        'is_import': {'key': 'IsImport', 'type': 'bool'},
        'is_serializable': {'key': 'IsSerializable', 'type': 'bool'},
        'is_ansi_class': {'key': 'IsAnsiClass', 'type': 'bool'},
        'is_unicode_class': {'key': 'IsUnicodeClass', 'type': 'bool'},
        'is_auto_class': {'key': 'IsAutoClass', 'type': 'bool'},
        'is_array': {'key': 'IsArray', 'type': 'bool'},
        'is_generic_type': {'key': 'IsGenericType', 'type': 'bool'},
        'is_generic_type_definition': {'key': 'IsGenericTypeDefinition', 'type': 'bool'},
        'is_constructed_generic_type': {'key': 'IsConstructedGenericType', 'type': 'bool'},
        'is_generic_parameter': {'key': 'IsGenericParameter', 'type': 'bool'},
        'generic_parameter_position': {'key': 'GenericParameterPosition', 'type': 'int'},
        'contains_generic_parameters': {'key': 'ContainsGenericParameters', 'type': 'bool'},
        'is_by_ref': {'key': 'IsByRef', 'type': 'bool'},
        'is_pointer': {'key': 'IsPointer', 'type': 'bool'},
        'is_primitive': {'key': 'IsPrimitive', 'type': 'bool'},
        'is_com_object': {'key': 'IsCOMObject', 'type': 'bool'},
        'has_element_type': {'key': 'HasElementType', 'type': 'bool'},
        'is_contextful': {'key': 'IsContextful', 'type': 'bool'},
        'is_marshal_by_ref': {'key': 'IsMarshalByRef', 'type': 'bool'},
        'generic_type_arguments': {'key': 'GenericTypeArguments', 'type': '[SystemType]'},
        'is_security_critical': {'key': 'IsSecurityCritical', 'type': 'bool'},
        'is_security_safe_critical': {'key': 'IsSecuritySafeCritical', 'type': 'bool'},
        'is_security_transparent': {'key': 'IsSecurityTransparent', 'type': 'bool'},
        'underlying_system_type': {'key': 'UnderlyingSystemType', 'type': 'SystemType'},
        'name': {'key': 'Name', 'type': 'str'},
        'custom_attributes': {'key': 'CustomAttributes', 'type': '[SystemReflectionCustomAttributeData]'},
        'metadata_token': {'key': 'MetadataToken', 'type': 'int'},
    }

    def __init__(self, *, member_type=None, declaring_type=None, declaring_method=None, reflected_type=None, struct_layout_attribute=None, guid: str=None, default_binder=None, module=None, assembly=None, type_handle=None, full_name: str=None, namespace: str=None, assembly_qualified_name: str=None, base_type=None, type_initializer=None, is_nested: bool=None, attributes=None, generic_parameter_attributes=None, is_visible: bool=None, is_not_public: bool=None, is_public: bool=None, is_nested_public: bool=None, is_nested_private: bool=None, is_nested_family: bool=None, is_nested_assembly: bool=None, is_nested_fam_and_assem: bool=None, is_nested_fam_or_assem: bool=None, is_auto_layout: bool=None, is_layout_sequential: bool=None, is_explicit_layout: bool=None, is_class: bool=None, is_interface: bool=None, is_value_type: bool=None, is_abstract: bool=None, is_sealed: bool=None, is_enum: bool=None, is_special_name: bool=None, is_import: bool=None, is_serializable: bool=None, is_ansi_class: bool=None, is_unicode_class: bool=None, is_auto_class: bool=None, is_array: bool=None, is_generic_type: bool=None, is_generic_type_definition: bool=None, is_constructed_generic_type: bool=None, is_generic_parameter: bool=None, generic_parameter_position: int=None, contains_generic_parameters: bool=None, is_by_ref: bool=None, is_pointer: bool=None, is_primitive: bool=None, is_com_object: bool=None, has_element_type: bool=None, is_contextful: bool=None, is_marshal_by_ref: bool=None, generic_type_arguments=None, is_security_critical: bool=None, is_security_safe_critical: bool=None, is_security_transparent: bool=None, underlying_system_type=None, name: str=None, custom_attributes=None, metadata_token: int=None, **kwargs) -> None:
        super(SystemType, self).__init__(**kwargs)
        self.member_type = member_type
        self.declaring_type = declaring_type
        self.declaring_method = declaring_method
        self.reflected_type = reflected_type
        self.struct_layout_attribute = struct_layout_attribute
        self.guid = guid
        self.default_binder = default_binder
        self.module = module
        self.assembly = assembly
        self.type_handle = type_handle
        self.full_name = full_name
        self.namespace = namespace
        self.assembly_qualified_name = assembly_qualified_name
        self.base_type = base_type
        self.type_initializer = type_initializer
        self.is_nested = is_nested
        self.attributes = attributes
        self.generic_parameter_attributes = generic_parameter_attributes
        self.is_visible = is_visible
        self.is_not_public = is_not_public
        self.is_public = is_public
        self.is_nested_public = is_nested_public
        self.is_nested_private = is_nested_private
        self.is_nested_family = is_nested_family
        self.is_nested_assembly = is_nested_assembly
        self.is_nested_fam_and_assem = is_nested_fam_and_assem
        self.is_nested_fam_or_assem = is_nested_fam_or_assem
        self.is_auto_layout = is_auto_layout
        self.is_layout_sequential = is_layout_sequential
        self.is_explicit_layout = is_explicit_layout
        self.is_class = is_class
        self.is_interface = is_interface
        self.is_value_type = is_value_type
        self.is_abstract = is_abstract
        self.is_sealed = is_sealed
        self.is_enum = is_enum
        self.is_special_name = is_special_name
        self.is_import = is_import
        self.is_serializable = is_serializable
        self.is_ansi_class = is_ansi_class
        self.is_unicode_class = is_unicode_class
        self.is_auto_class = is_auto_class
        self.is_array = is_array
        self.is_generic_type = is_generic_type
        self.is_generic_type_definition = is_generic_type_definition
        self.is_constructed_generic_type = is_constructed_generic_type
        self.is_generic_parameter = is_generic_parameter
        self.generic_parameter_position = generic_parameter_position
        self.contains_generic_parameters = contains_generic_parameters
        self.is_by_ref = is_by_ref
        self.is_pointer = is_pointer
        self.is_primitive = is_primitive
        self.is_com_object = is_com_object
        self.has_element_type = has_element_type
        self.is_contextful = is_contextful
        self.is_marshal_by_ref = is_marshal_by_ref
        self.generic_type_arguments = generic_type_arguments
        self.is_security_critical = is_security_critical
        self.is_security_safe_critical = is_security_safe_critical
        self.is_security_transparent = is_security_transparent
        self.underlying_system_type = underlying_system_type
        self.name = name
        self.custom_attributes = custom_attributes
        self.metadata_token = metadata_token
