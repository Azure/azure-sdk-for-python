# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SystemReflectionFieldInfo(Model):
    """SystemReflectionFieldInfo.

    :param member_type: Possible values include: 'Constructor', 'Event',
     'Field', 'Method', 'Property', 'TypeInfo', 'Custom', 'NestedType', 'All'
    :type member_type: str or ~azure.monitor.models.enum
    :param field_handle:
    :type field_handle: ~azure.monitor.models.SystemRuntimeFieldHandle
    :param field_type:
    :type field_type: ~azure.monitor.models.SystemType
    :param attributes: Possible values include: 'PrivateScope', 'Private',
     'FamANDAssem', 'Assembly', 'Family', 'FamORAssem', 'Public',
     'FieldAccessMask', 'Static', 'InitOnly', 'Literal', 'NotSerialized',
     'HasFieldRVA', 'SpecialName', 'RTSpecialName', 'HasFieldMarshal',
     'PinvokeImpl', 'HasDefault', 'ReservedMask'
    :type attributes: str or ~azure.monitor.models.enum
    :param is_public:
    :type is_public: bool
    :param is_private:
    :type is_private: bool
    :param is_family:
    :type is_family: bool
    :param is_assembly:
    :type is_assembly: bool
    :param is_family_and_assembly:
    :type is_family_and_assembly: bool
    :param is_family_or_assembly:
    :type is_family_or_assembly: bool
    :param is_static:
    :type is_static: bool
    :param is_init_only:
    :type is_init_only: bool
    :param is_literal:
    :type is_literal: bool
    :param is_not_serialized:
    :type is_not_serialized: bool
    :param is_special_name:
    :type is_special_name: bool
    :param is_pinvoke_impl:
    :type is_pinvoke_impl: bool
    :param is_security_critical:
    :type is_security_critical: bool
    :param is_security_safe_critical:
    :type is_security_safe_critical: bool
    :param is_security_transparent:
    :type is_security_transparent: bool
    :param name:
    :type name: str
    :param declaring_type:
    :type declaring_type: ~azure.monitor.models.SystemType
    :param reflected_type:
    :type reflected_type: ~azure.monitor.models.SystemType
    :param custom_attributes:
    :type custom_attributes:
     list[~azure.monitor.models.SystemReflectionCustomAttributeData]
    :param metadata_token:
    :type metadata_token: int
    :param module:
    :type module: ~azure.monitor.models.SystemReflectionModule
    """

    _attribute_map = {
        'member_type': {'key': 'MemberType', 'type': 'str'},
        'field_handle': {'key': 'FieldHandle', 'type': 'SystemRuntimeFieldHandle'},
        'field_type': {'key': 'FieldType', 'type': 'SystemType'},
        'attributes': {'key': 'Attributes', 'type': 'str'},
        'is_public': {'key': 'IsPublic', 'type': 'bool'},
        'is_private': {'key': 'IsPrivate', 'type': 'bool'},
        'is_family': {'key': 'IsFamily', 'type': 'bool'},
        'is_assembly': {'key': 'IsAssembly', 'type': 'bool'},
        'is_family_and_assembly': {'key': 'IsFamilyAndAssembly', 'type': 'bool'},
        'is_family_or_assembly': {'key': 'IsFamilyOrAssembly', 'type': 'bool'},
        'is_static': {'key': 'IsStatic', 'type': 'bool'},
        'is_init_only': {'key': 'IsInitOnly', 'type': 'bool'},
        'is_literal': {'key': 'IsLiteral', 'type': 'bool'},
        'is_not_serialized': {'key': 'IsNotSerialized', 'type': 'bool'},
        'is_special_name': {'key': 'IsSpecialName', 'type': 'bool'},
        'is_pinvoke_impl': {'key': 'IsPinvokeImpl', 'type': 'bool'},
        'is_security_critical': {'key': 'IsSecurityCritical', 'type': 'bool'},
        'is_security_safe_critical': {'key': 'IsSecuritySafeCritical', 'type': 'bool'},
        'is_security_transparent': {'key': 'IsSecurityTransparent', 'type': 'bool'},
        'name': {'key': 'Name', 'type': 'str'},
        'declaring_type': {'key': 'DeclaringType', 'type': 'SystemType'},
        'reflected_type': {'key': 'ReflectedType', 'type': 'SystemType'},
        'custom_attributes': {'key': 'CustomAttributes', 'type': '[SystemReflectionCustomAttributeData]'},
        'metadata_token': {'key': 'MetadataToken', 'type': 'int'},
        'module': {'key': 'Module', 'type': 'SystemReflectionModule'},
    }

    def __init__(self, *, member_type=None, field_handle=None, field_type=None, attributes=None, is_public: bool=None, is_private: bool=None, is_family: bool=None, is_assembly: bool=None, is_family_and_assembly: bool=None, is_family_or_assembly: bool=None, is_static: bool=None, is_init_only: bool=None, is_literal: bool=None, is_not_serialized: bool=None, is_special_name: bool=None, is_pinvoke_impl: bool=None, is_security_critical: bool=None, is_security_safe_critical: bool=None, is_security_transparent: bool=None, name: str=None, declaring_type=None, reflected_type=None, custom_attributes=None, metadata_token: int=None, module=None, **kwargs) -> None:
        super(SystemReflectionFieldInfo, self).__init__(**kwargs)
        self.member_type = member_type
        self.field_handle = field_handle
        self.field_type = field_type
        self.attributes = attributes
        self.is_public = is_public
        self.is_private = is_private
        self.is_family = is_family
        self.is_assembly = is_assembly
        self.is_family_and_assembly = is_family_and_assembly
        self.is_family_or_assembly = is_family_or_assembly
        self.is_static = is_static
        self.is_init_only = is_init_only
        self.is_literal = is_literal
        self.is_not_serialized = is_not_serialized
        self.is_special_name = is_special_name
        self.is_pinvoke_impl = is_pinvoke_impl
        self.is_security_critical = is_security_critical
        self.is_security_safe_critical = is_security_safe_critical
        self.is_security_transparent = is_security_transparent
        self.name = name
        self.declaring_type = declaring_type
        self.reflected_type = reflected_type
        self.custom_attributes = custom_attributes
        self.metadata_token = metadata_token
        self.module = module
