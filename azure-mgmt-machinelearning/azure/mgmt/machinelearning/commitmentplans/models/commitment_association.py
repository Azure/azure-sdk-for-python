# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class CommitmentAssociation(Resource):
    """Represents the association between a commitment plan and some other
    resource, such as a Machine Learning web service.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id.
    :vartype id: str
    :ivar name: Resource name.
    :vartype name: str
    :param location: Resource location.
    :type location: str
    :ivar type: Resource type.
    :vartype type: str
    :param tags: User-defined tags for the resource.
    :type tags: dict
    :param etag: An entity tag used to enforce optimistic concurrency.
    :type etag: str
    :param properties: The properties of the commitment association resource.
    :type properties: :class:`CommitmentAssociationProperties
     <azure.mgmt.machinelearning.commitmentplans.models.CommitmentAssociationProperties>`
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'location': {'required': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'etag': {'key': 'etag', 'type': 'str'},
        'properties': {'key': 'properties', 'type': 'CommitmentAssociationProperties'},
    }

    def __init__(self, location, tags=None, etag=None, properties=None):
        super(CommitmentAssociation, self).__init__(location=location, tags=tags)
        self.etag = etag
        self.properties = properties
