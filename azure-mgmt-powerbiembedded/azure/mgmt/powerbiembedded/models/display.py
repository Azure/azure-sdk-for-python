# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Display(Model):
    """Display.

    :param provider: The localized friendly form of the resource provider
     name – it is expected to also include the publisher/company responsible.
     It should use Title Casing and begin with “Microsoft” for 1st party
     services.
    :type provider: str
    :param resource: The localized friendly form of the resource type related
     to this action/operation – it should match the public documentation for
     the resource provider. It should use Title Casing – for examples, please
     refer to the “name” section.
    :type resource: str
    :param operation: The localized friendly name for the operation, as it
     should be shown to the user. It should be concise (to fit in drop downs)
     but clear (i.e. self-documenting). It should use Title Casing and
     include the entity/resource to which it applies.
    :type operation: str
    :param description: The localized friendly description for the operation,
     as it should be shown to the user. It should be thorough, yet concise –
     it will be used in tool tips and detailed views.
    :type description: str
    :param origin: The intended executor of the operation; governs the
     display of the operation in the RBAC UX and the audit logs UX. Default
     value is 'user,system'
    :type origin: str
    """ 

    _attribute_map = {
        'provider': {'key': 'provider', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'str'},
        'operation': {'key': 'operation', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'origin': {'key': 'origin', 'type': 'str'},
    }

    def __init__(self, provider=None, resource=None, operation=None, description=None, origin=None):
        self.provider = provider
        self.resource = resource
        self.operation = operation
        self.description = description
        self.origin = origin
