# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class AdaptiveNetworkControls(Resource):
    """The resource whose properties describes the Adaptive Network Controls
    settings for some Azure resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id
    :vartype id: str
    :ivar name: Resource name
    :vartype name: str
    :ivar type: Resource type
    :vartype type: str
    :param rules: The security rules which are recommended to be effective on
     the VM
    :type rules: list[~azure.mgmt.security.models.AdaptiveNetworkControlsRule]
    :param rules_calculation_time: The UTC time on which the rules were
     calculated
    :type rules_calculation_time: datetime
    :param effective_network_security_groups: The Network Security Groups
     effective on the network interfaces of the protected resource
    :type effective_network_security_groups:
     list[~azure.mgmt.security.models.AdaptiveNetworkControlsEffectiveNetworkSecurityGroups]
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'rules': {'key': 'properties.rules', 'type': '[AdaptiveNetworkControlsRule]'},
        'rules_calculation_time': {'key': 'properties.rulesCalculationTime', 'type': 'iso-8601'},
        'effective_network_security_groups': {'key': 'properties.effectiveNetworkSecurityGroups', 'type': '[AdaptiveNetworkControlsEffectiveNetworkSecurityGroups]'},
    }

    def __init__(self, **kwargs):
        super(AdaptiveNetworkControls, self).__init__(**kwargs)
        self.rules = kwargs.get('rules', None)
        self.rules_calculation_time = kwargs.get('rules_calculation_time', None)
        self.effective_network_security_groups = kwargs.get('effective_network_security_groups', None)
