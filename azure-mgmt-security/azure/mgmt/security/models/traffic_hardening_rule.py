# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class TrafficHardeningRule(Model):
    """A north-south traffic hardening rule.

    :param name: The name of the rule
    :type name: str
    :param direction: The rule;s traffic direction. Possible values include:
     'Inbound', 'Outbound'
    :type direction: str or
     ~azure.mgmt.security.models.NorthSouthTrafficDirection
    :param destination_port: The rule's destination port
    :type destination_port: int
    :param protocols: The rule's transport protocol
    :type protocols: list[str or
     ~azure.mgmt.security.models.NorthSouthProtocol]
    :param allow_remote_addresses: The remote addresses that should be able to
     communicate with the Azure resource on the rule's destination port and
     protocol
    :type allow_remote_addresses: list[str]
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'direction': {'key': 'direction', 'type': 'str'},
        'destination_port': {'key': 'destinationPort', 'type': 'int'},
        'protocols': {'key': 'protocols', 'type': '[str]'},
        'allow_remote_addresses': {'key': 'allowRemoteAddresses', 'type': '[str]'},
    }

    def __init__(self, **kwargs):
        super(TrafficHardeningRule, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.direction = kwargs.get('direction', None)
        self.destination_port = kwargs.get('destination_port', None)
        self.protocols = kwargs.get('protocols', None)
        self.allow_remote_addresses = kwargs.get('allow_remote_addresses', None)
