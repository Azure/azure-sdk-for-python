# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_py3 import Resource


class SecurityAssessmentMetadata(Resource):
    """Security assessment metadata.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Resource Id
    :vartype id: str
    :ivar name: Resource name
    :vartype name: str
    :ivar type: Resource type
    :vartype type: str
    :ivar display_name: User friendly display name of the assessment
    :vartype display_name: str
    :ivar policy_definition_id: Azure resource ID of the policy definition
     that turns this assessment calculation on
    :vartype policy_definition_id: str
    :ivar description: Human readable description of the assessment
    :vartype description: str
    :ivar remediation_description: Human readable description of what you
     should do to mitigate this security issue
    :vartype remediation_description: str
    :ivar category:
    :vartype category: list[str or ~azure.mgmt.security.models.Category]
    :ivar secure_score_weight: Weight for the security score calculation. the
     higher this number, this severity  of this assessment is higher
    :vartype secure_score_weight: int
    :ivar required_pricing_bundle:
    :vartype required_pricing_bundle: list[str or
     ~azure.mgmt.security.models.RequiredPricingBundle]
    :ivar preview: True if this assessment is in preview release status
    :vartype preview: bool
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'display_name': {'readonly': True},
        'policy_definition_id': {'readonly': True},
        'description': {'readonly': True},
        'remediation_description': {'readonly': True},
        'category': {'readonly': True},
        'secure_score_weight': {'readonly': True},
        'required_pricing_bundle': {'readonly': True},
        'preview': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'display_name': {'key': 'properties.displayName', 'type': 'str'},
        'policy_definition_id': {'key': 'properties.policyDefinitionId', 'type': 'str'},
        'description': {'key': 'properties.description', 'type': 'str'},
        'remediation_description': {'key': 'properties.remediationDescription', 'type': 'str'},
        'category': {'key': 'properties.category', 'type': '[str]'},
        'secure_score_weight': {'key': 'properties.secureScoreWeight', 'type': 'int'},
        'required_pricing_bundle': {'key': 'properties.requiredPricingBundle', 'type': '[str]'},
        'preview': {'key': 'properties.preview', 'type': 'bool'},
    }

    def __init__(self, **kwargs) -> None:
        super(SecurityAssessmentMetadata, self).__init__(**kwargs)
        self.display_name = None
        self.policy_definition_id = None
        self.description = None
        self.remediation_description = None
        self.category = None
        self.secure_score_weight = None
        self.required_pricing_bundle = None
        self.preview = None
